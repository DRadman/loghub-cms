var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.608,1,1.252]],["body/components/AppComponent.html",[0,1.04,1,2.248,2,1.952,3,0.458,4,0.357,5,1.817,6,1.817,7,1.817,8,0.357,9,3.388,10,1.817,11,2.906,12,2.906,13,3.001,14,2.114,15,2.114,16,2.295,17,4.69,18,2.295,19,5.107,20,2.295,21,5.107,22,1.546,23,4.044,24,3.83,25,1.322,26,4.044,27,1.322,28,0.031,29,1.133,30,0.407,31,1.322,32,3.326,33,1.04,34,1.046,35,1.978,36,2.376,37,2.376,38,0.458,39,1.046,40,2.633,41,4.044,42,4.044,43,4.044,44,1.817,45,2.295,46,2.295,47,1.817,48,2.642,49,1.817,50,1.817,51,1.546,52,1.817,53,1.546,54,1.429,55,1.817,56,1.546,57,1.817,58,1.546,59,1.817,60,1.546,61,1.817,62,1.546,63,1.817,64,1.546,65,1.429,66,0.818,67,1.817,68,1.817,69,0.023,70,0.023]],["title/interfaces/AppState.html",[71,0.459,72,1.471]],["body/interfaces/AppState.html",[3,0.539,4,0.42,8,0.42,28,0.031,30,0.478,33,1.048,38,0.681,69,0.026,70,0.026,71,0.667,72,2.535,73,1.555,74,3.478,75,0.539,76,0.958,77,3.875,78,3.315,79,4.757,80,3.674,81,4.757,82,2.336,83,3.478,84,3.478]],["title/components/AuthComponent.html",[0,0.608,51,1.252]],["body/components/AuthComponent.html",[0,1.062,1,1.621,2,2.011,3,0.48,4,0.375,5,1.906,6,1.906,7,1.906,8,0.375,10,1.906,11,2.928,12,2.928,14,2.178,15,2.178,16,2.364,17,4.793,18,2.364,20,2.364,28,0.03,29,1.065,33,0.977,34,1.097,35,2.074,38,0.48,39,1.097,44,1.906,45,2.364,46,2.364,47,1.906,48,2.688,49,1.906,50,1.906,51,2.286,52,1.906,53,1.621,54,1.499,55,1.906,56,1.621,57,1.906,58,1.621,59,1.906,60,1.621,61,1.906,62,1.621,63,1.906,64,1.621,65,1.499,66,0.858,67,1.906,68,1.906,69,0.024,70,0.024,85,3.553,86,3.846,87,5.262,88,5.262]],["title/injectables/AuthEffects.html",[78,1.924,89,0.99]],["body/injectables/AuthEffects.html",[3,0.311,4,0.243,8,0.243,22,1.505,25,1.861,27,0.899,28,0.031,29,0.557,30,0.276,31,0.899,33,1.027,34,0.711,38,0.311,39,0.711,66,0.797,69,0.018,70,0.018,75,0.311,76,0.669,78,2.313,89,1.191,90,1.345,91,2.304,92,2.955,93,3.27,94,2.684,95,2.256,96,2.684,97,2.95,98,2.749,99,2.484,100,3.345,101,4.77,102,2.749,103,2.704,104,2.113,105,6.204,106,6.15,107,3.937,108,5.529,109,3.298,110,1.769,111,3.937,112,3.937,113,2.878,114,3.937,115,3.937,116,3.937,117,2.289,118,3.937,119,5.04,120,5.021,121,2.942,122,2.749,123,3.937,124,5.314,125,5.021,126,5.021,127,5.021,128,2.749,129,3.937,130,3.937,131,3.884,132,2.995,133,3.937,134,2.749,135,3.937,136,3.937,137,2.749,138,3.937,139,3.937,140,2.995,141,3.937,142,2.749,143,3.937,144,4.599,145,3.937,146,3.937,147,3.298,148,2.749,149,2.749,150,2.304,151,2.749,152,1.345,153,2.749,154,2.749,155,1.79,156,1.79,157,1.79,158,1.79,159,1.79,160,1.79,161,2.304,162,1.904]],["title/injectables/AuthService.html",[89,0.99,99,1.471]],["body/injectables/AuthService.html",[3,0.364,4,0.284,8,0.284,13,1.888,22,1.228,25,1.979,27,1.944,28,0.031,29,1.204,30,0.598,31,1.944,33,1.14,34,0.831,38,0.364,39,0.831,40,2.092,54,1.135,65,1.135,66,1.012,69,0.02,70,0.02,75,0.364,82,1.33,89,1.328,90,1.571,92,2.673,94,2.346,96,2.346,99,1.973,110,2.529,117,2.462,152,1.571,163,2.692,164,1.678,165,3.209,166,3.413,167,4.19,168,3.213,169,3.929,170,3.213,171,3.209,172,4.39,173,3.158,174,3.213,175,3.678,176,2.462,177,5.39,178,4.39,179,1.351,180,3.213,181,3.678,182,3.213,183,3.213,184,4.39,185,3.213,186,4.39,187,3.5,188,3.213,189,5.375,190,4.39,191,3.5,192,3.213,193,3.213,194,3.213,195,2.859,196,2.092,197,3.213,198,2.692,199,4.19,200,2.092,201,3.213,202,3.213,203,3.213,204,2.092,205,5.628,206,5.628,207,5.809,208,4.39,209,3.213,210,4.39,211,1.571,212,3.213,213,3.213]],["title/interfaces/AuthState.html",[71,0.459,77,1.924]],["body/interfaces/AuthState.html",[3,0.296,4,0.231,8,0.231,28,0.031,30,0.598,33,1.01,38,0.507,54,1.581,65,1.581,66,1.1,69,0.017,70,0.017,71,0.367,73,0.856,75,0.296,76,0.645,77,2.628,80,1.705,82,1.573,92,2.031,93,1.705,94,1.399,95,1.176,96,1.399,97,2.232,121,3.119,132,1.705,140,1.705,156,1.705,157,1.705,158,1.705,159,1.705,160,1.705,161,2.193,173,2.884,198,2.193,199,2.193,214,1.913,215,4.908,216,4.7,217,4.367,218,4.367,219,4.7,220,4.661,221,3.377,222,2.447,223,4.367,224,2.362,225,2.628,226,4.112,227,3.183,228,1.399,229,2.617,230,2.617,231,1.913,232,1.913,233,2.617,234,2.617,235,3.27,236,2.193,237,5.231,238,1.913,239,4.112,240,2.193,241,4.262,242,4.112,243,2.193,244,2.193,245,3.183,246,2.884,247,2.193,248,4.112,249,3.588,250,2.193,251,4.555,252,3.183,253,2.193,254,2.193,255,2.778,256,2.193,257,2.193,258,2.193,259,2.193,260,2.193,261,2.193,262,2.193,263,2.193,264,2.193]],["title/interfaces/AuthenticateRequestDto.html",[71,0.459,173,1.924]],["body/interfaces/AuthenticateRequestDto.html",[3,0.554,4,0.432,8,0.432,28,0.03,30,0.577,38,0.554,66,1.271,69,0.026,70,0.026,71,0.687,73,1.601,75,0.554,76,0.975,110,2.821,173,3.371,179,1.426,265,4.102,266,2.877]],["title/components/ForgotPasswordComponent.html",[0,0.608,53,1.252]],["body/components/ForgotPasswordComponent.html",[0,0.709,1,0.769,2,1.192,3,0.228,4,0.178,5,0.904,6,0.904,7,0.904,8,0.178,10,0.904,11,2.502,12,2.502,14,1.291,15,1.291,16,1.401,18,1.401,20,1.401,22,1.192,24,3.344,25,1.928,27,1.019,28,0.031,29,0.87,30,0.534,31,1.82,32,3.749,33,1.106,34,0.52,35,0.984,36,1.182,37,1.182,38,0.228,39,0.52,44,0.904,45,1.401,46,1.401,47,0.904,48,1.932,49,0.904,50,0.904,51,0.769,52,0.904,53,1.644,54,1.815,55,0.904,56,0.769,57,0.904,58,0.769,59,0.904,60,0.769,61,0.904,62,0.769,63,0.904,64,0.769,65,0.711,66,0.773,67,0.904,68,0.904,69,0.014,70,0.014,72,0.904,75,0.228,76,0.529,94,2.631,95,0.904,99,2.308,103,1.867,104,1.459,109,1.685,110,1.932,113,1.47,121,2.103,131,1.47,152,0.984,162,2.57,164,1.192,165,3.402,176,1.927,179,0.84,181,1.685,222,0.769,224,1.967,225,1.832,228,1.075,246,1.182,267,4.992,268,4.992,269,1.47,270,2.03,271,3.983,272,2.486,273,2.791,274,2.791,275,2.791,276,2.791,277,3.199,278,2.791,279,2.791,280,2.612,281,2.612,282,2.791,283,3.818,284,2.791,285,3.199,286,3.199,287,3.199,288,2.791,289,2.612,290,3.603,291,2.801,292,2.801,293,1.47,294,3.599,295,3.017,296,2.745,297,3.118,298,2.612,299,2.011,300,2.038,301,2.011,302,1.685,303,2.011,304,2.011,305,3.549,306,2.011,307,2.279,308,2.279,309,2.612,310,1.685,311,2.279,312,1.685,313,2.011,314,2.011,315,2.011,316,3.199,317,1.685,318,2.612,319,2.011,320,1.685,321,1.47,322,1.31,323,1.31,324,1.47,325,1.182,326,2.486,327,1.075,328,1.47,329,1.31,330,1.685,331,2.612,332,1.685,333,1.31,334,0.984,335,1.47,336,1.47,337,1.685,338,1.47,339,1.685,340,1.47,341,1.685,342,1.47,343,1.685,344,1.685,345,1.685,346,2.011,347,1.685,348,1.31,349,1.47,350,2.791,351,1.47,352,1.47,353,1.47,354,1.47,355,2.011,356,1.47,357,1.685,358,2.011,359,2.791,360,2.791,361,2.791,362,3.599,363,6.011,364,2.612,365,2.486,366,2.011,367,2.011,368,1.685,369,1.685,370,1.685,371,1.685,372,2.011,373,1.47,374,1.47,375,1.685,376,2.612,377,1.47,378,2.011,379,1.685,380,2.011,381,1.182,382,2.279,383,2.612,384,2.612,385,3.118,386,2.612,387,2.612,388,3.118,389,3.118,390,2.612]],["title/interfaces/ForgotPasswordRequestDto.html",[71,0.459,391,2.394]],["body/interfaces/ForgotPasswordRequestDto.html",[3,0.564,4,0.44,8,0.44,28,0.029,30,0.501,38,0.564,66,1.008,69,0.026,70,0.026,71,0.698,73,1.628,75,0.564,76,0.984,179,1.349,266,2.926,391,4.236,392,4.172,393,4.11]],["title/components/HomeComponent.html",[0,0.608,56,1.252]],["body/components/HomeComponent.html",[0,0.967,1,1.33,2,1.771,3,0.394,4,0.307,5,1.563,6,1.563,7,1.563,8,0.307,10,1.563,11,2.833,12,2.833,14,1.918,15,1.918,16,2.082,18,2.082,20,2.082,22,1.33,25,1.89,27,1.137,28,0.031,29,1.054,30,0.466,31,1.702,33,1.145,34,0.9,35,1.702,38,0.394,39,0.9,40,2.266,44,1.563,45,2.082,46,2.082,47,1.563,48,2.495,49,1.563,50,1.563,51,1.33,52,1.563,53,1.33,54,1.23,55,1.563,56,2.123,57,1.563,58,1.33,59,1.563,60,1.33,61,1.563,62,1.33,63,1.563,64,1.33,65,1.23,66,0.704,67,1.563,68,1.563,69,0.021,70,0.021,72,1.563,75,0.394,76,0.787,95,1.563,97,2.044,103,1.702,104,1.33,152,1.702,162,2.299,164,1.771,176,1.918,228,1.86,272,3.392,291,3.616,292,3.616,295,3.494,296,3.244,300,1.918,305,3.392,323,2.266,327,1.86,329,2.266,333,2.266,334,1.702,348,2.266,394,2.915,395,3.882,396,4.633,397,4.633,398,6.07,399,5.208,400,3.48,401,3.48,402,3.48,403,3.48,404,4.633,405,3.48,406,3.48,407,3.48,408,3.882,409,4.633,410,4.633]],["title/components/InvitationComponent.html",[0,0.608,58,1.252]],["body/components/InvitationComponent.html",[0,1.066,1,1.633,2,2.02,3,0.484,4,0.377,5,1.919,6,1.919,7,1.919,8,0.377,10,1.919,11,2.931,12,2.931,14,2.188,15,2.188,16,1.919,18,2.375,20,2.375,28,0.03,29,1.07,33,0.793,34,1.105,38,0.484,39,1.105,44,1.919,45,2.375,46,2.375,47,1.919,48,2.695,49,1.919,50,1.919,51,1.633,52,1.919,53,1.633,54,1.51,55,1.919,56,1.633,57,1.919,58,2.292,59,1.919,60,1.633,61,1.919,62,1.633,63,1.919,64,1.633,65,1.51,66,0.865,67,1.919,68,1.919,69,0.024,70,0.024,411,3.579,412,5.024,413,5.286,414,5.286,415,3.864]],["title/injectables/JwtService.html",[89,0.99,100,1.924]],["body/injectables/JwtService.html",[3,0.428,4,0.334,8,0.334,13,2.219,22,1.444,25,1.988,27,1.772,28,0.031,29,1.097,30,0.545,31,1.772,33,0.908,34,0.977,38,0.428,39,0.977,40,2.459,69,0.022,70,0.022,75,0.428,82,2.024,86,3.574,89,1.479,90,1.847,100,2.872,117,2.024,155,2.459,164,1.869,166,2.219,176,2.458,179,1.407,204,2.459,221,3.174,224,2.026,300,2.518,416,4.526,417,2.019,418,5.5,419,3.368,420,5.733,421,5.733,422,4.889,423,4.889,424,3.777,425,3.734,426,3.777,427,2.872,428,3.777,429,3.777,430,2.761,431,4.889,432,2.761,433,4.889,434,3.777,435,2.761,436,2.761,437,2.761,438,4.889,439,4.889,440,3.777,441,3.777,442,3.777,443,3.777]],["title/injectables/LocalStorage.html",[89,0.99,425,2.133]],["body/injectables/LocalStorage.html",[3,0.399,4,0.311,8,0.311,13,2.069,22,2.003,25,2.021,27,1.824,28,0.031,29,1.129,30,0.584,31,1.824,33,0.973,34,0.911,38,0.399,39,0.911,69,0.021,70,0.021,75,0.529,76,0.793,82,1.458,89,1.412,90,1.722,104,2.133,117,2.169,155,2.293,162,2.169,164,1.785,176,2.404,179,1.438,204,2.293,211,1.722,224,1.972,300,2.47,334,1.722,417,1.882,419,3.278,425,3.041,427,3.506,430,2.574,432,2.574,444,5.242,445,4.39,446,3.414,447,3.781,448,3.414,449,3.414,450,3.414,451,3.83,452,3.913,453,3.414,454,3.414,455,3.278,456,2.95,457,3.414,458,2.95,459,3.414,460,2.95,461,2.574,462,2.574,463,2.95,464,2.574,465,2.744,466,2.574,467,2.95,468,2.293,469,2.95,470,2.95,471,2.95,472,2.95,473,3.913,474,3.521,475,2.95,476,2.95,477,2.95,478,2.95,479,2.95,480,2.95]],["title/components/LoginComponent.html",[0,0.608,60,1.252]],["body/components/LoginComponent.html",[0,0.716,1,0.782,2,1.207,3,0.232,4,0.181,5,0.919,6,0.919,7,0.919,8,0.181,10,0.919,11,2.513,12,2.513,14,1.307,15,1.307,16,1.419,18,1.419,20,1.419,22,1.207,24,3.364,25,1.954,27,1.032,28,0.031,29,0.878,30,0.519,31,1.744,32,4.031,33,1.136,34,0.529,35,1,36,1.201,37,1.201,38,0.232,39,0.529,44,0.919,45,1.419,46,1.419,47,0.919,48,1.949,49,0.919,50,0.919,51,0.782,52,0.919,53,0.782,54,0.722,55,0.919,56,0.782,57,0.919,58,0.782,59,0.919,60,1.658,61,0.919,62,0.782,63,0.919,64,0.782,65,0.722,66,0.878,67,0.919,68,0.919,69,0.014,70,0.014,72,0.919,75,0.232,76,0.536,92,1.688,95,0.919,99,2.321,103,1.887,104,1.474,110,1.949,113,1.495,117,1.307,121,1.887,131,1.495,152,1,162,2.533,164,1.207,165,3.428,176,2.139,179,0.849,222,0.782,224,1.935,225,1.855,228,1.093,270,2.056,271,4.003,272,2.512,273,2.82,274,2.82,275,2.82,276,2.82,277,3.232,278,2.82,279,2.82,282,2.82,284,2.82,286,3.232,287,3.232,288,2.82,289,2.646,290,3.635,291,2.825,292,2.825,293,1.495,294,3.623,295,3.035,296,2.761,298,2.646,300,2.052,305,3.364,307,2.308,308,3.171,309,2.646,311,2.308,316,3.232,317,1.713,318,2.646,320,1.713,321,1.495,322,1.332,323,1.332,324,1.495,325,1.201,327,1.093,329,1.332,330,1.713,331,2.646,332,1.713,333,1.332,334,1,335,1.495,336,1.495,337,1.713,338,1.495,339,1.713,340,1.495,341,1.713,342,1.495,343,1.713,344,1.713,345,1.713,347,1.713,348,1.332,349,1.495,350,2.308,351,1.495,352,1.495,353,1.495,354,1.495,356,1.495,359,1.495,360,1.495,361,1.495,362,2.308,365,1.332,373,1.495,374,1.495,376,2.646,377,1.495,379,1.713,381,1.201,382,2.308,383,2.646,386,2.646,387,2.646,481,1.713,482,4.152,483,3.858,484,3.232,485,3.158,486,3.158,487,3.858,488,4.956,489,4.338,490,3.158,491,2.045,492,2.045,493,2.045,494,2.045,495,2.045,496,2.045,497,2.045,498,2.045,499,2.045,500,2.045,501,2.646,502,2.045,503,2.045,504,2.045,505,2.045,506,1.713,507,1.332,508,2.045,509,1.495,510,2.045,511,2.045,512,2.045,513,2.045,514,2.045,515,2.045,516,2.045,517,1.713,518,2.045,519,3.158,520,3.158,521,3.158,522,3.158,523,3.158,524,3.158,525,3.158,526,3.158,527,3.158]],["title/injectables/MemoryStorage.html",[89,0.99,465,1.924]],["body/injectables/MemoryStorage.html",[3,0.415,4,0.324,8,0.324,25,2.009,27,1.853,28,0.031,29,1.147,30,0.607,31,1.853,33,0.681,34,0.948,38,0.415,39,0.948,69,0.022,70,0.022,75,0.605,76,0.814,82,1.517,89,1.45,90,1.792,103,1.792,104,2.042,117,2.212,162,2.212,164,1.832,176,2.435,179,1.439,224,2.078,300,2.346,417,1.959,419,3.33,427,3.139,446,3.504,447,4.003,448,3.504,449,3.504,450,3.504,451,3.906,453,3.504,454,3.504,455,3.33,457,2.679,459,2.679,461,2.679,462,2.679,465,2.817,466,2.679,468,2.386,528,5.224,529,4.476,530,3.665,531,3.665,532,3.665,533,3.665,534,2.679,535,3.665,536,3.665,537,3.07,538,3.07,539,3.665,540,3.122,541,3.665,542,3.665,543,3.665,544,4.794,545,3.665,546,3.07,547,3.665,548,2.153,549,3.665]],["title/components/RegisterComponent.html",[0,0.608,62,1.252]],["body/components/RegisterComponent.html",[0,1.066,1,1.633,2,2.02,3,0.484,4,0.377,5,1.919,6,1.919,7,1.919,8,0.377,10,1.919,11,2.931,12,2.931,14,2.188,15,2.188,16,1.919,18,2.375,20,2.375,28,0.03,29,1.07,33,0.793,34,1.105,38,0.484,39,1.105,44,1.919,45,2.375,46,2.375,47,1.919,48,2.695,49,1.919,50,1.919,51,1.633,52,1.919,53,1.633,54,1.51,55,1.919,56,1.633,57,1.919,58,1.633,59,1.919,60,1.633,61,1.919,62,2.292,63,1.919,64,1.633,65,1.51,66,0.865,67,1.919,68,1.919,69,0.024,70,0.024,167,5.024,415,3.864,550,3.579,551,5.286,552,5.286]],["title/interfaces/RegisterRequestDto.html",[71,0.459,187,2.133]],["body/interfaces/RegisterRequestDto.html",[3,0.525,4,0.409,8,0.409,28,0.03,30,0.634,38,0.525,66,1.248,69,0.025,70,0.025,71,0.65,73,1.515,75,0.525,76,0.943,110,2.771,179,1.476,187,3.617,266,2.723,393,4.016,553,3.883,554,4.508,555,4.508]],["title/components/ResetPasswordComponent.html",[0,0.608,64,1.252]],["body/components/ResetPasswordComponent.html",[0,0.769,1,0.876,2,1.317,3,0.26,4,0.202,5,1.03,6,1.03,7,1.03,8,0.202,10,1.03,11,2.59,12,2.59,14,1.426,15,1.426,16,1.548,18,1.548,20,1.548,22,1.317,24,3.501,25,1.884,27,0.749,28,0.031,29,0.838,30,0.496,31,1.757,32,3.862,33,1.142,34,0.593,35,1.121,36,1.347,37,1.347,38,0.26,39,0.593,44,1.03,45,1.548,46,1.548,47,1.03,48,2.068,49,1.03,50,1.03,51,0.876,52,1.03,53,0.876,54,0.81,55,1.03,56,0.876,57,1.03,58,0.876,59,1.03,60,0.876,61,1.03,62,0.876,63,1.03,64,1.759,65,1.9,66,0.999,67,1.03,68,1.03,69,0.016,70,0.016,72,1.03,75,0.26,76,0.585,82,0.949,95,1.03,96,2.77,99,2.416,103,1.685,104,1.317,121,1.685,152,1.121,162,2.547,164,1.317,176,1.714,179,0.758,222,0.876,224,1.462,228,1.225,246,1.347,269,1.676,270,2.244,271,4.136,272,2.695,273,3.026,274,3.026,275,3.026,276,3.026,278,3.026,279,3.026,280,2.886,281,2.886,282,3.026,284,3.026,285,3.468,288,3.026,291,2.997,292,2.997,293,1.676,294,3.788,295,3.159,296,2.873,300,1.714,302,1.921,305,3.501,307,2.518,308,2.518,310,1.921,311,2.518,312,1.921,321,1.676,322,1.493,323,1.493,324,1.676,325,1.347,326,2.695,327,1.225,329,1.493,333,1.493,334,1.121,335,1.676,336,1.676,338,1.676,340,2.518,348,1.493,349,1.676,350,3.026,351,1.676,352,1.676,353,1.676,354,1.676,356,1.676,359,2.518,360,2.518,361,2.518,362,3.026,364,1.921,365,2.244,368,1.921,369,1.921,370,1.921,371,1.921,373,1.676,374,1.676,375,1.921,377,1.676,384,2.886,390,2.886,484,3.468,501,2.886,506,1.921,556,4.904,557,4.904,558,4.139,559,3.445,560,4.139,561,3.445,562,2.292,563,2.292,564,2.292,565,3.445,566,2.292,567,2.292,568,1.676,569,1.676,570,2.292,571,2.292,572,2.292,573,6.106,574,2.292,575,2.292,576,2.292,577,3.445,578,3.468,579,2.292,580,1.921,581,3.445,582,3.445,583,3.445,584,3.445]],["title/interfaces/ResetPasswordRequestDto.html",[71,0.459,191,2.133]],["body/interfaces/ResetPasswordRequestDto.html",[3,0.553,4,0.432,8,0.432,28,0.03,30,0.576,38,0.553,66,0.989,69,0.026,70,0.026,71,0.685,73,1.597,75,0.553,76,0.973,179,1.426,191,3.732,266,2.871,578,5.256,580,5.256,585,4.094]],["title/injectables/SessionStorage.html",[89,0.99,586,2.394]],["body/injectables/SessionStorage.html",[3,0.399,4,0.311,8,0.311,13,2.069,22,2.003,25,2.021,27,1.824,28,0.031,29,1.129,30,0.584,31,1.824,33,0.973,34,0.911,38,0.399,39,0.911,69,0.021,70,0.021,75,0.529,76,0.793,82,1.458,89,1.412,90,1.722,104,2.133,117,2.169,155,2.293,162,2.169,164,1.785,176,2.404,179,1.438,204,2.293,211,1.722,224,1.972,300,2.47,334,1.722,417,1.882,419,3.278,427,3.506,430,2.574,432,2.574,445,4.39,446,3.414,447,3.781,448,3.414,449,3.414,450,3.414,451,3.83,452,3.913,453,3.414,454,3.414,455,3.278,456,2.95,457,3.414,458,2.95,459,3.414,460,2.95,461,2.574,462,2.574,463,2.95,464,2.574,465,2.744,466,2.574,467,2.95,468,2.293,469,2.95,470,2.95,471,2.95,472,2.95,473,3.913,475,2.95,476,2.95,477,2.95,478,2.95,479,2.95,480,2.95,586,3.414,587,5.242,588,3.521]],["title/interfaces/Token.html",[71,0.459,221,1.75]],["body/interfaces/Token.html",[3,0.544,4,0.424,8,0.424,28,0.029,30,0.571,38,0.544,69,0.026,70,0.026,71,0.674,73,1.571,75,0.544,76,0.964,166,3.666,179,1.42,221,3.034,548,3.335,589,4.027,590,4.562,591,5.228,592,5.228]],["title/interfaces/TokenDto.html",[71,0.459,196,2.133]],["body/interfaces/TokenDto.html",[3,0.544,4,0.424,8,0.424,28,0.029,30,0.571,38,0.544,69,0.026,70,0.026,71,0.674,73,1.571,75,0.544,76,0.964,166,3.666,179,1.42,196,3.696,548,3.335,590,4.562,591,5.228,592,5.228,593,4.027]],["title/interfaces/User.html",[71,0.459,222,1.252]],["body/interfaces/User.html",[3,0.447,4,0.349,8,0.349,28,0.031,29,0.799,30,0.661,33,0.934,38,0.447,69,0.023,70,0.023,71,0.554,73,1.291,75,0.447,76,0.854,110,2.619,179,1.469,222,1.923,224,1.956,225,3.425,393,3.796,534,3.677,554,4.261,555,4.261,594,3.308,595,4.884,596,4.884,597,4.884,598,4.884,599,4.261,600,4.884,601,4.884,602,4.674,603,3.276,604,3.948,605,3.677,606,3.948,607,3.308,608,3.308,609,2.886,610,3.308,611,3.308]],["title/interfaces/UserDto.html",[71,0.459,200,2.133]],["body/interfaces/UserDto.html",[3,0.447,4,0.349,8,0.349,28,0.031,29,0.799,30,0.661,33,0.934,38,0.447,69,0.023,70,0.023,71,0.554,73,1.291,75,0.447,76,0.854,110,2.619,179,1.469,200,3.276,224,1.956,225,3.425,393,3.796,534,3.677,554,4.261,555,4.261,595,4.884,596,4.884,597,4.884,598,4.884,599,4.261,600,4.884,601,4.884,602,4.674,603,3.276,605,3.677,607,3.308,608,3.308,609,2.886,610,3.308,611,3.308,612,3.308,613,3.948,614,3.948]],["title/coverage.html",[615,3.251]],["body/coverage.html",[0,1.073,1,1.02,8,0.236,9,2.235,28,0.031,30,0.268,51,1.02,53,1.02,56,1.02,58,1.02,60,1.02,62,1.02,64,1.02,66,0.78,69,0.018,70,0.018,71,0.838,72,1.199,74,3.306,77,1.568,78,1.568,80,1.738,83,1.95,84,1.95,85,2.235,89,1.655,91,2.235,92,2.059,93,1.738,94,1.426,95,1.199,96,1.426,97,1.568,99,1.199,100,1.568,132,1.738,140,1.738,156,1.738,157,1.738,158,1.738,159,1.738,160,1.738,163,2.235,173,1.568,187,1.738,191,1.738,195,1.738,196,1.738,200,1.738,211,1.305,214,3.306,221,1.426,222,1.02,231,1.95,232,1.95,235,1.95,265,2.235,266,2.909,267,2.235,268,2.235,269,2.816,325,1.568,326,1.738,327,1.426,328,1.95,391,1.95,392,2.235,394,2.235,411,2.235,416,3.306,417,2.925,425,1.738,436,1.95,437,1.95,444,2.235,465,1.568,481,2.235,507,2.945,509,1.95,528,2.235,548,3.978,550,2.235,553,2.235,556,2.235,557,2.235,568,1.95,569,1.95,585,2.235,586,1.95,587,2.235,589,2.235,593,2.235,594,2.235,612,2.235,615,1.95,616,2.668,617,2.668,618,2.668,619,4.522,620,3.228,621,6.682,622,2.235,623,6.702,624,2.235,625,2.816,626,2.668,627,1.95,628,2.235,629,3.853,630,3.853,631,3.853,632,3.853,633,2.235,634,2.235,635,3.228,636,2.235,637,2.235,638,3.228,639,2.668,640,4.522,641,3.853,642,5.247,643,3.853,644,4.727,645,2.235,646,3.789,647,2.235,648,2.235,649,2.668,650,2.668,651,2.235,652,2.235,653,2.235,654,2.235,655,2.235,656,2.668,657,2.668]],["title/dependencies.html",[658,2.007,659,3.295]],["body/dependencies.html",[28,0.031,34,1.144,35,2.164,36,3.173,37,2.6,69,0.025,70,0.025,150,3.708,152,2.164,228,2.887,322,2.882,334,2.164,540,2.882,659,3.708,660,4.425,661,4.425,662,6.618,663,4.425,664,5.83,665,4.525,666,4.425,667,4.425,668,3.708,669,4.425,670,4.425,671,4.425,672,3.708,673,4.425,674,4.425,675,4.425,676,4.425,677,4.425,678,4.425,679,3.708,680,4.425,681,4.425,682,4.425,683,4.425,684,4.425,685,3.708,686,4.425,687,4.425,688,4.425,689,4.425,690,4.425,691,4.425]],["title/miscellaneous/enumerations.html",[692,1.467,693,3.295]],["body/miscellaneous/enumerations.html",[28,0.029,69,0.026,70,0.026,75,0.53,104,2.365,121,2.733,222,1.789,226,4.682,238,4.085,246,3.283,412,3.922,599,3.422,603,3.89,605,4.085,692,2.502,693,3.922,694,4.681,695,4.681,696,5.588,697,4.681,698,5.588,699,4.681,700,4.681,701,3.922,702,3.922,703,4.681,704,4.681,705,4.681,706,4.681,707,4.681,708,4.681,709,4.681,710,4.681,711,4.681,712,3.922,713,3.922,714,3.922,715,4.681,716,4.681,717,4.681,718,5.588]],["title/miscellaneous/functions.html",[692,1.467,719,3.295]],["body/miscellaneous/functions.html",[27,1.659,28,0.028,29,1.028,30,0.51,31,1.659,69,0.027,70,0.027,75,0.575,169,4.284,171,3.711,625,3.711,627,4.284,692,2.713,719,4.253,720,4.253,721,5.077]],["title/index.html",[75,0.311,722,2.3,723,2.3]],["body/index.html",[0,0.943,2,1.713,4,0.293,14,1.371,28,0.026,29,0.907,69,0.02,70,0.02,171,2.421,195,2.157,211,1.62,241,2.157,255,2.421,296,1.77,381,1.946,435,2.421,468,2.157,507,3.309,540,3.309,658,2.421,665,2.775,668,2.775,685,2.775,702,2.775,713,2.775,714,4.561,724,3.755,725,4.482,726,5.08,727,4.482,728,4.482,729,4.482,730,5.688,731,5.995,732,3.313,733,4.482,734,3.313,735,2.775,736,3.313,737,3.313,738,2.775,739,2.775,740,3.313,741,3.313,742,3.313,743,3.313,744,4.482,745,3.313,746,3.313,747,3.714,748,3.313,749,3.313,750,3.313,751,3.313,752,3.313,753,3.313,754,2.775,755,3.313,756,3.313,757,3.313,758,3.313,759,3.313,760,3.313,761,2.775,762,2.421,763,5.282,764,5.863,765,3.313,766,3.313,767,3.313,768,3.313,769,2.775,770,3.313,771,4.257,772,3.755,773,2.775,774,3.313,775,4.257,776,4.257,777,3.313,778,6.18,779,3.313,780,3.313,781,3.313,782,3.313,783,6.428,784,5.863,785,4.482,786,4.257,787,4.257,788,5.178,789,4.482,790,3.313,791,3.313,792,5.08,793,4.257,794,4.482,795,4.482,796,4.482,797,5.08,798,5.08,799,3.755,800,4.482,801,5.444,802,3.313,803,3.755,804,4.482,805,3.313,806,4.912,807,3.313,808,3.313,809,2.775,810,2.775,811,3.313,812,3.313,813,4.482,814,3.313,815,3.313,816,4.482,817,3.313,818,4.482,819,3.313,820,3.313,821,2.775,822,2.775,823,3.714,824,3.313,825,4.482,826,2.775,827,3.313,828,3.313,829,2.775,830,2.775,831,3.313,832,3.313,833,2.775,834,3.313,835,3.313,836,2.775]],["title/license.html",[722,2.3,723,2.3,837,2.3]],["body/license.html",[0,0.455,4,0.502,8,0.11,25,0.223,28,0.015,30,0.125,33,0.127,39,0.176,66,0.138,69,0.008,70,0.006,71,0.421,73,0.559,101,0.572,117,0.282,162,0.282,164,0.261,211,1.468,220,0.499,222,1.645,241,0.444,249,0.499,300,0.282,342,0.499,365,0.444,381,0.401,382,0.499,408,0.572,415,2.873,418,4.25,419,0.401,427,0.401,435,0.908,447,0.444,455,0.73,529,1.433,538,0.572,540,1.594,546,0.572,602,0.499,603,2.356,609,2.644,615,0.908,679,1.041,701,0.572,712,1.041,735,0.572,738,0.572,739,0.572,747,3.708,761,3.293,762,0.499,763,2.707,769,1.765,771,2.051,772,1.765,773,4.574,775,0.572,776,4.203,786,1.765,787,1.041,788,3.51,793,0.572,799,1.433,803,0.572,806,0.572,809,2.051,810,1.765,821,3.51,822,1.433,826,1.433,829,4.153,830,1.041,833,1.433,836,1.041,837,5.328,838,4.676,839,2.448,840,0.682,841,0.682,842,1.71,843,5.309,844,3.231,845,4.753,846,5.175,847,2.743,848,0.682,849,0.682,850,1.242,851,2.448,852,5.072,853,2.448,854,1.71,855,4.19,856,1.71,857,0.682,858,1.71,859,0.682,860,0.682,861,1.242,862,2.743,863,0.682,864,2.743,865,0.682,866,0.682,867,3.231,868,1.242,869,0.682,870,0.682,871,0.682,872,4.19,873,5.82,874,1.71,875,3.435,876,1.242,877,6.321,878,1.242,879,3.002,880,3.002,881,4.19,882,2.743,883,0.682,884,0.682,885,2.107,886,3.231,887,3.231,888,1.71,889,0.682,890,1.242,891,0.682,892,1.71,893,4.676,894,1.242,895,2.107,896,0.682,897,0.682,898,1.242,899,2.107,900,2.107,901,1.242,902,3.931,903,1.242,904,4.826,905,2.448,906,1.242,907,2.107,908,0.682,909,3.002,910,2.448,911,0.682,912,3.231,913,2.743,914,5.388,915,1.71,916,3.002,917,0.682,918,0.682,919,2.448,920,0.682,921,2.448,922,3.231,923,1.242,924,3.782,925,2.448,926,1.242,927,0.682,928,0.682,929,4.303,930,1.242,931,0.682,932,0.682,933,4.066,934,1.242,935,0.682,936,1.71,937,0.682,938,0.682,939,1.242,940,0.682,941,0.682,942,2.743,943,2.107,944,0.682,945,0.682,946,0.682,947,0.682,948,0.682,949,0.682,950,1.242,951,0.682,952,0.682,953,0.682,954,1.242,955,0.682,956,1.71,957,1.242,958,0.682,959,0.682,960,1.242,961,1.242,962,4.19,963,0.682,964,1.242,965,1.242,966,0.682,967,0.682,968,1.242,969,1.71,970,1.242,971,1.71,972,1.242,973,0.682,974,0.682,975,2.743,976,0.682,977,0.682,978,0.682,979,2.448,980,0.682,981,0.682,982,2.107,983,0.682,984,0.682,985,1.242,986,1.71,987,0.682,988,0.682,989,3.435,990,0.682,991,4.19,992,2.107,993,2.448,994,2.743,995,1.71,996,0.682,997,1.71,998,4.593,999,1.242,1000,0.682,1001,0.682,1002,0.682,1003,1.71,1004,5.736,1005,3.617,1006,0.682,1007,0.682,1008,1.242,1009,1.242,1010,0.682,1011,3.617,1012,0.682,1013,2.107,1014,3.231,1015,0.682,1016,1.71,1017,1.71,1018,1.242,1019,2.743,1020,5.665,1021,1.71,1022,3.435,1023,2.107,1024,3.002,1025,1.242,1026,0.682,1027,1.242,1028,1.71,1029,3.435,1030,3.617,1031,2.107,1032,0.682,1033,1.242,1034,1.242,1035,2.107,1036,2.107,1037,3.435,1038,0.682,1039,1.71,1040,0.682,1041,5.125,1042,1.242,1043,0.682,1044,3.231,1045,0.682,1046,1.71,1047,2.107,1048,3.231,1049,0.682,1050,4.303,1051,2.107,1052,1.242,1053,3.231,1054,3.782,1055,2.743,1056,0.682,1057,0.682,1058,0.682,1059,0.682,1060,3.231,1061,0.682,1062,1.242,1063,4.066,1064,0.682,1065,0.682,1066,1.242,1067,1.71,1068,0.682,1069,0.682,1070,1.71,1071,0.682,1072,0.682,1073,0.682,1074,0.682,1075,3.782,1076,1.71,1077,4.043,1078,0.682,1079,0.682,1080,0.682,1081,0.682,1082,1.242,1083,1.242,1084,3.617,1085,0.682,1086,1.242,1087,2.743,1088,0.682,1089,0.682,1090,2.448,1091,1.71,1092,1.71,1093,2.743,1094,1.71,1095,1.71,1096,0.682,1097,0.682,1098,2.448,1099,2.743,1100,0.682,1101,0.682,1102,1.242,1103,0.572,1104,1.71,1105,0.682,1106,0.682,1107,1.71,1108,0.682,1109,0.682,1110,0.682,1111,1.242,1112,0.682,1113,4.957,1114,3.231,1115,0.682,1116,2.743,1117,1.242,1118,0.682,1119,0.682,1120,1.242,1121,1.242,1122,0.682,1123,0.682,1124,0.682,1125,0.682,1126,1.242,1127,1.71,1128,2.448,1129,0.682,1130,1.242,1131,0.682,1132,0.682,1133,2.743,1134,0.682,1135,0.682,1136,3.002,1137,2.107,1138,0.682,1139,2.448,1140,0.682,1141,1.242,1142,0.682,1143,0.682,1144,1.71,1145,1.71,1146,0.572,1147,0.682,1148,0.682,1149,0.682,1150,1.71,1151,1.71,1152,2.743,1153,0.682,1154,0.682,1155,1.242,1156,1.242,1157,2.051,1158,1.242,1159,0.682,1160,4.066,1161,1.242,1162,0.682,1163,0.682,1164,0.682,1165,0.682,1166,0.682,1167,0.682,1168,1.71,1169,0.682,1170,0.682,1171,4.303,1172,1.433,1173,0.682,1174,0.682,1175,0.682,1176,2.448,1177,2.448,1178,0.682,1179,0.682,1180,1.71,1181,0.682,1182,0.682,1183,2.107,1184,0.682,1185,1.242,1186,0.682,1187,0.682,1188,0.682,1189,0.682,1190,0.682,1191,0.682,1192,1.242,1193,1.242,1194,0.682,1195,1.71,1196,0.682,1197,0.682,1198,1.242,1199,0.682,1200,0.682,1201,0.682,1202,0.682,1203,1.242,1204,1.242,1205,1.242,1206,1.242,1207,3.435,1208,1.242,1209,2.743,1210,0.682,1211,0.682,1212,1.242,1213,1.71,1214,1.71,1215,2.107,1216,2.107,1217,1.71,1218,2.107,1219,1.71,1220,0.682,1221,2.448,1222,2.448,1223,1.71,1224,1.71,1225,0.682,1226,1.242,1227,1.242,1228,2.448,1229,1.242,1230,2.107,1231,2.107,1232,1.242,1233,1.71,1234,4.19,1235,2.448,1236,0.682,1237,0.682,1238,0.682,1239,1.71,1240,1.71,1241,1.242,1242,1.242,1243,0.682,1244,0.682,1245,0.682,1246,0.682,1247,1.242,1248,0.682,1249,0.682,1250,1.71,1251,0.682,1252,0.682,1253,1.242,1254,1.71,1255,0.682,1256,1.242,1257,0.682,1258,1.71,1259,0.682,1260,0.682,1261,0.682,1262,1.242,1263,1.242,1264,2.743,1265,4.826,1266,1.71,1267,1.242,1268,1.242,1269,1.242,1270,1.242,1271,2.107,1272,2.107,1273,1.242,1274,0.682,1275,0.682,1276,0.682,1277,0.682,1278,0.682,1279,3.002,1280,2.743,1281,1.242,1282,0.682,1283,0.682,1284,0.682,1285,0.682,1286,1.242,1287,0.682,1288,1.242,1289,0.682,1290,2.448,1291,3.231,1292,2.107,1293,0.682,1294,3.782,1295,0.682,1296,0.682,1297,0.682,1298,0.682,1299,1.242,1300,0.682,1301,0.682,1302,0.682,1303,1.242,1304,1.71,1305,2.448,1306,1.242,1307,2.107,1308,1.242,1309,0.682,1310,0.682,1311,1.242,1312,0.682,1313,0.682,1314,0.682,1315,1.242,1316,0.682,1317,0.682,1318,1.71,1319,2.107,1320,0.682,1321,1.242,1322,0.682,1323,1.242,1324,0.682,1325,0.682,1326,1.71,1327,0.682,1328,0.682,1329,0.682,1330,0.682,1331,0.682,1332,1.242,1333,0.682,1334,0.682,1335,0.682,1336,0.682,1337,0.682,1338,1.71,1339,0.682,1340,0.682,1341,0.682,1342,0.682,1343,0.682,1344,2.448,1345,0.682,1346,0.682,1347,1.041,1348,2.107,1349,3.231,1350,0.682,1351,0.572,1352,2.107,1353,0.682,1354,0.682,1355,0.682,1356,0.682,1357,0.682,1358,1.242,1359,3.002,1360,1.71,1361,0.682,1362,2.107,1363,0.682,1364,0.682,1365,1.71,1366,0.682,1367,0.682,1368,1.71,1369,0.682,1370,1.242,1371,1.242,1372,0.682,1373,0.682,1374,0.682,1375,0.682,1376,0.682,1377,0.682,1378,0.682,1379,0.682,1380,0.682,1381,0.682,1382,1.242,1383,0.682,1384,0.682,1385,0.682,1386,1.242,1387,1.242,1388,0.682,1389,0.682,1390,1.71,1391,0.682,1392,1.71,1393,1.242,1394,0.682,1395,1.242,1396,0.682,1397,1.242,1398,0.682,1399,1.71,1400,3.002,1401,0.682,1402,1.242,1403,1.242,1404,0.682,1405,1.242,1406,0.682,1407,0.682,1408,0.682,1409,0.682,1410,0.682,1411,1.242,1412,0.682,1413,1.242,1414,2.107,1415,0.682,1416,2.448,1417,0.682,1418,0.682,1419,0.682,1420,0.682,1421,0.682,1422,0.682,1423,1.242,1424,1.242,1425,1.242,1426,1.71,1427,0.682,1428,1.242,1429,1.242,1430,0.682,1431,1.242,1432,1.71,1433,0.682,1434,1.242,1435,0.682,1436,1.242,1437,0.682,1438,1.71,1439,1.242,1440,0.682,1441,0.682,1442,1.242,1443,4.957,1444,1.242,1445,0.682,1446,2.448,1447,3.617,1448,1.71,1449,0.682,1450,0.682,1451,0.682,1452,2.107,1453,0.682,1454,0.682,1455,1.71,1456,0.682,1457,1.242,1458,0.682,1459,0.682,1460,0.682,1461,2.107,1462,0.682,1463,0.682,1464,0.682,1465,0.682,1466,0.682,1467,2.107,1468,1.242,1469,1.242,1470,0.682,1471,0.682,1472,1.71,1473,0.682,1474,1.242,1475,1.71,1476,1.242,1477,0.682,1478,0.682,1479,0.682,1480,0.682,1481,1.242,1482,1.71,1483,0.682,1484,0.682,1485,0.682,1486,1.242,1487,0.682,1488,0.682,1489,0.682,1490,0.682,1491,0.682,1492,0.682,1493,1.71,1494,1.242,1495,0.682,1496,0.682,1497,2.107,1498,0.682,1499,1.71,1500,0.682,1501,0.682,1502,0.682,1503,1.242,1504,0.682,1505,0.682,1506,0.682,1507,1.71,1508,1.242,1509,1.242,1510,0.682,1511,3.002,1512,1.242,1513,1.71,1514,2.107,1515,0.682,1516,0.682,1517,0.682,1518,1.242,1519,0.682,1520,1.71,1521,0.682,1522,1.242,1523,0.682,1524,0.682,1525,0.682,1526,0.682,1527,1.71,1528,0.682,1529,1.71,1530,1.242,1531,0.682,1532,1.242,1533,0.682,1534,0.682,1535,1.242,1536,1.242,1537,0.682,1538,0.682,1539,1.242,1540,0.682,1541,0.682,1542,0.682,1543,0.682,1544,0.682,1545,1.71,1546,0.682,1547,0.682,1548,0.682,1549,0.682,1550,0.682,1551,2.107,1552,1.242,1553,1.71,1554,0.682,1555,0.682,1556,0.682,1557,0.682,1558,0.682,1559,1.242,1560,0.682,1561,0.682,1562,0.682,1563,0.682,1564,0.682,1565,0.682,1566,0.682,1567,0.682,1568,0.682,1569,0.682,1570,0.682,1571,0.682,1572,0.682,1573,0.682,1574,0.682,1575,2.107,1576,0.682,1577,1.242,1578,0.682,1579,0.682,1580,0.682,1581,0.682,1582,0.682,1583,0.682,1584,0.682,1585,0.682,1586,0.682,1587,1.71,1588,0.682,1589,0.682,1590,0.682,1591,0.682,1592,0.682,1593,1.242,1594,0.682,1595,0.682,1596,0.682,1597,0.682,1598,0.682,1599,0.682,1600,1.242,1601,1.242,1602,2.448,1603,1.71,1604,0.682,1605,1.242,1606,0.682,1607,0.682,1608,0.682,1609,0.682,1610,1.71,1611,1.242,1612,0.682,1613,1.242,1614,1.242,1615,1.242,1616,0.682,1617,0.682,1618,0.682,1619,0.682,1620,0.682,1621,0.682,1622,1.242,1623,0.682,1624,0.682,1625,0.682,1626,0.682,1627,1.71,1628,0.682,1629,0.682,1630,0.682,1631,0.572,1632,0.682,1633,0.682,1634,0.682,1635,0.682,1636,0.682,1637,0.682,1638,0.682,1639,1.242,1640,0.682,1641,0.682,1642,0.682,1643,0.682,1644,0.682,1645,0.682,1646,0.682,1647,0.682,1648,0.682,1649,0.682,1650,0.682,1651,0.682,1652,0.682,1653,0.682,1654,0.682,1655,0.682,1656,0.682,1657,0.682,1658,0.682,1659,1.71,1660,1.242,1661,0.682,1662,0.682,1663,0.682,1664,0.682,1665,0.682,1666,0.682,1667,0.682,1668,1.242,1669,1.242,1670,0.682,1671,0.682,1672,0.682,1673,0.682,1674,0.682,1675,0.682,1676,0.682,1677,0.682,1678,1.242,1679,0.682,1680,0.682,1681,0.682,1682,0.682,1683,0.682,1684,0.682,1685,0.682,1686,0.682,1687,0.572,1688,0.682,1689,0.682,1690,0.682,1691,0.682,1692,0.682,1693,0.682,1694,0.682,1695,0.682,1696,0.682,1697,0.682]],["title/modules.html",[1698,3.727]],["body/modules.html",[28,0.027,69,0.027,70,0.027,1698,4.396]],["title/overview.html",[1699,3.727]],["body/overview.html",[2,1.979,28,0.027,69,0.027,70,0.027,73,1.692,90,2.532,1172,4.338,1699,4.338,1700,4.338,1701,5.178]],["title/properties.html",[76,0.668,658,2.007]],["body/properties.html",[28,0.029,69,0.027,70,0.027,76,0.885,747,3.81,1702,5.212]],["title/miscellaneous/variables.html",[692,1.467,823,2.875]],["body/miscellaneous/variables.html",[15,1.676,28,0.031,30,0.576,54,1.537,65,1.537,66,1.082,69,0.011,70,0.011,72,0.683,74,1.112,75,0.172,77,2.818,78,0.894,80,2.065,82,1.801,83,1.823,84,1.823,86,3.737,92,2.325,93,1.624,94,1.695,95,1.121,96,1.695,97,1.863,99,0.683,100,0.894,103,3.13,104,2.446,117,2.168,119,2.09,121,2.803,132,1.624,140,1.624,147,3.073,156,1.624,157,1.624,158,1.624,159,1.624,160,1.624,166,0.894,169,1.112,175,1.274,177,2.09,179,0.549,195,3.329,211,2.128,214,1.112,215,3.393,216,2.657,217,1.274,218,1.274,219,2.657,220,4.095,221,2.732,222,2.19,223,1.274,224,2.094,227,1.274,231,1.823,232,1.823,235,2.681,236,1.274,237,4.693,238,1.112,239,3.645,240,1.274,241,4.107,242,3.393,243,1.274,244,1.274,245,3.073,246,2.818,247,1.274,248,3.393,249,3.507,250,1.274,251,3.85,252,2.09,253,1.274,254,1.274,255,2.681,256,1.274,257,1.274,258,1.274,259,1.274,260,1.274,261,1.274,262,1.274,263,1.274,264,1.274,270,2.065,295,0.894,296,0.813,325,1.465,326,1.624,327,1.333,328,1.823,357,1.274,381,2.155,395,1.274,416,1.112,417,1.695,436,1.823,437,1.823,455,0.894,464,1.112,482,3.073,507,2.833,509,1.823,517,1.274,537,1.274,548,0.894,568,1.823,569,1.823,590,2.318,620,1.274,622,2.657,624,2.657,625,1.112,627,1.112,628,2.09,633,1.274,634,2.09,635,1.274,636,2.09,637,2.657,638,1.274,642,1.274,644,1.274,645,4.019,646,1.274,647,2.09,648,2.09,651,1.274,652,1.274,653,1.274,654,1.274,655,2.09,672,1.274,692,0.813,720,1.274,724,2.657,754,1.274,762,1.112,823,1.112,1077,3.393,1103,2.09,1146,2.09,1157,2.09,1347,1.274,1351,1.274,1631,1.274,1687,1.274,1700,1.274,1703,2.494,1704,2.494,1705,5.602,1706,2.494,1707,2.494,1708,1.521,1709,2.494,1710,1.521,1711,1.521,1712,1.521,1713,4.595,1714,3.171,1715,2.494,1716,1.521,1717,5.237,1718,1.521,1719,1.521,1720,1.521,1721,1.521,1722,1.521,1723,1.521,1724,1.521,1725,1.521,1726,1.521,1727,1.521,1728,1.521,1729,1.521,1730,1.521,1731,1.521,1732,1.521,1733,1.521,1734,1.521,1735,1.521,1736,1.521,1737,1.521,1738,1.521,1739,1.521,1740,3.668,1741,2.494,1742,2.494,1743,2.494,1744,1.521,1745,1.521,1746,2.494,1747,1.521,1748,1.521,1749,1.521,1750,1.521,1751,1.521,1752,1.521,1753,1.521,1754,2.494,1755,2.494,1756,3.668,1757,1.521,1758,1.521,1759,1.521,1760,1.521,1761,1.521,1762,1.521,1763,1.521,1764,1.521,1765,1.521,1766,1.521,1767,1.521,1768,1.521,1769,1.521,1770,5.602,1771,4.595,1772,5.237,1773,3.171,1774,2.494,1775,2.494,1776,2.494,1777,1.521,1778,1.521,1779,1.521,1780,1.521,1781,1.521,1782,2.494,1783,1.521,1784,2.494,1785,1.521,1786,1.521,1787,1.521,1788,1.521,1789,1.521,1790,1.521,1791,1.521,1792,2.494,1793,1.521,1794,1.521,1795,1.521,1796,1.521,1797,1.521,1798,1.521,1799,1.521,1800,1.521,1801,1.521,1802,1.521,1803,1.521,1804,1.521,1805,1.521,1806,1.521,1807,2.494,1808,1.521,1809,1.521,1810,1.521,1811,1.521,1812,1.521,1813,1.521,1814,3.171,1815,2.494,1816,3.171,1817,3.171,1818,1.521,1819,1.521,1820,1.521,1821,1.521,1822,1.521,1823,1.521,1824,1.521,1825,4.351,1826,3.171,1827,1.521,1828,1.521,1829,1.521,1830,1.521,1831,1.521,1832,1.521,1833,1.521,1834,1.521,1835,1.521,1836,1.521,1837,1.521,1838,1.521,1839,1.521,1840,1.521]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":548,"title":{},"body":{"injectables/MemoryStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1702,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["0.14.3",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":919,"title":{},"body":{"license.html":{}}}],["1.0.9",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1172,"title":{},"body":{"license.html":{},"overview.html":{}}}],["11",{"_index":1185,"title":{},"body":{"license.html":{}}}],["13",{"_index":1590,"title":{},"body":{"license.html":{}}}],["15",{"_index":1402,"title":{},"body":{"license.html":{}}}],["15.0.0",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1403,"title":{},"body":{"license.html":{}}}],["17",{"_index":750,"title":{},"body":{"index.html":{}}}],["17.1.0",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["17.1.3",{"_index":668,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["17.6.0",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":1191,"title":{},"body":{"license.html":{}}}],["2",{"_index":921,"title":{},"body":{"license.html":{}}}],["2.3.0",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1189,"title":{},"body":{"license.html":{}}}],["2007",{"_index":842,"title":{},"body":{"license.html":{}}}],["25",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1571,"title":{},"body":{"license.html":{}}}],["29",{"_index":840,"title":{},"body":{"license.html":{}}}],["3",{"_index":839,"title":{},"body":{"license.html":{}}}],["3.3.1",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1463,"title":{},"body":{"license.html":{}}}],["4",{"_index":1224,"title":{},"body":{"license.html":{}}}],["4.18.2",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":358,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["5",{"_index":1259,"title":{},"body":{"license.html":{}}}],["6",{"_index":1701,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1456,"title":{},"body":{"license.html":{}}}],["6b",{"_index":1287,"title":{},"body":{"license.html":{}}}],["6d",{"_index":1313,"title":{},"body":{"license.html":{}}}],["7",{"_index":1219,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1700,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["80:4000",{"_index":798,"title":{},"body":{"index.html":{}}}],["9])(?=.*[a",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ability",{"_index":1367,"title":{},"body":{"license.html":{}}}],["above",{"_index":1438,"title":{},"body":{"license.html":{}}}],["absence",{"_index":1220,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1649,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":1677,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":953,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1468,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1467,"title":{},"body":{"license.html":{}}}],["access",{"_index":942,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":1538,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":450,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["accesstoken",{"_index":590,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"miscellaneous/variables.html":{}}}],["accompanied",{"_index":1266,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":1653,"title":{},"body":{"license.html":{}}}],["accord",{"_index":1218,"title":{},"body":{"license.html":{}}}],["according",{"_index":1644,"title":{},"body":{"license.html":{}}}],["achieve",{"_index":1658,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1148,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":1518,"title":{},"body":{"license.html":{}}}],["action",{"_index":243,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":101,"title":{},"body":{"injectables/AuthEffects.html":{},"license.html":{}}}],["activated",{"_index":595,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["activatedroutesnapshot",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activities",{"_index":1039,"title":{},"body":{"license.html":{}}}],["activity",{"_index":1566,"title":{},"body":{"license.html":{}}}],["actual",{"_index":1543,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["actually",{"_index":1337,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":1010,"title":{},"body":{"license.html":{}}}],["add",{"_index":810,"title":{},"body":{"index.html":{},"license.html":{}}}],["added",{"_index":1217,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1234,"title":{},"body":{"license.html":{}}}],["address",{"_index":1597,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":1007,"title":{},"body":{"license.html":{}}}],["adopted",{"_index":1188,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":1376,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1640,"title":{},"body":{"license.html":{}}}],["affects",{"_index":1377,"title":{},"body":{"license.html":{}}}],["affero",{"_index":1587,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":1498,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1142,"title":{},"body":{"license.html":{}}}],["against",{"_index":1206,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":1250,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1583,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1626,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1529,"title":{},"body":{"license.html":{}}}],["aim",{"_index":949,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":1506,"title":{},"body":{"license.html":{}}}],["allow",{"_index":977,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":858,"title":{},"body":{"license.html":{}}}],["allows",{"_index":734,"title":{},"body":{"index.html":{}}}],["along",{"_index":1222,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":541,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["already",{"_index":1517,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":1283,"title":{},"body":{"license.html":{}}}],["although",{"_index":945,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":1470,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":925,"title":{},"body":{"license.html":{}}}],["angular",{"_index":730,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":334,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular/compiler",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":322,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["anti",{"_index":1175,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":1231,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1023,"title":{},"body":{"license.html":{}}}],["api",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.authoptions",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.authurl",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.noauthoptions",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiurl",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appefects",{"_index":83,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicable",{"_index":1029,"title":{},"body":{"license.html":{}}}],["application",{"_index":731,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":739,"title":{},"body":{"index.html":{},"license.html":{}}}],["applied",{"_index":984,"title":{},"body":{"license.html":{}}}],["applies",{"_index":876,"title":{},"body":{"license.html":{}}}],["apply",{"_index":881,"title":{},"body":{"license.html":{}}}],["appname",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1053,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":1211,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":1648,"title":{},"body":{"license.html":{}}}],["appstate",{"_index":72,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appstore",{"_index":84,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area",{"_index":955,"title":{},"body":{"license.html":{}}}],["arise",{"_index":963,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1630,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":1539,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":1553,"title":{},"body":{"license.html":{}}}],["article",{"_index":1184,"title":{},"body":{"license.html":{}}}],["artifacts",{"_index":779,"title":{},"body":{"index.html":{}}}],["asking",{"_index":897,"title":{},"body":{"license.html":{}}}],["assert",{"_index":920,"title":{},"body":{"license.html":{}}}],["assets",{"_index":1488,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1122,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1621,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":1652,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":1425,"title":{},"body":{"license.html":{}}}],["assures",{"_index":987,"title":{},"body":{"license.html":{}}}],["async)?.firstname",{"_index":409,"title":{},"body":{"components/HomeComponent.html":{}}}],["async)?.lastname",{"_index":410,"title":{},"body":{"components/HomeComponent.html":{}}}],["attach",{"_index":1660,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":1441,"title":{},"body":{"license.html":{}}}],["attributed",{"_index":937,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":1406,"title":{},"body":{"license.html":{}}}],["auth",{"_index":86,"title":{},"body":{"components/AuthComponent.html":{},"injectables/JwtService.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth.actions",{"_index":161,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["auth.component.html",{"_index":87,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":88,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.forgot",{"_index":363,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["auth.login.authorization_error",{"_index":512,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.forgot_password",{"_index":526,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_is_required",{"_index":524,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_label",{"_index":523,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_length",{"_index":525,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.register",{"_index":527,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.sign_in_to_continue",{"_index":520,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_is_required",{"_index":521,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_label",{"_index":386,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["auth.login.username_length",{"_index":522,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.welcome_message",{"_index":519,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.wrong_username_or_password",{"_index":513,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.reset",{"_index":573,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["auth/auth.effects",{"_index":79,"title":{},"body":{"interfaces/AppState.html":{}}}],["auth/auth.reducer",{"_index":81,"title":{},"body":{"interfaces/AppState.html":{}}}],["authcomponent",{"_index":51,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["autheffects",{"_index":78,"title":{"injectables/AuthEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":92,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate(request",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticaterequestdto",{"_index":173,"title":{"interfaces/AuthenticateRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"coverage.html":{}}}],["authentication",{"_index":245,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["authenticationfailure",{"_index":156,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationsuccess",{"_index":93,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationsuccess(token",{"_index":118,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authinterceptor",{"_index":636,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authoptions",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":1405,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":1351,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["authorized",{"_index":1396,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":1512,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":1557,"title":{},"body":{"license.html":{}}}],["authors",{"_index":880,"title":{},"body":{"license.html":{}}}],["authreducer",{"_index":80,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":99,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authstate",{"_index":77,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authurl",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatic",{"_index":1479,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":769,"title":{},"body":{"index.html":{},"license.html":{}}}],["available",{"_index":1037,"title":{},"body":{"license.html":{}}}],["avoid",{"_index":981,"title":{},"body":{"license.html":{}}}],["away",{"_index":866,"title":{},"body":{"license.html":{}}}],["b",{"_index":1099,"title":{},"body":{"license.html":{}}}],["backend",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":1019,"title":{},"body":{"license.html":{}}}],["basic",{"_index":1135,"title":{},"body":{"license.html":{}}}],["bearer",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behalf",{"_index":1162,"title":{},"body":{"license.html":{}}}],["being",{"_index":1311,"title":{},"body":{"license.html":{}}}],["believe",{"_index":1549,"title":{},"body":{"license.html":{}}}],["below",{"_index":1169,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":1542,"title":{},"body":{"license.html":{}}}],["best",{"_index":1657,"title":{},"body":{"license.html":{}}}],["better",{"_index":539,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["between",{"_index":1132,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":1252,"title":{},"body":{"license.html":{}}}],["body",{"_index":1081,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":225,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["bootstrap",{"_index":655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":930,"title":{},"body":{"license.html":{}}}],["box",{"_index":1683,"title":{},"body":{"license.html":{}}}],["browser",{"_index":665,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":778,"title":{},"body":{"index.html":{}}}],["business",{"_index":1563,"title":{},"body":{"license.html":{}}}],["buttonmodule",{"_index":276,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["c",{"_index":844,"title":{},"body":{"license.html":{}}}],["called",{"_index":1017,"title":{},"body":{"license.html":{}}}],["calls",{"_index":757,"title":{},"body":{"index.html":{}}}],["can't",{"_index":832,"title":{},"body":{"index.html":{}}}],["canactivatefn",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":744,"title":{},"body":{"index.html":{}}}],["carry",{"_index":1226,"title":{},"body":{"license.html":{}}}],["case",{"_index":1082,"title":{},"body":{"license.html":{}}}],["cases",{"_index":1332,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":151,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["catcherror((error",{"_index":119,"title":{},"body":{"injectables/AuthEffects.html":{},"miscellaneous/variables.html":{}}}],["cause",{"_index":1256,"title":{},"body":{"license.html":{}}}],["cease",{"_index":1445,"title":{},"body":{"license.html":{}}}],["centralized",{"_index":726,"title":{},"body":{"index.html":{}}}],["certain",{"_index":900,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":1458,"title":{},"body":{"license.html":{}}}],["change",{"_index":771,"title":{},"body":{"index.html":{},"license.html":{}}}],["changed",{"_index":935,"title":{},"body":{"license.html":{}}}],["changing",{"_index":857,"title":{},"body":{"license.html":{}}}],["characterized",{"_index":1364,"title":{},"body":{"license.html":{}}}],["charge",{"_index":886,"title":{},"body":{"license.html":{}}}],["checkusername",{"_index":289,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["checkusername(username",{"_index":298,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["choice",{"_index":808,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1605,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":1609,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":1167,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":1176,"title":{},"body":{"license.html":{}}}],["civil",{"_index":1651,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1503,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1514,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clear",{"_index":419,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clearly",{"_index":927,"title":{},"body":{"license.html":{}}}],["cli",{"_index":746,"title":{},"body":{"index.html":{}}}],["client",{"_index":756,"title":{},"body":{"index.html":{}}}],["clonedrequest",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closely",{"_index":1647,"title":{},"body":{"license.html":{}}}],["cms",{"_index":729,"title":{},"body":{"index.html":{}}}],["cms:1",{"_index":795,"title":{},"body":{"index.html":{}}}],["cms:latestimportant",{"_index":820,"title":{},"body":{"index.html":{}}}],["cms:latestthen",{"_index":819,"title":{},"body":{"index.html":{}}}],["code",{"_index":773,"title":{},"body":{"index.html":{},"license.html":{}}}],["collect",{"_index":735,"title":{},"body":{"index.html":{},"license.html":{}}}],["combination",{"_index":1592,"title":{},"body":{"license.html":{}}}],["combine",{"_index":1589,"title":{},"body":{"license.html":{}}}],["combined",{"_index":1247,"title":{},"body":{"license.html":{}}}],["comes",{"_index":1232,"title":{},"body":{"license.html":{}}}],["command",{"_index":796,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1067,"title":{},"body":{"license.html":{}}}],["comment",{"_index":705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["commercial",{"_index":1342,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":1530,"title":{},"body":{"license.html":{}}}],["common",{"_index":1336,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":272,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["communication",{"_index":1130,"title":{},"body":{"license.html":{}}}],["compilation",{"_index":1242,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":1251,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":1568,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":1110,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1485,"title":{},"body":{"license.html":{}}}],["comply",{"_index":1159,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["component_template",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":825,"title":{},"body":{"index.html":{}}}],["composed",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["computer",{"_index":1033,"title":{},"body":{"license.html":{}}}],["computers",{"_index":980,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":1591,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":1598,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":1562,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":991,"title":{},"body":{"license.html":{}}}],["config",{"_index":622,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":1551,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":1472,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":1629,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1691,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1427,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1522,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":1210,"title":{},"body":{"license.html":{}}}],["const",{"_index":82,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":974,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":1147,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{}}}],["constructor(authservice",{"_index":98,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(formbuilder",{"_index":293,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(http",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{}}}],["constructor(storage",{"_index":424,"title":{},"body":{"injectables/JwtService.html":{}}}],["constructor(store",{"_index":400,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(translate",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["construed",{"_index":1573,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":1319,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1670,"title":{},"body":{"license.html":{}}}],["contain",{"_index":1569,"title":{},"body":{"license.html":{}}}],["container",{"_index":816,"title":{},"body":{"index.html":{}}}],["containing",{"_index":1408,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1431,"title":{},"body":{"license.html":{}}}],["content",{"_index":1146,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["contents",{"_index":1526,"title":{},"body":{"license.html":{}}}],["context",{"_index":1103,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":1370,"title":{},"body":{"license.html":{}}}],["continued",{"_index":1354,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":1424,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":1579,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":869,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1511,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":1513,"title":{},"body":{"license.html":{}}}],["control",{"_index":1116,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1516,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":1056,"title":{},"body":{"license.html":{}}}],["convey",{"_index":1041,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":1555,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":1365,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":1050,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":1423,"title":{},"body":{"license.html":{}}}],["copies",{"_index":855,"title":{},"body":{"license.html":{}}}],["copy",{"_index":852,"title":{},"body":{"license.html":{}}}],["copying",{"_index":992,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":860,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":843,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":1002,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":1164,"title":{},"body":{"license.html":{}}}],["core/services/api/auth.api.service",{"_index":338,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/state/app.state",{"_index":323,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/state/auth/auth.actions",{"_index":333,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/state/auth/auth.selectors",{"_index":329,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/utils/regex.constants",{"_index":570,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["correction",{"_index":1625,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":824,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":1113,"title":{},"body":{"license.html":{}}}],["cost",{"_index":1281,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":1504,"title":{},"body":{"license.html":{}}}],["countries",{"_index":1038,"title":{},"body":{"license.html":{}}}],["country",{"_index":1545,"title":{},"body":{"license.html":{}}}],["course",{"_index":1681,"title":{},"body":{"license.html":{}}}],["court",{"_index":1578,"title":{},"body":{"license.html":{}}}],["courts",{"_index":1646,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":1533,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":615,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":1020,"title":{},"body":{"license.html":{}}}],["create",{"_index":700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createaction",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdat",{"_index":596,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["createeffect",{"_index":105,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["createreducer",{"_index":227,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":215,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["criterion",{"_index":1073,"title":{},"body":{"license.html":{}}}],["cross",{"_index":1502,"title":{},"body":{"license.html":{}}}],["cure",{"_index":1462,"title":{},"body":{"license.html":{}}}],["current",{"_index":239,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["currentuser",{"_index":398,"title":{},"body":{"components/HomeComponent.html":{}}}],["currentusererrorsubscription",{"_index":399,"title":{},"body":{"components/HomeComponent.html":{}}}],["customarily",{"_index":1269,"title":{},"body":{"license.html":{}}}],["customer",{"_index":1276,"title":{},"body":{"license.html":{}}}],["d",{"_index":1240,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1627,"title":{},"body":{"license.html":{}}}],["danger",{"_index":983,"title":{},"body":{"license.html":{}}}],["data",{"_index":529,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["date",{"_index":602,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["days",{"_index":1457,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":330,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["debouncetime(500",{"_index":345,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["debug_file",{"_index":706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["december",{"_index":1190,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1607,"title":{},"body":{"license.html":{}}}],["declining",{"_index":1415,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":317,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["deemed",{"_index":1178,"title":{},"body":{"license.html":{}}}],["default",{"_index":103,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defective",{"_index":1620,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":1576,"title":{},"body":{"license.html":{}}}],["defined",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["definition",{"_index":1121,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":996,"title":{},"body":{"license.html":{}}}],["delete",{"_index":703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["denied",{"_index":1373,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":1531,"title":{},"body":{"license.html":{}}}],["deny",{"_index":941,"title":{},"body":{"license.html":{}}}],["denying",{"_index":896,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":659,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deploy",{"_index":785,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":812,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":1540,"title":{},"body":{"license.html":{}}}],["deps",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["designated",{"_index":1289,"title":{},"body":{"license.html":{}}}],["designed",{"_index":864,"title":{},"body":{"license.html":{}}}],["detail",{"_index":365,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"license.html":{}}}],["details",{"_index":1669,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":1679,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1330,"title":{},"body":{"license.html":{}}}],["dev",{"_index":766,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1654,"title":{},"body":{"license.html":{}}}],["developers",{"_index":915,"title":{},"body":{"license.html":{}}}],["development",{"_index":762,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["device_state",{"_index":707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["devices",{"_index":940,"title":{},"body":{"license.html":{}}}],["deviceurl",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["devtools",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["differ",{"_index":1596,"title":{},"body":{"license.html":{}}}],["different",{"_index":1292,"title":{},"body":{"license.html":{}}}],["differently",{"_index":1401,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1163,"title":{},"body":{"license.html":{}}}],["directions",{"_index":1297,"title":{},"body":{"license.html":{}}}],["directive",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["directives",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":777,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1025,"title":{},"body":{"license.html":{}}}],["directory",{"_index":782,"title":{},"body":{"index.html":{}}}],["disclaim",{"_index":1201,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1610,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":1398,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":1559,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":146,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["display",{"_index":1241,"title":{},"body":{"license.html":{}}}],["displayed",{"_index":1407,"title":{},"body":{"license.html":{}}}],["displays",{"_index":1052,"title":{},"body":{"license.html":{}}}],["dist",{"_index":781,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":331,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["distinguishing",{"_index":1599,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":853,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":738,"title":{},"body":{"index.html":{},"license.html":{}}}],["distributing",{"_index":1564,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":993,"title":{},"body":{"license.html":{}}}],["docker",{"_index":783,"title":{},"body":{"index.html":{}}}],["document",{"_index":856,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":1383,"title":{},"body":{"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["domain/dto/requests/authenticate",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{}}}],["domain/dto/requests/register",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/requests/reset",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/token.dto",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/user.dto",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/models/enums/state",{"_index":233,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/token.entity",{"_index":229,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/user.entity",{"_index":230,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/your",{"_index":790,"title":{},"body":{"index.html":{}}}],["domains",{"_index":965,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":1331,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":1481,"title":{},"body":{"license.html":{}}}],["dradman/loghub",{"_index":794,"title":{},"body":{"index.html":{}}}],["dto",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["due",{"_index":828,"title":{},"body":{"index.html":{}}}],["durable",{"_index":1268,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":1329,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1124,"title":{},"body":{"license.html":{}}}],["e",{"_index":1306,"title":{},"body":{"license.html":{}}}],["e2e",{"_index":807,"title":{},"body":{"index.html":{}}}],["each",{"_index":1005,"title":{},"body":{"license.html":{}}}],["earlier",{"_index":1018,"title":{},"body":{"license.html":{}}}],["effect",{"_index":1643,"title":{},"body":{"license.html":{}}}],["effected",{"_index":1199,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1179,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":985,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":1496,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1671,"title":{},"body":{"license.html":{}}}],["element",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["elementref",{"_index":316,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["email",{"_index":393,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["embodied",{"_index":1263,"title":{},"body":{"license.html":{}}}],["employer",{"_index":1684,"title":{},"body":{"license.html":{}}}],["en",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enable",{"_index":1101,"title":{},"body":{"license.html":{}}}],["enableregistration",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":1043,"title":{},"body":{"license.html":{}}}],["end",{"_index":806,"title":{},"body":{"index.html":{},"license.html":{}}}],["enforce",{"_index":1532,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":1205,"title":{},"body":{"license.html":{}}}],["enhancing",{"_index":741,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":1303,"title":{},"body":{"license.html":{}}}],["entered",{"_index":1570,"title":{},"body":{"license.html":{}}}],["entire",{"_index":1230,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":1586,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1486,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":693,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/permission.enum",{"_index":604,"title":{},"body":{"interfaces/User.html":{}}}],["enums/resource",{"_index":606,"title":{},"body":{"interfaces/User.html":{}}}],["env",{"_index":834,"title":{},"body":{"index.html":{}}}],["environment",{"_index":507,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.appname",{"_index":516,"title":{},"body":{"components/LoginComponent.html":{}}}],["environment.enableregistration",{"_index":517,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":508,"title":{},"body":{"components/LoginComponent.html":{}}}],["equivalent",{"_index":1150,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":938,"title":{},"body":{"license.html":{}}}],["error",{"_index":121,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('unauthorized",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.status",{"_index":357,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["errorsubscription",{"_index":282,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["essential",{"_index":1104,"title":{},"body":{"license.html":{}}}],["even",{"_index":1639,"title":{},"body":{"license.html":{}}}],["event",{"_index":342,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"license.html":{}}}],["event.target",{"_index":343,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["everyone",{"_index":850,"title":{},"body":{"license.html":{}}}],["exact",{"_index":1015,"title":{},"body":{"license.html":{}}}],["example",{"_index":788,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":1031,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exceptions",{"_index":1387,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":1317,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1574,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":1663,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1523,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":1156,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":1580,"title":{},"body":{"license.html":{}}}],["executable",{"_index":1092,"title":{},"body":{"license.html":{}}}],["execute",{"_index":803,"title":{},"body":{"index.html":{},"license.html":{}}}],["executing",{"_index":1032,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1497,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1200,"title":{},"body":{"license.html":{}}}],["expected",{"_index":1340,"title":{},"body":{"license.html":{}}}],["expects",{"_index":1339,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":591,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["explains",{"_index":928,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":1141,"title":{},"body":{"license.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["express",{"_index":679,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["expressed",{"_index":1612,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":1440,"title":{},"body":{"license.html":{}}}],["extend",{"_index":968,"title":{},"body":{"license.html":{}}}],["extended",{"_index":1558,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":1246,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1055,"title":{},"body":{"license.html":{}}}],["f",{"_index":1421,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":1158,"title":{},"body":{"license.html":{}}}],["fails",{"_index":1453,"title":{},"body":{"license.html":{}}}],["failure",{"_index":249,"title":{},"body":{"interfaces/AuthState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["fair",{"_index":1149,"title":{},"body":{"license.html":{}}}],["false",{"_index":147,"title":{},"body":{"injectables/AuthEffects.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1324,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":1012,"title":{},"body":{"license.html":{}}}],["favor",{"_index":1334,"title":{},"body":{"license.html":{}}}],["feature",{"_index":1059,"title":{},"body":{"license.html":{}}}],["features",{"_index":749,"title":{},"body":{"index.html":{}}}],["fee",{"_index":907,"title":{},"body":{"license.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"license.html":{}}}],["files",{"_index":772,"title":{},"body":{"index.html":{},"license.html":{}}}],["filesurl",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finally",{"_index":972,"title":{},"body":{"license.html":{}}}],["find",{"_index":1299,"title":{},"body":{"license.html":{}}}],["first",{"_index":787,"title":{},"body":{"index.html":{},"license.html":{}}}],["firstname",{"_index":554,"title":{},"body":{"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["fitness",{"_index":1615,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1267,"title":{},"body":{"license.html":{}}}],["flow",{"_index":1131,"title":{},"body":{"license.html":{}}}],["follow",{"_index":995,"title":{},"body":{"license.html":{}}}],["following",{"_index":1527,"title":{},"body":{"license.html":{}}}],["forbid",{"_index":1198,"title":{},"body":{"license.html":{}}}],["force",{"_index":1153,"title":{},"body":{"license.html":{}}}],["forgot",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword",{"_index":94,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword(username",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":53,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["forgotpassworderror",{"_index":216,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["forgotpasswordfailure",{"_index":157,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgotpasswordform",{"_index":283,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordrequestdto",{"_index":391,"title":{"interfaces/ForgotPasswordRequestDto.html":{}},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"coverage.html":{}}}],["forgotpasswordsuccess",{"_index":132,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":1075,"title":{},"body":{"license.html":{}}}],["format",{"_index":1381,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":294,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["forms",{"_index":1257,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":273,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["found",{"_index":1666,"title":{},"body":{"license.html":{}}}],["foundation",{"_index":847,"title":{},"body":{"license.html":{}}}],["free",{"_index":845,"title":{},"body":{"license.html":{}}}],["free.app",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["freedom",{"_index":867,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":911,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":332,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["fromevent(this.usernameinput.nativeelement",{"_index":339,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["fulfilling",{"_index":1182,"title":{},"body":{"license.html":{}}}],["full",{"_index":793,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["functioning",{"_index":1355,"title":{},"body":{"license.html":{}}}],["functions",{"_index":719,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":947,"title":{},"body":{"license.html":{}}}],["further",{"_index":1291,"title":{},"body":{"license.html":{}}}],["future",{"_index":970,"title":{},"body":{"license.html":{}}}],["general",{"_index":829,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":1119,"title":{},"body":{"license.html":{}}}],["generate",{"_index":775,"title":{},"body":{"index.html":{},"license.html":{}}}],["generated",{"_index":745,"title":{},"body":{"index.html":{}}}],["getapplicationname",{"_index":488,"title":{},"body":{"components/LoginComponent.html":{}}}],["getitem",{"_index":446,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getitem(key",{"_index":453,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getlength",{"_index":461,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getrefreshtoken",{"_index":420,"title":{},"body":{"injectables/JwtService.html":{}}}],["getting",{"_index":722,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":421,"title":{},"body":{"injectables/JwtService.html":{}}}],["ghcr.io/dradman/loghub",{"_index":818,"title":{},"body":{"index.html":{}}}],["github",{"_index":815,"title":{},"body":{"index.html":{}}}],["give",{"_index":1221,"title":{},"body":{"license.html":{}}}],["given",{"_index":1145,"title":{},"body":{"license.html":{}}}],["gives",{"_index":1237,"title":{},"body":{"license.html":{}}}],["giving",{"_index":923,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":838,"title":{},"body":{"license.html":{}}}],["governed",{"_index":1390,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":916,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1416,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1136,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1475,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":906,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":1655,"title":{},"body":{"license.html":{}}}],["guarantee",{"_index":871,"title":{},"body":{"license.html":{}}}],["gui",{"_index":1682,"title":{},"body":{"license.html":{}}}],["handle",{"_index":237,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["hash",{"_index":580,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["having",{"_index":1155,"title":{},"body":{"license.html":{}}}],["headers",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":792,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":1519,"title":{},"body":{"license.html":{}}}],["holder",{"_index":1447,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1397,"title":{},"body":{"license.html":{}}}],["home",{"_index":395,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["home.component.html",{"_index":396,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":397,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":56,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["hope",{"_index":1667,"title":{},"body":{"license.html":{}}}],["host",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hosts",{"_index":1300,"title":{},"body":{"license.html":{}}}],["household",{"_index":1325,"title":{},"body":{"license.html":{}}}],["html",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["htmlinputelement).value",{"_index":344,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["http",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":768,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/api",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpcontext().set(authenticate",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcontexttoken",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httphandlerfn",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpheaders",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":627,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httploaderfactory(http",{"_index":721,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpparams",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpparams().set('username",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["httprequest",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fsf.org",{"_index":849,"title":{},"body":{"license.html":{}}}],["https://heavily",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.gnu.org/licenses",{"_index":1688,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":1696,"title":{},"body":{"license.html":{}}}],["hypothetical",{"_index":1680,"title":{},"body":{"license.html":{}}}],["identifiable",{"_index":1547,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["if(!router.url.startswith('/auth",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(isusernametaken",{"_index":387,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["image",{"_index":784,"title":{},"body":{"index.html":{}}}],["implement",{"_index":538,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["implementation",{"_index":1102,"title":{},"body":{"license.html":{}}}],["implements",{"_index":468,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"index.html":{}}}],["implied",{"_index":1575,"title":{},"body":{"license.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["important",{"_index":827,"title":{},"body":{"index.html":{}}}],["importing",{"_index":1510,"title":{},"body":{"license.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["impose",{"_index":1426,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":1577,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1632,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":1635,"title":{},"body":{"license.html":{}}}],["inc",{"_index":848,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1628,"title":{},"body":{"license.html":{}}}],["include",{"_index":1093,"title":{},"body":{"license.html":{}}}],["included",{"_index":1095,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1036,"title":{},"body":{"license.html":{}}}],["including",{"_index":1114,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1255,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":948,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":1689,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":1328,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":1422,"title":{},"body":{"license.html":{}}}],["independent",{"_index":1244,"title":{},"body":{"license.html":{}}}],["index",{"_index":75,"title":{"index.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1478,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":1437,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1253,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":957,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":1343,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["inform",{"_index":1309,"title":{},"body":{"license.html":{}}}],["information",{"_index":1349,"title":{},"body":{"license.html":{}}}],["infringe",{"_index":1476,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1507,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1028,"title":{},"body":{"license.html":{}}}],["initialstate",{"_index":235,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":1500,"title":{},"body":{"license.html":{}}}],["inject",{"_index":464,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{},"miscellaneous/variables.html":{}}}],["inject(authservice",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(jwtservice",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(jwtservice).gettoken",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(platform_id",{"_index":470,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["inject(router",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(store",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":89,"title":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{}}}],["injectables",{"_index":90,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"overview.html":{}}}],["injectspeedinsights",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":340,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["inputmaskmodule",{"_index":483,"title":{},"body":{"components/LoginComponent.html":{}}}],["inputs",{"_index":559,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["inputtextmodule",{"_index":277,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["inside",{"_index":944,"title":{},"body":{"license.html":{}}}],["insights",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["install",{"_index":943,"title":{},"body":{"license.html":{}}}],["installation",{"_index":1348,"title":{},"body":{"license.html":{}}}],["installed",{"_index":1368,"title":{},"body":{"license.html":{}}}],["instanceof",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instead",{"_index":1694,"title":{},"body":{"license.html":{}}}],["intact",{"_index":1214,"title":{},"body":{"license.html":{}}}],["intended",{"_index":870,"title":{},"body":{"license.html":{}}}],["intention",{"_index":1202,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":1046,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":1051,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":1270,"title":{},"body":{"license.html":{}}}],["interest",{"_index":1494,"title":{},"body":{"license.html":{}}}],["interface",{"_index":71,"title":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"license.html":{}}}],["interfaces",{"_index":73,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":1357,"title":{},"body":{"license.html":{}}}],["internal",{"_index":611,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["interpretation",{"_index":1642,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":1112,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":1129,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":1238,"title":{},"body":{"license.html":{}}}],["invitation",{"_index":412,"title":{},"body":{"components/InvitationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["invitation'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["invitation.component.html",{"_index":413,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.component.scss",{"_index":414,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitationcomponent",{"_index":58,"title":{"components/InvitationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["invitationurl",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["irrevocable",{"_index":1138,"title":{},"body":{"license.html":{}}}],["isdevmode",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isloading",{"_index":284,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isloadingauthstate",{"_index":325,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isplatformbrowser",{"_index":467,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isplatformbrowser(platformid",{"_index":471,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isregistrationenabled",{"_index":489,"title":{},"body":{"components/LoginComponent.html":{}}}],["issuccess",{"_index":326,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isusernameavialable",{"_index":217,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["isusernametaken",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["isusernametaken(username",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["item",{"_index":1071,"title":{},"body":{"license.html":{}}}],["itself",{"_index":1374,"title":{},"body":{"license.html":{}}}],["june",{"_index":841,"title":{},"body":{"license.html":{}}}],["jwtservice",{"_index":100,"title":{"injectables/JwtService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtservice.clear",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice.savetoken(refreshresult.accesstoken",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice.savetoken(refreshresult.refreshtoken",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":805,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1213,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":1105,"title":{},"body":{"license.html":{}}}],["key",{"_index":447,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["key(index",{"_index":454,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["keys",{"_index":546,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["keys.length",{"_index":549,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["kind",{"_index":1042,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":861,"title":{},"body":{"license.html":{}}}],["know",{"_index":890,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":1535,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":1544,"title":{},"body":{"license.html":{}}}],["language",{"_index":1086,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1248,"title":{},"body":{"license.html":{}}}],["lastlogintime",{"_index":597,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["lastname",{"_index":555,"title":{},"body":{"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["later",{"_index":1602,"title":{},"body":{"license.html":{}}}],["latest",{"_index":814,"title":{},"body":{"index.html":{}}}],["law",{"_index":1030,"title":{},"body":{"license.html":{}}}],["laws",{"_index":999,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1505,"title":{},"body":{"license.html":{}}}],["legal",{"_index":924,"title":{},"body":{"license.html":{}}}],["legend",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["length",{"_index":451,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["lesser",{"_index":1693,"title":{},"body":{"license.html":{}}}],["lgpl.html",{"_index":1697,"title":{},"body":{"license.html":{}}}],["liability",{"_index":1400,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1027,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1091,"title":{},"body":{"license.html":{}}}],["library",{"_index":1318,"title":{},"body":{"license.html":{}}}],["license",{"_index":837,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1003,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":1006,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":1008,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":862,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":1480,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":1414,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":1473,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1203,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":830,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":1613,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":1399,"title":{},"body":{"license.html":{}}}],["line",{"_index":1664,"title":{},"body":{"license.html":{}}}],["link",{"_index":1588,"title":{},"body":{"license.html":{}}}],["linked",{"_index":1125,"title":{},"body":{"license.html":{}}}],["linking",{"_index":1692,"title":{},"body":{"license.html":{}}}],["list",{"_index":1066,"title":{},"body":{"license.html":{}}}],["literal",{"_index":534,"title":{},"body":{"injectables/MemoryStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["litigation",{"_index":1501,"title":{},"body":{"license.html":{}}}],["load",{"_index":252,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentuser",{"_index":95,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentuserfailure",{"_index":158,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentusersuccess",{"_index":159,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentusersuccess(user",{"_index":127,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["loader",{"_index":672,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":238,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":435,"title":{},"body":{"injectables/JwtService.html":{},"index.html":{},"license.html":{}}}],["localstorage",{"_index":425,"title":{"injectables/LocalStorage.html":{}},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"coverage.html":{}}}],["location",{"_index":740,"title":{},"body":{"index.html":{}}}],["log_entry",{"_index":709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_session",{"_index":710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_source",{"_index":711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logging",{"_index":727,"title":{},"body":{"index.html":{}}}],["loghub",{"_index":724,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":482,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["login.component.html",{"_index":485,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":486,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":60,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":487,"title":{},"body":{"components/LoginComponent.html":{}}}],["logonly",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs",{"_index":737,"title":{},"body":{"index.html":{}}}],["long",{"_index":1151,"title":{},"body":{"license.html":{}}}],["loss",{"_index":1633,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1636,"title":{},"body":{"license.html":{}}}],["machine",{"_index":1260,"title":{},"body":{"license.html":{}}}],["made",{"_index":1358,"title":{},"body":{"license.html":{}}}],["mail",{"_index":1673,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":1296,"title":{},"body":{"license.html":{}}}],["major",{"_index":1098,"title":{},"body":{"license.html":{}}}],["make",{"_index":821,"title":{},"body":{"index.html":{},"license.html":{}}}],["makes",{"_index":1173,"title":{},"body":{"license.html":{}}}],["making",{"_index":1014,"title":{},"body":{"license.html":{}}}],["manage",{"_index":736,"title":{},"body":{"index.html":{}}}],["management",{"_index":759,"title":{},"body":{"index.html":{}}}],["manner",{"_index":1520,"title":{},"body":{"license.html":{}}}],["manufacturer",{"_index":946,"title":{},"body":{"license.html":{}}}],["map",{"_index":131,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["map((event",{"_index":341,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["map((token",{"_index":114,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((user",{"_index":126,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["march",{"_index":1572,"title":{},"body":{"license.html":{}}}],["marked",{"_index":934,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1420,"title":{},"body":{"license.html":{}}}],["masks",{"_index":1001,"title":{},"body":{"license.html":{}}}],["matching",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1160,"title":{},"body":{"license.html":{}}}],["materially",{"_index":1375,"title":{},"body":{"license.html":{}}}],["maxage",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meaning",{"_index":1430,"title":{},"body":{"license.html":{}}}],["means",{"_index":998,"title":{},"body":{"license.html":{}}}],["measure",{"_index":1181,"title":{},"body":{"license.html":{}}}],["measures",{"_index":1195,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1209,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1225,"title":{},"body":{"license.html":{}}}],["meets",{"_index":1072,"title":{},"body":{"license.html":{}}}],["membersurl",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":466,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["memorystorage",{"_index":465,"title":{"injectables/MemoryStorage.html":{}},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{}}}],["menu",{"_index":1069,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1614,"title":{},"body":{"license.html":{}}}],["mere",{"_index":1045,"title":{},"body":{"license.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merging",{"_index":1490,"title":{},"body":{"license.html":{}}}],["messageservice",{"_index":271,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["met",{"_index":1140,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["methods",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["miscellaneous",{"_index":692,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":1409,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1347,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":1277,"title":{},"body":{"license.html":{}}}],["models/enums/permission.enum",{"_index":613,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/enums/resource",{"_index":614,"title":{},"body":{"interfaces/UserDto.html":{}}}],["modification",{"_index":994,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1076,"title":{},"body":{"license.html":{}}}],["modified",{"_index":933,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":1229,"title":{},"body":{"license.html":{}}}],["modify",{"_index":902,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1034,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1698,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitoring",{"_index":743,"title":{},"body":{"index.html":{}}}],["more",{"_index":1279,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":1459,"title":{},"body":{"license.html":{}}}],["mutt.ngrok",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:your",{"_index":791,"title":{},"body":{"index.html":{}}}],["names",{"_index":1413,"title":{},"body":{"license.html":{}}}],["nature",{"_index":1245,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":767,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":1622,"title":{},"body":{"license.html":{}}}],["need",{"_index":809,"title":{},"body":{"index.html":{},"license.html":{}}}],["needed",{"_index":971,"title":{},"body":{"license.html":{}}}],["network",{"_index":1048,"title":{},"body":{"license.html":{}}}],["new",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":578,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["next",{"_index":381,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["next(clonedrequest",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(request",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":764,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":290,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ngondestroy",{"_index":291,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngoninit",{"_index":292,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngrx",{"_index":758,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":150,"title":{},"body":{"injectables/AuthEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":228,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["noauthoptions",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":989,"title":{},"body":{"license.html":{}}}],["noncommercially",{"_index":1285,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1096,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1323,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":1474,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1060,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1054,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":1460,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1454,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1395,"title":{},"body":{"license.html":{}}}],["null",{"_index":224,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":455,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["numbered",{"_index":1601,"title":{},"body":{"license.html":{}}}],["object",{"_index":1077,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.data",{"_index":547,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["object.keys(this.data).length",{"_index":543,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["obligate",{"_index":1584,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":1302,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1183,"title":{},"body":{"license.html":{}}}],["observable",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["occasionally",{"_index":1284,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":1471,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":954,"title":{},"body":{"license.html":{}}}],["of(authenticationfailure",{"_index":120,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(forgotpasswordfailure",{"_index":133,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(loadcurrentuserfailure",{"_index":136,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(resetpasswordfailure",{"_index":141,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["offer",{"_index":922,"title":{},"body":{"license.html":{}}}],["offered",{"_index":1312,"title":{},"body":{"license.html":{}}}],["offering",{"_index":1288,"title":{},"body":{"license.html":{}}}],["official",{"_index":1078,"title":{},"body":{"license.html":{}}}],["oftype",{"_index":149,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticate",{"_index":107,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticationsuccess",{"_index":123,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(forgotpassword",{"_index":129,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(loadcurrentuser",{"_index":135,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(resetpassword",{"_index":138,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(signout",{"_index":143,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["on(authenticate",{"_index":244,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authenticationfailure",{"_index":250,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authenticationsuccess",{"_index":247,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpassword",{"_index":259,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpasswordfailure",{"_index":261,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpasswordsuccess",{"_index":260,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentuser",{"_index":240,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentuserfailure",{"_index":254,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentusersuccess",{"_index":253,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpassword",{"_index":262,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpasswordfailure",{"_index":264,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpasswordsuccess",{"_index":263,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(setcurrentuser",{"_index":256,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(settoken",{"_index":257,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(signout",{"_index":258,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["one",{"_index":1087,"title":{},"body":{"license.html":{}}}],["operate",{"_index":1638,"title":{},"body":{"license.html":{}}}],["operated",{"_index":1293,"title":{},"body":{"license.html":{}}}],["operating",{"_index":1108,"title":{},"body":{"license.html":{}}}],["operation",{"_index":1204,"title":{},"body":{"license.html":{}}}],["option",{"_index":1392,"title":{},"body":{"license.html":{}}}],["optional",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1068,"title":{},"body":{"license.html":{}}}],["order",{"_index":1469,"title":{},"body":{"license.html":{}}}],["organization",{"_index":712,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["organizations",{"_index":1009,"title":{},"body":{"license.html":{}}}],["organizationurl",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["origin",{"_index":1410,"title":{},"body":{"license.html":{}}}],["original",{"_index":1411,"title":{},"body":{"license.html":{}}}],["others",{"_index":895,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1152,"title":{},"body":{"license.html":{}}}],["out",{"_index":1631,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":1144,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1165,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1699,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":1515,"title":{},"body":{"license.html":{}}}],["p",{"_index":797,"title":{},"body":{"index.html":{}}}],["package",{"_index":658,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packaged",{"_index":1236,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":1097,"title":{},"body":{"license.html":{}}}],["page",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paper",{"_index":1672,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":1444,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":1528,"title":{},"body":{"license.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["part",{"_index":1011,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1084,"title":{},"body":{"license.html":{}}}],["parties",{"_index":1044,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1133,"title":{},"body":{"license.html":{}}}],["party",{"_index":1294,"title":{},"body":{"license.html":{}}}],["party's",{"_index":1492,"title":{},"body":{"license.html":{}}}],["pass",{"_index":908,"title":{},"body":{"license.html":{}}}],["password",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.back_to_login",{"_index":390,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.check_your_email",{"_index":372,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.html",{"_index":280,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":281,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":269,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:120",{"_index":563,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:143",{"_index":303,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:150",{"_index":301,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:158",{"_index":299,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:50",{"_index":561,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":297,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:61",{"_index":566,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:65",{"_index":310,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:67",{"_index":564,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:68",{"_index":567,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:69",{"_index":312,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:70",{"_index":313,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:71",{"_index":562,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":306,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:73",{"_index":319,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:74",{"_index":314,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:75",{"_index":315,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:77",{"_index":302,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:87",{"_index":304,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.error",{"_index":364,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.error_description",{"_index":367,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.new_password_label",{"_index":581,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_is_required",{"_index":582,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_length",{"_index":583,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_not_strong",{"_index":584,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.success",{"_index":371,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.success_message",{"_index":575,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.user_does_not_exist",{"_index":366,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_is_required",{"_index":388,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_length",{"_index":389,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_description",{"_index":385,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_message",{"_index":384,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.wrong_hash",{"_index":574,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":268,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":557,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordminlength",{"_index":647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordmodule",{"_index":484,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordspecialchars",{"_index":648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["patent",{"_index":1443,"title":{},"body":{"license.html":{}}}],["patents",{"_index":975,"title":{},"body":{"license.html":{}}}],["pattern",{"_index":952,"title":{},"body":{"license.html":{}}}],["payment",{"_index":1565,"title":{},"body":{"license.html":{}}}],["peer",{"_index":1307,"title":{},"body":{"license.html":{}}}],["peers",{"_index":1310,"title":{},"body":{"license.html":{}}}],["pending",{"_index":718,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performance",{"_index":1618,"title":{},"body":{"license.html":{}}}],["performing",{"_index":1120,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":1452,"title":{},"body":{"license.html":{}}}],["permission",{"_index":603,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["permissions",{"_index":609,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["permissive",{"_index":1216,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1254,"title":{},"body":{"license.html":{}}}],["permits",{"_index":1433,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":851,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":1363,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1321,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":1582,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1264,"title":{},"body":{"license.html":{}}}],["physically",{"_index":1282,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":889,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":113,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["place",{"_index":1290,"title":{},"body":{"license.html":{}}}],["platform",{"_index":713,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["platform_id",{"_index":463,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformid",{"_index":469,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformurl",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":1695,"title":{},"body":{"license.html":{}}}],["plus",{"_index":1495,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":1665,"title":{},"body":{"license.html":{}}}],["portion",{"_index":1315,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":1278,"title":{},"body":{"license.html":{}}}],["possession",{"_index":1233,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1641,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1656,"title":{},"body":{"license.html":{}}}],["power",{"_index":1197,"title":{},"body":{"license.html":{}}}],["practical",{"_index":863,"title":{},"body":{"license.html":{}}}],["practice",{"_index":961,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":859,"title":{},"body":{"license.html":{}}}],["precise",{"_index":990,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":958,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":1493,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1074,"title":{},"body":{"license.html":{}}}],["present",{"_index":1595,"title":{},"body":{"license.html":{}}}],["presents",{"_index":1065,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":1404,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":894,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":1356,"title":{},"body":{"license.html":{}}}],["previous",{"_index":939,"title":{},"body":{"license.html":{}}}],["price",{"_index":885,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":1567,"title":{},"body":{"license.html":{}}}],["primeflex",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":685,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":324,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/button",{"_index":336,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/inputmask",{"_index":505,"title":{},"body":{"components/LoginComponent.html":{}}}],["primeng/inputtext",{"_index":337,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["primeng/password",{"_index":506,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/toast",{"_index":335,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["prior",{"_index":1455,"title":{},"body":{"license.html":{}}}],["private",{"_index":162,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["problems",{"_index":936,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":1350,"title":{},"body":{"license.html":{}}}],["procuring",{"_index":1554,"title":{},"body":{"license.html":{}}}],["produce",{"_index":1111,"title":{},"body":{"license.html":{}}}],["product",{"_index":1265,"title":{},"body":{"license.html":{}}}],["production",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["products",{"_index":956,"title":{},"body":{"license.html":{}}}],["profile",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profileiconurl",{"_index":598,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["profileurl",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":873,"title":{},"body":{"license.html":{}}}],["program's",{"_index":1208,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":1685,"title":{},"body":{"license.html":{}}}],["programming",{"_index":1085,"title":{},"body":{"license.html":{}}}],["programs",{"_index":882,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":960,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":1193,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":1561,"title":{},"body":{"license.html":{}}}],["project",{"_index":714,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["project_release",{"_index":715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projecturl",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominent",{"_index":1070,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":1057,"title":{},"body":{"license.html":{}}}],["propagate",{"_index":1022,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":1477,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":1035,"title":{},"body":{"license.html":{}}}],["properties",{"_index":76,"title":{"properties.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"properties.html":{}}}],["property",{"_index":1322,"title":{},"body":{"license.html":{}}}],["proprietary",{"_index":986,"title":{},"body":{"license.html":{}}}],["props",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protect",{"_index":892,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":950,"title":{},"body":{"license.html":{}}}],["protection",{"_index":926,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":1380,"title":{},"body":{"license.html":{}}}],["prove",{"_index":1619,"title":{},"body":{"license.html":{}}}],["provide",{"_index":1157,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1063,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["provideeffects(appefects",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient(withinterceptors([authinterceptor",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":270,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":732,"title":{},"body":{"index.html":{}}}],["provideserverrendering",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestore(appstore",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestoredevtools",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provision",{"_index":969,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":1449,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":1606,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":1608,"title":{},"body":{"license.html":{}}}],["public",{"_index":418,"title":{},"body":{"injectables/JwtService.html":{},"license.html":{}}}],["publicity",{"_index":1412,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1382,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1212,"title":{},"body":{"license.html":{}}}],["published",{"_index":1603,"title":{},"body":{"license.html":{}}}],["pull",{"_index":813,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":979,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1326,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":1550,"title":{},"body":{"license.html":{}}}],["qualify",{"_index":1466,"title":{},"body":{"license.html":{}}}],["quality",{"_index":1617,"title":{},"body":{"license.html":{}}}],["reactiveformsmodule",{"_index":274,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["read",{"_index":701,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["readable",{"_index":1261,"title":{},"body":{"license.html":{}}}],["readily",{"_index":1537,"title":{},"body":{"license.html":{}}}],["reading",{"_index":1385,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":445,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["ready",{"_index":967,"title":{},"body":{"license.html":{}}}],["reason",{"_index":1548,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1280,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":1464,"title":{},"body":{"license.html":{}}}],["receive",{"_index":887,"title":{},"body":{"license.html":{}}}],["received",{"_index":912,"title":{},"body":{"license.html":{}}}],["receives",{"_index":1482,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":1556,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":1362,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":1546,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":909,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":1079,"title":{},"body":{"license.html":{}}}],["redistribute",{"_index":1659,"title":{},"body":{"license.html":{}}}],["referring",{"_index":884,"title":{},"body":{"license.html":{}}}],["refers",{"_index":997,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":1585,"title":{},"body":{"license.html":{}}}],["refresh_token_key",{"_index":437,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshexpiresin",{"_index":592,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshresult.accesstoken",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken(refreshtoken",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["regard",{"_index":1391,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":1235,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":1134,"title":{},"body":{"license.html":{}}}],["register",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["register(dto",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.html",{"_index":551,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":552,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":62,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["registerrequestdto",{"_index":187,"title":{"interfaces/RegisterRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/RegisterRequestDto.html":{},"coverage.html":{}}}],["registrationerror",{"_index":218,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["registrationguard",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry",{"_index":817,"title":{},"body":{"index.html":{}}}],["reinstated",{"_index":1448,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":1166,"title":{},"body":{"license.html":{}}}],["released",{"_index":878,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":1227,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":1434,"title":{},"body":{"license.html":{}}}],["reload",{"_index":770,"title":{},"body":{"index.html":{}}}],["relying",{"_index":1536,"title":{},"body":{"license.html":{}}}],["remain",{"_index":1301,"title":{},"body":{"license.html":{}}}],["remains",{"_index":874,"title":{},"body":{"license.html":{}}}],["remote",{"_index":725,"title":{},"body":{"index.html":{}}}],["removal",{"_index":1394,"title":{},"body":{"license.html":{}}}],["remove",{"_index":1393,"title":{},"body":{"license.html":{}}}],["removeitem",{"_index":448,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removeitem(key",{"_index":457,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["render",{"_index":988,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":1634,"title":{},"body":{"license.html":{}}}],["rendering",{"_index":753,"title":{},"body":{"index.html":{}}}],["repair",{"_index":1624,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1345,"title":{},"body":{"license.html":{}}}],["req",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.context.get(authenticate",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers.set",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('auth/authenticate",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('auth/refreshtoken",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.context.get(authenticate",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.dto",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{}}}],["request.dto.ts",{"_index":266,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["request.headers.set('authorization",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.password",{"_index":112,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.username",{"_index":111,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["require",{"_index":1128,"title":{},"body":{"license.html":{}}}],["required",{"_index":1352,"title":{},"body":{"license.html":{}}}],["requirement",{"_index":1228,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":1305,"title":{},"body":{"license.html":{}}}],["requires",{"_index":932,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":1013,"title":{},"body":{"license.html":{}}}],["reset",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["resetpassword",{"_index":96,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpassword(dto",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":64,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["resetpassworderror",{"_index":219,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordfailure",{"_index":160,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordform",{"_index":558,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordrequestdto",{"_index":191,"title":{"interfaces/ResetPasswordRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["resetpasswordsuccess",{"_index":140,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolved",{"_index":1333,"title":{},"body":{"license.html":{}}}],["resourcetype",{"_index":605,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["respect",{"_index":903,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":901,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1484,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":978,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":1194,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":1432,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":1428,"title":{},"body":{"license.html":{}}}],["result",{"_index":382,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"license.html":{}}}],["resulting",{"_index":1016,"title":{},"body":{"license.html":{}}}],["results",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":1366,"title":{},"body":{"license.html":{}}}],["return",{"_index":117,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{}}}],["reviewing",{"_index":1645,"title":{},"body":{"license.html":{}}}],["revised",{"_index":1593,"title":{},"body":{"license.html":{}}}],["right",{"_index":1360,"title":{},"body":{"license.html":{}}}],["rights",{"_index":893,"title":{},"body":{"license.html":{}}}],["risk",{"_index":1616,"title":{},"body":{"license.html":{}}}],["role",{"_index":599,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["roleid",{"_index":608,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["rom",{"_index":1369,"title":{},"body":{"license.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["root'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["router",{"_index":296,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/auth",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":278,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["routerstatesnapshot",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routing",{"_index":755,"title":{},"body":{"index.html":{}}}],["royalty",{"_index":1499,"title":{},"body":{"license.html":{}}}],["rules",{"_index":1379,"title":{},"body":{"license.html":{}}}],["run",{"_index":763,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":799,"title":{},"body":{"index.html":{},"license.html":{}}}],["runs",{"_index":1109,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":152,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["safest",{"_index":1661,"title":{},"body":{"license.html":{}}}],["sake",{"_index":931,"title":{},"body":{"license.html":{}}}],["sale",{"_index":1509,"title":{},"body":{"license.html":{}}}],["same",{"_index":910,"title":{},"body":{"license.html":{}}}],["satisfy",{"_index":1304,"title":{},"body":{"license.html":{}}}],["saverefreshtoken",{"_index":422,"title":{},"body":{"injectables/JwtService.html":{}}}],["saverefreshtoken(token",{"_index":431,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken",{"_index":423,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":433,"title":{},"body":{"injectables/JwtService.html":{}}}],["saying",{"_index":1298,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":774,"title":{},"body":{"index.html":{}}}],["school",{"_index":1686,"title":{},"body":{"license.html":{}}}],["scope",{"_index":1560,"title":{},"body":{"license.html":{}}}],["scripts",{"_index":1115,"title":{},"body":{"license.html":{}}}],["secondarily",{"_index":1026,"title":{},"body":{"license.html":{}}}],["secret",{"_index":560,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["section",{"_index":1171,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1258,"title":{},"body":{"license.html":{}}}],["securepasswordregex",{"_index":569,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":826,"title":{},"body":{"index.html":{},"license.html":{}}}],["select(issuccess",{"_index":369,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectauthorizationerror",{"_index":511,"title":{},"body":{"components/LoginComponent.html":{}}}],["select(selectcurrentuser",{"_index":351,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectforgotpassworderror",{"_index":355,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["select(selectresetpassworderror",{"_index":571,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["selectauth",{"_index":645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectauthorizationerror",{"_index":509,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrentuser",{"_index":327,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectforgotpassworderror",{"_index":328,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["selectresetpassworderror",{"_index":568,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":1525,"title":{},"body":{"license.html":{}}}],["selling",{"_index":1508,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":1000,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1314,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1243,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1239,"title":{},"body":{"license.html":{}}}],["serve",{"_index":765,"title":{},"body":{"index.html":{}}}],["served",{"_index":831,"title":{},"body":{"index.html":{}}}],["server",{"_index":540,"title":{},"body":{"injectables/MemoryStorage.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["serverconfig",{"_index":624,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serves",{"_index":1100,"title":{},"body":{"license.html":{}}}],["service",{"_index":1371,"title":{},"body":{"license.html":{}}}],["services/api/auth.api.service",{"_index":153,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["services/token",{"_index":154,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["servicing",{"_index":1623,"title":{},"body":{"license.html":{}}}],["sessionstorage",{"_index":586,"title":{"injectables/SessionStorage.html":{}},"body":{"injectables/SessionStorage.html":{},"coverage.html":{}}}],["set",{"_index":255,"title":{},"body":{"interfaces/AuthState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setcurrentuser",{"_index":231,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setitem",{"_index":449,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setitem(key",{"_index":459,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["settoken",{"_index":232,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["severity",{"_index":360,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["shall",{"_index":1177,"title":{},"body":{"license.html":{}}}],["share",{"_index":868,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1123,"title":{},"body":{"license.html":{}}}],["short",{"_index":1675,"title":{},"body":{"license.html":{}}}],["show",{"_index":913,"title":{},"body":{"license.html":{}}}],["side",{"_index":752,"title":{},"body":{"index.html":{}}}],["sign",{"_index":1687,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["significant",{"_index":1346,"title":{},"body":{"license.html":{}}}],["signout",{"_index":97,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":1192,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":1581,"title":{},"body":{"license.html":{}}}],["single",{"_index":1552,"title":{},"body":{"license.html":{}}}],["software",{"_index":846,"title":{},"body":{"license.html":{}}}],["sold",{"_index":1327,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1154,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1168,"title":{},"body":{"license.html":{}}}],["solution",{"_index":728,"title":{},"body":{"index.html":{}}}],["somewhere",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"index.html":{},"license.html":{}}}],["spare",{"_index":1275,"title":{},"body":{"license.html":{}}}],["speak",{"_index":883,"title":{},"body":{"license.html":{}}}],["special",{"_index":982,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1107,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":1127,"title":{},"body":{"license.html":{}}}],["specified",{"_index":1083,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":1600,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1604,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":1594,"title":{},"body":{"license.html":{}}}],["src/.../api.ts",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.server.ts",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":720,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.state.ts",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.actions.ts",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.reducer.ts",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.selectors.ts",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.production.ts",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.enum.ts",{"_index":694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../regex.constants.ts",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../registration.guard.ts",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resource",{"_index":695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state",{"_index":697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../token",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":620,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":625,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/domain/dto/requests/authenticate",{"_index":265,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/forgot",{"_index":392,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/register",{"_index":553,"title":{},"body":{"interfaces/RegisterRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/reset",{"_index":585,"title":{},"body":{"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/token.dto.ts",{"_index":593,"title":{},"body":{"interfaces/TokenDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/user.dto.ts",{"_index":612,"title":{},"body":{"interfaces/UserDto.html":{},"coverage.html":{}}}],["src/app/core/domain/models/enums/permission.enum.ts",{"_index":699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/resource",{"_index":704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/state",{"_index":717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/token.entity.ts",{"_index":589,"title":{},"body":{"interfaces/Token.html":{},"coverage.html":{}}}],["src/app/core/domain/models/user.entity.ts",{"_index":594,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/guards/registration.guard.ts",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/api/api.ts",{"_index":638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/api/auth.api.service.ts",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/api/auth.api.service.ts:14",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:17",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:25",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:33",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:37",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:45",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:53",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:61",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/local",{"_index":444,"title":{},"body":{"injectables/LocalStorage.html":{},"coverage.html":{}}}],["src/app/core/services/memory",{"_index":528,"title":{},"body":{"injectables/MemoryStorage.html":{},"coverage.html":{}}}],["src/app/core/services/session",{"_index":587,"title":{},"body":{"injectables/SessionStorage.html":{},"coverage.html":{}}}],["src/app/core/services/token",{"_index":416,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/app.state.ts",{"_index":74,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.actions.ts",{"_index":642,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.effects.ts",{"_index":91,"title":{},"body":{"injectables/AuthEffects.html":{},"coverage.html":{}}}],["src/app/core/state/auth/auth.effects.ts:103",{"_index":148,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:23",{"_index":102,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:30",{"_index":137,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:42",{"_index":122,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:63",{"_index":134,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:77",{"_index":142,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:91",{"_index":128,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.reducer.ts",{"_index":214,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.selectors.ts",{"_index":644,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/utils/regex.constants.ts",{"_index":646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/auth/auth.component.ts",{"_index":85,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/forgot",{"_index":267,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts",{"_index":411,"title":{},"body":{"components/InvitationComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/login/login.component.ts",{"_index":481,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/login/login.component.ts:113",{"_index":494,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:122",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:128",{"_index":492,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:132",{"_index":493,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:136",{"_index":491,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:52",{"_index":490,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:63",{"_index":502,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:68",{"_index":499,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:69",{"_index":500,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:71",{"_index":504,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:72",{"_index":498,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:73",{"_index":503,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:75",{"_index":495,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:85",{"_index":497,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts",{"_index":550,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/reset",{"_index":556,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts",{"_index":394,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:17",{"_index":401,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:20",{"_index":406,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:22",{"_index":403,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:26",{"_index":402,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:30",{"_index":405,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/environments/environment.development.ts",{"_index":651,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.production.ts",{"_index":652,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":654,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":751,"title":{},"body":{"index.html":{}}}],["stand",{"_index":966,"title":{},"body":{"license.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["standard",{"_index":833,"title":{},"body":{"index.html":{},"license.html":{}}}],["standards",{"_index":1080,"title":{},"body":{"license.html":{}}}],["start",{"_index":1662,"title":{},"body":{"license.html":{}}}],["started",{"_index":723,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":1676,"title":{},"body":{"license.html":{}}}],["state",{"_index":241,"title":{},"body":{"interfaces/AuthState.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["state.authstate",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.credentials",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.error",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.forgotpassworderror",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.resetpassworderror",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.status",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.token",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.user",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stated",{"_index":1139,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1436,"title":{},"body":{"license.html":{}}}],["statements",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":976,"title":{},"body":{"license.html":{}}}],["statestatus",{"_index":226,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/enumerations.html":{}}}],["statestatus.error",{"_index":251,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.loading",{"_index":242,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.pending",{"_index":236,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.success",{"_index":248,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["stating",{"_index":1215,"title":{},"body":{"license.html":{}}}],["status",{"_index":220,"title":{},"body":{"interfaces/AuthState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["status.enum",{"_index":234,"title":{},"body":{"interfaces/AuthState.html":{}}}],["status.enum.ts",{"_index":698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["steps",{"_index":918,"title":{},"body":{"license.html":{}}}],["storage",{"_index":427,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["storage.service",{"_index":155,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts",{"_index":417,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:10",{"_index":426,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:12",{"_index":530,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:14",{"_index":428,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:16",{"_index":531,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:19",{"_index":434,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:20",{"_index":462,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:24",{"_index":430,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:26",{"_index":532,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:28",{"_index":432,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:30",{"_index":533,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:32",{"_index":456,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:33",{"_index":429,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:36",{"_index":458,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:40",{"_index":460,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:6",{"_index":535,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:8",{"_index":536,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:9",{"_index":452,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["store",{"_index":295,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["store.dispatch(settoken(refreshresult",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.dispatch(signout",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":780,"title":{},"body":{"index.html":{}}}],["string",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subdividing",{"_index":1489,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1483,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":1521,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":1170,"title":{},"body":{"license.html":{}}}],["subprograms",{"_index":1126,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":1690,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":380,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["subscribe((data",{"_index":346,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["subscribe((error",{"_index":356,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((issuccess",{"_index":370,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((user",{"_index":352,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe(data",{"_index":510,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscription",{"_index":305,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subsection",{"_index":1286,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1341,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":964,"title":{},"body":{"license.html":{}}}],["success",{"_index":246,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["successsubscription",{"_index":285,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":904,"title":{},"body":{"license.html":{}}}],["sue",{"_index":1534,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":1353,"title":{},"body":{"license.html":{}}}],["summary",{"_index":361,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["supplement",{"_index":1386,"title":{},"body":{"license.html":{}}}],["support",{"_index":1223,"title":{},"body":{"license.html":{}}}],["supports",{"_index":1295,"title":{},"body":{"license.html":{}}}],["sure",{"_index":822,"title":{},"body":{"index.html":{},"license.html":{}}}],["surrender",{"_index":898,"title":{},"body":{"license.html":{}}}],["survive",{"_index":1435,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":1637,"title":{},"body":{"license.html":{}}}],["switchmap",{"_index":124,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["switchmap((request",{"_index":108,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["system",{"_index":1090,"title":{},"body":{"license.html":{}}}],["systematic",{"_index":951,"title":{},"body":{"license.html":{}}}],["t",{"_index":789,"title":{},"body":{"index.html":{}}}],["table",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":865,"title":{},"body":{"license.html":{}}}],["tangible",{"_index":1320,"title":{},"body":{"license.html":{}}}],["tap",{"_index":144,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["team",{"_index":716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["teamurl",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technological",{"_index":1180,"title":{},"body":{"license.html":{}}}],["technologies",{"_index":760,"title":{},"body":{"index.html":{}}}],["tells",{"_index":1061,"title":{},"body":{"license.html":{}}}],["temp",{"_index":542,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["term",{"_index":1137,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":1674,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":1442,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":1465,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":1451,"title":{},"body":{"license.html":{}}}],["termination",{"_index":1439,"title":{},"body":{"license.html":{}}}],["terms",{"_index":914,"title":{},"body":{"license.html":{}}}],["test",{"_index":802,"title":{},"body":{"index.html":{}}}],["testing",{"_index":811,"title":{},"body":{"index.html":{}}}],["tests",{"_index":801,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":899,"title":{},"body":{"license.html":{}}}],["things",{"_index":891,"title":{},"body":{"license.html":{}}}],["third",{"_index":1207,"title":{},"body":{"license.html":{}}}],["this.actions$.pipe",{"_index":106,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice",{"_index":109,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{}}}],["this.authservice.forgotpassword(request.username).pipe",{"_index":130,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.isusernametaken(username).subscribe",{"_index":518,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.me().pipe",{"_index":125,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.resetpassword(request).pipe",{"_index":139,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.checkusername(data",{"_index":347,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.currentusererrorsubscription?.unsubscribe",{"_index":407,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data",{"_index":544,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.data[key",{"_index":545,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.errorsubscription",{"_index":354,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errorsubscription?.unsubscribe",{"_index":373,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.forgotpasswordform.get('username')?.value",{"_index":378,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formbuilder.group",{"_index":307,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.http.get(api.authurl",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isusernametaken",{"_index":383,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.jwtservice.clear",{"_index":145,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.saverefreshtoken(token.refreshtoken",{"_index":116,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.savetoken(token.accesstoken",{"_index":115,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.loginform.get('password')?.value",{"_index":515,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":514,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.messageservice.add",{"_index":359,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.resetpasswordform.get('password')?.value",{"_index":579,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":576,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/home",{"_index":353,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.secret",{"_index":577,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.storage",{"_index":473,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.clear",{"_index":476,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(key",{"_index":477,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(refresh_token_key",{"_index":443,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.getitem(token_key",{"_index":441,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.key(index",{"_index":478,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.length",{"_index":475,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(key",{"_index":479,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(refresh_token_key",{"_index":439,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.removeitem(token_key",{"_index":438,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(key",{"_index":480,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.setitem(refresh_token_key",{"_index":442,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(token_key",{"_index":440,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.store",{"_index":350,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch",{"_index":377,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(loadcurrentuser",{"_index":348,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(isloadingauthstate",{"_index":311,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(selectcurrentuser",{"_index":404,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.successsubscription",{"_index":368,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.successsubscription?.unsubscribe",{"_index":375,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant",{"_index":362,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant('auth.reset",{"_index":572,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.usernamechecksubscription",{"_index":379,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.usernamechecksubscription?.unsubscribe",{"_index":376,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.usersubscription",{"_index":349,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.usersubscription?.unsubscribe",{"_index":374,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["those",{"_index":962,"title":{},"body":{"license.html":{}}}],["though",{"_index":1389,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":973,"title":{},"body":{"license.html":{}}}],["three",{"_index":1273,"title":{},"body":{"license.html":{}}}],["through",{"_index":1047,"title":{},"body":{"license.html":{}}}],["throwerror",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thus",{"_index":1161,"title":{},"body":{"license.html":{}}}],["time",{"_index":1461,"title":{},"body":{"license.html":{}}}],["toastmodule",{"_index":279,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["todo",{"_index":537,"title":{},"body":{"injectables/MemoryStorage.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":221,"title":{"interfaces/Token.html":{}},"body":{"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_key",{"_index":436,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokendto",{"_index":196,"title":{"interfaces/TokenDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/TokenDto.html":{},"coverage.html":{}}}],["tools",{"_index":1118,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1418,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1417,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1419,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":1359,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1049,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":1361,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":1487,"title":{},"body":{"license.html":{}}}],["translate",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["translate.addlangs(['en",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('en",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["translateloader",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatemodule",{"_index":275,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["translatemodule.forroot",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateservice",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["transmission",{"_index":1308,"title":{},"body":{"license.html":{}}}],["treated",{"_index":1388,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1187,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["troubleshooting",{"_index":742,"title":{},"body":{"index.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":917,"title":{},"body":{"license.html":{}}}],["type",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":607,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["type.enum.ts",{"_index":696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typical",{"_index":1335,"title":{},"body":{"license.html":{}}}],["ui",{"_index":733,"title":{},"body":{"index.html":{}}}],["unacceptable",{"_index":959,"title":{},"body":{"license.html":{}}}],["unautherrorinterceptor",{"_index":637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1004,"title":{},"body":{"license.html":{}}}],["unit",{"_index":800,"title":{},"body":{"index.html":{}}}],["unless",{"_index":1344,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":1143,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":1021,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":1174,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":1384,"title":{},"body":{"license.html":{}}}],["until",{"_index":1450,"title":{},"body":{"license.html":{}}}],["update",{"_index":702,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["updatedat",{"_index":600,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["updates",{"_index":1372,"title":{},"body":{"license.html":{}}}],["url",{"_index":754,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":776,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":761,"title":{},"body":{"index.html":{},"license.html":{}}}],["usefactory",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useful",{"_index":1668,"title":{},"body":{"license.html":{}}}],["user",{"_index":222,"title":{"interfaces/User.html":{}},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["userdto",{"_index":200,"title":{"interfaces/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["userid",{"_index":601,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username",{"_index":110,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username/taken",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernamecheckerror",{"_index":223,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["usernamechecksubscription",{"_index":286,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["usernameinput",{"_index":287,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["users",{"_index":875,"title":{},"body":{"license.html":{}}}],["usersubscription",{"_index":288,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uses",{"_index":1338,"title":{},"body":{"license.html":{}}}],["using",{"_index":786,"title":{},"body":{"index.html":{},"license.html":{}}}],["utilizes",{"_index":748,"title":{},"body":{"index.html":{}}}],["v1/auth",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/device",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/files",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/invitation",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/members",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/organization",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/platform",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/project",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/team",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/user",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":1272,"title":{},"body":{"license.html":{}}}],["validators",{"_index":321,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.minlength(3",{"_index":309,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["validators.minlength(8",{"_index":501,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.pattern(securepasswordregex",{"_index":565,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":308,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["value",{"_index":104,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":610,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["var",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["varaibles",{"_index":835,"title":{},"body":{"index.html":{}}}],["variable",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":823,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":854,"title":{},"body":{"license.html":{}}}],["vercel/analytics",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["vercel/speed",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":747,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":872,"title":{},"body":{"license.html":{}}}],["via",{"_index":804,"title":{},"body":{"index.html":{}}}],["view",{"_index":1064,"title":{},"body":{"license.html":{}}}],["viewchild",{"_index":320,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["viewchild('username",{"_index":318,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["violates",{"_index":1378,"title":{},"body":{"license.html":{}}}],["violation",{"_index":1446,"title":{},"body":{"license.html":{}}}],["visible",{"_index":1058,"title":{},"body":{"license.html":{}}}],["void",{"_index":300,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["volume",{"_index":1249,"title":{},"body":{"license.html":{}}}],["w",{"_index":1678,"title":{},"body":{"license.html":{}}}],["waive",{"_index":1196,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":1650,"title":{},"body":{"license.html":{}}}],["want",{"_index":888,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":1062,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":929,"title":{},"body":{"license.html":{}}}],["way",{"_index":879,"title":{},"body":{"license.html":{}}}],["ways",{"_index":1262,"title":{},"body":{"license.html":{}}}],["welcome",{"_index":408,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["well",{"_index":1040,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":1491,"title":{},"body":{"license.html":{}}}],["whether",{"_index":905,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1094,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1316,"title":{},"body":{"license.html":{}}}],["widely",{"_index":1088,"title":{},"body":{"license.html":{}}}],["window",{"_index":1106,"title":{},"body":{"license.html":{}}}],["window.localstorage",{"_index":474,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["window.sessionstorage",{"_index":588,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["window?.localstorage",{"_index":472,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["wipo",{"_index":1186,"title":{},"body":{"license.html":{}}}],["wish",{"_index":836,"title":{},"body":{"index.html":{},"license.html":{}}}],["withcomponentinputbinding",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":1429,"title":{},"body":{"license.html":{}}}],["without",{"_index":1024,"title":{},"body":{"license.html":{}}}],["withpreloading(preloadallmodules",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":877,"title":{},"body":{"license.html":{}}}],["work's",{"_index":1117,"title":{},"body":{"license.html":{}}}],["working",{"_index":1089,"title":{},"body":{"license.html":{}}}],["works",{"_index":415,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"license.html":{}}}],["worldwide",{"_index":1524,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1611,"title":{},"body":{"license.html":{}}}],["written",{"_index":1271,"title":{},"body":{"license.html":{}}}],["years",{"_index":1274,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":1541,"title":{},"body":{"license.html":{}}}],["z])(?=.*[${passwordspecialchars}])(?=\\\\s+$).{${passwordminlength",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*[a",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":690,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  constructor(private translate: TranslateService) {\n    translate.setDefaultLang('en');\n    translate.addLangs(['en']);\n    translate.use('en');\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/app.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authState:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthEffects } from './auth/auth.effects';\nimport { AuthState, authReducer } from './auth/auth.reducer';\n\nexport interface AppState {\n  authState: AuthState;\n}\n\nexport const appEfects = [AuthEffects];\nexport const appStore = {\n  authState: authReducer,\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n})\nexport class AuthComponent {}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate$\n                            \n                            \n                                authenticationSuccess$\n                            \n                            \n                                forgotPassword$\n                            \n                            \n                                loadCurrentUser$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signOut$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, jwtService: JwtService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/auth/auth.effects.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error })))\n          )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error })))\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error })))\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error })))\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error })))\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        })\n      ),\n    { dispatch: false }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:103\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../../services/api/auth.api.service';\nimport { JwtService } from '../../services/token-storage.service';\nimport {\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  signOut,\n} from './auth.actions';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private actions$: Actions\n  ) {}\n\n  loadCurrentUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error })))\n        )\n      )\n    )\n  );\n\n  authenticate$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error })))\n          )\n      )\n    )\n  );\n\n  forgotPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error })))\n        )\n      )\n    )\n  );\n\n  resetPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error })))\n        )\n      )\n    )\n  );\n\n  authenticationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error })))\n        )\n      )\n    )\n  );\n\n  signOut$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        })\n      ),\n    { dispatch: false }\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/auth.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                me\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/auth.api.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: AuthenticateRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            AuthenticateRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n            \n                \nisUsernameTaken(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(dto: ResetPasswordRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ResetPasswordRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { api } from './api';\nimport { TokenDto } from '../../domain/dto/token.dto';\nimport { Observable } from 'rxjs';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { ResetPasswordRequestDto } from '../../domain/dto/requests/reset-password-request.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  refreshToken(refreshToken: string): Observable {\n    return this.http.post(\n      api.authUrl + '/refreshToken',\n      { refreshToken: refreshToken },\n      api.noAuthOptions\n    );\n  }\n\n  authenticate(request: AuthenticateRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/authenticate',\n      request,\n      api.noAuthOptions\n    );\n  }\n\n  me(): Observable {\n    return this.http.get(api.authUrl + '/me', api.authOptions);\n  }\n\n  isUsernameTaken(username: string): Observable {\n    const params = new HttpParams().set('username', username);\n    return this.http.get(api.authUrl + '/username/taken', {\n      ...api.noAuthOptions,\n      params,\n    });\n  }\n\n  forgotPassword(username: string): Observable {\n    return this.http.post(\n      api.authUrl + '/forgot-password',\n      { username: username },\n      api.noAuthOptions\n    );\n  }\n\n  resetPassword(dto: ResetPasswordRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/reset-password',\n      dto,\n      api.noAuthOptions\n    );\n  }\n\n  register(dto: RegisterRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/register',\n      dto,\n      api.noAuthOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            credentials\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            forgotPasswordError\n                                        \n                                \n                                \n                                        \n                                            isUsernameAvialable\n                                        \n                                \n                                \n                                        \n                                            registrationError\n                                        \n                                \n                                \n                                        \n                                            resetPasswordError\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            usernameCheckError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:         AuthenticateRequestDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticateRequestDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forgotPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUsernameAvialable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isUsernameAvialable:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         Token | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Token | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usernameCheckError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usernameCheckError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { Token } from '../../domain/models/token.entity';\nimport { User } from '../../domain/models/user.entity';\nimport {\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  setCurrentUser,\n  setToken,\n  signOut,\n} from './auth.actions';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\n\nexport interface AuthState {\n  user: User | null;\n  error: any | null;\n  forgotPasswordError: null | any;\n  resetPasswordError: null | any;\n  registrationError: null | any;\n  usernameCheckError: null | any;\n  isUsernameAvialable: boolean | null,\n  token: Token | null;\n  credentials: AuthenticateRequestDto | null;\n  status: StateStatus;\n}\n\nexport const initialState: AuthState = {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n};\n\nexport const authReducer = createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, {error}) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n   // Handle Reset Password\n   on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, {error}) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticateRequestDto.html":{"url":"interfaces/AuthenticateRequestDto.html","title":"interface - AuthenticateRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticateRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/authenticate-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticateRequestDto {\n    username: string,\n    password: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputTextModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                forgotPasswordForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AppState } from '../../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router, RouterModule } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectForgotPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  forgotPassword,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputTextModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n})\nexport class ForgotPasswordComponent {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService\n  ) {}\n\n  forgotPasswordForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectForgotPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 404) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.user_does_not_exist'\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.error_description'\n              ),\n            });\n          }\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.forgot-password.success'\n            ),\n            detail: this.translateService.instant(\n              'auth.forgot-password.check_your_email'\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  forgotPassword() {\n    this.store.dispatch(\n      forgotPassword({\n        username: this.forgotPasswordForm.get('username')?.value!,\n      })\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.forgot-password.welcome_message\" | translate }}\n  \n  {{\n    \"auth.forgot-password.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken == null) {\n      \n      } @else if (isUsernameTaken) {\n      \n      } @else {\n      \n      }\n      \n    \n    {{ \"auth.forgot-password.username_is_required\" | translate }}\n    {{ \"auth.forgot-password.username_length\" | translate }}\n\n    \n      {{ \"auth.forgot-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.forgot-password.welcome_message\" | translate }}    {{    \"auth.forgot-password.welcome_description\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken == null) {            } @else if (isUsernameTaken) {            } @else {            }              {{ \"auth.forgot-password.username_is_required\" | translate }}    {{ \"auth.forgot-password.username_length\" | translate }}          {{ \"auth.forgot-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForgotPasswordRequestDto.html":{"url":"interfaces/ForgotPasswordRequestDto.html","title":"interface - ForgotPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForgotPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForgotPasswordRequestDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                    Private\n                                    Optional\n                                currentUserErrorSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        currentUserErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { AppState } from '../../core/state/app.state';\nimport { loadCurrentUser, signOut } from '../../core/state/auth/auth.actions';\nimport { selectCurrentUser } from '../../core/state/auth/auth.selectors';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent {\n  constructor(private store: Store, private router: Router) {}\n\n  private currentUserErrorSubscription?: Subscription;\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n  }\n\n  ngOnDestroy() {\n    this.currentUserErrorSubscription?.unsubscribe();\n  }\n\n  currentUser = this.store.select(selectCurrentUser);\n}\n\n    \n\n    \n        Welcome: {{(currentUser | async)?.firstName}} {{(currentUser | async)?.lastName}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Welcome: {{(currentUser | async)?.firstName}} {{(currentUser | async)?.lastName}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitationComponent.html":{"url":"components/InvitationComponent.html","title":"component - InvitationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/invitation/invitation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-invitation\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./invitation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./invitation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-invitation',\n  standalone: true,\n  imports: [],\n  templateUrl: './invitation.component.html',\n  styleUrl: './invitation.component.scss'\n})\nexport class InvitationComponent {\n\n}\n\n    \n\n    \n        invitation works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'invitation works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/token-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getRefreshToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveRefreshToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/token-storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveRefreshToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { LocalStorage } from \"./local-storage.service\";\n\nconst TOKEN_KEY = 'auth-token';\nconst REFRESH_TOKEN_KEY = 'auth-refreshtoken';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class JwtService {\n\n  constructor(private storage: LocalStorage) {}\n\n  public clear(): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n  }\n\n  public saveToken(token: string): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return this.storage.getItem(TOKEN_KEY);\n  }\n\n  public saveRefreshToken(token: string): void {\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n   this.storage.setItem(REFRESH_TOKEN_KEY, token);\n  }\n\n  public getRefreshToken(): string | null {\n    return this.storage.getItem(REFRESH_TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorage.html":{"url":"injectables/LocalStorage.html","title":"injectable - LocalStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/local-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.localStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                getApplicationName\n                            \n                            \n                                isRegistrationEnabled\n                            \n                            \n                                login\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApplicationName\n                        \n                    \n                \n            \n            \n                \ngetApplicationName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRegistrationEnabled\n                        \n                    \n                \n            \n            \n                \nisRegistrationEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { Subscription, debounceTime, distinctUntilChanged, fromEvent, map } from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  authenticate,\n  loadCurrentUser\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectAuthorizationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent {\n  @ViewChild('username') usernameInput!: ElementRef;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  loginForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe(data => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAuthorizationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.login.authorization_error'\n            ),\n            detail: this.translateService.instant(\n              'auth.login.wrong_username_or_password'\n            ),\n          });\n        }\n      });\n  }\n\n  login() {\n    this.store.dispatch(\n      authenticate({\n        username: this.loginForm.get('username')?.value!,\n        password: this.loginForm.get('password')?.value!,\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  getApplicationName() {\n    return environment.appName;\n  }\n\n  isRegistrationEnabled() {\n    return environment.enableRegistration;\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService.isUsernameTaken(username).subscribe({\n      next: (result) => {\n        this.isUsernameTaken = result;\n      },\n      error: () => {\n        this.isUsernameTaken = null;\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},\n  \n  {{\n    \"auth.login.sign_in_to_continue\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken == null) {\n        \n        } @else if (isUsernameTaken) {\n        \n        } @else {\n        \n        }\n      \n    \n    {{ \"auth.login.username_is_required\" | translate }}\n    {{ \"auth.login.username_length\" | translate }}\n\n    {{ \"auth.login.password_label\" | translate }}\n    \n    {{ \"auth.login.password_is_required\" | translate }}\n    {{ \"auth.login.password_length\" | translate }}\n\n    \n      {{ \"auth.login.forgot_password\" | translate }}\n      {{ \"auth.login.register\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},    {{    \"auth.login.sign_in_to_continue\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken == null) {                } @else if (isUsernameTaken) {                } @else {                }              {{ \"auth.login.username_is_required\" | translate }}    {{ \"auth.login.username_length\" | translate }}    {{ \"auth.login.password_label\" | translate }}        {{ \"auth.login.password_is_required\" | translate }}    {{ \"auth.login.password_length\" | translate }}          {{ \"auth.login.forgot_password\" | translate }}      {{ \"auth.login.register\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/memory-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/memory-storage.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/memory-storage.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n//TODO: Implement better server storage alongside server temp memory storage\n@Injectable()\nexport class MemoryStorage implements Storage {\n  private data: { [key: string]: string } = {};\n\n  get length(): number {\n    return Object.keys(this.data).length;\n  }\n\n  clear(): void {\n    this.data = {};\n  }\n\n  getItem(key: string): string | null {\n    return key in this.data ? this.data[key] : null;\n  }\n\n  key(index: number): string | null {\n    const keys = Object.keys(this.data);\n\n    return index >= 0 && keys.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss'\n})\nexport class RegisterComponent {\n\n}\n\n    \n\n    \n        register works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'register works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequestDto.html":{"url":"interfaces/RegisterRequestDto.html","title":"interface - RegisterRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/register-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterRequestDto {\n  username: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                secret\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        secret\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:50\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    password: ['', [Validators.required, Validators.minLength(8), Validators.pattern(securePasswordRegex)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:68\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { AppState } from '../../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectResetPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { Subscription } from 'rxjs';\nimport {\n  loadCurrentUser,\n  resetPassword,\n} from '../../../../core/state/auth/auth.actions';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss',\n})\nexport class ResetPasswordComponent {\n  @Input()\n  private secret?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService\n  ) {}\n\n  resetPasswordForm = this.formBuilder.group({\n    password: ['', [Validators.required, Validators.minLength(8), Validators.pattern(securePasswordRegex)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectResetPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('auth.reset-password.error'),\n            detail: this.translateService.instant(\n              'auth.reset-password.wrong_hash'\n            ),\n          });\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.reset-password.success'\n            ),\n            detail: this.translateService.instant(\n              'auth.reset-password.success_message'\n            ),\n          });\n          this.router.navigate(['/auth']);\n        }\n      });\n  }\n\n  resetPassword() {\n    if (this.secret) {\n      const newPassword = this.resetPasswordForm.get('password')?.value!;\n      this.store.dispatch(\n        resetPassword({ newPassword: newPassword, hash: this.secret })\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.reset-password.welcome_message\" | translate }}\n  \n\n\n  \n    {{ \"auth.reset-password.new_password_label\" | translate }}\n    \n    {{ \"auth.reset-password.password_is_required\" | translate }}\n    {{ \"auth.reset-password.password_length\" | translate }}\n    {{ \"auth.reset-password.password_not_strong\" | translate }}\n\n    \n      {{ \"auth.reset-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.reset-password.welcome_message\" | translate }}        {{ \"auth.reset-password.new_password_label\" | translate }}        {{ \"auth.reset-password.password_is_required\" | translate }}    {{ \"auth.reset-password.password_length\" | translate }}    {{ \"auth.reset-password.password_not_strong\" | translate }}          {{ \"auth.reset-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordRequestDto.html":{"url":"interfaces/ResetPasswordRequestDto.html","title":"interface - ResetPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/reset-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPasswordRequestDto {\n    newPassword: string,\n    hash: string, \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionStorage.html":{"url":"injectables/SessionStorage.html","title":"injectable - SessionStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/session-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/session-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.sessionStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/token.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n    accessToken: string;\n    refreshToken: string;\n    expiresIn: 0;\n    refreshExpiresIn: 0;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenDto.html":{"url":"interfaces/TokenDto.html","title":"interface - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenDto {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: 0;\n  refreshExpiresIn: 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: {\n      roleId: string;\n      name: string;\n      permissions: [\n        {\n          type: ResourceType;\n          values: Permission;\n        }\n      ];\n      internal: boolean;\n    };\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from '../models/enums/permission.enum';\nimport { ResourceType } from '../models/enums/resource-type.enum';\n\nexport interface UserDto {\n  userId: string;\n  username: string;\n  lastLoginTime: Date;\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileIconUrl: string | null;\n  role: {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission;\n      }\n    ];\n    internal: boolean;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n  activated: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/authenticate-request.dto.ts\n            \n            interface\n            AuthenticateRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n            \n            interface\n            ForgotPasswordRequestDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/register-request.dto.ts\n            \n            interface\n            RegisterRequestDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/reset-password-request.dto.ts\n            \n            interface\n            ResetPasswordRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/token.dto.ts\n            \n            interface\n            TokenDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/user.dto.ts\n            \n            interface\n            UserDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/token.entity.ts\n            \n            interface\n            Token\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/user.entity.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/guards/registration.guard.ts\n            \n            variable\n            registrationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            variable\n            unauthErrorInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/api.ts\n            \n            variable\n            api\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/api.ts\n            \n            variable\n            AUTHENTICATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/auth.api.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage.service.ts\n            \n            injectable\n            LocalStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/memory-storage.service.ts\n            \n            injectable\n            MemoryStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/session-storage.service.ts\n            \n            injectable\n            SessionStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            injectable\n            JwtService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            variable\n            REFRESH_TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            variable\n            TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            variable\n            appEfects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            variable\n            appStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticationFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticationSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPasswordFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPasswordSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUserFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUserSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPasswordFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPasswordSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            setCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            setToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            signOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.effects.ts\n            \n            injectable\n            AuthEffects\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            interface\n            AuthState\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            variable\n            authReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            isLoadingAuthState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            isSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectAuthorizationError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectForgotPasswordError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectResetPasswordError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            passwordMinLength\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            passwordSpecialChars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            securePasswordRegex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/invitation/invitation.component.ts\n            \n            component\n            InvitationComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.production.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            - : ^0.0.1\n        \n            @angular/animations : ^17.1.0\n        \n            @angular/common : ^17.1.0\n        \n            @angular/compiler : ^17.1.0\n        \n            @angular/core : ^17.1.0\n        \n            @angular/forms : ^17.1.0\n        \n            @angular/platform-browser : ^17.1.0\n        \n            @angular/platform-browser-dynamic : ^17.1.0\n        \n            @angular/platform-server : ^17.1.0\n        \n            @angular/router : ^17.1.0\n        \n            @angular/ssr : ^17.1.3\n        \n            @ngrx/effects : ^17.1.0\n        \n            @ngrx/store : ^17.1.0\n        \n            @ngrx/store-devtools : ^17.1.0\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @vercel/analytics : ^1.1.3\n        \n            @vercel/speed-insights : ^1.0.9\n        \n            express : ^4.18.2\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^17.6.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            ResourceType   (src/.../resource-type.enum.ts)\n                        \n                        \n                            StateStatus   (src/.../state-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/domain/models/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/resource-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 COMMENT\n                            \n                        \n                        \n                            \n                                 DEBUG_FILE\n                            \n                        \n                        \n                            \n                                 DEVICE_STATE\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                 LOG_ENTRY\n                            \n                        \n                        \n                            \n                                 LOG_SESSION\n                            \n                        \n                        \n                            \n                                 LOG_SOURCE\n                            \n                        \n                        \n                            \n                                 ORGANIZATION\n                            \n                        \n                        \n                            \n                                 PLATFORM\n                            \n                        \n                        \n                            \n                                 PROJECT\n                            \n                        \n                        \n                            \n                                 PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                 TEAM\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                 PERMISSION\n                            \n                        \n                        \n                            \n                                 INVITATION\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/state-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StateStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : loading\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\nLogHub - Remote Centralized Logging Solution (CMS)\nThis project is a Angular CMS application that provides an UI for LogHub (remote centralized logging solution). It allows you to collect and manage logs from distributed applications in a centralized location, enhancing troubleshooting and monitoring capabilities.\nThis project was generated with Angular CLI version 17.1.3.\nThis project utilizes next features of angular:\n\nAngular 17\nSSR (Server Side Rendering)\nStandalone Components\nRouter (For url routing)\nHTTP Client (For api calls)\nNGRX (For state management)\nPrimeNG (For UI Components)\n\nTechnologies Used\n\n\n\n\n\n\n\n\n\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nBuild Docker Image\nYou can deploy the application using Docker. First, build your own image:\nExample :docker build -t your-domain/your-image-name:your-version .Here is the full example:\nExample :docker build -t dradman/loghub-cms:1 .\nThen you can run your own image with command:\nExample :docker run -p 80:4000 your-full-image-name Here is the full example:\nExample :docker run -p 80:4000 dradman/loghub-cms:1 . Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nDeploying with Docker\nYou can deploy the application using Docker. First, pull the latest Docker image from the GitHub Container Registry:\nExample :docker pull ghcr.io/dradman/loghub-cms:latestThen, run the Docker container:\nExample :docker run -p 80:4000 ghcr.io/dradman/loghub-cms:latestImportant: Make sure that all environment variables are set correctly.\nDocker-Compose\nYou can also run application using docker compose. See an example here\nEnvironment Variables\nImportant: Due to angular & general limitation since application is served to local browser you can't use standard .env to update environment varaibles.\nIf you wish to change any of the variables you will have to build your own version of application where will change these files\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            api   (src/.../api.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            appEfects   (src/.../app.state.ts)\n                        \n                        \n                            appStore   (src/.../app.state.ts)\n                        \n                        \n                            authenticate   (src/.../auth.actions.ts)\n                        \n                        \n                            AUTHENTICATE   (src/.../api.ts)\n                        \n                        \n                            authenticationFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            authenticationSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            authReducer   (src/.../auth.reducer.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.production.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            forgotPassword   (src/.../auth.actions.ts)\n                        \n                        \n                            forgotPasswordFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            forgotPasswordSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            initialState   (src/.../auth.reducer.ts)\n                        \n                        \n                            isLoadingAuthState   (src/.../auth.selectors.ts)\n                        \n                        \n                            isSuccess   (src/.../auth.selectors.ts)\n                        \n                        \n                            loadCurrentUser   (src/.../auth.actions.ts)\n                        \n                        \n                            loadCurrentUserFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            loadCurrentUserSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            passwordMinLength   (src/.../regex.constants.ts)\n                        \n                        \n                            passwordSpecialChars   (src/.../regex.constants.ts)\n                        \n                        \n                            REFRESH_TOKEN_KEY   (src/.../token-storage.service.ts)\n                        \n                        \n                            registrationGuard   (src/.../registration.guard.ts)\n                        \n                        \n                            resetPassword   (src/.../auth.actions.ts)\n                        \n                        \n                            resetPasswordFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            resetPasswordSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            securePasswordRegex   (src/.../regex.constants.ts)\n                        \n                        \n                            selectAuth   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectAuthorizationError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectCurrentUser   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectForgotPasswordError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectResetPasswordError   (src/.../auth.selectors.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            setCurrentUser   (src/.../auth.actions.ts)\n                        \n                        \n                            setToken   (src/.../auth.actions.ts)\n                        \n                        \n                            signOut   (src/.../auth.actions.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../token-storage.service.ts)\n                        \n                        \n                            unauthErrorInterceptor   (src/.../auth.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/api/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    url: environment.apiUrl,\n    teamUrl: environment.apiUrl + '/v1/team',\n    projectUrl: environment.apiUrl + '/v1/project',\n    profileUrl: environment.apiUrl + '/v1/user-profile',\n    platformUrl: environment.apiUrl + '/v1/platform',\n    organizationUrl: environment.apiUrl + '/v1/organization',\n    invitationUrl: environment.apiUrl + '/v1/invitation',\n    deviceUrl: environment.apiUrl + '/v1/device',\n    membersUrl: environment.apiUrl + '/v1/members',\n    filesUrl: environment.apiUrl + '/v1/files',\n    authUrl: environment.apiUrl + '/v1/auth',\n    authOptions: {\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n        context: new HttpContext().set(AUTHENTICATE, true)\n    },\n    noAuthOptions: {\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n        context: new HttpContext().set(AUTHENTICATE, false)\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTHENTICATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes, withPreloading(PreloadAllModules), withComponentInputBinding()),\n    provideHttpClient(withInterceptors([authInterceptor, unauthErrorInterceptor]), withFetch()),\n    provideClientHydration(),\n    {\n        provide: APP_INITIALIZER,\n        useFactory: () => {\n            inject({ mode: isDevMode() ? 'development' : 'production' });\n            injectSpeedInsights();\n        },\n    },\n    provideAnimations(),\n    TranslateModule.forRoot({\n        defaultLanguage: 'en',\n        loader: {\n            provide: TranslateLoader,\n            useFactory: HttpLoaderFactory,\n            deps: [HttpClient],\n        },\n    }).providers!,\n    provideStore(appStore),\n    provideEffects(appEfects),\n    provideStoreDevtools({ maxAge: 25, logOnly: !isDevMode() })\n],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/app.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appEfects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [AuthEffects]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appStore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  authState: authReducer,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Authenticate',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Authentication failure',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Authentication success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[ForgotPassword Page] forgot password',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Forgot password failure',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Forgot password success'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Get authenticated user'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUserFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Get authenticated user failure',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUserSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Get authenticated user success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[ResetPassword Page] Reset password',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Reset password failure',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Reset password success'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Set current user',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Set current user',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Home Page] Sign Out',\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  request: HttpRequest,\n  next: HttpHandlerFn\n): Observable> => {\n  if (request.context.get(AUTHENTICATE)) {\n    const accessToken = inject(JwtService).getToken();\n    if (accessToken) {\n      const clonedRequest = request.clone({\n        headers: request.headers.set('Authorization', `Bearer ${accessToken}`),\n      });\n      return next(clonedRequest);\n    } else {\n      return next(request);\n    }\n  } else {\n    return next(request);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unauthErrorInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  req: HttpRequest,\n  next: HttpHandlerFn,\n): Observable> => {\n  const jwtService = inject(JwtService);\n  const authService = inject(AuthService);\n  const store = inject(Store);\n  const router = inject(Router);\n\n  if (req.context.get(AUTHENTICATE)) {\n    return next(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (\n          error instanceof HttpErrorResponse &&\n          !(\n            req.url.includes('auth/authenticate') ||\n            req.url.includes('auth/refreshToken')\n          ) && //  {\n                jwtService.saveToken(refreshResult.refreshToken);\n                jwtService.saveToken(refreshResult.accessToken);\n                store.dispatch(setToken(refreshResult));\n                return next(\n                  req.clone({\n                    headers: req.headers.set(\n                      'Authorization',\n                      `Bearer ${refreshResult.accessToken}`\n                    ),\n                  })\n                );\n              }),\n              catchError((error) => {\n                if (error.status === '401') {\n                  jwtService.clear();\n                  store.dispatch(signOut());\n                  if(!router.url.startsWith('/auth')) {\n                    router.navigate(['/auth'])\n                  }\n                }\n                return throwError(() => error);\n              })\n            );\n          }\n        }\n        return throwError(() => new Error('Unauthorized Exception'));\n      })\n    );\n  } else {\n    return next(req);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, {error}) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n   // Handle Reset Password\n   on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, {error}) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:8080/api',\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'https://heavily-composed-mutt.ngrok-free.app', //TODO: Host backend somewhere\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:8080/api',\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLoadingAuthState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.status == StateStatus.LOADING\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.status == StateStatus.SUCCESS\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: AppState) => state.authState\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuthorizationError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => {\n    if (\n      state.token == null &&\n      state.status == StateStatus.ERROR &&\n      state.credentials != null\n    ) {\n      return state.error;\n    } else {\n      return null;\n    }\n  }\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.user\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForgotPasswordError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.forgotPasswordError\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectResetPasswordError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.resetPasswordError\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/utils/regex.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordSpecialChars\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\\\\?@#$%^\\`<>&+=\"!ºª·#~%&'¿¡€,:;*/+-.=_{}\\\\(\\\\)\\\\[\\\\]`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        securePasswordRegex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[${passwordSpecialChars}])(?=\\\\S+$).{${passwordMinLength},}$`\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/token-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth-refreshtoken'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth-token'\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/registration.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        registrationGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  next: ActivatedRouteSnapshot,\n  state: RouterStateSnapshot) => {\n    return environment.enableRegistration;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
