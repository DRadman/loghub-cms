var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.608,1,1.252]],["body/components/AppComponent.html",[0,1.041,1,2.25,2,1.955,3,0.459,4,0.358,5,1.821,6,1.821,7,1.821,8,0.358,9,3.396,10,1.821,11,2.907,12,2.907,13,3.005,14,2.118,15,2.118,16,2.298,17,4.695,18,2.298,19,5.115,20,2.298,21,5.115,22,1.549,23,4.054,24,3.833,25,1.325,26,4.054,27,1.325,28,0.031,29,1.134,30,0.408,31,1.325,32,3.331,33,1.041,34,1.048,35,2.167,36,2.382,37,2.382,38,0.459,39,1.048,40,2.64,41,4.054,42,4.054,43,4.054,44,1.821,45,2.298,46,2.298,47,1.821,48,2.645,49,1.821,50,1.821,51,1.549,52,1.821,53,1.549,54,1.432,55,1.821,56,1.549,57,1.821,58,1.549,59,1.821,60,1.549,61,1.821,62,1.549,63,1.821,64,1.549,65,1.432,66,0.821,67,1.821,68,1.821,69,0.023,70,0.023]],["title/interfaces/AppState.html",[71,0.459,72,1.471]],["body/interfaces/AppState.html",[3,0.539,4,0.421,8,0.421,28,0.031,30,0.479,33,1.048,38,0.681,69,0.026,70,0.026,71,0.668,72,2.537,73,1.557,74,3.482,75,0.539,76,0.959,77,3.875,78,3.317,79,4.763,80,3.676,81,4.763,82,2.337,83,3.482,84,3.482]],["title/components/AuthComponent.html",[0,0.608,51,1.252]],["body/components/AuthComponent.html",[0,1.063,1,1.624,2,2.014,3,0.481,4,0.375,5,1.91,6,1.91,7,1.91,8,0.375,10,1.91,11,2.929,12,2.929,14,2.181,15,2.181,16,2.367,17,4.798,18,2.367,20,2.367,28,0.03,29,1.066,33,0.978,34,1.099,35,2.272,38,0.481,39,1.099,44,1.91,45,2.367,46,2.367,47,1.91,48,2.69,49,1.91,50,1.91,51,2.288,52,1.91,53,1.624,54,1.502,55,1.91,56,1.624,57,1.91,58,1.624,59,1.91,60,1.624,61,1.91,62,1.624,63,1.91,64,1.624,65,1.502,66,0.86,67,1.91,68,1.91,69,0.024,70,0.024,85,3.561,86,3.851,87,5.269,88,5.269]],["title/injectables/AuthEffects.html",[78,1.924,89,0.99]],["body/injectables/AuthEffects.html",[3,0.313,4,0.244,8,0.244,22,1.51,25,1.864,27,0.903,28,0.031,29,0.559,30,0.278,31,0.903,33,1.028,34,0.714,38,0.313,39,0.714,66,0.8,69,0.018,70,0.018,75,0.313,76,0.671,78,2.321,89,1.195,90,1.351,91,2.315,92,2.96,93,3.277,94,2.69,95,2.261,96,2.69,97,3.277,98,2.763,99,2.708,100,3.35,101,4.777,102,2.763,103,2.708,104,2.117,105,6.209,106,6.156,107,3.951,108,5.538,109,3.31,110,1.775,111,3.951,112,3.951,113,2.888,114,3.951,115,3.951,116,3.951,117,2.293,118,3.951,119,5.045,120,5.033,121,2.945,122,2.763,123,3.951,124,5.324,125,5.033,126,5.033,127,5.033,128,2.763,129,3.951,130,3.951,131,3.892,132,3.003,133,3.951,134,2.763,135,3.951,136,3.951,137,2.763,138,3.951,139,3.951,140,3.003,141,3.951,142,2.763,143,3.951,144,4.612,145,3.951,146,3.951,147,3.31,148,2.763,149,2.763,150,2.315,151,2.763,152,1.351,153,2.763,154,2.763,155,1.799,156,1.799,157,1.799,158,1.799,159,1.799,160,1.799,161,2.315,162,1.909]],["title/injectables/AuthService.html",[89,0.99,99,1.602]],["body/injectables/AuthService.html",[3,0.365,4,0.285,8,0.285,13,1.895,22,1.233,25,1.981,27,1.946,28,0.031,29,1.205,30,0.599,31,1.946,33,1.141,34,0.834,38,0.365,39,0.834,40,2.101,54,1.14,65,1.14,66,1.014,69,0.02,70,0.02,75,0.365,82,1.335,89,1.331,90,1.578,92,2.679,94,2.353,96,2.353,99,2.153,110,2.532,117,2.465,152,1.578,163,2.703,164,1.683,165,3.218,166,3.417,167,4.199,168,3.226,169,3.936,170,3.226,171,3.218,172,4.402,173,3.163,174,3.226,175,3.688,176,2.465,177,5.393,178,4.402,179,1.352,180,3.226,181,3.688,182,3.226,183,3.226,184,4.402,185,3.226,186,4.402,187,3.506,188,3.226,189,5.384,190,4.402,191,3.506,192,3.226,193,3.226,194,3.226,195,2.867,196,2.101,197,3.226,198,2.703,199,4.199,200,2.101,201,3.226,202,3.226,203,3.226,204,2.101,205,5.636,206,5.636,207,5.817,208,4.402,209,3.226,210,4.402,211,1.578,212,3.226,213,3.226]],["title/interfaces/AuthState.html",[71,0.459,77,1.924]],["body/interfaces/AuthState.html",[3,0.296,4,0.231,8,0.231,28,0.031,30,0.598,33,1.009,38,0.506,54,1.578,65,1.578,66,1.1,69,0.017,70,0.017,71,0.366,73,0.853,75,0.296,76,0.644,77,2.624,80,1.7,82,1.57,92,2.027,93,1.7,94,1.395,95,1.173,96,1.395,97,2.47,121,3.118,132,1.7,140,1.7,156,1.7,157,1.7,158,1.7,159,1.7,160,1.7,161,2.187,173,2.88,198,2.187,199,2.187,214,1.909,215,4.904,216,4.696,217,4.363,218,4.363,219,4.696,220,4.66,221,3.375,222,2.446,223,4.363,224,2.362,225,2.624,226,4.107,227,3.178,228,1.395,229,2.611,230,2.611,231,1.909,232,1.909,233,2.611,234,2.611,235,1.7,236,1.7,237,1.7,238,1.7,239,1.7,240,3.265,241,2.187,242,5.229,243,1.909,244,4.107,245,2.187,246,4.261,247,4.107,248,2.187,249,2.187,250,3.178,251,2.88,252,2.187,253,4.107,254,3.584,255,2.187,256,4.551,257,3.178,258,2.187,259,2.187,260,2.773,261,2.187,262,2.187,263,2.187,264,2.187,265,2.187,266,2.187,267,2.187,268,2.187,269,2.187]],["title/interfaces/AuthenticateRequestDto.html",[71,0.459,173,1.924]],["body/interfaces/AuthenticateRequestDto.html",[3,0.555,4,0.433,8,0.433,28,0.03,30,0.577,38,0.555,66,1.271,69,0.026,70,0.026,71,0.687,73,1.602,75,0.555,76,0.975,110,2.822,173,3.373,179,1.426,270,4.106,271,2.879]],["title/components/ForgotPasswordComponent.html",[0,0.608,53,1.252]],["body/components/ForgotPasswordComponent.html",[0,0.701,1,0.755,2,1.175,3,0.224,4,0.174,5,0.888,6,0.888,7,0.888,8,0.174,10,0.888,11,2.489,12,2.489,14,1.273,15,1.273,16,1.381,18,1.381,20,1.381,22,1.175,24,3.322,25,1.921,27,1.005,28,0.031,29,0.862,30,0.53,31,1.845,32,3.733,33,1.102,34,0.511,35,1.056,36,1.16,37,1.16,38,0.224,39,0.511,44,0.888,45,1.381,46,1.381,47,0.888,48,1.914,49,0.888,50,0.888,51,0.755,52,0.888,53,1.628,54,1.803,55,0.888,56,0.755,57,0.888,58,0.755,59,0.888,60,0.755,61,0.888,62,0.755,63,0.888,64,0.755,65,0.698,66,0.764,67,0.888,68,0.888,69,0.014,70,0.014,72,0.888,75,0.224,76,0.522,94,2.612,95,0.888,99,2.495,103,1.846,104,1.443,109,1.655,110,1.914,113,1.444,121,2.083,131,1.444,152,0.966,162,2.563,164,1.175,165,3.373,176,1.911,179,0.831,181,1.655,222,0.755,224,1.994,225,1.806,228,1.056,235,2.002,236,2.002,237,1.286,238,1.286,239,1.286,251,1.16,272,4.974,273,4.974,274,1.444,275,1.381,276,3.162,277,2.458,278,2.458,279,2.002,280,3.962,281,2.458,282,2.759,283,2.759,284,2.759,285,2.759,286,3.162,287,2.759,288,2.759,289,2.576,290,2.576,291,2.759,292,3.774,293,2.759,294,3.162,295,3.162,296,3.162,297,2.759,298,2.576,299,3.568,300,2.774,301,2.774,302,1.444,303,3.572,304,2.997,305,2.997,306,3.074,307,2.576,308,1.975,309,2.023,310,1.975,311,1.975,312,1.975,313,1.975,314,3.529,315,1.655,316,2.247,317,2.247,318,2.576,319,1.975,320,2.247,321,1.975,322,1.655,323,1.655,324,1.975,325,3.162,326,1.655,327,2.576,328,1.655,329,1.655,330,1.444,331,1.286,332,1.286,333,1.444,334,1.16,335,2.458,336,1.056,337,1.444,338,1.286,339,1.655,340,2.576,341,1.655,342,1.286,343,0.966,344,1.444,345,1.444,346,1.655,347,1.655,348,1.806,349,1.286,350,1.655,351,1.444,352,1.655,353,1.444,354,1.655,355,1.655,356,1.655,357,1.975,358,1.655,359,1.286,360,1.444,361,2.759,362,1.444,363,1.444,364,1.444,365,1.444,366,1.975,367,1.444,368,1.655,369,1.975,370,2.759,371,2.759,372,2.759,373,3.572,374,5.991,375,2.576,376,2.458,377,1.975,378,1.975,379,1.655,380,1.655,381,1.655,382,1.655,383,1.975,384,1.444,385,1.444,386,1.655,387,2.576,388,1.444,389,1.655,390,1.655,391,1.444,392,1.975,393,1.655,394,1.975,395,2.247,396,2.576,397,2.576,398,3.074,399,2.576,400,2.576,401,3.074,402,3.074,403,2.576]],["title/interfaces/ForgotPasswordRequestDto.html",[71,0.459,404,2.394]],["body/interfaces/ForgotPasswordRequestDto.html",[3,0.564,4,0.44,8,0.44,28,0.029,30,0.501,38,0.564,66,1.009,69,0.026,70,0.026,71,0.699,73,1.629,75,0.564,76,0.985,179,1.349,271,2.928,404,4.238,405,4.175,406,4.111]],["title/components/HomeComponent.html",[0,0.608,56,1.252]],["body/components/HomeComponent.html",[0,0.972,1,1.345,2,1.784,3,0.398,4,0.311,5,1.581,6,1.581,7,1.581,8,0.311,10,1.581,11,2.838,12,2.838,14,1.932,15,1.932,16,2.097,18,2.097,20,2.097,22,1.345,25,1.897,27,1.15,28,0.031,29,1.06,30,0.469,31,1.712,33,1.13,34,0.91,38,0.398,39,0.91,40,2.291,44,1.581,45,2.097,46,2.097,47,1.581,48,2.506,49,1.581,50,1.581,51,1.345,52,1.581,53,1.345,54,1.243,55,1.581,56,2.132,57,1.581,58,1.345,59,1.581,60,1.345,61,1.581,62,1.345,63,1.581,64,1.345,65,1.243,66,0.712,67,1.581,68,1.581,69,0.021,70,0.021,72,1.581,75,0.398,76,0.793,95,1.581,103,1.72,104,1.345,152,1.72,162,2.168,164,1.784,176,1.932,228,1.88,275,2.097,277,3.41,278,3.41,281,3.41,300,3.632,301,3.632,304,3.505,309,1.932,314,3.41,332,2.291,336,1.88,338,2.291,342,2.291,343,1.72,359,2.291,407,2.947,408,3.91,409,4.667,410,4.667,411,6.087,412,5.237,413,3.518,414,3.518,415,3.518,416,3.518,417,4.667,418,3.518,419,3.518,420,3.518,421,3.91,422,4.667,423,4.667]],["title/components/InvitationComponent.html",[0,0.608,58,1.252]],["body/components/InvitationComponent.html",[0,1.067,1,1.636,2,2.023,3,0.485,4,0.378,5,1.923,6,1.923,7,1.923,8,0.378,10,1.923,11,2.932,12,2.932,14,2.191,15,2.191,16,1.923,18,2.378,20,2.378,28,0.03,29,1.071,33,0.795,34,1.107,38,0.485,39,1.107,44,1.923,45,2.378,46,2.378,47,1.923,48,2.696,49,1.923,50,1.923,51,1.636,52,1.923,53,1.636,54,1.513,55,1.923,56,1.636,57,1.923,58,2.294,59,1.923,60,1.636,61,1.923,62,1.636,63,1.923,64,1.636,65,1.513,66,0.866,67,1.923,68,1.923,69,0.024,70,0.024,424,3.587,425,5.028,426,5.292,427,5.292,428,3.869]],["title/injectables/JwtService.html",[89,0.99,100,1.924]],["body/injectables/JwtService.html",[3,0.429,4,0.335,8,0.335,13,2.225,22,1.448,25,1.99,27,1.775,28,0.031,29,1.099,30,0.546,31,1.775,33,0.91,34,0.98,38,0.429,39,0.98,40,2.467,69,0.022,70,0.022,75,0.429,82,2.028,86,3.581,89,1.481,90,1.853,100,2.878,117,2.028,155,2.467,164,1.872,166,2.225,176,2.461,179,1.408,204,2.467,221,3.177,224,2.028,309,2.521,429,4.529,430,2.025,431,5.502,432,3.372,433,5.74,434,5.74,435,4.898,436,4.898,437,3.788,438,3.738,439,3.788,440,2.878,441,3.788,442,3.788,443,2.769,444,4.898,445,2.769,446,4.898,447,3.788,448,2.769,449,2.769,450,2.769,451,4.898,452,4.898,453,3.788,454,3.788,455,3.788,456,3.788]],["title/injectables/LocalStorage.html",[89,0.99,438,2.133]],["body/injectables/LocalStorage.html",[3,0.4,4,0.312,8,0.312,13,2.076,22,2.006,25,2.022,27,1.826,28,0.031,29,1.131,30,0.584,31,1.826,33,0.975,34,0.914,38,0.4,39,0.914,69,0.021,70,0.021,75,0.53,76,0.795,82,1.463,89,1.416,90,1.728,104,2.136,117,2.173,155,2.301,162,2.173,164,1.789,176,2.406,179,1.439,204,2.301,211,1.728,224,1.974,275,1.588,309,2.473,343,1.728,430,1.889,432,3.283,438,3.048,440,3.509,443,2.583,445,2.583,457,5.246,458,4.397,459,3.422,460,3.785,461,3.422,462,3.422,463,3.422,464,3.837,465,3.922,466,3.422,467,3.422,468,3.283,469,2.961,470,3.422,471,2.961,472,3.422,473,2.961,474,2.583,475,2.583,476,2.961,477,2.583,478,2.75,479,2.583,480,2.961,481,2.961,482,2.961,483,2.961,484,2.961,485,3.922,486,3.534,487,2.961,488,2.961,489,2.961,490,2.961,491,2.961,492,2.961]],["title/components/LoginComponent.html",[0,0.608,60,1.252]],["body/components/LoginComponent.html",[0,0.708,1,0.766,2,1.189,3,0.227,4,0.177,5,0.901,6,0.901,7,0.901,8,0.177,10,0.901,11,2.5,12,2.5,14,1.288,15,1.288,16,1.398,18,1.398,20,1.398,22,1.189,24,3.341,25,1.947,27,1.017,28,0.031,29,0.869,30,0.516,31,1.78,32,4.019,33,1.132,34,0.519,35,1.072,36,1.178,37,1.178,38,0.227,39,0.519,44,0.901,45,1.398,46,1.398,47,0.901,48,1.929,49,0.901,50,0.901,51,0.766,52,0.901,53,0.766,54,0.709,55,0.901,56,0.766,57,0.901,58,0.766,59,0.901,60,1.641,61,0.901,62,0.766,63,0.901,64,0.766,65,0.709,66,0.869,67,0.901,68,0.901,69,0.014,70,0.014,72,0.901,75,0.227,76,0.528,92,1.663,95,0.901,99,2.509,103,1.864,104,1.457,110,1.929,113,1.466,117,1.288,121,1.864,131,1.466,152,0.981,162,2.525,164,1.189,165,3.397,176,2.124,179,0.839,222,0.766,224,1.966,225,1.827,228,1.072,235,2.026,236,2.026,237,2.026,238,2.026,239,1.306,275,1.398,276,3.193,277,2.482,278,2.482,279,2.026,280,3.98,281,2.482,282,2.786,283,2.786,284,2.786,285,2.786,286,3.193,287,2.786,288,2.786,291,2.786,293,2.786,295,3.193,296,3.193,297,2.786,298,2.606,299,3.597,300,2.796,301,2.796,302,1.466,303,3.595,304,3.014,305,3.014,307,2.606,309,2.036,314,3.341,316,2.274,317,3.139,318,2.606,320,2.274,325,3.193,326,1.68,327,2.606,329,1.68,330,1.466,331,1.306,332,1.306,333,1.466,334,1.178,336,1.072,338,1.306,339,1.68,340,2.606,341,1.68,342,1.306,343,0.981,344,1.466,345,1.466,346,1.68,347,1.68,348,1.827,349,1.306,350,1.68,351,1.466,352,1.68,353,1.466,354,1.68,355,1.68,356,1.68,358,1.68,359,1.306,360,1.466,361,2.274,362,1.466,363,1.466,364,1.466,365,1.466,367,1.466,370,1.466,371,1.466,372,1.466,373,2.274,376,1.306,384,1.466,385,1.466,387,2.606,388,1.466,389,1.68,390,1.68,391,1.466,393,1.68,395,2.274,396,2.606,399,2.606,400,2.606,493,1.68,494,4.12,495,3.811,496,3.193,497,3.111,498,3.111,499,3.811,500,4.917,501,4.294,502,3.111,503,2.005,504,2.005,505,2.005,506,2.005,507,2.005,508,2.005,509,2.005,510,2.005,511,2.005,512,2.005,513,2.606,514,2.005,515,2.005,516,2.005,517,2.005,518,1.68,519,1.306,520,2.005,521,1.466,522,2.005,523,2.005,524,2.005,525,2.005,526,2.005,527,2.005,528,2.005,529,1.68,530,2.005,531,3.111,532,3.111,533,3.111,534,3.111,535,3.111,536,3.111,537,3.111,538,3.111,539,3.111]],["title/injectables/MemoryStorage.html",[89,0.99,478,1.924]],["body/injectables/MemoryStorage.html",[3,0.416,4,0.325,8,0.325,25,2.011,27,1.855,28,0.031,29,1.149,30,0.607,31,1.855,33,0.683,34,0.951,38,0.416,39,0.951,69,0.022,70,0.022,75,0.606,76,0.816,82,1.522,89,1.453,90,1.798,103,1.798,104,2.045,117,2.215,162,2.215,164,1.836,176,2.437,179,1.44,224,2.08,275,1.652,309,2.349,430,1.965,432,3.334,440,3.144,459,3.512,460,4.006,461,3.512,462,3.512,463,3.512,464,3.912,466,3.512,467,3.512,468,3.334,470,2.687,472,2.687,474,2.687,475,2.687,478,2.822,479,2.687,540,5.228,541,4.483,542,3.676,543,3.676,544,3.676,545,3.676,546,2.687,547,3.676,548,3.676,549,3.08,550,3.08,551,3.676,552,3.128,553,3.676,554,3.676,555,3.676,556,4.804,557,3.676,558,3.08,559,3.676,560,2.16,561,3.676]],["title/components/RegisterComponent.html",[0,0.608,62,1.252]],["body/components/RegisterComponent.html",[0,1.067,1,1.636,2,2.023,3,0.485,4,0.378,5,1.923,6,1.923,7,1.923,8,0.378,10,1.923,11,2.932,12,2.932,14,2.191,15,2.191,16,1.923,18,2.378,20,2.378,28,0.03,29,1.071,33,0.795,34,1.107,38,0.485,39,1.107,44,1.923,45,2.378,46,2.378,47,1.923,48,2.696,49,1.923,50,1.923,51,1.636,52,1.923,53,1.636,54,1.513,55,1.923,56,1.636,57,1.923,58,1.636,59,1.923,60,1.636,61,1.923,62,2.294,63,1.923,64,1.636,65,1.513,66,0.866,67,1.923,68,1.923,69,0.024,70,0.024,167,5.028,428,3.869,562,3.587,563,5.292,564,5.292]],["title/interfaces/RegisterRequestDto.html",[71,0.459,187,2.133]],["body/interfaces/RegisterRequestDto.html",[3,0.526,4,0.41,8,0.41,28,0.03,30,0.634,38,0.526,66,1.249,69,0.025,70,0.025,71,0.651,73,1.517,75,0.526,76,0.944,110,2.772,179,1.476,187,3.62,271,2.727,406,4.018,565,3.889,566,4.51,567,4.51]],["title/components/ResetPasswordComponent.html",[0,0.608,64,1.252]],["body/components/ResetPasswordComponent.html",[0,0.769,1,0.876,2,1.317,3,0.26,4,0.202,5,1.03,6,1.03,7,1.03,8,0.202,10,1.03,11,2.59,12,2.59,14,1.426,15,1.426,16,1.548,18,1.548,20,1.548,22,1.317,24,3.501,25,1.884,27,0.749,28,0.031,29,0.838,30,0.496,31,1.757,32,3.862,33,1.134,34,0.593,35,1.225,36,1.347,37,1.347,38,0.26,39,0.593,44,1.03,45,1.548,46,1.548,47,1.03,48,2.068,49,1.03,50,1.03,51,0.876,52,1.03,53,0.876,54,0.81,55,1.03,56,0.876,57,1.03,58,0.876,59,1.03,60,0.876,61,1.03,62,0.876,63,1.03,64,1.759,65,1.9,66,0.999,67,1.03,68,1.03,69,0.016,70,0.016,72,1.03,75,0.26,76,0.585,82,0.949,95,1.03,96,2.77,103,1.685,104,1.317,121,1.685,152,1.121,162,2.528,164,1.317,176,1.714,179,0.758,222,0.876,224,1.463,228,1.225,251,1.347,274,1.676,275,1.548,277,2.695,278,2.695,279,2.244,280,4.136,281,2.695,282,3.026,283,3.026,284,3.026,285,3.026,287,3.026,288,3.026,289,2.887,290,2.887,291,3.026,293,3.026,294,3.468,297,3.026,300,2.997,301,2.997,302,1.676,303,3.788,304,3.159,305,3.159,309,1.714,314,3.501,315,1.921,316,2.519,317,2.519,320,2.519,322,1.921,323,1.921,328,1.921,330,1.676,331,1.493,332,1.493,333,1.676,334,1.347,335,2.695,336,1.225,338,1.493,342,1.493,343,1.121,344,1.676,345,1.676,351,2.519,359,1.493,360,1.676,361,3.026,362,1.676,363,1.676,364,1.676,365,1.676,367,1.676,370,2.519,371,2.519,372,2.519,373,3.026,375,1.921,376,2.244,379,1.921,380,1.921,381,1.921,382,1.921,384,1.676,385,1.676,386,1.921,391,1.676,397,2.887,403,2.887,496,3.468,513,2.887,518,1.921,568,4.904,569,4.904,570,4.139,571,3.445,572,4.139,573,3.445,574,2.293,575,2.293,576,2.293,577,3.445,578,2.293,579,1.676,580,1.676,581,2.293,582,2.293,583,2.293,584,6.106,585,2.293,586,2.293,587,2.293,588,3.445,589,3.468,590,2.293,591,1.921,592,3.445,593,3.445,594,3.445,595,3.445]],["title/interfaces/ResetPasswordRequestDto.html",[71,0.459,191,2.133]],["body/interfaces/ResetPasswordRequestDto.html",[3,0.554,4,0.432,8,0.432,28,0.03,30,0.576,38,0.554,66,0.99,69,0.026,70,0.026,71,0.686,73,1.599,75,0.554,76,0.974,179,1.426,191,3.734,271,2.873,589,5.258,591,5.258,596,4.097]],["title/injectables/SessionStorage.html",[89,0.99,597,2.394]],["body/injectables/SessionStorage.html",[3,0.4,4,0.312,8,0.312,13,2.076,22,2.006,25,2.022,27,1.826,28,0.031,29,1.131,30,0.584,31,1.826,33,0.975,34,0.914,38,0.4,39,0.914,69,0.021,70,0.021,75,0.53,76,0.795,82,1.463,89,1.416,90,1.728,104,2.136,117,2.173,155,2.301,162,2.173,164,1.789,176,2.406,179,1.439,204,2.301,211,1.728,224,1.974,275,1.588,309,2.473,343,1.728,430,1.889,432,3.283,440,3.509,443,2.583,445,2.583,458,4.397,459,3.422,460,3.785,461,3.422,462,3.422,463,3.422,464,3.837,465,3.922,466,3.422,467,3.422,468,3.283,469,2.961,470,3.422,471,2.961,472,3.422,473,2.961,474,2.583,475,2.583,476,2.961,477,2.583,478,2.75,479,2.583,480,2.961,481,2.961,482,2.961,483,2.961,484,2.961,485,3.922,487,2.961,488,2.961,489,2.961,490,2.961,491,2.961,492,2.961,597,3.422,598,5.246,599,3.534]],["title/interfaces/Token.html",[71,0.459,221,1.75]],["body/interfaces/Token.html",[3,0.545,4,0.425,8,0.425,28,0.029,30,0.571,38,0.545,69,0.026,70,0.026,71,0.675,73,1.573,75,0.545,76,0.964,166,3.668,179,1.421,221,3.035,560,3.337,600,4.031,601,4.563,602,5.23,603,5.23]],["title/interfaces/TokenDto.html",[71,0.459,196,2.133]],["body/interfaces/TokenDto.html",[3,0.545,4,0.425,8,0.425,28,0.029,30,0.571,38,0.545,69,0.026,70,0.026,71,0.675,73,1.573,75,0.545,76,0.964,166,3.668,179,1.421,196,3.698,560,3.337,601,4.563,602,5.23,603,5.23,604,4.031]],["title/interfaces/User.html",[71,0.459,222,1.252]],["body/interfaces/User.html",[3,0.448,4,0.35,8,0.35,28,0.031,29,0.801,30,0.661,33,0.936,38,0.448,69,0.023,70,0.023,71,0.555,73,1.294,75,0.448,76,0.856,110,2.622,179,1.47,222,1.926,224,1.959,225,3.428,406,3.8,546,3.684,566,4.265,567,4.265,605,3.317,606,4.889,607,4.889,608,4.889,609,4.889,610,4.265,611,4.889,612,4.889,613,4.676,614,3.282,615,3.959,616,3.684,617,3.959,618,3.317,619,3.317,620,2.894,621,3.317,622,3.317]],["title/interfaces/UserDto.html",[71,0.459,200,2.133]],["body/interfaces/UserDto.html",[3,0.448,4,0.35,8,0.35,28,0.031,29,0.801,30,0.661,33,0.936,38,0.448,69,0.023,70,0.023,71,0.555,73,1.294,75,0.448,76,0.856,110,2.622,179,1.47,200,3.282,224,1.959,225,3.428,406,3.8,546,3.684,566,4.265,567,4.265,606,4.889,607,4.889,608,4.889,609,4.889,610,4.265,611,4.889,612,4.889,613,4.676,614,3.282,616,3.684,618,3.317,619,3.317,620,2.894,621,3.317,622,3.317,623,3.317,624,3.959,625,3.959]],["title/coverage.html",[626,3.251]],["body/coverage.html",[0,1.074,1,1.025,8,0.237,9,2.247,28,0.031,30,0.27,51,1.025,53,1.025,56,1.025,58,1.025,60,1.025,62,1.025,64,1.025,66,0.783,69,0.018,70,0.018,71,0.839,72,1.205,74,3.315,77,1.576,78,1.576,80,1.746,83,1.96,84,1.96,85,2.247,89,1.658,91,2.247,92,2.067,93,1.746,94,1.433,95,1.205,96,1.433,97,1.746,99,1.312,100,1.576,132,1.746,140,1.746,156,1.746,157,1.746,158,1.746,159,1.746,160,1.746,163,2.247,173,1.576,187,1.746,191,1.746,195,1.746,196,1.746,200,1.746,211,1.312,214,3.315,221,1.433,222,1.025,231,1.96,232,1.96,240,1.96,270,2.247,271,2.916,272,2.247,273,2.247,274,2.827,334,1.576,335,1.746,336,1.433,337,1.96,404,1.96,405,2.247,407,2.247,424,2.247,429,3.315,430,2.93,438,1.746,449,1.96,450,1.96,457,2.247,478,1.576,493,2.247,519,2.953,521,1.96,540,2.247,560,3.979,562,2.247,565,2.247,568,2.247,569,2.247,579,1.96,580,1.96,596,2.247,597,1.96,598,2.247,600,2.247,604,2.247,605,2.247,623,2.247,626,1.96,627,2.682,628,2.682,629,2.682,630,4.535,631,3.24,632,6.684,633,2.247,634,6.704,635,2.247,636,2.827,637,2.682,638,1.96,639,2.247,640,3.867,641,3.867,642,3.867,643,3.867,644,2.247,645,2.247,646,3.24,647,2.247,648,2.247,649,3.24,650,2.682,651,4.535,652,3.867,653,5.251,654,3.867,655,4.735,656,2.247,657,3.8,658,2.247,659,2.247,660,2.682,661,2.682,662,2.247,663,2.247,664,2.247,665,2.247,666,2.247,667,2.682,668,2.682]],["title/dependencies.html",[669,2.007,670,3.295]],["body/dependencies.html",[28,0.031,34,1.146,35,2.369,36,3.177,37,2.604,69,0.025,70,0.025,150,3.714,152,2.168,228,2.89,331,2.887,343,2.168,552,2.887,670,3.714,671,4.433,672,4.433,673,6.619,674,4.433,675,5.834,676,3.953,677,4.433,678,4.433,679,3.714,680,4.433,681,4.433,682,4.433,683,3.714,684,4.433,685,4.433,686,4.433,687,4.433,688,4.433,689,4.433,690,3.714,691,4.433,692,4.433,693,4.433,694,4.433,695,4.433,696,3.714,697,4.433,698,4.433,699,4.433,700,4.433,701,4.433,702,4.433]],["title/miscellaneous/enumerations.html",[703,1.467,704,3.295]],["body/miscellaneous/enumerations.html",[28,0.029,69,0.026,70,0.026,75,0.531,104,2.366,121,2.735,222,1.792,226,4.685,243,4.088,251,3.285,425,3.927,610,3.426,614,3.892,616,4.088,703,2.505,704,3.927,705,4.687,706,4.687,707,5.592,708,4.687,709,5.592,710,4.687,711,4.687,712,3.927,713,3.927,714,4.687,715,4.687,716,4.687,717,4.687,718,4.687,719,4.687,720,4.687,721,4.687,722,4.687,723,3.927,724,3.927,725,3.927,726,4.687,727,4.687,728,4.687,729,5.592]],["title/miscellaneous/functions.html",[703,1.467,730,3.295]],["body/miscellaneous/functions.html",[27,1.66,28,0.028,29,1.028,30,0.511,31,1.66,69,0.027,70,0.027,75,0.575,169,4.285,171,3.713,636,3.713,638,4.285,703,2.715,730,4.255,731,4.255,732,5.079]],["title/index.html",[75,0.311,733,2.3,734,2.3]],["body/index.html",[0,0.945,2,1.718,4,0.294,14,1.377,28,0.026,29,0.91,69,0.021,70,0.021,171,2.431,195,2.166,211,1.626,246,2.166,260,2.431,275,1.494,305,1.954,348,1.954,448,2.431,519,3.315,552,3.315,669,2.431,676,2.431,679,2.786,696,2.786,713,2.786,724,2.786,725,4.568,735,3.765,736,4.494,737,5.091,738,4.494,739,4.494,740,4.494,741,5.695,742,6.001,743,3.325,744,4.494,745,3.325,746,2.786,747,3.325,748,3.325,749,2.786,750,2.786,751,3.325,752,3.325,753,3.325,754,3.325,755,4.494,756,3.325,757,3.325,758,3.721,759,3.325,760,3.325,761,3.325,762,3.325,763,3.325,764,3.325,765,2.786,766,3.325,767,3.325,768,3.325,769,3.325,770,3.325,771,3.325,772,2.786,773,2.431,774,5.285,775,5.869,776,3.325,777,3.325,778,3.325,779,3.325,780,2.786,781,3.325,782,4.265,783,3.765,784,2.786,785,3.325,786,4.265,787,4.265,788,3.325,789,6.185,790,3.325,791,3.325,792,3.325,793,3.325,794,6.432,795,5.869,796,4.494,797,4.265,798,4.265,799,5.182,800,4.494,801,3.325,802,3.325,803,5.091,804,4.265,805,4.494,806,4.494,807,4.494,808,5.091,809,5.091,810,3.765,811,4.494,812,5.452,813,3.325,814,3.765,815,4.494,816,3.325,817,4.918,818,3.325,819,3.325,820,2.786,821,2.786,822,3.325,823,3.325,824,4.494,825,3.325,826,3.325,827,4.494,828,3.325,829,4.494,830,3.325,831,3.325,832,2.786,833,2.786,834,3.721,835,3.325,836,4.494,837,2.786,838,3.325,839,3.325,840,2.786,841,2.786,842,3.325,843,3.325,844,2.786,845,3.325,846,3.325,847,2.786]],["title/license.html",[733,2.3,734,2.3,848,2.3]],["body/license.html",[0,0.457,4,0.503,8,0.111,25,0.225,28,0.015,30,0.126,33,0.128,39,0.178,66,0.139,69,0.008,70,0.006,71,0.424,73,0.563,101,0.577,117,0.285,162,0.285,164,0.263,211,1.477,220,0.503,222,1.651,246,0.448,254,0.503,309,0.285,348,0.404,349,0.448,353,0.503,376,0.448,388,2.524,395,0.503,421,0.577,428,2.886,431,4.261,432,0.404,440,0.404,448,0.916,460,0.448,468,0.736,541,1.444,550,0.577,552,1.604,558,0.577,613,0.503,614,2.367,620,2.657,626,0.916,690,1.049,712,0.577,723,1.049,746,0.577,749,0.577,750,0.577,758,3.718,772,3.307,773,0.503,774,2.722,780,1.777,782,2.064,783,1.777,784,4.584,786,0.577,787,4.214,797,1.777,798,1.049,799,3.524,804,0.577,810,1.444,814,0.577,817,0.577,820,2.064,821,1.777,832,3.524,833,1.444,837,1.444,840,4.164,841,1.049,844,1.444,847,1.049,848,5.332,849,4.691,850,2.463,851,0.688,852,0.688,853,1.723,854,5.322,855,3.248,856,4.768,857,5.188,858,2.76,859,0.688,860,0.688,861,1.252,862,2.463,863,5.086,864,2.463,865,1.723,866,4.206,867,1.723,868,0.688,869,1.723,870,0.688,871,0.688,872,1.252,873,2.76,874,0.688,875,2.76,876,0.688,877,0.688,878,3.248,879,1.252,880,0.688,881,0.688,882,0.688,883,4.206,884,5.829,885,1.723,886,3.452,887,1.252,888,6.326,889,1.252,890,3.019,891,3.019,892,4.206,893,2.76,894,0.688,895,0.688,896,2.121,897,3.248,898,3.248,899,1.723,900,0.688,901,1.252,902,0.688,903,1.723,904,4.691,905,1.252,906,2.121,907,0.688,908,0.688,909,1.252,910,2.121,911,2.121,912,1.252,913,3.947,914,1.252,915,4.84,916,2.463,917,1.252,918,2.121,919,0.688,920,3.019,921,2.463,922,0.688,923,3.248,924,2.76,925,5.4,926,1.723,927,3.019,928,0.688,929,0.688,930,2.463,931,0.688,932,2.463,933,3.248,934,1.252,935,3.799,936,2.463,937,1.252,938,0.688,939,0.688,940,4.319,941,1.252,942,0.688,943,0.688,944,4.083,945,1.252,946,0.688,947,1.723,948,0.688,949,0.688,950,1.252,951,0.688,952,0.688,953,2.76,954,2.121,955,0.688,956,0.688,957,0.688,958,0.688,959,0.688,960,0.688,961,1.252,962,0.688,963,0.688,964,0.688,965,1.252,966,0.688,967,1.723,968,1.252,969,0.688,970,0.688,971,1.252,972,1.252,973,4.206,974,0.688,975,1.252,976,1.252,977,0.688,978,0.688,979,1.252,980,1.723,981,1.252,982,1.723,983,1.252,984,0.688,985,0.688,986,2.76,987,0.688,988,0.688,989,0.688,990,2.463,991,0.688,992,0.688,993,2.121,994,0.688,995,0.688,996,1.252,997,1.723,998,0.688,999,0.688,1000,0.688,1001,4.206,1002,2.121,1003,2.463,1004,2.76,1005,1.723,1006,0.688,1007,1.723,1008,4.609,1009,1.252,1010,0.688,1011,0.688,1012,0.688,1013,1.723,1014,5.746,1015,3.635,1016,0.688,1017,0.688,1018,1.252,1019,1.252,1020,0.688,1021,3.635,1022,0.688,1023,2.121,1024,3.248,1025,0.688,1026,1.723,1027,1.723,1028,1.252,1029,2.76,1030,5.675,1031,1.723,1032,3.452,1033,2.121,1034,3.019,1035,1.252,1036,0.688,1037,1.252,1038,1.723,1039,3.452,1040,3.635,1041,2.121,1042,0.688,1043,1.252,1044,1.252,1045,2.121,1046,2.121,1047,3.452,1048,0.688,1049,1.723,1050,0.688,1051,5.138,1052,1.252,1053,0.688,1054,3.248,1055,0.688,1056,1.723,1057,2.121,1058,3.248,1059,0.688,1060,4.319,1061,2.121,1062,1.252,1063,3.248,1064,3.799,1065,2.76,1066,0.688,1067,0.688,1068,0.688,1069,0.688,1070,3.248,1071,0.688,1072,1.252,1073,4.083,1074,0.688,1075,0.688,1076,1.252,1077,1.723,1078,0.688,1079,0.688,1080,1.723,1081,0.688,1082,0.688,1083,0.688,1084,0.688,1085,3.799,1086,1.723,1087,4.055,1088,0.688,1089,0.688,1090,0.688,1091,0.688,1092,1.252,1093,1.252,1094,3.635,1095,0.688,1096,1.252,1097,2.76,1098,0.688,1099,0.688,1100,2.463,1101,1.723,1102,1.723,1103,2.76,1104,1.723,1105,1.723,1106,0.688,1107,0.688,1108,2.463,1109,2.76,1110,0.688,1111,0.688,1112,1.252,1113,0.577,1114,1.723,1115,0.688,1116,0.688,1117,1.723,1118,0.688,1119,0.688,1120,0.688,1121,1.252,1122,0.688,1123,4.971,1124,3.248,1125,0.688,1126,2.76,1127,1.252,1128,0.688,1129,0.688,1130,1.252,1131,1.252,1132,0.688,1133,0.688,1134,0.688,1135,0.688,1136,1.252,1137,1.723,1138,2.463,1139,0.688,1140,1.252,1141,0.688,1142,0.688,1143,2.76,1144,0.688,1145,0.688,1146,3.019,1147,2.121,1148,0.688,1149,2.463,1150,0.688,1151,1.252,1152,0.688,1153,0.688,1154,1.723,1155,1.723,1156,0.577,1157,0.688,1158,0.688,1159,0.688,1160,1.723,1161,1.723,1162,2.76,1163,0.688,1164,0.688,1165,1.252,1166,1.252,1167,2.064,1168,1.252,1169,0.688,1170,4.083,1171,1.252,1172,0.688,1173,0.688,1174,0.688,1175,0.688,1176,0.688,1177,0.688,1178,1.723,1179,0.688,1180,0.688,1181,4.319,1182,1.444,1183,0.688,1184,0.688,1185,0.688,1186,2.463,1187,2.463,1188,0.688,1189,0.688,1190,1.723,1191,0.688,1192,0.688,1193,2.121,1194,0.688,1195,1.252,1196,0.688,1197,0.688,1198,0.688,1199,0.688,1200,0.688,1201,0.688,1202,1.252,1203,1.252,1204,0.688,1205,1.723,1206,0.688,1207,0.688,1208,1.252,1209,0.688,1210,0.688,1211,0.688,1212,0.688,1213,1.252,1214,1.252,1215,1.252,1216,1.252,1217,3.452,1218,1.252,1219,2.76,1220,0.688,1221,0.688,1222,1.252,1223,1.723,1224,1.723,1225,2.121,1226,2.121,1227,1.723,1228,2.121,1229,1.723,1230,0.688,1231,2.463,1232,2.463,1233,1.723,1234,1.723,1235,0.688,1236,1.252,1237,1.252,1238,2.463,1239,1.252,1240,2.121,1241,2.121,1242,1.252,1243,1.723,1244,4.206,1245,2.463,1246,0.688,1247,0.688,1248,0.688,1249,1.723,1250,1.723,1251,1.252,1252,1.252,1253,0.688,1254,0.688,1255,0.688,1256,0.688,1257,1.252,1258,0.688,1259,0.688,1260,1.723,1261,0.688,1262,0.688,1263,1.252,1264,1.723,1265,0.688,1266,1.252,1267,0.688,1268,1.723,1269,0.688,1270,0.688,1271,0.688,1272,1.252,1273,1.252,1274,2.76,1275,4.84,1276,1.723,1277,1.252,1278,1.252,1279,1.252,1280,1.252,1281,2.121,1282,2.121,1283,1.252,1284,0.688,1285,0.688,1286,0.688,1287,0.688,1288,0.688,1289,3.019,1290,2.76,1291,1.252,1292,0.688,1293,0.688,1294,0.688,1295,0.688,1296,1.252,1297,0.688,1298,1.252,1299,0.688,1300,2.463,1301,3.248,1302,2.121,1303,0.688,1304,3.799,1305,0.688,1306,0.688,1307,0.688,1308,0.688,1309,1.252,1310,0.688,1311,0.688,1312,0.688,1313,1.252,1314,1.723,1315,2.463,1316,1.252,1317,2.121,1318,1.252,1319,0.688,1320,0.688,1321,1.252,1322,0.688,1323,0.688,1324,0.688,1325,1.252,1326,0.688,1327,0.688,1328,1.723,1329,2.121,1330,0.688,1331,1.252,1332,0.688,1333,1.252,1334,0.688,1335,0.688,1336,1.723,1337,0.688,1338,0.688,1339,0.688,1340,0.688,1341,0.688,1342,1.252,1343,0.688,1344,0.688,1345,0.688,1346,0.688,1347,0.688,1348,1.723,1349,0.688,1350,0.688,1351,0.688,1352,0.688,1353,0.688,1354,2.463,1355,0.688,1356,0.688,1357,1.049,1358,2.121,1359,3.248,1360,0.688,1361,0.577,1362,2.121,1363,0.688,1364,0.688,1365,0.688,1366,0.688,1367,0.688,1368,1.252,1369,3.019,1370,1.723,1371,0.688,1372,2.121,1373,0.688,1374,0.688,1375,1.723,1376,0.688,1377,0.688,1378,1.723,1379,0.688,1380,1.252,1381,1.252,1382,0.688,1383,0.688,1384,0.688,1385,0.688,1386,0.688,1387,0.688,1388,0.688,1389,0.688,1390,0.688,1391,0.688,1392,1.252,1393,0.688,1394,0.688,1395,0.688,1396,1.252,1397,1.252,1398,0.688,1399,0.688,1400,1.723,1401,0.688,1402,1.723,1403,1.252,1404,0.688,1405,1.252,1406,0.688,1407,1.252,1408,0.688,1409,1.723,1410,3.019,1411,0.688,1412,1.252,1413,1.252,1414,0.688,1415,1.252,1416,0.688,1417,0.688,1418,0.688,1419,0.688,1420,0.688,1421,1.252,1422,0.688,1423,1.252,1424,2.121,1425,0.688,1426,2.463,1427,0.688,1428,0.688,1429,0.688,1430,0.688,1431,0.688,1432,0.688,1433,1.252,1434,1.252,1435,1.252,1436,1.723,1437,0.688,1438,1.252,1439,1.252,1440,0.688,1441,1.252,1442,1.723,1443,0.688,1444,1.252,1445,0.688,1446,1.252,1447,0.688,1448,1.723,1449,1.252,1450,0.688,1451,0.688,1452,1.252,1453,4.971,1454,1.252,1455,0.688,1456,2.463,1457,3.635,1458,1.723,1459,0.688,1460,0.688,1461,0.688,1462,2.121,1463,0.688,1464,0.688,1465,1.723,1466,0.688,1467,1.252,1468,0.688,1469,0.688,1470,0.688,1471,2.121,1472,0.688,1473,0.688,1474,0.688,1475,0.688,1476,0.688,1477,2.121,1478,1.252,1479,1.252,1480,0.688,1481,0.688,1482,1.723,1483,0.688,1484,1.252,1485,1.723,1486,1.252,1487,0.688,1488,0.688,1489,0.688,1490,0.688,1491,1.252,1492,1.723,1493,0.688,1494,0.688,1495,0.688,1496,1.252,1497,0.688,1498,0.688,1499,0.688,1500,0.688,1501,0.688,1502,0.688,1503,1.723,1504,1.252,1505,0.688,1506,0.688,1507,2.121,1508,0.688,1509,1.723,1510,0.688,1511,0.688,1512,0.688,1513,1.252,1514,0.688,1515,0.688,1516,0.688,1517,1.723,1518,1.252,1519,1.252,1520,0.688,1521,3.019,1522,1.252,1523,1.723,1524,2.121,1525,0.688,1526,0.688,1527,0.688,1528,1.252,1529,0.688,1530,1.723,1531,0.688,1532,1.252,1533,0.688,1534,0.688,1535,0.688,1536,0.688,1537,1.723,1538,0.688,1539,1.723,1540,1.252,1541,0.688,1542,1.252,1543,0.688,1544,0.688,1545,1.252,1546,1.252,1547,0.688,1548,0.688,1549,1.252,1550,0.688,1551,0.688,1552,0.688,1553,0.688,1554,0.688,1555,1.723,1556,0.688,1557,0.688,1558,0.688,1559,0.688,1560,0.688,1561,2.121,1562,1.252,1563,1.723,1564,0.688,1565,0.688,1566,0.688,1567,0.688,1568,0.688,1569,1.252,1570,0.688,1571,0.688,1572,0.688,1573,0.688,1574,0.688,1575,0.688,1576,0.688,1577,0.688,1578,0.688,1579,0.688,1580,0.688,1581,0.688,1582,0.688,1583,0.688,1584,0.688,1585,2.121,1586,0.688,1587,1.252,1588,0.688,1589,0.688,1590,0.688,1591,0.688,1592,0.688,1593,0.688,1594,0.688,1595,0.688,1596,0.688,1597,1.723,1598,0.688,1599,0.688,1600,0.688,1601,0.688,1602,0.688,1603,1.252,1604,0.688,1605,0.688,1606,0.688,1607,0.688,1608,0.688,1609,0.688,1610,1.252,1611,1.252,1612,2.463,1613,1.723,1614,0.688,1615,1.252,1616,0.688,1617,0.688,1618,0.688,1619,0.688,1620,1.723,1621,1.252,1622,0.688,1623,1.252,1624,1.252,1625,1.252,1626,0.688,1627,0.688,1628,0.688,1629,0.688,1630,0.688,1631,0.688,1632,1.252,1633,0.688,1634,0.688,1635,0.688,1636,0.688,1637,1.723,1638,0.688,1639,0.688,1640,0.688,1641,0.577,1642,0.688,1643,0.688,1644,0.688,1645,0.688,1646,0.688,1647,0.688,1648,0.688,1649,1.252,1650,0.688,1651,0.688,1652,0.688,1653,0.688,1654,0.688,1655,0.688,1656,0.688,1657,0.688,1658,0.688,1659,0.688,1660,0.688,1661,0.688,1662,0.688,1663,0.688,1664,0.688,1665,0.688,1666,0.688,1667,0.688,1668,0.688,1669,1.723,1670,1.252,1671,0.688,1672,0.688,1673,0.688,1674,0.688,1675,0.688,1676,0.688,1677,1.252,1678,1.252,1679,0.688,1680,0.688,1681,0.688,1682,0.688,1683,0.688,1684,0.688,1685,0.688,1686,0.688,1687,1.252,1688,0.688,1689,0.688,1690,0.688,1691,0.688,1692,0.688,1693,0.688,1694,0.688,1695,0.688,1696,0.577,1697,0.688,1698,0.688,1699,0.688,1700,0.688,1701,0.688,1702,0.688,1703,0.688,1704,0.688,1705,0.688,1706,0.688]],["title/modules.html",[1707,3.727]],["body/modules.html",[28,0.027,69,0.027,70,0.027,1707,4.397]],["title/overview.html",[1708,3.727]],["body/overview.html",[2,1.98,28,0.027,69,0.027,70,0.027,73,1.693,90,2.533,1182,4.339,1708,4.339,1709,4.339,1710,5.179]],["title/properties.html",[76,0.668,669,2.007]],["body/properties.html",[28,0.029,69,0.027,70,0.027,76,0.885,758,3.811,1711,5.213]],["title/miscellaneous/variables.html",[703,1.467,834,2.875]],["body/miscellaneous/variables.html",[15,1.66,28,0.031,30,0.574,54,1.524,65,1.524,66,1.076,69,0.011,70,0.011,72,0.671,74,1.092,75,0.169,77,2.798,78,0.877,80,2.039,82,1.786,83,1.796,84,1.796,86,3.714,92,2.305,93,1.6,94,1.673,95,1.104,96,1.673,97,2.039,99,0.73,100,0.877,103,3.124,104,2.442,117,2.156,119,2.059,121,2.791,132,1.6,140,1.6,147,3.04,156,1.6,157,1.6,158,1.6,159,1.6,160,1.6,166,0.877,169,1.092,175,1.251,177,2.059,179,0.541,195,3.308,211,2.109,214,1.092,215,3.36,216,2.623,217,1.251,218,1.251,219,2.623,220,4.076,221,2.715,222,2.182,223,1.251,224,2.087,227,1.251,231,1.796,232,1.796,235,2.363,236,2.363,237,2.363,238,2.363,239,2.363,240,2.652,241,1.251,242,4.672,243,1.092,244,3.614,245,1.251,246,4.088,247,3.36,248,1.251,249,1.251,250,3.04,251,2.798,252,1.251,253,3.36,254,3.482,255,1.251,256,3.82,257,2.059,258,1.251,259,1.251,260,2.652,261,1.251,262,1.251,263,1.251,264,1.251,265,1.251,266,1.251,267,1.251,268,1.251,269,1.251,279,2.039,304,0.877,305,0.877,334,1.444,335,1.6,336,1.313,337,1.796,348,2.678,349,2.363,368,1.251,408,1.251,429,1.092,430,1.673,449,1.796,450,1.796,468,0.877,477,1.092,494,3.04,519,2.809,521,1.796,529,1.251,549,1.251,560,0.877,579,1.796,580,1.796,601,2.289,631,1.251,633,2.623,635,2.623,636,1.092,638,1.092,639,2.059,644,1.251,645,2.059,646,1.251,647,2.059,648,2.623,649,1.251,653,1.251,655,1.251,656,3.99,657,1.251,658,2.059,659,2.059,662,1.251,663,1.251,664,1.251,665,1.251,666,2.059,676,1.092,683,1.251,703,0.798,731,1.251,735,2.623,765,1.251,773,1.092,834,1.092,1087,3.36,1113,2.059,1156,2.059,1167,2.059,1357,1.251,1361,1.251,1641,1.251,1696,1.251,1709,1.251,1712,2.457,1713,2.457,1714,5.576,1715,2.457,1716,2.457,1717,1.493,1718,2.457,1719,1.493,1720,1.493,1721,1.493,1722,4.559,1723,3.131,1724,2.457,1725,1.493,1726,5.207,1727,1.493,1728,1.493,1729,1.493,1730,1.493,1731,1.493,1732,1.493,1733,1.493,1734,1.493,1735,1.493,1736,1.493,1737,1.493,1738,1.493,1739,1.493,1740,1.493,1741,1.493,1742,1.493,1743,1.493,1744,1.493,1745,1.493,1746,1.493,1747,1.493,1748,1.493,1749,3.628,1750,2.457,1751,2.457,1752,1.493,1753,1.493,1754,1.493,1755,2.457,1756,1.493,1757,1.493,1758,2.457,1759,1.493,1760,1.493,1761,1.493,1762,1.493,1763,1.493,1764,1.493,1765,1.493,1766,1.493,1767,1.493,1768,2.457,1769,2.457,1770,3.628,1771,1.493,1772,1.493,1773,1.493,1774,1.493,1775,1.493,1776,1.493,1777,1.493,1778,1.493,1779,1.493,1780,1.493,1781,1.493,1782,1.493,1783,1.493,1784,5.576,1785,4.559,1786,5.207,1787,3.131,1788,2.457,1789,2.457,1790,2.457,1791,1.493,1792,1.493,1793,1.493,1794,1.493,1795,1.493,1796,2.457,1797,1.493,1798,2.457,1799,1.493,1800,1.493,1801,1.493,1802,1.493,1803,1.493,1804,1.493,1805,1.493,1806,2.457,1807,1.493,1808,1.493,1809,1.493,1810,1.493,1811,1.493,1812,1.493,1813,1.493,1814,1.493,1815,1.493,1816,1.493,1817,1.493,1818,1.493,1819,1.493,1820,1.493,1821,2.457,1822,1.493,1823,1.493,1824,1.493,1825,1.493,1826,1.493,1827,1.493,1828,3.131,1829,2.457,1830,3.131,1831,3.131,1832,1.493,1833,1.493,1834,1.493,1835,1.493,1836,1.493,1837,1.493,1838,1.493,1839,4.313,1840,3.131,1841,1.493,1842,1.493,1843,1.493,1844,1.493,1845,1.493,1846,1.493,1847,1.493,1848,1.493,1849,1.493,1850,1.493,1851,1.493,1852,1.493,1853,1.493,1854,1.493,1855,1.493,1856,1.493]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":560,"title":{},"body":{"injectables/MemoryStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1711,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["0.14.3",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":930,"title":{},"body":{"license.html":{}}}],["1.0.9",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1182,"title":{},"body":{"license.html":{},"overview.html":{}}}],["11",{"_index":1195,"title":{},"body":{"license.html":{}}}],["13",{"_index":1600,"title":{},"body":{"license.html":{}}}],["15",{"_index":1412,"title":{},"body":{"license.html":{}}}],["15.0.0",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1413,"title":{},"body":{"license.html":{}}}],["17",{"_index":761,"title":{},"body":{"index.html":{}}}],["17.1.0",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["17.1.3",{"_index":679,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["17.6.0",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":1201,"title":{},"body":{"license.html":{}}}],["2",{"_index":932,"title":{},"body":{"license.html":{}}}],["2.3.0",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1199,"title":{},"body":{"license.html":{}}}],["2007",{"_index":853,"title":{},"body":{"license.html":{}}}],["25",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1581,"title":{},"body":{"license.html":{}}}],["29",{"_index":851,"title":{},"body":{"license.html":{}}}],["3",{"_index":850,"title":{},"body":{"license.html":{}}}],["3.3.1",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1473,"title":{},"body":{"license.html":{}}}],["4",{"_index":1234,"title":{},"body":{"license.html":{}}}],["4.18.2",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":369,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["5",{"_index":1269,"title":{},"body":{"license.html":{}}}],["6",{"_index":1710,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1466,"title":{},"body":{"license.html":{}}}],["6b",{"_index":1297,"title":{},"body":{"license.html":{}}}],["6d",{"_index":1323,"title":{},"body":{"license.html":{}}}],["7",{"_index":1229,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1709,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["80:4000",{"_index":809,"title":{},"body":{"index.html":{}}}],["9])(?=.*[a",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_next",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_state",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ability",{"_index":1377,"title":{},"body":{"license.html":{}}}],["above",{"_index":1448,"title":{},"body":{"license.html":{}}}],["absence",{"_index":1230,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1659,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":1686,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":964,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1478,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1477,"title":{},"body":{"license.html":{}}}],["access",{"_index":953,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":1548,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":463,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["accesstoken",{"_index":601,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"miscellaneous/variables.html":{}}}],["accompanied",{"_index":1276,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":1663,"title":{},"body":{"license.html":{}}}],["accord",{"_index":1228,"title":{},"body":{"license.html":{}}}],["according",{"_index":1654,"title":{},"body":{"license.html":{}}}],["achieve",{"_index":1668,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1158,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":1528,"title":{},"body":{"license.html":{}}}],["action",{"_index":248,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":101,"title":{},"body":{"injectables/AuthEffects.html":{},"license.html":{}}}],["activated",{"_index":606,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["activatedroutesnapshot",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activities",{"_index":1049,"title":{},"body":{"license.html":{}}}],["activity",{"_index":1576,"title":{},"body":{"license.html":{}}}],["actual",{"_index":1553,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["actually",{"_index":1347,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":1020,"title":{},"body":{"license.html":{}}}],["add",{"_index":821,"title":{},"body":{"index.html":{},"license.html":{}}}],["added",{"_index":1227,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1244,"title":{},"body":{"license.html":{}}}],["address",{"_index":1607,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":1017,"title":{},"body":{"license.html":{}}}],["adopted",{"_index":1198,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":1386,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1650,"title":{},"body":{"license.html":{}}}],["affects",{"_index":1387,"title":{},"body":{"license.html":{}}}],["affero",{"_index":1597,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":1508,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1152,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":276,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["against",{"_index":1216,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":1260,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1593,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1636,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1539,"title":{},"body":{"license.html":{}}}],["aim",{"_index":960,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":1516,"title":{},"body":{"license.html":{}}}],["allow",{"_index":988,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":869,"title":{},"body":{"license.html":{}}}],["allows",{"_index":745,"title":{},"body":{"index.html":{}}}],["along",{"_index":1232,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":553,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["already",{"_index":1527,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":1293,"title":{},"body":{"license.html":{}}}],["although",{"_index":956,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":1480,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":936,"title":{},"body":{"license.html":{}}}],["angular",{"_index":741,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":343,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular/compiler",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":331,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["anti",{"_index":1185,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":1241,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1033,"title":{},"body":{"license.html":{}}}],["api",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.authoptions",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.authurl",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.noauthoptions",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiurl",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":639,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appefects",{"_index":83,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicable",{"_index":1039,"title":{},"body":{"license.html":{}}}],["application",{"_index":742,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":750,"title":{},"body":{"index.html":{},"license.html":{}}}],["applied",{"_index":995,"title":{},"body":{"license.html":{}}}],["applies",{"_index":887,"title":{},"body":{"license.html":{}}}],["apply",{"_index":892,"title":{},"body":{"license.html":{}}}],["appname",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1063,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":1221,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":1658,"title":{},"body":{"license.html":{}}}],["appstate",{"_index":72,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appstore",{"_index":84,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area",{"_index":966,"title":{},"body":{"license.html":{}}}],["arise",{"_index":974,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1640,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":1549,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":1563,"title":{},"body":{"license.html":{}}}],["article",{"_index":1194,"title":{},"body":{"license.html":{}}}],["artifacts",{"_index":790,"title":{},"body":{"index.html":{}}}],["asking",{"_index":908,"title":{},"body":{"license.html":{}}}],["assert",{"_index":931,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":389,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["assets",{"_index":1498,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1132,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1631,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":1662,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":1435,"title":{},"body":{"license.html":{}}}],["assures",{"_index":998,"title":{},"body":{"license.html":{}}}],["async)?.firstname",{"_index":422,"title":{},"body":{"components/HomeComponent.html":{}}}],["async)?.lastname",{"_index":423,"title":{},"body":{"components/HomeComponent.html":{}}}],["attach",{"_index":1670,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":1451,"title":{},"body":{"license.html":{}}}],["attributed",{"_index":948,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":1416,"title":{},"body":{"license.html":{}}}],["auth",{"_index":86,"title":{},"body":{"components/AuthComponent.html":{},"injectables/JwtService.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth.actions",{"_index":161,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["auth.component.html",{"_index":87,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":88,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.forgot",{"_index":374,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["auth.login.authorization_error",{"_index":524,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.forgot_password",{"_index":538,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_is_required",{"_index":536,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_label",{"_index":535,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_length",{"_index":537,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.register",{"_index":539,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.sign_in_to_continue",{"_index":532,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_is_required",{"_index":533,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_label",{"_index":399,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["auth.login.username_length",{"_index":534,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.welcome_message",{"_index":531,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.wrong_username_or_password",{"_index":525,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.reset",{"_index":584,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["auth/auth.effects",{"_index":79,"title":{},"body":{"interfaces/AppState.html":{}}}],["auth/auth.reducer",{"_index":81,"title":{},"body":{"interfaces/AppState.html":{}}}],["authcomponent",{"_index":51,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["autheffects",{"_index":78,"title":{"injectables/AuthEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":92,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate(request",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticaterequestdto",{"_index":173,"title":{"interfaces/AuthenticateRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"coverage.html":{}}}],["authentication",{"_index":250,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["authenticationfailure",{"_index":156,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationsuccess",{"_index":93,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationsuccess(token",{"_index":118,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authinterceptor",{"_index":647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authoptions",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":1415,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":1361,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["authorized",{"_index":1406,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":1522,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":1567,"title":{},"body":{"license.html":{}}}],["authors",{"_index":891,"title":{},"body":{"license.html":{}}}],["authreducer",{"_index":80,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":99,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authstate",{"_index":77,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authurl",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatic",{"_index":1489,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":780,"title":{},"body":{"index.html":{},"license.html":{}}}],["available",{"_index":1047,"title":{},"body":{"license.html":{}}}],["avoid",{"_index":992,"title":{},"body":{"license.html":{}}}],["away",{"_index":877,"title":{},"body":{"license.html":{}}}],["b",{"_index":1109,"title":{},"body":{"license.html":{}}}],["backend",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":1029,"title":{},"body":{"license.html":{}}}],["basic",{"_index":1145,"title":{},"body":{"license.html":{}}}],["bearer",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behalf",{"_index":1172,"title":{},"body":{"license.html":{}}}],["being",{"_index":1321,"title":{},"body":{"license.html":{}}}],["believe",{"_index":1559,"title":{},"body":{"license.html":{}}}],["below",{"_index":1179,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":1552,"title":{},"body":{"license.html":{}}}],["best",{"_index":1667,"title":{},"body":{"license.html":{}}}],["better",{"_index":551,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["between",{"_index":1142,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":1262,"title":{},"body":{"license.html":{}}}],["body",{"_index":1091,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":225,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["bootstrap",{"_index":666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":941,"title":{},"body":{"license.html":{}}}],["box",{"_index":1692,"title":{},"body":{"license.html":{}}}],["browser",{"_index":676,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":789,"title":{},"body":{"index.html":{}}}],["business",{"_index":1573,"title":{},"body":{"license.html":{}}}],["buttonmodule",{"_index":285,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["c",{"_index":855,"title":{},"body":{"license.html":{}}}],["called",{"_index":1027,"title":{},"body":{"license.html":{}}}],["calls",{"_index":768,"title":{},"body":{"index.html":{}}}],["can't",{"_index":843,"title":{},"body":{"index.html":{}}}],["canactivatefn",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":755,"title":{},"body":{"index.html":{}}}],["carry",{"_index":1236,"title":{},"body":{"license.html":{}}}],["case",{"_index":1092,"title":{},"body":{"license.html":{}}}],["cases",{"_index":1342,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":151,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["catcherror((error",{"_index":119,"title":{},"body":{"injectables/AuthEffects.html":{},"miscellaneous/variables.html":{}}}],["cause",{"_index":1266,"title":{},"body":{"license.html":{}}}],["cease",{"_index":1455,"title":{},"body":{"license.html":{}}}],["centralized",{"_index":737,"title":{},"body":{"index.html":{}}}],["certain",{"_index":911,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":1468,"title":{},"body":{"license.html":{}}}],["chain",{"_index":390,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["change",{"_index":782,"title":{},"body":{"index.html":{},"license.html":{}}}],["changed",{"_index":946,"title":{},"body":{"license.html":{}}}],["changing",{"_index":868,"title":{},"body":{"license.html":{}}}],["characterized",{"_index":1374,"title":{},"body":{"license.html":{}}}],["charge",{"_index":897,"title":{},"body":{"license.html":{}}}],["checkusername",{"_index":298,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["checkusername(username",{"_index":307,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["choice",{"_index":819,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1615,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":1619,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":1177,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":1186,"title":{},"body":{"license.html":{}}}],["civil",{"_index":1661,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1513,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1524,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clear",{"_index":432,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clearly",{"_index":938,"title":{},"body":{"license.html":{}}}],["cli",{"_index":757,"title":{},"body":{"index.html":{}}}],["client",{"_index":767,"title":{},"body":{"index.html":{}}}],["clonedrequest",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closely",{"_index":1657,"title":{},"body":{"license.html":{}}}],["cms",{"_index":740,"title":{},"body":{"index.html":{}}}],["cms:1",{"_index":806,"title":{},"body":{"index.html":{}}}],["cms:latestimportant",{"_index":831,"title":{},"body":{"index.html":{}}}],["cms:latestthen",{"_index":830,"title":{},"body":{"index.html":{}}}],["code",{"_index":784,"title":{},"body":{"index.html":{},"license.html":{}}}],["collect",{"_index":746,"title":{},"body":{"index.html":{},"license.html":{}}}],["combination",{"_index":1602,"title":{},"body":{"license.html":{}}}],["combine",{"_index":1599,"title":{},"body":{"license.html":{}}}],["combined",{"_index":1257,"title":{},"body":{"license.html":{}}}],["comes",{"_index":1242,"title":{},"body":{"license.html":{}}}],["command",{"_index":807,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1077,"title":{},"body":{"license.html":{}}}],["comment",{"_index":716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["commercial",{"_index":1352,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":1540,"title":{},"body":{"license.html":{}}}],["common",{"_index":1346,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":281,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["communication",{"_index":1140,"title":{},"body":{"license.html":{}}}],["compilation",{"_index":1252,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":1261,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":1578,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":1120,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1495,"title":{},"body":{"license.html":{}}}],["comply",{"_index":1169,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["component_template",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":836,"title":{},"body":{"index.html":{}}}],["composed",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["computer",{"_index":1043,"title":{},"body":{"license.html":{}}}],["computers",{"_index":991,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":1601,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":1608,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":1572,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1001,"title":{},"body":{"license.html":{}}}],["config",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":1561,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":1482,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":1639,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1700,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1437,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1532,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":1220,"title":{},"body":{"license.html":{}}}],["const",{"_index":82,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":985,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":1157,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{}}}],["constructor(authservice",{"_index":98,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(formbuilder",{"_index":302,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(http",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{}}}],["constructor(storage",{"_index":437,"title":{},"body":{"injectables/JwtService.html":{}}}],["constructor(store",{"_index":413,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(translate",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["construed",{"_index":1583,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":1329,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1679,"title":{},"body":{"license.html":{}}}],["contain",{"_index":1579,"title":{},"body":{"license.html":{}}}],["container",{"_index":827,"title":{},"body":{"index.html":{}}}],["containing",{"_index":1418,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1441,"title":{},"body":{"license.html":{}}}],["content",{"_index":1156,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["contents",{"_index":1536,"title":{},"body":{"license.html":{}}}],["context",{"_index":1113,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":1380,"title":{},"body":{"license.html":{}}}],["continued",{"_index":1364,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":1434,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":1589,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":880,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1521,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":1523,"title":{},"body":{"license.html":{}}}],["control",{"_index":1126,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1526,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":1066,"title":{},"body":{"license.html":{}}}],["convey",{"_index":1051,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":1565,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":1375,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":1060,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":1433,"title":{},"body":{"license.html":{}}}],["copies",{"_index":866,"title":{},"body":{"license.html":{}}}],["copy",{"_index":863,"title":{},"body":{"license.html":{}}}],["copying",{"_index":1002,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":871,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":854,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":1012,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":1174,"title":{},"body":{"license.html":{}}}],["core/services/api/auth.api.service",{"_index":347,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["core/state/app.state",{"_index":332,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/state/auth/auth.actions",{"_index":342,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/state/auth/auth.selectors",{"_index":338,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/utils/regex.constants",{"_index":581,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["correction",{"_index":1635,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":835,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":1123,"title":{},"body":{"license.html":{}}}],["cost",{"_index":1291,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":1514,"title":{},"body":{"license.html":{}}}],["countries",{"_index":1048,"title":{},"body":{"license.html":{}}}],["country",{"_index":1555,"title":{},"body":{"license.html":{}}}],["course",{"_index":1690,"title":{},"body":{"license.html":{}}}],["court",{"_index":1588,"title":{},"body":{"license.html":{}}}],["courts",{"_index":1656,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":1543,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":626,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":1030,"title":{},"body":{"license.html":{}}}],["create",{"_index":711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createaction",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdat",{"_index":607,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["createeffect",{"_index":105,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["createreducer",{"_index":227,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":215,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["criterion",{"_index":1083,"title":{},"body":{"license.html":{}}}],["cross",{"_index":1512,"title":{},"body":{"license.html":{}}}],["cure",{"_index":1472,"title":{},"body":{"license.html":{}}}],["current",{"_index":244,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["currentuser",{"_index":411,"title":{},"body":{"components/HomeComponent.html":{}}}],["currentusererrorsubscription",{"_index":412,"title":{},"body":{"components/HomeComponent.html":{}}}],["customarily",{"_index":1279,"title":{},"body":{"license.html":{}}}],["customer",{"_index":1286,"title":{},"body":{"license.html":{}}}],["d",{"_index":1250,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1637,"title":{},"body":{"license.html":{}}}],["danger",{"_index":994,"title":{},"body":{"license.html":{}}}],["data",{"_index":541,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["date",{"_index":613,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["days",{"_index":1467,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":339,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["debouncetime(500",{"_index":356,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["debug_file",{"_index":717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["december",{"_index":1200,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1617,"title":{},"body":{"license.html":{}}}],["declining",{"_index":1425,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":326,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["deemed",{"_index":1188,"title":{},"body":{"license.html":{}}}],["default",{"_index":103,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defective",{"_index":1630,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":1586,"title":{},"body":{"license.html":{}}}],["defined",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["definition",{"_index":1131,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1006,"title":{},"body":{"license.html":{}}}],["delete",{"_index":714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["denied",{"_index":1383,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":1541,"title":{},"body":{"license.html":{}}}],["deny",{"_index":952,"title":{},"body":{"license.html":{}}}],["denying",{"_index":907,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":670,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deploy",{"_index":796,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":823,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":1550,"title":{},"body":{"license.html":{}}}],["deps",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["designated",{"_index":1299,"title":{},"body":{"license.html":{}}}],["designed",{"_index":875,"title":{},"body":{"license.html":{}}}],["detail",{"_index":376,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"license.html":{}}}],["details",{"_index":1678,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":1688,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1340,"title":{},"body":{"license.html":{}}}],["dev",{"_index":777,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1664,"title":{},"body":{"license.html":{}}}],["developers",{"_index":926,"title":{},"body":{"license.html":{}}}],["development",{"_index":773,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["device_state",{"_index":718,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["devices",{"_index":951,"title":{},"body":{"license.html":{}}}],["deviceurl",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["devtools",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["differ",{"_index":1606,"title":{},"body":{"license.html":{}}}],["different",{"_index":1302,"title":{},"body":{"license.html":{}}}],["differently",{"_index":1411,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1173,"title":{},"body":{"license.html":{}}}],["directions",{"_index":1307,"title":{},"body":{"license.html":{}}}],["directive",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["directives",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":788,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1035,"title":{},"body":{"license.html":{}}}],["directory",{"_index":793,"title":{},"body":{"index.html":{}}}],["disable",{"_index":236,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["disclaim",{"_index":1211,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1620,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":1408,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":1569,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":146,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["display",{"_index":1251,"title":{},"body":{"license.html":{}}}],["displayed",{"_index":1417,"title":{},"body":{"license.html":{}}}],["displays",{"_index":1062,"title":{},"body":{"license.html":{}}}],["dist",{"_index":792,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":340,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["distinguishing",{"_index":1609,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":864,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":749,"title":{},"body":{"index.html":{},"license.html":{}}}],["distributing",{"_index":1574,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1003,"title":{},"body":{"license.html":{}}}],["docker",{"_index":794,"title":{},"body":{"index.html":{}}}],["document",{"_index":867,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":1393,"title":{},"body":{"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["domain/dto/requests/authenticate",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{}}}],["domain/dto/requests/register",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/requests/reset",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/token.dto",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/user.dto",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/models/enums/state",{"_index":233,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/token.entity",{"_index":229,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/user.entity",{"_index":230,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/your",{"_index":801,"title":{},"body":{"index.html":{}}}],["domains",{"_index":976,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":1341,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":1491,"title":{},"body":{"license.html":{}}}],["dradman/loghub",{"_index":805,"title":{},"body":{"index.html":{}}}],["dto",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["due",{"_index":839,"title":{},"body":{"index.html":{}}}],["durable",{"_index":1278,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":1339,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1134,"title":{},"body":{"license.html":{}}}],["e",{"_index":1316,"title":{},"body":{"license.html":{}}}],["e2e",{"_index":818,"title":{},"body":{"index.html":{}}}],["each",{"_index":1015,"title":{},"body":{"license.html":{}}}],["earlier",{"_index":1028,"title":{},"body":{"license.html":{}}}],["effect",{"_index":1653,"title":{},"body":{"license.html":{}}}],["effected",{"_index":1209,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1189,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":996,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":1506,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1680,"title":{},"body":{"license.html":{}}}],["element",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["elementref",{"_index":325,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["email",{"_index":406,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["embodied",{"_index":1273,"title":{},"body":{"license.html":{}}}],["employer",{"_index":1693,"title":{},"body":{"license.html":{}}}],["en",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enable",{"_index":1111,"title":{},"body":{"license.html":{}}}],["enableregistration",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":1053,"title":{},"body":{"license.html":{}}}],["end",{"_index":817,"title":{},"body":{"index.html":{},"license.html":{}}}],["enforce",{"_index":1542,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":1215,"title":{},"body":{"license.html":{}}}],["enhancing",{"_index":752,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":1313,"title":{},"body":{"license.html":{}}}],["entered",{"_index":1580,"title":{},"body":{"license.html":{}}}],["entire",{"_index":1240,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":1596,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1496,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":704,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/permission.enum",{"_index":615,"title":{},"body":{"interfaces/User.html":{}}}],["enums/resource",{"_index":617,"title":{},"body":{"interfaces/User.html":{}}}],["env",{"_index":845,"title":{},"body":{"index.html":{}}}],["environment",{"_index":519,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.appname",{"_index":528,"title":{},"body":{"components/LoginComponent.html":{}}}],["environment.enableregistration",{"_index":529,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":520,"title":{},"body":{"components/LoginComponent.html":{}}}],["equivalent",{"_index":1160,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":949,"title":{},"body":{"license.html":{}}}],["error",{"_index":121,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('unauthorized",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.status",{"_index":368,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["errorsubscription",{"_index":291,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["eslint",{"_index":235,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":238,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["essential",{"_index":1114,"title":{},"body":{"license.html":{}}}],["even",{"_index":1649,"title":{},"body":{"license.html":{}}}],["event",{"_index":353,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"license.html":{}}}],["event.target",{"_index":354,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["everyone",{"_index":861,"title":{},"body":{"license.html":{}}}],["exact",{"_index":1025,"title":{},"body":{"license.html":{}}}],["example",{"_index":799,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":1041,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exceptions",{"_index":1397,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":1327,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1584,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":1673,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1533,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":1166,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":1590,"title":{},"body":{"license.html":{}}}],["executable",{"_index":1102,"title":{},"body":{"license.html":{}}}],["execute",{"_index":814,"title":{},"body":{"index.html":{},"license.html":{}}}],["executing",{"_index":1042,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1507,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1210,"title":{},"body":{"license.html":{}}}],["expected",{"_index":1350,"title":{},"body":{"license.html":{}}}],["expects",{"_index":1349,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":602,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["explains",{"_index":939,"title":{},"body":{"license.html":{}}}],["explicit",{"_index":239,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["explicitly",{"_index":1151,"title":{},"body":{"license.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["express",{"_index":690,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["expressed",{"_index":1622,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":1450,"title":{},"body":{"license.html":{}}}],["extend",{"_index":979,"title":{},"body":{"license.html":{}}}],["extended",{"_index":1568,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":1256,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1065,"title":{},"body":{"license.html":{}}}],["f",{"_index":1431,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":1168,"title":{},"body":{"license.html":{}}}],["fails",{"_index":1463,"title":{},"body":{"license.html":{}}}],["failure",{"_index":254,"title":{},"body":{"interfaces/AuthState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["fair",{"_index":1159,"title":{},"body":{"license.html":{}}}],["false",{"_index":147,"title":{},"body":{"injectables/AuthEffects.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1334,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":1022,"title":{},"body":{"license.html":{}}}],["favor",{"_index":1344,"title":{},"body":{"license.html":{}}}],["feature",{"_index":1069,"title":{},"body":{"license.html":{}}}],["features",{"_index":760,"title":{},"body":{"index.html":{}}}],["fee",{"_index":918,"title":{},"body":{"license.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"license.html":{}}}],["files",{"_index":783,"title":{},"body":{"index.html":{},"license.html":{}}}],["filesurl",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finally",{"_index":983,"title":{},"body":{"license.html":{}}}],["find",{"_index":1309,"title":{},"body":{"license.html":{}}}],["first",{"_index":798,"title":{},"body":{"index.html":{},"license.html":{}}}],["firstname",{"_index":566,"title":{},"body":{"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["fitness",{"_index":1625,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1277,"title":{},"body":{"license.html":{}}}],["flow",{"_index":1141,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1005,"title":{},"body":{"license.html":{}}}],["following",{"_index":1537,"title":{},"body":{"license.html":{}}}],["forbid",{"_index":1208,"title":{},"body":{"license.html":{}}}],["force",{"_index":1163,"title":{},"body":{"license.html":{}}}],["forgot",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword",{"_index":94,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword(username",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":53,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["forgotpassworderror",{"_index":216,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["forgotpasswordfailure",{"_index":157,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgotpasswordform",{"_index":292,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordrequestdto",{"_index":404,"title":{"interfaces/ForgotPasswordRequestDto.html":{}},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"coverage.html":{}}}],["forgotpasswordsuccess",{"_index":132,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":1085,"title":{},"body":{"license.html":{}}}],["format",{"_index":1391,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":303,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["forms",{"_index":1267,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":282,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["found",{"_index":1675,"title":{},"body":{"license.html":{}}}],["foundation",{"_index":858,"title":{},"body":{"license.html":{}}}],["free",{"_index":856,"title":{},"body":{"license.html":{}}}],["free.app",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["freedom",{"_index":878,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":922,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":341,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["fromevent(this.usernameinput.nativeelement",{"_index":350,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["fulfilling",{"_index":1192,"title":{},"body":{"license.html":{}}}],["full",{"_index":804,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["functioning",{"_index":1365,"title":{},"body":{"license.html":{}}}],["functions",{"_index":730,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":958,"title":{},"body":{"license.html":{}}}],["further",{"_index":1301,"title":{},"body":{"license.html":{}}}],["future",{"_index":981,"title":{},"body":{"license.html":{}}}],["general",{"_index":840,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":1129,"title":{},"body":{"license.html":{}}}],["generate",{"_index":786,"title":{},"body":{"index.html":{},"license.html":{}}}],["generated",{"_index":756,"title":{},"body":{"index.html":{}}}],["getapplicationname",{"_index":500,"title":{},"body":{"components/LoginComponent.html":{}}}],["getitem",{"_index":459,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getitem(key",{"_index":466,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getlength",{"_index":474,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getrefreshtoken",{"_index":433,"title":{},"body":{"injectables/JwtService.html":{}}}],["getting",{"_index":733,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":434,"title":{},"body":{"injectables/JwtService.html":{}}}],["ghcr.io/dradman/loghub",{"_index":829,"title":{},"body":{"index.html":{}}}],["github",{"_index":826,"title":{},"body":{"index.html":{}}}],["give",{"_index":1231,"title":{},"body":{"license.html":{}}}],["given",{"_index":1155,"title":{},"body":{"license.html":{}}}],["gives",{"_index":1247,"title":{},"body":{"license.html":{}}}],["giving",{"_index":934,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":849,"title":{},"body":{"license.html":{}}}],["governed",{"_index":1400,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":927,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1426,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1146,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1485,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":917,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":1665,"title":{},"body":{"license.html":{}}}],["guarantee",{"_index":882,"title":{},"body":{"license.html":{}}}],["gui",{"_index":1691,"title":{},"body":{"license.html":{}}}],["handle",{"_index":242,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["hash",{"_index":591,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["having",{"_index":1165,"title":{},"body":{"license.html":{}}}],["headers",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":803,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":1529,"title":{},"body":{"license.html":{}}}],["holder",{"_index":1457,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1407,"title":{},"body":{"license.html":{}}}],["home",{"_index":408,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["home'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["home.component.html",{"_index":409,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":410,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":56,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["hope",{"_index":1676,"title":{},"body":{"license.html":{}}}],["host",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hosts",{"_index":1310,"title":{},"body":{"license.html":{}}}],["household",{"_index":1335,"title":{},"body":{"license.html":{}}}],["html",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["htmlinputelement).value",{"_index":355,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["http",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":779,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/api",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpcontext().set(authenticate",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcontexttoken",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httphandlerfn",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpheaders",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":638,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httploaderfactory(http",{"_index":732,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpparams",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpparams().set('username",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["httprequest",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fsf.org",{"_index":860,"title":{},"body":{"license.html":{}}}],["https://heavily",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.gnu.org/licenses",{"_index":1697,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":1705,"title":{},"body":{"license.html":{}}}],["hypothetical",{"_index":1689,"title":{},"body":{"license.html":{}}}],["identifiable",{"_index":1557,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["if(!router.url.startswith('/auth",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(isusernametaken",{"_index":400,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["image",{"_index":795,"title":{},"body":{"index.html":{}}}],["implement",{"_index":550,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["implementation",{"_index":1112,"title":{},"body":{"license.html":{}}}],["implements",{"_index":275,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"index.html":{}}}],["implied",{"_index":1585,"title":{},"body":{"license.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["important",{"_index":838,"title":{},"body":{"index.html":{}}}],["importing",{"_index":1520,"title":{},"body":{"license.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["impose",{"_index":1436,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":1587,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1642,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":1645,"title":{},"body":{"license.html":{}}}],["inc",{"_index":859,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1638,"title":{},"body":{"license.html":{}}}],["include",{"_index":1103,"title":{},"body":{"license.html":{}}}],["included",{"_index":1105,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1046,"title":{},"body":{"license.html":{}}}],["including",{"_index":1124,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1265,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":959,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":1698,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":1338,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":1432,"title":{},"body":{"license.html":{}}}],["independent",{"_index":1254,"title":{},"body":{"license.html":{}}}],["index",{"_index":75,"title":{"index.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1488,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":1447,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1263,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":968,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":1353,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["inform",{"_index":1319,"title":{},"body":{"license.html":{}}}],["information",{"_index":1359,"title":{},"body":{"license.html":{}}}],["infringe",{"_index":1486,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1517,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1038,"title":{},"body":{"license.html":{}}}],["initialstate",{"_index":240,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":1510,"title":{},"body":{"license.html":{}}}],["inject",{"_index":477,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{},"miscellaneous/variables.html":{}}}],["inject(authservice",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(jwtservice",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(jwtservice).gettoken",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(platform_id",{"_index":482,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["inject(router",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(store",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":89,"title":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{}}}],["injectables",{"_index":90,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"overview.html":{}}}],["injectspeedinsights",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":351,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["inputmaskmodule",{"_index":495,"title":{},"body":{"components/LoginComponent.html":{}}}],["inputs",{"_index":571,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["inputtextmodule",{"_index":286,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["inside",{"_index":955,"title":{},"body":{"license.html":{}}}],["insights",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["install",{"_index":954,"title":{},"body":{"license.html":{}}}],["installation",{"_index":1358,"title":{},"body":{"license.html":{}}}],["installed",{"_index":1378,"title":{},"body":{"license.html":{}}}],["instanceof",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instead",{"_index":1703,"title":{},"body":{"license.html":{}}}],["intact",{"_index":1224,"title":{},"body":{"license.html":{}}}],["intended",{"_index":881,"title":{},"body":{"license.html":{}}}],["intention",{"_index":1212,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":1056,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":1061,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":1280,"title":{},"body":{"license.html":{}}}],["interest",{"_index":1504,"title":{},"body":{"license.html":{}}}],["interface",{"_index":71,"title":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"license.html":{}}}],["interfaces",{"_index":73,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":1367,"title":{},"body":{"license.html":{}}}],["internal",{"_index":622,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["interpretation",{"_index":1652,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":1122,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":1139,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":1248,"title":{},"body":{"license.html":{}}}],["invitation",{"_index":425,"title":{},"body":{"components/InvitationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["invitation'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["invitation.component.html",{"_index":426,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.component.scss",{"_index":427,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitationcomponent",{"_index":58,"title":{"components/InvitationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["invitationurl",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["irrevocable",{"_index":1148,"title":{},"body":{"license.html":{}}}],["isdevmode",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isloading",{"_index":293,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isloadingauthstate",{"_index":334,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isplatformbrowser",{"_index":480,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isplatformbrowser(platformid",{"_index":483,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isregistrationenabled",{"_index":501,"title":{},"body":{"components/LoginComponent.html":{}}}],["issuccess",{"_index":335,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":719,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isusernameavialable",{"_index":217,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["isusernametaken",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["isusernametaken(username",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{}}}],["item",{"_index":1081,"title":{},"body":{"license.html":{}}}],["itself",{"_index":1384,"title":{},"body":{"license.html":{}}}],["june",{"_index":852,"title":{},"body":{"license.html":{}}}],["jwtservice",{"_index":100,"title":{"injectables/JwtService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtservice.clear",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice.savetoken(refreshresult.accesstoken",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice.savetoken(refreshresult.refreshtoken",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":816,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1223,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":1115,"title":{},"body":{"license.html":{}}}],["key",{"_index":460,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["key(index",{"_index":467,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["keys",{"_index":558,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["keys.length",{"_index":561,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["kind",{"_index":1052,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":872,"title":{},"body":{"license.html":{}}}],["know",{"_index":901,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":1545,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":1554,"title":{},"body":{"license.html":{}}}],["language",{"_index":1096,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1258,"title":{},"body":{"license.html":{}}}],["lastlogintime",{"_index":608,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["lastname",{"_index":567,"title":{},"body":{"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["later",{"_index":1612,"title":{},"body":{"license.html":{}}}],["latest",{"_index":825,"title":{},"body":{"index.html":{}}}],["law",{"_index":1040,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1009,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1515,"title":{},"body":{"license.html":{}}}],["legal",{"_index":935,"title":{},"body":{"license.html":{}}}],["legend",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["length",{"_index":464,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["lesser",{"_index":1702,"title":{},"body":{"license.html":{}}}],["lgpl.html",{"_index":1706,"title":{},"body":{"license.html":{}}}],["liability",{"_index":1410,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1037,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1101,"title":{},"body":{"license.html":{}}}],["library",{"_index":1328,"title":{},"body":{"license.html":{}}}],["license",{"_index":848,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1013,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":1016,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":1018,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":873,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":1490,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":1424,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":1483,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1213,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":841,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":1623,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":1409,"title":{},"body":{"license.html":{}}}],["line",{"_index":349,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":1598,"title":{},"body":{"license.html":{}}}],["linked",{"_index":1135,"title":{},"body":{"license.html":{}}}],["linking",{"_index":1701,"title":{},"body":{"license.html":{}}}],["list",{"_index":1076,"title":{},"body":{"license.html":{}}}],["literal",{"_index":546,"title":{},"body":{"injectables/MemoryStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["litigation",{"_index":1511,"title":{},"body":{"license.html":{}}}],["load",{"_index":257,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentuser",{"_index":95,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentuserfailure",{"_index":158,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentusersuccess",{"_index":159,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentusersuccess(user",{"_index":127,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["loader",{"_index":683,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":243,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":448,"title":{},"body":{"injectables/JwtService.html":{},"index.html":{},"license.html":{}}}],["localstorage",{"_index":438,"title":{"injectables/LocalStorage.html":{}},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"coverage.html":{}}}],["location",{"_index":751,"title":{},"body":{"index.html":{}}}],["log_entry",{"_index":720,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_session",{"_index":721,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_source",{"_index":722,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logging",{"_index":738,"title":{},"body":{"index.html":{}}}],["loghub",{"_index":735,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":494,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["login.component.html",{"_index":497,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":498,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":60,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":499,"title":{},"body":{"components/LoginComponent.html":{}}}],["logonly",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs",{"_index":748,"title":{},"body":{"index.html":{}}}],["long",{"_index":1161,"title":{},"body":{"license.html":{}}}],["loss",{"_index":1643,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1646,"title":{},"body":{"license.html":{}}}],["machine",{"_index":1270,"title":{},"body":{"license.html":{}}}],["made",{"_index":1368,"title":{},"body":{"license.html":{}}}],["mail",{"_index":1682,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":1306,"title":{},"body":{"license.html":{}}}],["major",{"_index":1108,"title":{},"body":{"license.html":{}}}],["make",{"_index":832,"title":{},"body":{"index.html":{},"license.html":{}}}],["makes",{"_index":1183,"title":{},"body":{"license.html":{}}}],["making",{"_index":1024,"title":{},"body":{"license.html":{}}}],["manage",{"_index":747,"title":{},"body":{"index.html":{}}}],["management",{"_index":770,"title":{},"body":{"index.html":{}}}],["manner",{"_index":1530,"title":{},"body":{"license.html":{}}}],["manufacturer",{"_index":957,"title":{},"body":{"license.html":{}}}],["map",{"_index":131,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["map((event",{"_index":352,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["map((token",{"_index":114,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((user",{"_index":126,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["march",{"_index":1582,"title":{},"body":{"license.html":{}}}],["marked",{"_index":945,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1430,"title":{},"body":{"license.html":{}}}],["masks",{"_index":1011,"title":{},"body":{"license.html":{}}}],["matching",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1170,"title":{},"body":{"license.html":{}}}],["materially",{"_index":1385,"title":{},"body":{"license.html":{}}}],["maxage",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meaning",{"_index":1440,"title":{},"body":{"license.html":{}}}],["means",{"_index":1008,"title":{},"body":{"license.html":{}}}],["measure",{"_index":1191,"title":{},"body":{"license.html":{}}}],["measures",{"_index":1205,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1219,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1235,"title":{},"body":{"license.html":{}}}],["meets",{"_index":1082,"title":{},"body":{"license.html":{}}}],["membersurl",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":479,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["memorystorage",{"_index":478,"title":{"injectables/MemoryStorage.html":{}},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{}}}],["menu",{"_index":1079,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1624,"title":{},"body":{"license.html":{}}}],["mere",{"_index":1055,"title":{},"body":{"license.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merging",{"_index":1500,"title":{},"body":{"license.html":{}}}],["messageservice",{"_index":280,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["met",{"_index":1150,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["methods",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["miscellaneous",{"_index":703,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":1419,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1357,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":1287,"title":{},"body":{"license.html":{}}}],["models/enums/permission.enum",{"_index":624,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/enums/resource",{"_index":625,"title":{},"body":{"interfaces/UserDto.html":{}}}],["modification",{"_index":1004,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1086,"title":{},"body":{"license.html":{}}}],["modified",{"_index":944,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":1239,"title":{},"body":{"license.html":{}}}],["modify",{"_index":913,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1044,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1707,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitoring",{"_index":754,"title":{},"body":{"index.html":{}}}],["more",{"_index":1289,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":1469,"title":{},"body":{"license.html":{}}}],["mutt.ngrok",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:your",{"_index":802,"title":{},"body":{"index.html":{}}}],["names",{"_index":1423,"title":{},"body":{"license.html":{}}}],["nature",{"_index":1255,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":778,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":1632,"title":{},"body":{"license.html":{}}}],["need",{"_index":820,"title":{},"body":{"index.html":{},"license.html":{}}}],["needed",{"_index":982,"title":{},"body":{"license.html":{}}}],["network",{"_index":1058,"title":{},"body":{"license.html":{}}}],["new",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":589,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["next",{"_index":348,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["next(clonedrequest",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(request",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":775,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":299,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ngondestroy",{"_index":300,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngoninit",{"_index":301,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngrok",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngrx",{"_index":769,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":150,"title":{},"body":{"injectables/AuthEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":228,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["noauthoptions",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":388,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"license.html":{}}}],["noncommercially",{"_index":1295,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1106,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1333,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":1484,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1070,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1064,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":1470,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1464,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1405,"title":{},"body":{"license.html":{}}}],["null",{"_index":224,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":468,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["numbered",{"_index":1611,"title":{},"body":{"license.html":{}}}],["object",{"_index":1087,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.data",{"_index":559,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["object.keys(this.data).length",{"_index":555,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["obligate",{"_index":1594,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":1312,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1193,"title":{},"body":{"license.html":{}}}],["observable",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["occasionally",{"_index":1294,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":1481,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":965,"title":{},"body":{"license.html":{}}}],["of(authenticationfailure",{"_index":120,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(forgotpasswordfailure",{"_index":133,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(loadcurrentuserfailure",{"_index":136,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(resetpasswordfailure",{"_index":141,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["offer",{"_index":933,"title":{},"body":{"license.html":{}}}],["offered",{"_index":1322,"title":{},"body":{"license.html":{}}}],["offering",{"_index":1298,"title":{},"body":{"license.html":{}}}],["official",{"_index":1088,"title":{},"body":{"license.html":{}}}],["oftype",{"_index":149,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticate",{"_index":107,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticationsuccess",{"_index":123,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(forgotpassword",{"_index":129,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(loadcurrentuser",{"_index":135,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(resetpassword",{"_index":138,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(signout",{"_index":143,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["on(authenticate",{"_index":249,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authenticationfailure",{"_index":255,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authenticationsuccess",{"_index":252,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpassword",{"_index":264,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpasswordfailure",{"_index":266,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpasswordsuccess",{"_index":265,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentuser",{"_index":245,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentuserfailure",{"_index":259,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentusersuccess",{"_index":258,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpassword",{"_index":267,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpasswordfailure",{"_index":269,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpasswordsuccess",{"_index":268,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(setcurrentuser",{"_index":261,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(settoken",{"_index":262,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(signout",{"_index":263,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":278,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["one",{"_index":1097,"title":{},"body":{"license.html":{}}}],["oninit",{"_index":277,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["operate",{"_index":1648,"title":{},"body":{"license.html":{}}}],["operated",{"_index":1303,"title":{},"body":{"license.html":{}}}],["operating",{"_index":1118,"title":{},"body":{"license.html":{}}}],["operation",{"_index":1214,"title":{},"body":{"license.html":{}}}],["option",{"_index":1402,"title":{},"body":{"license.html":{}}}],["optional",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1078,"title":{},"body":{"license.html":{}}}],["order",{"_index":1479,"title":{},"body":{"license.html":{}}}],["organization",{"_index":723,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["organizations",{"_index":1019,"title":{},"body":{"license.html":{}}}],["organizationurl",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["origin",{"_index":1420,"title":{},"body":{"license.html":{}}}],["original",{"_index":1421,"title":{},"body":{"license.html":{}}}],["others",{"_index":906,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1162,"title":{},"body":{"license.html":{}}}],["out",{"_index":1641,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":1154,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1175,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1708,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":1525,"title":{},"body":{"license.html":{}}}],["p",{"_index":808,"title":{},"body":{"index.html":{}}}],["package",{"_index":669,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packaged",{"_index":1246,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":1107,"title":{},"body":{"license.html":{}}}],["page",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paper",{"_index":1681,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":1454,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":1538,"title":{},"body":{"license.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["part",{"_index":1021,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1094,"title":{},"body":{"license.html":{}}}],["parties",{"_index":1054,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1143,"title":{},"body":{"license.html":{}}}],["party",{"_index":1304,"title":{},"body":{"license.html":{}}}],["party's",{"_index":1502,"title":{},"body":{"license.html":{}}}],["pass",{"_index":919,"title":{},"body":{"license.html":{}}}],["password",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.back_to_login",{"_index":403,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.check_your_email",{"_index":383,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.html",{"_index":289,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":290,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":274,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:125",{"_index":576,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:144",{"_index":312,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:152",{"_index":310,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:160",{"_index":308,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":573,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":306,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":578,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:65",{"_index":319,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:69",{"_index":321,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:70",{"_index":322,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":315,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:73",{"_index":328,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:74",{"_index":323,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:75",{"_index":324,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":574,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:77",{"_index":311,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:82",{"_index":575,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:88",{"_index":313,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.error",{"_index":375,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.error_description",{"_index":378,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.new_password_label",{"_index":592,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_is_required",{"_index":593,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_length",{"_index":594,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_not_strong",{"_index":595,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.success",{"_index":382,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.success_message",{"_index":586,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.user_does_not_exist",{"_index":377,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_is_required",{"_index":401,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_length",{"_index":402,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_description",{"_index":398,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_message",{"_index":397,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.wrong_hash",{"_index":585,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":273,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":569,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordminlength",{"_index":658,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordmodule",{"_index":496,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordspecialchars",{"_index":659,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["patent",{"_index":1453,"title":{},"body":{"license.html":{}}}],["patents",{"_index":986,"title":{},"body":{"license.html":{}}}],["pattern",{"_index":963,"title":{},"body":{"license.html":{}}}],["payment",{"_index":1575,"title":{},"body":{"license.html":{}}}],["peer",{"_index":1317,"title":{},"body":{"license.html":{}}}],["peers",{"_index":1320,"title":{},"body":{"license.html":{}}}],["pending",{"_index":729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performance",{"_index":1628,"title":{},"body":{"license.html":{}}}],["performing",{"_index":1130,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":1462,"title":{},"body":{"license.html":{}}}],["permission",{"_index":614,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["permissions",{"_index":620,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["permissive",{"_index":1226,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1264,"title":{},"body":{"license.html":{}}}],["permits",{"_index":1443,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":862,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":1373,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1331,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":1592,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1274,"title":{},"body":{"license.html":{}}}],["physically",{"_index":1292,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":900,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":113,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["place",{"_index":1300,"title":{},"body":{"license.html":{}}}],["platform",{"_index":724,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["platform_id",{"_index":476,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformid",{"_index":481,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformurl",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":1704,"title":{},"body":{"license.html":{}}}],["plus",{"_index":1505,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":1674,"title":{},"body":{"license.html":{}}}],["portion",{"_index":1325,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":1288,"title":{},"body":{"license.html":{}}}],["possession",{"_index":1243,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1651,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1666,"title":{},"body":{"license.html":{}}}],["power",{"_index":1207,"title":{},"body":{"license.html":{}}}],["practical",{"_index":874,"title":{},"body":{"license.html":{}}}],["practice",{"_index":972,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":870,"title":{},"body":{"license.html":{}}}],["precise",{"_index":1000,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":969,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":1503,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1084,"title":{},"body":{"license.html":{}}}],["present",{"_index":1605,"title":{},"body":{"license.html":{}}}],["presents",{"_index":1075,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":1414,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":905,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":1366,"title":{},"body":{"license.html":{}}}],["previous",{"_index":950,"title":{},"body":{"license.html":{}}}],["price",{"_index":896,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":1577,"title":{},"body":{"license.html":{}}}],["primeflex",{"_index":692,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":696,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":333,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/button",{"_index":345,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/inputmask",{"_index":517,"title":{},"body":{"components/LoginComponent.html":{}}}],["primeng/inputtext",{"_index":346,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["primeng/password",{"_index":518,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/toast",{"_index":344,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["prior",{"_index":1465,"title":{},"body":{"license.html":{}}}],["private",{"_index":162,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["problems",{"_index":947,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":1360,"title":{},"body":{"license.html":{}}}],["procuring",{"_index":1564,"title":{},"body":{"license.html":{}}}],["produce",{"_index":1121,"title":{},"body":{"license.html":{}}}],["product",{"_index":1275,"title":{},"body":{"license.html":{}}}],["production",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["products",{"_index":967,"title":{},"body":{"license.html":{}}}],["profile",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profileiconurl",{"_index":609,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["profileurl",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":884,"title":{},"body":{"license.html":{}}}],["program's",{"_index":1218,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":1694,"title":{},"body":{"license.html":{}}}],["programming",{"_index":1095,"title":{},"body":{"license.html":{}}}],["programs",{"_index":893,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":971,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":1203,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":1571,"title":{},"body":{"license.html":{}}}],["project",{"_index":725,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["project_release",{"_index":726,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projecturl",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominent",{"_index":1080,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":1067,"title":{},"body":{"license.html":{}}}],["propagate",{"_index":1032,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":1487,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":1045,"title":{},"body":{"license.html":{}}}],["properties",{"_index":76,"title":{"properties.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"properties.html":{}}}],["property",{"_index":1332,"title":{},"body":{"license.html":{}}}],["proprietary",{"_index":997,"title":{},"body":{"license.html":{}}}],["props",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protect",{"_index":903,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":961,"title":{},"body":{"license.html":{}}}],["protection",{"_index":937,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":1390,"title":{},"body":{"license.html":{}}}],["prove",{"_index":1629,"title":{},"body":{"license.html":{}}}],["provide",{"_index":1167,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1073,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["provideeffects(appefects",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":279,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":743,"title":{},"body":{"index.html":{}}}],["provideserverrendering",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestore(appstore",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestoredevtools",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provision",{"_index":980,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":1459,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":1616,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":1618,"title":{},"body":{"license.html":{}}}],["public",{"_index":431,"title":{},"body":{"injectables/JwtService.html":{},"license.html":{}}}],["publicity",{"_index":1422,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1392,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1222,"title":{},"body":{"license.html":{}}}],["published",{"_index":1613,"title":{},"body":{"license.html":{}}}],["pull",{"_index":824,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":990,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1336,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":1560,"title":{},"body":{"license.html":{}}}],["qualify",{"_index":1476,"title":{},"body":{"license.html":{}}}],["quality",{"_index":1627,"title":{},"body":{"license.html":{}}}],["reactiveformsmodule",{"_index":283,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["read",{"_index":712,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["readable",{"_index":1271,"title":{},"body":{"license.html":{}}}],["readily",{"_index":1547,"title":{},"body":{"license.html":{}}}],["reading",{"_index":1395,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":458,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["ready",{"_index":978,"title":{},"body":{"license.html":{}}}],["reason",{"_index":1558,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1290,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":1474,"title":{},"body":{"license.html":{}}}],["receive",{"_index":898,"title":{},"body":{"license.html":{}}}],["received",{"_index":923,"title":{},"body":{"license.html":{}}}],["receives",{"_index":1492,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":1566,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":1372,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":1556,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":920,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":1089,"title":{},"body":{"license.html":{}}}],["redistribute",{"_index":1669,"title":{},"body":{"license.html":{}}}],["referring",{"_index":895,"title":{},"body":{"license.html":{}}}],["refers",{"_index":1007,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":1595,"title":{},"body":{"license.html":{}}}],["refresh_token_key",{"_index":450,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshexpiresin",{"_index":603,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshresult.accesstoken",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken(refreshtoken",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["regard",{"_index":1401,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":1245,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":1144,"title":{},"body":{"license.html":{}}}],["register",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["register(dto",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.html",{"_index":563,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":564,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":62,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["registerrequestdto",{"_index":187,"title":{"interfaces/RegisterRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/RegisterRequestDto.html":{},"coverage.html":{}}}],["registrationerror",{"_index":218,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["registrationguard",{"_index":645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry",{"_index":828,"title":{},"body":{"index.html":{}}}],["reinstated",{"_index":1458,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":1176,"title":{},"body":{"license.html":{}}}],["released",{"_index":889,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":1237,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":1444,"title":{},"body":{"license.html":{}}}],["reload",{"_index":781,"title":{},"body":{"index.html":{}}}],["relying",{"_index":1546,"title":{},"body":{"license.html":{}}}],["remain",{"_index":1311,"title":{},"body":{"license.html":{}}}],["remains",{"_index":885,"title":{},"body":{"license.html":{}}}],["remote",{"_index":736,"title":{},"body":{"index.html":{}}}],["removal",{"_index":1404,"title":{},"body":{"license.html":{}}}],["remove",{"_index":1403,"title":{},"body":{"license.html":{}}}],["removeitem",{"_index":461,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removeitem(key",{"_index":470,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["render",{"_index":999,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":1644,"title":{},"body":{"license.html":{}}}],["rendering",{"_index":764,"title":{},"body":{"index.html":{}}}],["repair",{"_index":1634,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1355,"title":{},"body":{"license.html":{}}}],["req",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.context.get(authenticate",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers.set",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('auth/authenticate",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('auth/refreshtoken",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.context.get(authenticate",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.dto",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{}}}],["request.dto.ts",{"_index":271,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["request.headers.set('authorization",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.password",{"_index":112,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.username",{"_index":111,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["require",{"_index":1138,"title":{},"body":{"license.html":{}}}],["required",{"_index":1362,"title":{},"body":{"license.html":{}}}],["requirement",{"_index":1238,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":1315,"title":{},"body":{"license.html":{}}}],["requires",{"_index":943,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":1023,"title":{},"body":{"license.html":{}}}],["reset",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["resetpassword",{"_index":96,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpassword(dto",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":64,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["resetpassworderror",{"_index":219,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordfailure",{"_index":160,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordform",{"_index":570,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordrequestdto",{"_index":191,"title":{"interfaces/ResetPasswordRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["resetpasswordsuccess",{"_index":140,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolved",{"_index":1343,"title":{},"body":{"license.html":{}}}],["resourcetype",{"_index":616,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["respect",{"_index":914,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":912,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1494,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":989,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":1204,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":1442,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":1438,"title":{},"body":{"license.html":{}}}],["result",{"_index":395,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"license.html":{}}}],["resulting",{"_index":1026,"title":{},"body":{"license.html":{}}}],["results",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":1376,"title":{},"body":{"license.html":{}}}],["return",{"_index":117,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{}}}],["reviewing",{"_index":1655,"title":{},"body":{"license.html":{}}}],["revised",{"_index":1603,"title":{},"body":{"license.html":{}}}],["right",{"_index":1370,"title":{},"body":{"license.html":{}}}],["rights",{"_index":904,"title":{},"body":{"license.html":{}}}],["risk",{"_index":1626,"title":{},"body":{"license.html":{}}}],["role",{"_index":610,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["roleid",{"_index":619,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["rom",{"_index":1379,"title":{},"body":{"license.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["root'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["router",{"_index":305,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/auth",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":287,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["routerstatesnapshot",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routing",{"_index":766,"title":{},"body":{"index.html":{}}}],["royalty",{"_index":1509,"title":{},"body":{"license.html":{}}}],["rules",{"_index":1389,"title":{},"body":{"license.html":{}}}],["run",{"_index":774,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":810,"title":{},"body":{"index.html":{},"license.html":{}}}],["runs",{"_index":1119,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":152,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["safest",{"_index":1671,"title":{},"body":{"license.html":{}}}],["sake",{"_index":942,"title":{},"body":{"license.html":{}}}],["sale",{"_index":1519,"title":{},"body":{"license.html":{}}}],["same",{"_index":921,"title":{},"body":{"license.html":{}}}],["satisfy",{"_index":1314,"title":{},"body":{"license.html":{}}}],["saverefreshtoken",{"_index":435,"title":{},"body":{"injectables/JwtService.html":{}}}],["saverefreshtoken(token",{"_index":444,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken",{"_index":436,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":446,"title":{},"body":{"injectables/JwtService.html":{}}}],["saying",{"_index":1308,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":785,"title":{},"body":{"index.html":{}}}],["school",{"_index":1695,"title":{},"body":{"license.html":{}}}],["scope",{"_index":1570,"title":{},"body":{"license.html":{}}}],["scripts",{"_index":1125,"title":{},"body":{"license.html":{}}}],["secondarily",{"_index":1036,"title":{},"body":{"license.html":{}}}],["secret",{"_index":572,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["section",{"_index":1181,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1268,"title":{},"body":{"license.html":{}}}],["securepasswordregex",{"_index":580,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":837,"title":{},"body":{"index.html":{},"license.html":{}}}],["select(issuccess",{"_index":380,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectauthorizationerror",{"_index":523,"title":{},"body":{"components/LoginComponent.html":{}}}],["select(selectcurrentuser",{"_index":362,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectforgotpassworderror",{"_index":366,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["select(selectresetpassworderror",{"_index":582,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["selectauth",{"_index":656,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectauthorizationerror",{"_index":521,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrentuser",{"_index":336,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectforgotpassworderror",{"_index":337,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["selectresetpassworderror",{"_index":579,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":1535,"title":{},"body":{"license.html":{}}}],["selling",{"_index":1518,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":1010,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1324,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1253,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1249,"title":{},"body":{"license.html":{}}}],["serve",{"_index":776,"title":{},"body":{"index.html":{}}}],["served",{"_index":842,"title":{},"body":{"index.html":{}}}],["server",{"_index":552,"title":{},"body":{"injectables/MemoryStorage.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["serverconfig",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serves",{"_index":1110,"title":{},"body":{"license.html":{}}}],["service",{"_index":1381,"title":{},"body":{"license.html":{}}}],["services/api/auth.api.service",{"_index":153,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["services/token",{"_index":154,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["servicing",{"_index":1633,"title":{},"body":{"license.html":{}}}],["sessionstorage",{"_index":597,"title":{"injectables/SessionStorage.html":{}},"body":{"injectables/SessionStorage.html":{},"coverage.html":{}}}],["set",{"_index":260,"title":{},"body":{"interfaces/AuthState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setcurrentuser",{"_index":231,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setitem",{"_index":462,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setitem(key",{"_index":472,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["settoken",{"_index":232,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["severity",{"_index":371,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["shall",{"_index":1187,"title":{},"body":{"license.html":{}}}],["share",{"_index":879,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1133,"title":{},"body":{"license.html":{}}}],["short",{"_index":1684,"title":{},"body":{"license.html":{}}}],["show",{"_index":924,"title":{},"body":{"license.html":{}}}],["side",{"_index":763,"title":{},"body":{"index.html":{}}}],["sign",{"_index":1696,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["significant",{"_index":1356,"title":{},"body":{"license.html":{}}}],["signout",{"_index":97,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":1202,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":1591,"title":{},"body":{"license.html":{}}}],["single",{"_index":1562,"title":{},"body":{"license.html":{}}}],["skip",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":857,"title":{},"body":{"license.html":{}}}],["sold",{"_index":1337,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1164,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1178,"title":{},"body":{"license.html":{}}}],["solution",{"_index":739,"title":{},"body":{"index.html":{}}}],["somewhere",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"index.html":{},"license.html":{}}}],["spare",{"_index":1285,"title":{},"body":{"license.html":{}}}],["speak",{"_index":894,"title":{},"body":{"license.html":{}}}],["special",{"_index":993,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1117,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":1137,"title":{},"body":{"license.html":{}}}],["specified",{"_index":1093,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":1610,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1614,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":1604,"title":{},"body":{"license.html":{}}}],["src/.../api.ts",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.server.ts",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":731,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.state.ts",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.actions.ts",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.reducer.ts",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.selectors.ts",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.production.ts",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.enum.ts",{"_index":705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../regex.constants.ts",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../registration.guard.ts",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resource",{"_index":706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state",{"_index":708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../token",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":636,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/domain/dto/requests/authenticate",{"_index":270,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/forgot",{"_index":405,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/register",{"_index":565,"title":{},"body":{"interfaces/RegisterRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/reset",{"_index":596,"title":{},"body":{"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/token.dto.ts",{"_index":604,"title":{},"body":{"interfaces/TokenDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/user.dto.ts",{"_index":623,"title":{},"body":{"interfaces/UserDto.html":{},"coverage.html":{}}}],["src/app/core/domain/models/enums/permission.enum.ts",{"_index":710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/resource",{"_index":715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/state",{"_index":728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/token.entity.ts",{"_index":600,"title":{},"body":{"interfaces/Token.html":{},"coverage.html":{}}}],["src/app/core/domain/models/user.entity.ts",{"_index":605,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/guards/registration.guard.ts",{"_index":644,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts",{"_index":646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/api/api.ts",{"_index":649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/api/auth.api.service.ts",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/api/auth.api.service.ts:14",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:17",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:25",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:33",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:37",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:45",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:53",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:61",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/local",{"_index":457,"title":{},"body":{"injectables/LocalStorage.html":{},"coverage.html":{}}}],["src/app/core/services/memory",{"_index":540,"title":{},"body":{"injectables/MemoryStorage.html":{},"coverage.html":{}}}],["src/app/core/services/session",{"_index":598,"title":{},"body":{"injectables/SessionStorage.html":{},"coverage.html":{}}}],["src/app/core/services/token",{"_index":429,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/app.state.ts",{"_index":74,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.actions.ts",{"_index":653,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.effects.ts",{"_index":91,"title":{},"body":{"injectables/AuthEffects.html":{},"coverage.html":{}}}],["src/app/core/state/auth/auth.effects.ts:103",{"_index":148,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:23",{"_index":102,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:30",{"_index":137,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:42",{"_index":122,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:63",{"_index":134,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:77",{"_index":142,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:91",{"_index":128,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.reducer.ts",{"_index":214,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.selectors.ts",{"_index":655,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/utils/regex.constants.ts",{"_index":657,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/auth/auth.component.ts",{"_index":85,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/forgot",{"_index":272,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts",{"_index":424,"title":{},"body":{"components/InvitationComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/login/login.component.ts",{"_index":493,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/login/login.component.ts:115",{"_index":506,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:124",{"_index":508,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:130",{"_index":504,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:134",{"_index":505,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:138",{"_index":503,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:52",{"_index":502,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:63",{"_index":514,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:68",{"_index":511,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:69",{"_index":512,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:71",{"_index":516,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:72",{"_index":510,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:73",{"_index":515,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:75",{"_index":507,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:86",{"_index":509,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts",{"_index":562,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/reset",{"_index":568,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts",{"_index":407,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:16",{"_index":414,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:19",{"_index":419,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:21",{"_index":416,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:25",{"_index":415,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:29",{"_index":418,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/environments/environment.development.ts",{"_index":662,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.production.ts",{"_index":663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":762,"title":{},"body":{"index.html":{}}}],["stand",{"_index":977,"title":{},"body":{"license.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["standard",{"_index":844,"title":{},"body":{"index.html":{},"license.html":{}}}],["standards",{"_index":1090,"title":{},"body":{"license.html":{}}}],["start",{"_index":1672,"title":{},"body":{"license.html":{}}}],["started",{"_index":734,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":1685,"title":{},"body":{"license.html":{}}}],["state",{"_index":246,"title":{},"body":{"interfaces/AuthState.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["state.authstate",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.credentials",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.error",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.forgotpassworderror",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.resetpassworderror",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.status",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.token",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.user",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stated",{"_index":1149,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1446,"title":{},"body":{"license.html":{}}}],["statements",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":987,"title":{},"body":{"license.html":{}}}],["statestatus",{"_index":226,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/enumerations.html":{}}}],["statestatus.error",{"_index":256,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.loading",{"_index":247,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.pending",{"_index":241,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.success",{"_index":253,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["stating",{"_index":1225,"title":{},"body":{"license.html":{}}}],["status",{"_index":220,"title":{},"body":{"interfaces/AuthState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["status.enum",{"_index":234,"title":{},"body":{"interfaces/AuthState.html":{}}}],["status.enum.ts",{"_index":709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["steps",{"_index":929,"title":{},"body":{"license.html":{}}}],["storage",{"_index":440,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["storage.service",{"_index":155,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts",{"_index":430,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:10",{"_index":439,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:12",{"_index":542,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:14",{"_index":441,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:16",{"_index":543,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:19",{"_index":447,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:20",{"_index":475,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:24",{"_index":443,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:26",{"_index":544,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:28",{"_index":445,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:30",{"_index":545,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:32",{"_index":469,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:33",{"_index":442,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:36",{"_index":471,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:40",{"_index":473,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:6",{"_index":547,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:8",{"_index":548,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:9",{"_index":465,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["store",{"_index":304,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["store.dispatch(settoken(refreshresult",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.dispatch(signout",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":791,"title":{},"body":{"index.html":{}}}],["string",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subdividing",{"_index":1499,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1493,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":1531,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":1180,"title":{},"body":{"license.html":{}}}],["subprograms",{"_index":1136,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":1699,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":394,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["subscribe((data",{"_index":357,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["subscribe((error",{"_index":367,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((issuccess",{"_index":381,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((user",{"_index":363,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe(data",{"_index":522,"title":{},"body":{"components/LoginComponent.html":{}}}],["subscription",{"_index":314,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subsection",{"_index":1296,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1351,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":975,"title":{},"body":{"license.html":{}}}],["success",{"_index":251,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["successsubscription",{"_index":294,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":915,"title":{},"body":{"license.html":{}}}],["sue",{"_index":1544,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":1363,"title":{},"body":{"license.html":{}}}],["summary",{"_index":372,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["supplement",{"_index":1396,"title":{},"body":{"license.html":{}}}],["support",{"_index":1233,"title":{},"body":{"license.html":{}}}],["supports",{"_index":1305,"title":{},"body":{"license.html":{}}}],["sure",{"_index":833,"title":{},"body":{"index.html":{},"license.html":{}}}],["surrender",{"_index":909,"title":{},"body":{"license.html":{}}}],["survive",{"_index":1445,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":1647,"title":{},"body":{"license.html":{}}}],["switchmap",{"_index":124,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["switchmap((request",{"_index":108,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["system",{"_index":1100,"title":{},"body":{"license.html":{}}}],["systematic",{"_index":962,"title":{},"body":{"license.html":{}}}],["t",{"_index":800,"title":{},"body":{"index.html":{}}}],["table",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":876,"title":{},"body":{"license.html":{}}}],["tangible",{"_index":1330,"title":{},"body":{"license.html":{}}}],["tap",{"_index":144,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["team",{"_index":727,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["teamurl",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technological",{"_index":1190,"title":{},"body":{"license.html":{}}}],["technologies",{"_index":771,"title":{},"body":{"index.html":{}}}],["tells",{"_index":1071,"title":{},"body":{"license.html":{}}}],["temp",{"_index":554,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["term",{"_index":1147,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":1683,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":1452,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":1475,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":1461,"title":{},"body":{"license.html":{}}}],["termination",{"_index":1449,"title":{},"body":{"license.html":{}}}],["terms",{"_index":925,"title":{},"body":{"license.html":{}}}],["test",{"_index":813,"title":{},"body":{"index.html":{}}}],["testing",{"_index":822,"title":{},"body":{"index.html":{}}}],["tests",{"_index":812,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":910,"title":{},"body":{"license.html":{}}}],["things",{"_index":902,"title":{},"body":{"license.html":{}}}],["third",{"_index":1217,"title":{},"body":{"license.html":{}}}],["this.actions$.pipe",{"_index":106,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice",{"_index":109,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{}}}],["this.authservice.forgotpassword(request.username).pipe",{"_index":130,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.isusernametaken(username).subscribe",{"_index":530,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.me().pipe",{"_index":125,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.resetpassword(request).pipe",{"_index":139,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.checkusername(data",{"_index":358,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.currentusererrorsubscription?.unsubscribe",{"_index":420,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data",{"_index":556,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.data[key",{"_index":557,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.errorsubscription",{"_index":365,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errorsubscription?.unsubscribe",{"_index":384,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.forgotpasswordform.get('username')?.value",{"_index":392,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formbuilder.group",{"_index":316,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.http.get(api.authurl",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isusernametaken",{"_index":396,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.jwtservice.clear",{"_index":145,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.saverefreshtoken(token.refreshtoken",{"_index":116,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.savetoken(token.accesstoken",{"_index":115,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.loginform.get('password')?.value",{"_index":527,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":526,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.messageservice.add",{"_index":370,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.resetpasswordform.get('password')?.value",{"_index":590,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":587,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/home",{"_index":364,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.secret",{"_index":588,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.storage",{"_index":485,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.clear",{"_index":488,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(key",{"_index":489,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(refresh_token_key",{"_index":456,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.getitem(token_key",{"_index":454,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.key(index",{"_index":490,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.length",{"_index":487,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(key",{"_index":491,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(refresh_token_key",{"_index":452,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.removeitem(token_key",{"_index":451,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(key",{"_index":492,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.setitem(refresh_token_key",{"_index":455,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(token_key",{"_index":453,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.store",{"_index":361,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch",{"_index":391,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(loadcurrentuser",{"_index":359,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(isloadingauthstate",{"_index":320,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(selectcurrentuser",{"_index":417,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.successsubscription",{"_index":379,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.successsubscription?.unsubscribe",{"_index":386,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant",{"_index":373,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant('auth.reset",{"_index":583,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.usernamechecksubscription",{"_index":393,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.usernamechecksubscription?.unsubscribe",{"_index":387,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.usersubscription",{"_index":360,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.usersubscription?.unsubscribe",{"_index":385,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["those",{"_index":973,"title":{},"body":{"license.html":{}}}],["though",{"_index":1399,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":984,"title":{},"body":{"license.html":{}}}],["three",{"_index":1283,"title":{},"body":{"license.html":{}}}],["through",{"_index":1057,"title":{},"body":{"license.html":{}}}],["throwerror",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thus",{"_index":1171,"title":{},"body":{"license.html":{}}}],["time",{"_index":1471,"title":{},"body":{"license.html":{}}}],["toastmodule",{"_index":288,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["todo",{"_index":549,"title":{},"body":{"injectables/MemoryStorage.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":221,"title":{"interfaces/Token.html":{}},"body":{"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_key",{"_index":449,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokendto",{"_index":196,"title":{"interfaces/TokenDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/TokenDto.html":{},"coverage.html":{}}}],["tools",{"_index":1128,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1428,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1427,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1429,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":1369,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1059,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":1371,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":1497,"title":{},"body":{"license.html":{}}}],["translate",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["translate.addlangs(['en",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('en",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["translateloader",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatemodule",{"_index":284,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["translatemodule.forroot",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateservice",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["transmission",{"_index":1318,"title":{},"body":{"license.html":{}}}],["treated",{"_index":1398,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1197,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["troubleshooting",{"_index":753,"title":{},"body":{"index.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":928,"title":{},"body":{"license.html":{}}}],["type",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":618,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["type.enum.ts",{"_index":707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typescript",{"_index":237,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["typical",{"_index":1345,"title":{},"body":{"license.html":{}}}],["ui",{"_index":744,"title":{},"body":{"index.html":{}}}],["unacceptable",{"_index":970,"title":{},"body":{"license.html":{}}}],["unautherrorinterceptor",{"_index":648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1014,"title":{},"body":{"license.html":{}}}],["unit",{"_index":811,"title":{},"body":{"index.html":{}}}],["unless",{"_index":1354,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":1153,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":1031,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":1184,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":1394,"title":{},"body":{"license.html":{}}}],["until",{"_index":1460,"title":{},"body":{"license.html":{}}}],["update",{"_index":713,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["updatedat",{"_index":611,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["updates",{"_index":1382,"title":{},"body":{"license.html":{}}}],["url",{"_index":765,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":787,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":772,"title":{},"body":{"index.html":{},"license.html":{}}}],["usefactory",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useful",{"_index":1677,"title":{},"body":{"license.html":{}}}],["user",{"_index":222,"title":{"interfaces/User.html":{}},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["userdto",{"_index":200,"title":{"interfaces/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["userid",{"_index":612,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username",{"_index":110,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username/taken",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernamecheckerror",{"_index":223,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["usernamechecksubscription",{"_index":295,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["usernameinput",{"_index":296,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["users",{"_index":886,"title":{},"body":{"license.html":{}}}],["usersubscription",{"_index":297,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uses",{"_index":1348,"title":{},"body":{"license.html":{}}}],["using",{"_index":797,"title":{},"body":{"index.html":{},"license.html":{}}}],["utilizes",{"_index":759,"title":{},"body":{"index.html":{}}}],["v1/auth",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/device",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/files",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/invitation",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/members",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/organization",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/platform",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/project",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/team",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/user",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":1282,"title":{},"body":{"license.html":{}}}],["validators",{"_index":330,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.minlength(3",{"_index":318,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["validators.minlength(8",{"_index":513,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.pattern(securepasswordregex",{"_index":577,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":317,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["value",{"_index":104,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":621,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["var",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["varaibles",{"_index":846,"title":{},"body":{"index.html":{}}}],["variable",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":834,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":865,"title":{},"body":{"license.html":{}}}],["vercel/analytics",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["vercel/speed",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":758,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":883,"title":{},"body":{"license.html":{}}}],["via",{"_index":815,"title":{},"body":{"index.html":{}}}],["view",{"_index":1074,"title":{},"body":{"license.html":{}}}],["viewchild",{"_index":329,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["viewchild('username",{"_index":327,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["violates",{"_index":1388,"title":{},"body":{"license.html":{}}}],["violation",{"_index":1456,"title":{},"body":{"license.html":{}}}],["visible",{"_index":1068,"title":{},"body":{"license.html":{}}}],["void",{"_index":309,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["volume",{"_index":1259,"title":{},"body":{"license.html":{}}}],["w",{"_index":1687,"title":{},"body":{"license.html":{}}}],["waive",{"_index":1206,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":1660,"title":{},"body":{"license.html":{}}}],["want",{"_index":899,"title":{},"body":{"license.html":{}}}],["warning':'true",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":1072,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":940,"title":{},"body":{"license.html":{}}}],["way",{"_index":890,"title":{},"body":{"license.html":{}}}],["ways",{"_index":1272,"title":{},"body":{"license.html":{}}}],["welcome",{"_index":421,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["well",{"_index":1050,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":1501,"title":{},"body":{"license.html":{}}}],["whether",{"_index":916,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1104,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1326,"title":{},"body":{"license.html":{}}}],["widely",{"_index":1098,"title":{},"body":{"license.html":{}}}],["window",{"_index":1116,"title":{},"body":{"license.html":{}}}],["window.localstorage",{"_index":486,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["window.sessionstorage",{"_index":599,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["window?.localstorage",{"_index":484,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["wipo",{"_index":1196,"title":{},"body":{"license.html":{}}}],["wish",{"_index":847,"title":{},"body":{"index.html":{},"license.html":{}}}],["withcomponentinputbinding",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":1439,"title":{},"body":{"license.html":{}}}],["withinterceptors([authinterceptor",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1034,"title":{},"body":{"license.html":{}}}],["withpreloading(preloadallmodules",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":888,"title":{},"body":{"license.html":{}}}],["work's",{"_index":1127,"title":{},"body":{"license.html":{}}}],["working",{"_index":1099,"title":{},"body":{"license.html":{}}}],["works",{"_index":428,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"license.html":{}}}],["worldwide",{"_index":1534,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1621,"title":{},"body":{"license.html":{}}}],["written",{"_index":1281,"title":{},"body":{"license.html":{}}}],["years",{"_index":1284,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":1551,"title":{},"body":{"license.html":{}}}],["z])(?=.*[${passwordspecialchars}])(?=\\\\s+$).{${passwordminlength",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*[a",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":701,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  constructor(private translate: TranslateService) {\n    translate.setDefaultLang('en');\n    translate.addLangs(['en']);\n    translate.use('en');\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/app.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authState:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthEffects } from './auth/auth.effects';\nimport { AuthState, authReducer } from './auth/auth.reducer';\n\nexport interface AppState {\n  authState: AuthState;\n}\n\nexport const appEfects = [AuthEffects];\nexport const appStore = {\n  authState: authReducer,\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n})\nexport class AuthComponent {}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate$\n                            \n                            \n                                authenticationSuccess$\n                            \n                            \n                                forgotPassword$\n                            \n                            \n                                loadCurrentUser$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signOut$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, jwtService: JwtService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/auth/auth.effects.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error })))\n          )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error })))\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error })))\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error })))\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error })))\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        })\n      ),\n    { dispatch: false }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:103\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../../services/api/auth.api.service';\nimport { JwtService } from '../../services/token-storage.service';\nimport {\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  signOut,\n} from './auth.actions';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private actions$: Actions\n  ) {}\n\n  loadCurrentUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error })))\n        )\n      )\n    )\n  );\n\n  authenticate$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error })))\n          )\n      )\n    )\n  );\n\n  forgotPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error })))\n        )\n      )\n    )\n  );\n\n  resetPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error })))\n        )\n      )\n    )\n  );\n\n  authenticationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error })))\n        )\n      )\n    )\n  );\n\n  signOut$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        })\n      ),\n    { dispatch: false }\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/auth.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                me\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/auth.api.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: AuthenticateRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            AuthenticateRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n            \n                \nisUsernameTaken(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(dto: ResetPasswordRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ResetPasswordRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { api } from './api';\nimport { TokenDto } from '../../domain/dto/token.dto';\nimport { Observable } from 'rxjs';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { ResetPasswordRequestDto } from '../../domain/dto/requests/reset-password-request.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  refreshToken(refreshToken: string): Observable {\n    return this.http.post(\n      api.authUrl + '/refreshToken',\n      { refreshToken: refreshToken },\n      api.noAuthOptions\n    );\n  }\n\n  authenticate(request: AuthenticateRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/authenticate',\n      request,\n      api.noAuthOptions\n    );\n  }\n\n  me(): Observable {\n    return this.http.get(api.authUrl + '/me', api.authOptions);\n  }\n\n  isUsernameTaken(username: string): Observable {\n    const params = new HttpParams().set('username', username);\n    return this.http.get(api.authUrl + '/username/taken', {\n      ...api.noAuthOptions,\n      params,\n    });\n  }\n\n  forgotPassword(username: string): Observable {\n    return this.http.post(\n      api.authUrl + '/forgot-password',\n      { username: username },\n      api.noAuthOptions\n    );\n  }\n\n  resetPassword(dto: ResetPasswordRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/reset-password',\n      dto,\n      api.noAuthOptions\n    );\n  }\n\n  register(dto: RegisterRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/register',\n      dto,\n      api.noAuthOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            credentials\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            forgotPasswordError\n                                        \n                                \n                                \n                                        \n                                            isUsernameAvialable\n                                        \n                                \n                                \n                                        \n                                            registrationError\n                                        \n                                \n                                \n                                        \n                                            resetPasswordError\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            usernameCheckError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:         AuthenticateRequestDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticateRequestDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forgotPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUsernameAvialable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isUsernameAvialable:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         Token | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Token | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usernameCheckError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usernameCheckError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { Token } from '../../domain/models/token.entity';\nimport { User } from '../../domain/models/user.entity';\nimport {\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  setCurrentUser,\n  setToken,\n  signOut,\n} from './auth.actions';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface AuthState {\n  user: User | null;\n  error: any | null;\n  forgotPasswordError: null | any;\n  resetPasswordError: null | any;\n  registrationError: null | any;\n  usernameCheckError: null | any;\n  isUsernameAvialable: boolean | null,\n  token: Token | null;\n  credentials: AuthenticateRequestDto | null;\n  status: StateStatus;\n}\n\nexport const initialState: AuthState = {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n};\n\nexport const authReducer = createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, {error}) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n   // Handle Reset Password\n   on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, {error}) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticateRequestDto.html":{"url":"interfaces/AuthenticateRequestDto.html","title":"interface - AuthenticateRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticateRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/authenticate-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticateRequestDto {\n    username: string,\n    password: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputTextModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                forgotPasswordForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AppState } from '../../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router, RouterModule } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectForgotPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  forgotPassword,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputTextModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n})\nexport class ForgotPasswordComponent implements AfterViewInit, OnInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService\n  ) {}\n\n  forgotPasswordForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectForgotPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 404) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.user_does_not_exist'\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.error_description'\n              ),\n            });\n          }\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.forgot-password.success'\n            ),\n            detail: this.translateService.instant(\n              'auth.forgot-password.check_your_email'\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  // eslint-disable no-non-null-asserted-optional-chain\n  forgotPassword() {\n    this.store.dispatch(\n      forgotPassword({\n        username: this.forgotPasswordForm.get('username')?.value ?? '',\n      })\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.forgot-password.welcome_message\" | translate }}\n  \n  {{\n    \"auth.forgot-password.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n      \n      } @else if (isUsernameTaken) {\n      \n      } @else {\n      \n      }\n      \n    \n    {{ \"auth.forgot-password.username_is_required\" | translate }}\n    {{ \"auth.forgot-password.username_length\" | translate }}\n\n    \n      {{ \"auth.forgot-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.forgot-password.welcome_message\" | translate }}    {{    \"auth.forgot-password.welcome_description\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {            } @else if (isUsernameTaken) {            } @else {            }              {{ \"auth.forgot-password.username_is_required\" | translate }}    {{ \"auth.forgot-password.username_length\" | translate }}          {{ \"auth.forgot-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForgotPasswordRequestDto.html":{"url":"interfaces/ForgotPasswordRequestDto.html","title":"interface - ForgotPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForgotPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForgotPasswordRequestDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                    Private\n                                    Optional\n                                currentUserErrorSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:21\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        currentUserErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { AppState } from '../../core/state/app.state';\nimport { loadCurrentUser } from '../../core/state/auth/auth.actions';\nimport { selectCurrentUser } from '../../core/state/auth/auth.selectors';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  constructor(private store: Store) {}\n\n  private currentUserErrorSubscription?: Subscription;\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n  }\n\n  ngOnDestroy() {\n    this.currentUserErrorSubscription?.unsubscribe();\n  }\n\n  currentUser = this.store.select(selectCurrentUser);\n}\n\n    \n\n    \n        Welcome: {{(currentUser | async)?.firstName}} {{(currentUser | async)?.lastName}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Welcome: {{(currentUser | async)?.firstName}} {{(currentUser | async)?.lastName}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitationComponent.html":{"url":"components/InvitationComponent.html","title":"component - InvitationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/invitation/invitation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-invitation\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./invitation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./invitation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-invitation',\n  standalone: true,\n  imports: [],\n  templateUrl: './invitation.component.html',\n  styleUrl: './invitation.component.scss'\n})\nexport class InvitationComponent {\n\n}\n\n    \n\n    \n        invitation works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'invitation works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/token-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getRefreshToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveRefreshToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/token-storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveRefreshToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { LocalStorage } from \"./local-storage.service\";\n\nconst TOKEN_KEY = 'auth-token';\nconst REFRESH_TOKEN_KEY = 'auth-refreshtoken';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class JwtService {\n\n  constructor(private storage: LocalStorage) {}\n\n  public clear(): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n  }\n\n  public saveToken(token: string): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return this.storage.getItem(TOKEN_KEY);\n  }\n\n  public saveRefreshToken(token: string): void {\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n   this.storage.setItem(REFRESH_TOKEN_KEY, token);\n  }\n\n  public getRefreshToken(): string | null {\n    return this.storage.getItem(REFRESH_TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorage.html":{"url":"injectables/LocalStorage.html","title":"injectable - LocalStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/local-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.localStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                getApplicationName\n                            \n                            \n                                isRegistrationEnabled\n                            \n                            \n                                login\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApplicationName\n                        \n                    \n                \n            \n            \n                \ngetApplicationName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRegistrationEnabled\n                        \n                    \n                \n            \n            \n                \nisRegistrationEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:71\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { Subscription, debounceTime, distinctUntilChanged, fromEvent, map } from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  authenticate,\n  loadCurrentUser\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectAuthorizationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  loginForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe(data => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAuthorizationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.login.authorization_error'\n            ),\n            detail: this.translateService.instant(\n              'auth.login.wrong_username_or_password'\n            ),\n          });\n        }\n      });\n  }\n\n  /* eslint-disable @typescript-eslint/no-non-null-asserted-optional-chain */\n  login() {\n    this.store.dispatch(\n      authenticate({\n        username: this.loginForm.get('username')?.value!,\n        password: this.loginForm.get('password')?.value!,\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  getApplicationName() {\n    return environment.appName;\n  }\n\n  isRegistrationEnabled() {\n    return environment.enableRegistration;\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService.isUsernameTaken(username).subscribe({\n      next: (result) => {\n        this.isUsernameTaken = result;\n      },\n      error: () => {\n        this.isUsernameTaken = null;\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},\n  \n  {{\n    \"auth.login.sign_in_to_continue\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n        \n        } @else if (isUsernameTaken) {\n        \n        } @else {\n        \n        }\n      \n    \n    {{ \"auth.login.username_is_required\" | translate }}\n    {{ \"auth.login.username_length\" | translate }}\n\n    {{ \"auth.login.password_label\" | translate }}\n    \n    {{ \"auth.login.password_is_required\" | translate }}\n    {{ \"auth.login.password_length\" | translate }}\n\n    \n      {{ \"auth.login.forgot_password\" | translate }}\n      {{ \"auth.login.register\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},    {{    \"auth.login.sign_in_to_continue\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {                } @else if (isUsernameTaken) {                } @else {                }              {{ \"auth.login.username_is_required\" | translate }}    {{ \"auth.login.username_length\" | translate }}    {{ \"auth.login.password_label\" | translate }}        {{ \"auth.login.password_is_required\" | translate }}    {{ \"auth.login.password_length\" | translate }}          {{ \"auth.login.forgot_password\" | translate }}      {{ \"auth.login.register\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/memory-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/memory-storage.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/memory-storage.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n//TODO: Implement better server storage alongside server temp memory storage\n@Injectable()\nexport class MemoryStorage implements Storage {\n  private data: { [key: string]: string } = {};\n\n  get length(): number {\n    return Object.keys(this.data).length;\n  }\n\n  clear(): void {\n    this.data = {};\n  }\n\n  getItem(key: string): string | null {\n    return key in this.data ? this.data[key] : null;\n  }\n\n  key(index: number): string | null {\n    const keys = Object.keys(this.data);\n\n    return index >= 0 && keys.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss'\n})\nexport class RegisterComponent {\n\n}\n\n    \n\n    \n        register works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'register works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequestDto.html":{"url":"interfaces/RegisterRequestDto.html","title":"interface - RegisterRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/register-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterRequestDto {\n  username: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                secret\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        secret\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { Subscription } from 'rxjs';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  resetPassword,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectResetPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss',\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input()\n  private secret?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  resetPasswordForm = this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectResetPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('auth.reset-password.error'),\n            detail: this.translateService.instant(\n              'auth.reset-password.wrong_hash',\n            ),\n          });\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.reset-password.success',\n            ),\n            detail: this.translateService.instant(\n              'auth.reset-password.success_message',\n            ),\n          });\n          this.router.navigate(['/auth']);\n        }\n      });\n  }\n\n  resetPassword() {\n    if (this.secret) {\n      const newPassword = this.resetPasswordForm.get('password')?.value ?? '';\n      this.store.dispatch(\n        resetPassword({ newPassword: newPassword, hash: this.secret }),\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.reset-password.welcome_message\" | translate }}\n  \n\n\n  \n    {{ \"auth.reset-password.new_password_label\" | translate }}\n    \n    {{ \"auth.reset-password.password_is_required\" | translate }}\n    {{ \"auth.reset-password.password_length\" | translate }}\n    {{ \"auth.reset-password.password_not_strong\" | translate }}\n\n    \n      {{ \"auth.reset-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.reset-password.welcome_message\" | translate }}        {{ \"auth.reset-password.new_password_label\" | translate }}        {{ \"auth.reset-password.password_is_required\" | translate }}    {{ \"auth.reset-password.password_length\" | translate }}    {{ \"auth.reset-password.password_not_strong\" | translate }}          {{ \"auth.reset-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordRequestDto.html":{"url":"interfaces/ResetPasswordRequestDto.html","title":"interface - ResetPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/reset-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPasswordRequestDto {\n    newPassword: string,\n    hash: string, \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionStorage.html":{"url":"injectables/SessionStorage.html","title":"injectable - SessionStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/session-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/session-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.sessionStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/token.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n    accessToken: string;\n    refreshToken: string;\n    expiresIn: 0;\n    refreshExpiresIn: 0;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenDto.html":{"url":"interfaces/TokenDto.html","title":"interface - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenDto {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: 0;\n  refreshExpiresIn: 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: {\n      roleId: string;\n      name: string;\n      permissions: [\n        {\n          type: ResourceType;\n          values: Permission;\n        }\n      ];\n      internal: boolean;\n    };\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from '../models/enums/permission.enum';\nimport { ResourceType } from '../models/enums/resource-type.enum';\n\nexport interface UserDto {\n  userId: string;\n  username: string;\n  lastLoginTime: Date;\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileIconUrl: string | null;\n  role: {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission;\n      }\n    ];\n    internal: boolean;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n  activated: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/authenticate-request.dto.ts\n            \n            interface\n            AuthenticateRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n            \n            interface\n            ForgotPasswordRequestDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/register-request.dto.ts\n            \n            interface\n            RegisterRequestDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/reset-password-request.dto.ts\n            \n            interface\n            ResetPasswordRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/token.dto.ts\n            \n            interface\n            TokenDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/user.dto.ts\n            \n            interface\n            UserDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/token.entity.ts\n            \n            interface\n            Token\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/user.entity.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/guards/registration.guard.ts\n            \n            variable\n            registrationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            variable\n            unauthErrorInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/api.ts\n            \n            variable\n            api\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/api.ts\n            \n            variable\n            AUTHENTICATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/auth.api.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage.service.ts\n            \n            injectable\n            LocalStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/memory-storage.service.ts\n            \n            injectable\n            MemoryStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/session-storage.service.ts\n            \n            injectable\n            SessionStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            injectable\n            JwtService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            variable\n            REFRESH_TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            variable\n            TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            variable\n            appEfects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            variable\n            appStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticationFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticationSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPasswordFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPasswordSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUserFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUserSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPasswordFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPasswordSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            setCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            setToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            signOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.effects.ts\n            \n            injectable\n            AuthEffects\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            interface\n            AuthState\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            variable\n            authReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            isLoadingAuthState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            isSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectAuthorizationError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectForgotPasswordError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectResetPasswordError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            passwordMinLength\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            passwordSpecialChars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            securePasswordRegex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/invitation/invitation.component.ts\n            \n            component\n            InvitationComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.production.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            - : ^0.0.1\n        \n            @angular/animations : ^17.1.0\n        \n            @angular/common : ^17.1.0\n        \n            @angular/compiler : ^17.1.0\n        \n            @angular/core : ^17.1.0\n        \n            @angular/forms : ^17.1.0\n        \n            @angular/platform-browser : ^17.1.0\n        \n            @angular/platform-browser-dynamic : ^17.1.0\n        \n            @angular/platform-server : ^17.1.0\n        \n            @angular/router : ^17.1.0\n        \n            @angular/ssr : ^17.1.3\n        \n            @ngrx/effects : ^17.1.0\n        \n            @ngrx/store : ^17.1.0\n        \n            @ngrx/store-devtools : ^17.1.0\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @vercel/analytics : ^1.1.3\n        \n            @vercel/speed-insights : ^1.0.9\n        \n            express : ^4.18.2\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^17.6.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            ResourceType   (src/.../resource-type.enum.ts)\n                        \n                        \n                            StateStatus   (src/.../state-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/domain/models/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/resource-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 COMMENT\n                            \n                        \n                        \n                            \n                                 DEBUG_FILE\n                            \n                        \n                        \n                            \n                                 DEVICE_STATE\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                 LOG_ENTRY\n                            \n                        \n                        \n                            \n                                 LOG_SESSION\n                            \n                        \n                        \n                            \n                                 LOG_SOURCE\n                            \n                        \n                        \n                            \n                                 ORGANIZATION\n                            \n                        \n                        \n                            \n                                 PLATFORM\n                            \n                        \n                        \n                            \n                                 PROJECT\n                            \n                        \n                        \n                            \n                                 PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                 TEAM\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                 PERMISSION\n                            \n                        \n                        \n                            \n                                 INVITATION\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/state-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StateStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : loading\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\nLogHub - Remote Centralized Logging Solution (CMS)\nThis project is a Angular CMS application that provides an UI for LogHub (remote centralized logging solution). It allows you to collect and manage logs from distributed applications in a centralized location, enhancing troubleshooting and monitoring capabilities.\nThis project was generated with Angular CLI version 17.1.3.\nThis project utilizes next features of angular:\n\nAngular 17\nSSR (Server Side Rendering)\nStandalone Components\nRouter (For url routing)\nHTTP Client (For api calls)\nNGRX (For state management)\nPrimeNG (For UI Components)\n\nTechnologies Used\n\n\n\n\n\n\n\n\n\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nBuild Docker Image\nYou can deploy the application using Docker. First, build your own image:\nExample :docker build -t your-domain/your-image-name:your-version .Here is the full example:\nExample :docker build -t dradman/loghub-cms:1 .\nThen you can run your own image with command:\nExample :docker run -p 80:4000 your-full-image-name Here is the full example:\nExample :docker run -p 80:4000 dradman/loghub-cms:1 . Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nDeploying with Docker\nYou can deploy the application using Docker. First, pull the latest Docker image from the GitHub Container Registry:\nExample :docker pull ghcr.io/dradman/loghub-cms:latestThen, run the Docker container:\nExample :docker run -p 80:4000 ghcr.io/dradman/loghub-cms:latestImportant: Make sure that all environment variables are set correctly.\nDocker-Compose\nYou can also run application using docker compose. See an example here\nEnvironment Variables\nImportant: Due to angular & general limitation since application is served to local browser you can't use standard .env to update environment varaibles.\nIf you wish to change any of the variables you will have to build your own version of application where will change these files\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            api   (src/.../api.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            appEfects   (src/.../app.state.ts)\n                        \n                        \n                            appStore   (src/.../app.state.ts)\n                        \n                        \n                            authenticate   (src/.../auth.actions.ts)\n                        \n                        \n                            AUTHENTICATE   (src/.../api.ts)\n                        \n                        \n                            authenticationFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            authenticationSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            authReducer   (src/.../auth.reducer.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.production.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            forgotPassword   (src/.../auth.actions.ts)\n                        \n                        \n                            forgotPasswordFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            forgotPasswordSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            initialState   (src/.../auth.reducer.ts)\n                        \n                        \n                            isLoadingAuthState   (src/.../auth.selectors.ts)\n                        \n                        \n                            isSuccess   (src/.../auth.selectors.ts)\n                        \n                        \n                            loadCurrentUser   (src/.../auth.actions.ts)\n                        \n                        \n                            loadCurrentUserFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            loadCurrentUserSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            passwordMinLength   (src/.../regex.constants.ts)\n                        \n                        \n                            passwordSpecialChars   (src/.../regex.constants.ts)\n                        \n                        \n                            REFRESH_TOKEN_KEY   (src/.../token-storage.service.ts)\n                        \n                        \n                            registrationGuard   (src/.../registration.guard.ts)\n                        \n                        \n                            resetPassword   (src/.../auth.actions.ts)\n                        \n                        \n                            resetPasswordFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            resetPasswordSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            securePasswordRegex   (src/.../regex.constants.ts)\n                        \n                        \n                            selectAuth   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectAuthorizationError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectCurrentUser   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectForgotPasswordError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectResetPasswordError   (src/.../auth.selectors.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            setCurrentUser   (src/.../auth.actions.ts)\n                        \n                        \n                            setToken   (src/.../auth.actions.ts)\n                        \n                        \n                            signOut   (src/.../auth.actions.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../token-storage.service.ts)\n                        \n                        \n                            unauthErrorInterceptor   (src/.../auth.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/api/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    url: environment.apiUrl,\n    teamUrl: environment.apiUrl + '/v1/team',\n    projectUrl: environment.apiUrl + '/v1/project',\n    profileUrl: environment.apiUrl + '/v1/user-profile',\n    platformUrl: environment.apiUrl + '/v1/platform',\n    organizationUrl: environment.apiUrl + '/v1/organization',\n    invitationUrl: environment.apiUrl + '/v1/invitation',\n    deviceUrl: environment.apiUrl + '/v1/device',\n    membersUrl: environment.apiUrl + '/v1/members',\n    filesUrl: environment.apiUrl + '/v1/files',\n    authUrl: environment.apiUrl + '/v1/auth',\n    authOptions: {\n        headers: new HttpHeaders({ 'Content-Type': 'application/json', 'ngrok-skip-browser-warning':'true' }),\n        context: new HttpContext().set(AUTHENTICATE, true)\n    },\n    noAuthOptions: {\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n        context: new HttpContext().set(AUTHENTICATE, false)\n    }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTHENTICATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(\n      routes,\n      withPreloading(PreloadAllModules),\n      withComponentInputBinding(),\n    ),\n    provideHttpClient(\n      withInterceptors([authInterceptor, unauthErrorInterceptor]),\n      withFetch(),\n    ),\n    provideClientHydration(),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: () => {\n        inject({ mode: isDevMode() ? 'development' : 'production' });\n        injectSpeedInsights();\n      },\n    },\n    provideAnimations(),\n    TranslateModule.forRoot({\n      defaultLanguage: 'en',\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }).providers!,\n    provideStore(appStore),\n    provideEffects(appEfects),\n    provideStoreDevtools({ maxAge: 25, logOnly: !isDevMode() }),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/app.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appEfects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [AuthEffects]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appStore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  authState: authReducer,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Authenticate',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Authentication failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Authentication success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[ForgotPassword Page] forgot password',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Forgot password failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Forgot password success'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Get authenticated user'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUserFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Get authenticated user failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUserSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Get authenticated user success',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[ResetPassword Page] Reset password',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Reset password failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Reset password success'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Set current user',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Set current user',\n  props()\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Home Page] Sign Out',\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  request: HttpRequest,\n  next: HttpHandlerFn\n): Observable> => {\n  if (request.context.get(AUTHENTICATE)) {\n    const accessToken = inject(JwtService).getToken();\n    if (accessToken) {\n      const clonedRequest = request.clone({\n        headers: request.headers.set('Authorization', `Bearer ${accessToken}`),\n      });\n      return next(clonedRequest);\n    } else {\n      return next(request);\n    }\n  } else {\n    return next(request);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unauthErrorInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  req: HttpRequest,\n  next: HttpHandlerFn,\n): Observable> => {\n  const jwtService = inject(JwtService);\n  const authService = inject(AuthService);\n  const store = inject(Store);\n  const router = inject(Router);\n\n  if (req.context.get(AUTHENTICATE)) {\n    return next(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (\n          error instanceof HttpErrorResponse &&\n          !(\n            req.url.includes('auth/authenticate') ||\n            req.url.includes('auth/refreshToken')\n          ) && //  {\n                jwtService.saveToken(refreshResult.refreshToken);\n                jwtService.saveToken(refreshResult.accessToken);\n                store.dispatch(setToken(refreshResult));\n                return next(\n                  req.clone({\n                    headers: req.headers.set(\n                      'Authorization',\n                      `Bearer ${refreshResult.accessToken}`\n                    ),\n                  })\n                );\n              }),\n              catchError((error) => {\n                if (error.status === '401') {\n                  jwtService.clear();\n                  store.dispatch(signOut());\n                  if(!router.url.startsWith('/auth')) {\n                    router.navigate(['/auth'])\n                  }\n                }\n                return throwError(() => error);\n              })\n            );\n          }\n        }\n        return throwError(() => new Error('Unauthorized Exception'));\n      })\n    );\n  } else {\n    return next(req);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, {error}) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n   // Handle Reset Password\n   on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, {error}) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:8080/api',\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'https://heavily-composed-mutt.ngrok-free.app', //TODO: Host backend somewhere\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:8080/api',\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLoadingAuthState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.status == StateStatus.LOADING\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.status == StateStatus.SUCCESS\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: AppState) => state.authState\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuthorizationError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => {\n    if (\n      state.token == null &&\n      state.status == StateStatus.ERROR &&\n      state.credentials != null\n    ) {\n      return state.error;\n    } else {\n      return null;\n    }\n  }\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.user\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForgotPasswordError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.forgotPasswordError\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectResetPasswordError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.resetPasswordError\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/utils/regex.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordSpecialChars\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\\\\?@#$%^\\`<>&+=\"!ºª·#~%&'¿¡€,:;*/+-.=_{}\\\\(\\\\)\\\\[\\\\]`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        securePasswordRegex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[${passwordSpecialChars}])(?=\\\\S+$).{${passwordMinLength},}$`\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/token-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth-refreshtoken'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth-token'\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/registration.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        registrationGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  _next: ActivatedRouteSnapshot,\n  _state: RouterStateSnapshot) => {\n    return environment.enableRegistration;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
