var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccessDeniedComponent.html",[0,0.172,1,0.868]],["body/components/AccessDeniedComponent.html",[0,0.275,1,1.488,2,1.176,3,0.071,4,0.054,5,0.927,6,0.927,7,0.927,8,0.045,9,4.726,10,2.892,11,4.726,12,0.927,13,1.895,14,1.895,15,1.72,16,5.655,17,1.227,18,1.151,19,1.253,20,2.467,21,2.849,22,4.244,23,3.166,24,2.585,25,1.253,26,6.384,27,1.306,28,6.384,29,0.457,30,0.008,31,1.474,32,0.528,33,2.129,34,1.541,35,1.541,36,1.863,37,2.07,38,0.071,39,0.528,40,6.384,41,3.213,42,6.384,43,0.927,44,1.253,45,1.253,46,0.927,47,1.519,48,0.927,49,0.513,50,0.927,51,0.908,52,0.927,53,0.908,54,0.927,55,0.908,56,0.927,57,0.908,58,0.927,59,0.908,60,0.927,61,0.908,62,0.852,63,1.253,64,0.927,65,0.871,66,0.871,67,1.671,68,0.908,69,1.253,70,0.908,71,0.927,72,0.908,73,0.927,74,0.908,75,0.908,76,0.908,77,0.927,78,0.908,79,0.889,80,1.253,81,0.908,82,0.927,83,0.908,84,0.927,85,0.908,86,0.927,87,0.908,88,0.927,89,0.908,90,0.927,91,0.908,92,0.927,93,0.908,94,0.927,95,1.418,96,0.908,97,0.927,98,0.908,99,0.817,100,0.908,101,0.927,102,0.908,103,0.927,104,0.908,105,0.927,106,0.908,107,0.927,108,0.908,109,0.908,110,1.097,111,0.908,112,1.201,113,0.927,114,1.151,115,1.253,116,0.908,117,0.908,118,0.927,119,0.908,120,0.927,121,0.908,122,0.927,123,0.908,124,0.889,125,0.908,126,0.927,127,0.908,128,0.871,129,0.908,130,0.927,131,0.908,132,0.927,133,0.927,134,0.908,135,0.927,136,0.908,137,0.927,138,0.908,139,0.927,140,0.908,141,0.908,142,0.927,143,0.908,144,1.277,145,0.927,146,0.927,147,0.927,148,0.908,149,0.927,150,0.908,151,0.927,152,0.908,153,0.927,154,0.908,155,0.908,156,0.908,157,0.766,158,0.908,159,0.927,160,0.927,161,0.871,162,0.908,163,0.927,164,0.908,165,0.927,166,0.927,167,0.927,168,0.005,169,0.005]],["title/components/AlertsComponent.html",[0,0.172,51,0.868]],["body/components/AlertsComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,1.524,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,170,5.02,171,7.932,172,6.647,173,6.647,174,2.493]],["title/components/AppComponent.html",[0,0.172,53,0.868]],["body/components/AppComponent.html",[0,0.258,1,0.802,2,1.079,3,0.063,4,0.048,5,0.819,6,0.819,7,0.819,8,0.04,12,0.819,13,1.886,14,1.886,15,0.802,17,1.126,18,1.057,19,1.15,25,1.15,27,1.199,29,0.425,30,0.008,31,1.302,32,0.466,33,1.879,34,1.361,35,1.361,38,0.063,39,0.466,41,2.432,43,0.819,44,1.15,45,1.15,46,0.819,47,1.441,48,0.819,49,0.59,50,0.819,51,0.802,52,0.819,53,1.411,54,0.819,55,0.802,56,0.819,57,0.802,58,0.819,59,0.802,60,0.819,61,0.802,62,0.753,63,1.15,64,0.819,65,0.769,66,0.769,67,1.616,68,0.802,69,1.15,70,0.802,71,0.819,72,0.802,73,0.819,74,0.802,75,0.802,76,0.802,77,0.819,78,0.802,79,0.785,80,1.15,81,0.802,82,0.819,83,0.802,84,0.819,85,0.802,86,0.819,87,0.802,88,0.819,89,0.802,90,0.819,91,0.802,92,0.819,93,0.802,94,0.819,95,1.329,96,0.802,97,0.819,98,0.802,99,0.721,100,0.802,101,0.819,102,0.802,103,0.819,104,0.802,105,0.819,106,0.802,107,0.819,108,0.802,109,0.802,110,1.027,111,0.802,112,1.102,113,0.819,114,1.057,115,1.15,116,0.802,117,0.802,118,0.819,119,0.802,120,0.819,121,0.802,122,0.819,123,0.802,124,0.785,125,0.802,126,0.819,127,0.802,128,0.769,129,0.802,130,0.819,131,0.802,132,0.819,133,0.819,134,0.802,135,0.819,136,0.802,137,0.819,138,0.802,139,0.819,140,0.802,141,0.802,142,0.819,143,0.802,144,1.196,145,0.819,146,0.819,147,0.819,148,0.802,149,0.819,150,0.802,151,0.819,152,0.802,153,0.819,154,0.802,155,0.802,156,0.802,157,0.676,158,0.802,159,0.819,160,0.819,161,0.769,162,0.802,163,0.819,164,0.802,165,0.819,166,0.819,167,0.819,168,0.005,169,0.005,175,4.173,176,2.145,177,2.966,178,3.824,179,2.716,180,5.998,181,5.86,182,5.86,183,0.266,184,1.507,185,4.146,186,3.216,187,2.398,188,5.19,189,7.343,190,7.343,191,1.33,192,4.173,193,3.307,194,4.651,195,6.213,196,1.71,197,4.173,198,1.25,199,0.387,200,1.199,201,4.173,202,1.908,203,2.394,204,4.173,205,5.19,206,1.027,207,4.173,208,5.19,209,4.173,210,4.173,211,2.96,212,2.804,213,3.382,214,4.173,215,4.173,216,4.173,217,4.173,218,4.173,219,4.173,220,3.696,221,3.696,222,3.696,223,2.36,224,5.998,225,5.19,226,5.488,227,3.696,228,3.696,229,4.173,230,2.96,231,3.148,232,3.696,233,3.696,234,5.488,235,2.804,236,3.696,237,3.696,238,3.696,239,5.19,240,3.696,241,3.696,242,3.696,243,3.696]],["title/interfaces/AppConfig.html",[244,0.33,245,3.408]],["body/interfaces/AppConfig.html",[3,0.036,4,0.028,8,0.023,18,1.357,29,0.267,30,0.008,32,0.27,38,0.058,39,0.953,49,0.312,168,0.003,169,0.003,179,1.121,183,0.154,187,1.525,194,4.744,199,0.573,202,1.605,206,1.349,223,0.738,230,4.616,231,4.598,235,5.545,244,0.643,245,6.431,246,0.538,247,1.96,248,3.407,249,4.598,250,2.976,251,3.668,252,6.862,253,1.9,254,3.668,255,0.66,256,4.869,257,5.907,258,5.907,259,6.048,260,6.001,261,6.224,262,2.754,263,6.688,264,6.084,265,4.199,266,5.605,267,5.094,268,5.556,269,5.676,270,3.956,271,5.043,272,5.362,273,4.777,274,3.942,275,3.268,276,5.688,277,3.668,278,5.859,279,5.909,280,4.199,281,4.199,282,4.921,283,4.199,284,4.199,285,2.14,286,5.362,287,3.942,288,2.928,289,5.158,290,4.704,291,5.158,292,5.8,293,3.147,294,3.147,295,3.112,296,2.609,297,3.256,298,2.928,299,5.203,300,2.928,301,3.147,302,3.949,303,5.012,304,3.147,305,3.147,306,4.199,307,2.928,308,3.338,309,2.754,310,3.368,311,2.928,312,2.928,313,1.601,314,1.473,315,3.668,316,5.158,317,4.694,318,5.542,319,3.147,320,0.9,321,6.048,322,1.504,323,3.268,324,2.609,325,1.548,326,5.907,327,3.147,328,4.043,329,1.96,330,5.542,331,5.542,332,5.542,333,5.762,334,5.275,335,5.275,336,4.598,337,5.542,338,1.96,339,1.96,340,1.824,341,1.625,342,4.909,343,1.824,344,5.275,345,5.762,346,3.942,347,4.492,348,1.96,349,2.609,350,4.512,351,3.942,352,1.824,353,4.598,354,4.929,355,3.45,356,3.147,357,2.754,358,1.422,359,1.96,360,1.96,361,3.147,362,1.548,363,3.147,364,4.324,365,2.754,366,1.96,367,1.191,368,1.089,369,1.824,370,1.96,371,1.48,372,2.754,373,1.824,374,3.147,375,3.668,376,1.824,377,5.762,378,2.85,379,4.199,380,3.563,381,2.928,382,4.199,383,3.147,384,4.199,385,3.407,386,2.658,387,2.485,388,3.421,389,2.928,390,2.609,391,3.668,392,5.762,393,1.96,394,1.716,395,0.825,396,0.825,397,0.825,398,0.865,399,0.845,400,0.907,401,2.609,402,2.609,403,2.928,404,3.147,405,2.754,406,3.949,407,3.147,408,2.928,409,1.96,410,1.96,411,3.147,412,1.96,413,3.942,414,3.942,415,3.147,416,3.147,417,3.942,418,1.96,419,3.942,420,1.625,421,1.96,422,3.942,423,3.147,424,3.147,425,1.96,426,1.96,427,1.857,428,1.96,429,2.928,430,3.147,431,3.147,432,3.942,433,3.147,434,3.668,435,3.942,436,3.147,437,1.96,438,1.716,439,1.96,440,1.96,441,3.147,442,1.96,443,1.716,444,1.96,445,1.96,446,1.96,447,1.96,448,3.942,449,1.96,450,0.707,451,1.96,452,1.96,453,1.96,454,1.96,455,1.96,456,1.96]],["title/interfaces/AppState.html",[244,0.33,457,1.695]],["body/interfaces/AppState.html",[3,0.082,4,0.062,8,0.052,29,0.517,30,0.008,38,0.116,144,1.447,168,0.006,169,0.006,183,0.348,199,0.597,223,2.142,244,0.399,246,1.214,255,0.616,457,2.634,458,5.461,459,7.318,460,7.318,461,7.318,462,7.318,463,7.318,464,7.318,465,9.03,466,7.318,467,7.318,468,5.691,469,5.461,470,6.219,471,5.461,472,5.691,473,5.461,474,6.219,475,5.461,476,5.691,477,5.461,478,6.219,479,5.461,480,5.691,481,5.461,482,6.219,483,5.461,484,5.691,485,5.461,486,6.219,487,5.461,488,5.691,489,5.461,490,6.219,491,5.461,492,6.219,493,5.461,494,5.691,495,5.461,496,5.691,497,5.296,498,5.461,499,6.219,500,5.461,501,7.022,502,4.981,503,5.461,504,5.691,505,5.461,506,5.461,507,5.461]],["title/components/AuthComponent.html",[0,0.172,55,0.868]],["body/components/AuthComponent.html",[0,0.283,1,0.961,2,1.221,3,0.075,4,0.057,5,0.981,6,0.981,7,0.981,8,0.048,12,0.981,13,1.898,14,1.898,15,0.961,17,1.274,18,1.196,19,1.301,25,1.301,27,1.356,29,0.364,30,0.008,32,0.559,33,2.251,38,0.075,39,0.559,43,0.981,44,1.301,45,1.301,46,0.981,47,1.554,48,0.981,49,0.532,50,0.981,51,0.961,52,0.981,53,0.961,54,0.981,55,1.522,56,0.981,57,0.961,58,0.981,59,0.961,60,0.981,61,0.961,62,0.902,63,1.301,64,0.981,65,0.921,66,0.921,67,1.695,68,0.961,69,1.301,70,0.961,71,0.981,72,0.961,73,0.981,74,0.961,75,0.961,76,0.961,77,0.981,78,0.961,79,0.941,80,1.301,81,0.961,82,0.981,83,0.961,84,0.981,85,0.961,86,0.981,87,0.961,88,0.981,89,0.961,90,0.981,91,0.961,92,0.981,93,0.961,94,0.981,95,1.459,96,0.961,97,0.981,98,0.961,99,0.864,100,0.961,101,0.981,102,0.961,103,0.981,104,0.961,105,0.981,106,0.961,107,0.981,108,0.961,109,0.961,110,1.128,111,0.961,112,1.247,113,0.981,114,1.196,115,1.301,116,0.961,117,0.961,118,0.981,119,0.961,120,0.981,121,0.961,122,0.981,123,0.961,124,0.941,125,0.961,126,0.981,127,0.961,128,0.921,129,0.961,130,0.981,131,0.961,132,0.981,133,0.981,134,0.961,135,0.981,136,0.961,137,0.981,138,0.961,139,0.981,140,0.961,141,0.961,142,0.981,143,0.961,144,1.313,145,0.981,146,0.981,147,0.981,148,0.961,149,0.981,150,0.961,151,0.981,152,0.961,153,0.981,154,0.961,155,0.961,156,0.961,157,0.81,158,0.961,159,0.981,160,0.981,161,0.921,162,0.961,163,0.981,164,0.961,165,0.981,166,0.981,167,0.981,168,0.006,169,0.006,180,6.587,508,4.999,509,5.871,510,6.628,511,6.628]],["title/injectables/AuthEffects.html",[320,1.047,468,3.662]],["body/injectables/AuthEffects.html",[3,0.058,4,0.044,8,0.037,29,0.442,30,0.008,32,0.432,38,0.058,39,0.432,49,0.31,168,0.005,169,0.005,183,0.247,187,1.944,191,1.26,196,1.839,198,0.825,199,0.256,200,0.791,255,0.487,308,2.366,313,2.237,314,2.058,320,1.286,322,0.954,325,2.475,427,2.841,468,4.499,512,1.487,513,3.867,514,5.352,515,6.928,516,5.9,517,6.285,518,5.352,519,4.342,520,5.751,521,6.928,522,5.352,523,5.751,524,3.867,525,5.006,526,6.53,527,5.715,528,4.386,529,3.867,530,5.378,531,5.359,532,5.551,533,6.283,534,5.551,535,5.551,536,3.149,537,4.258,538,5.551,539,3.977,540,5.551,541,5.2,542,5.551,543,2.702,544,3.867,545,5.551,546,7.096,547,3.867,548,5.551,549,3.938,550,7.096,551,7.096,552,2.573,553,5.551,554,5.551,555,5.551,556,5.551,557,7.096,558,3.867,559,5.551,560,4.411,561,7.096,562,7.096,563,7.096,564,3.867,565,5.551,566,5.551,567,5.752,568,5.551,569,3.867,570,5.551,571,5.551,572,3.867,573,5.551,574,5.551,575,5.551,576,3.867,577,5.551,578,3.867,579,5.551,580,5.551,581,5.752,582,5.551,583,3.867,584,5.551,585,6.494,586,5.551,587,4.917,588,3.867,589,2.27,590,2.184,591,2.27,592,3.867,593,3.867,594,3.425,595,3.425,596,3.425,597,3.425,598,3.425,599,3.425,600,3.425,601,3.425,602,3.425]],["title/injectables/AuthService.html",[320,1.047,525,2.891]],["body/injectables/AuthService.html",[3,0.078,4,0.059,8,0.05,29,0.491,30,0.008,32,0.582,38,0.078,39,0.582,49,0.701,79,0.98,128,0.96,168,0.006,169,0.006,179,2.414,183,0.332,184,1.751,191,1.182,196,1.888,198,1.861,199,0.577,200,1.785,202,2.152,206,1.358,223,1.589,320,1.578,322,1.285,367,2.565,368,2.346,378,2.281,388,4.88,427,2.911,512,2.002,516,5.723,518,5.136,522,5.136,525,4.358,537,4.545,539,3.858,603,5.209,604,4.83,605,6.46,606,5.723,607,3.333,608,4.924,609,5.209,610,3.998,611,6.81,612,6.069,613,5.209,614,6.81,615,6.81,616,5.209,617,4.83,618,5.209,619,5.209,620,6.81,621,5.209,622,6.81,623,5.407,624,5.209,625,4.38,626,6.81,627,6.522,628,5.209,629,5.209,630,3.333,631,4.167,632,4.221,633,5.209,634,4.613,635,4.643,636,3.5,637,4.221,638,4.613,639,5.209,640,6.768,641,8.35,642,7.587,643,6.81,644,3.333,645,5.136,646,5.209,647,5.209]],["title/interfaces/AuthState.html",[244,0.33,459,3.662]],["body/interfaces/AuthState.html",[3,0.06,4,0.045,8,0.038,29,0.433,30,0.008,38,0.099,79,1.24,128,1.214,168,0.005,169,0.005,183,0.253,199,0.573,223,1.726,244,0.29,246,0.883,253,1.355,255,0.496,270,3.776,297,2.413,303,3.621,328,4.528,358,3.383,378,2.886,395,1.355,396,1.355,399,1.387,400,1.49,450,2.792,459,5.342,470,3.518,514,2.995,515,3.518,516,4.267,517,3.518,518,2.995,519,2.43,520,3.219,521,3.518,522,2.995,523,4.585,539,4.013,543,2.819,567,3.518,581,3.518,594,3.518,595,3.518,596,3.518,597,3.518,598,3.518,599,3.518,600,3.518,601,3.518,606,4.971,612,5.418,634,3.518,635,2.43,648,3.972,649,8.121,650,8.448,651,8.121,652,7.592,653,8.121,654,8.121,655,4.572,656,6.824,657,7.592,658,3.33,659,3.462,660,1.266,661,2.43,662,1.897,663,3.972,664,2.669,665,3.972,666,3.972,667,4.033,668,2.43,669,5.622,670,2.43,671,3.972,672,4.829,673,3.518,674,3.972,675,5.011,676,3.769,677,3.972,678,3.769,679,4.829,680,3.972,681,3.964,682,3.621,683,3.972,684,3.972,685,3.972,686,3.972,687,3.972,688,3.972,689,3.972,690,3.972,691,3.972,692,3.972,693,3.972,694,3.972,695,3.972,696,3.972,697,4.033,698,4.429,699,3.972,700,3.972,701,3.972]],["title/interfaces/AuthenticateRequestDto.html",[244,0.33,612,3.408]],["body/interfaces/AuthenticateRequestDto.html",[3,0.107,4,0.081,8,0.068,30,0.008,38,0.107,168,0.007,169,0.007,183,0.455,199,0.546,206,1.403,244,0.521,246,1.585,255,0.725,537,4.889,539,4.567,612,6.235,702,7.13,703,4.363]],["title/components/CloseComponent.html",[0,0.172,57,0.868]],["body/components/CloseComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,1.524,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,352,5.982,704,5.02,705,6.647,706,6.647]],["title/components/ConfigComponent.html",[0,0.172,59,0.868]],["body/components/ConfigComponent.html",[0,0.249,1,0.416,2,0.654,3,0.032,4,0.025,5,0.885,6,0.425,7,0.425,8,0.043,12,0.425,13,1.82,14,1.82,15,0.416,17,0.682,18,0.64,19,0.696,20,1.539,21,1.777,23,1.975,24,1.612,25,0.696,27,0.726,29,0.408,30,0.008,31,0.675,32,0.242,34,0.706,35,0.706,36,0.853,37,0.948,38,0.032,39,0.788,41,3.341,43,0.425,44,1.213,45,1.213,46,0.425,47,1.023,48,0.425,49,0.583,50,0.425,51,0.416,52,0.425,53,0.416,54,0.425,55,0.416,56,0.425,57,0.416,58,0.425,59,1.188,60,0.425,61,0.416,62,0.39,63,0.696,64,0.425,65,0.399,66,0.399,67,1.281,68,0.416,69,0.696,70,0.416,71,0.425,72,0.416,73,0.425,74,0.416,75,0.416,76,0.416,77,0.425,78,0.416,79,0.407,80,0.696,81,0.416,82,0.425,83,0.416,84,0.425,85,0.416,86,0.425,87,0.416,88,0.425,89,0.416,90,0.425,91,0.416,92,0.425,93,0.416,94,0.425,95,0.885,96,0.416,97,0.425,98,0.416,99,0.374,100,0.416,101,0.425,102,0.416,103,0.425,104,0.416,105,0.425,106,0.416,107,0.425,108,0.416,109,0.416,110,0.684,111,0.416,112,0.668,113,0.425,114,0.64,115,0.696,116,0.416,117,0.416,118,0.425,119,0.416,120,0.425,121,0.416,122,0.425,123,0.416,124,0.407,125,0.416,126,0.425,127,0.416,128,0.399,129,0.416,130,0.425,131,0.416,132,0.425,133,0.425,134,0.416,135,0.425,136,0.416,137,0.425,138,0.416,139,0.425,140,0.416,141,0.416,142,0.425,143,0.416,144,0.796,145,0.425,146,0.425,147,0.425,148,0.416,149,0.425,150,0.416,151,0.425,152,0.416,153,0.425,154,0.416,155,0.416,156,0.416,157,0.351,158,0.416,159,0.425,160,0.425,161,0.399,162,0.416,163,0.425,164,0.416,165,0.425,166,0.425,167,0.425,168,0.003,169,0.003,183,0.138,184,1.753,187,0.593,188,3.143,191,1.184,194,4.546,195,5.828,196,1.794,198,1.549,199,0.519,200,1.394,202,1.835,203,2.22,205,3.143,206,1.313,208,5.098,211,1.536,212,1.455,213,1.755,220,1.918,221,3.143,222,1.918,223,1.756,224,3.994,225,3.143,226,4.665,227,1.918,228,1.918,232,1.918,233,1.918,234,3.655,235,5.949,236,1.918,237,1.918,238,1.918,239,3.143,240,1.918,241,1.918,242,1.918,243,1.918,248,3.191,253,1.539,255,0.311,256,3.191,257,3.401,258,4.925,259,3.199,260,3.401,261,5.828,264,4.664,266,4.362,267,4.823,271,2.517,273,2.385,276,4.646,278,3.504,280,3.934,281,4.341,282,3.337,285,2.377,286,2.677,290,4.431,295,2.271,297,2.873,302,5.005,303,3.683,307,2.677,308,2.635,309,5.151,310,3.045,311,2.677,312,3.934,313,1.624,314,1.834,315,3.934,316,3.934,347,4.547,354,2.385,355,3.199,358,1.91,362,3.957,378,3.484,380,2.886,385,4.552,390,4.998,395,0.739,396,0.739,397,0.739,398,0.774,402,2.385,420,2.385,427,1.92,528,2.454,707,2.165,708,5.011,709,5.151,710,6.183,711,5.011,712,4.509,713,4.509,714,4.509,715,2.153,716,3.549,717,3.549,718,3.957,719,6.346,720,5.098,721,5.215,722,3.549,723,6.183,724,6.183,725,5.215,726,1.748,727,7.056,728,2.385,729,1.633,730,3.549,731,3.143,732,2.876,733,4.386,734,4.619,735,3.934,736,4.619,737,5.215,738,5.215,739,5.215,740,3.934,741,5.215,742,4.227,743,4.227,744,4.619,745,5.215,746,5.215,747,5.477,748,3.699,749,4.619,750,5.215,751,5.215,752,3.655,753,3.655,754,2.165,755,3.143,756,3.143,757,3.143,758,3.549,759,3.143,760,3.143,761,3.143,762,3.549,763,2.876,764,3.143,765,2.876,766,2.165,767,6.183,768,3.143,769,3.549,770,2.165,771,3.143,772,3.549,773,6.25,774,5.756,775,4.155,776,5.215,777,2.165,778,3.549,779,4.619,780,2.165,781,3.549,782,2.385,783,2.165,784,3.549,785,2.271,786,6.53,787,2.165,788,3.549,789,3.549,790,3.143,791,3.143,792,5.215,793,1.804,794,6.53,795,3.994,796,4.509,797,3.401,798,3.994,799,2.677,800,3.549,801,3.549,802,2.165,803,2.165,804,5.215,805,4.619,806,4.619,807,4.619,808,2.876,809,3.549,810,3.143,811,3.549,812,2.165,813,2.165,814,2.165,815,2.165,816,7.262,817,2.165,818,2.165,819,2.165,820,2.165,821,2.165,822,2.165,823,2.165,824,2.165,825,2.165,826,2.165,827,2.165,828,2.165,829,2.165,830,2.165,831,2.165,832,2.165,833,2.165,834,2.165,835,2.165,836,1.918,837,1.004,838,4.386,839,3.549,840,2.165,841,2.165,842,5.215,843,3.143,844,2.165,845,3.143,846,2.165,847,3.143,848,2.165,849,2.165,850,2.165,851,3.143,852,2.165,853,2.165,854,2.165,855,2.165,856,4.509,857,3.549,858,3.549,859,3.549,860,3.549,861,3.549,862,3.549,863,3.549,864,3.549,865,3.549,866,3.549,867,4.619,868,6.816,869,3.549,870,3.549,871,3.549,872,5.215,873,3.549,874,3.549]],["title/components/CreateOrganizationComponent.html",[0,0.172,61,0.868]],["body/components/CreateOrganizationComponent.html",[0,0.208,1,0.558,2,0.826,3,0.044,4,0.033,5,0.569,6,0.569,7,0.569,8,0.028,12,0.569,13,1.854,14,1.854,15,0.558,17,0.861,18,0.808,19,0.879,20,1.868,21,2.158,23,2.398,24,1.957,25,0.879,27,0.917,29,0.473,30,0.008,31,0.905,32,0.324,33,1.307,34,0.946,35,0.946,36,1.144,37,1.271,38,0.044,39,0.324,41,3.403,43,0.569,44,0.879,45,0.879,46,0.569,47,1.208,48,0.569,49,0.624,50,0.569,51,0.558,52,0.569,53,0.558,54,0.569,55,0.558,56,0.569,57,0.558,58,0.569,59,0.558,60,0.569,61,1.183,62,1.584,63,0.879,64,0.569,65,0.535,66,0.535,67,1.439,68,0.558,69,0.879,70,0.558,71,0.569,72,0.558,73,0.569,74,0.558,75,0.558,76,0.558,77,0.569,78,0.558,79,0.546,80,0.879,81,0.558,82,0.569,83,0.558,84,0.569,85,0.558,86,0.569,87,0.558,88,0.569,89,0.558,90,0.569,91,0.558,92,0.569,93,0.558,94,0.569,95,1.074,96,0.558,97,0.569,98,0.558,99,0.502,100,0.558,101,0.569,102,0.558,103,0.569,104,0.558,105,0.569,106,0.558,107,0.569,108,0.558,109,0.558,110,0.83,111,0.558,112,0.843,113,0.569,114,0.808,115,0.879,116,0.558,117,0.558,118,0.569,119,0.558,120,0.569,121,0.558,122,0.569,123,0.558,124,0.546,125,0.558,126,0.569,127,0.558,128,0.535,129,0.558,130,0.569,131,0.558,132,0.569,133,0.569,134,0.558,135,0.569,136,0.558,137,0.569,138,0.558,139,0.569,140,0.558,141,0.558,142,0.569,143,0.558,144,0.967,145,0.569,146,0.569,147,0.569,148,0.558,149,0.569,150,0.558,151,0.569,152,0.558,153,0.569,154,0.558,155,0.558,156,0.558,157,0.47,158,0.558,159,0.569,160,0.569,161,0.535,162,0.558,163,0.569,164,0.558,165,0.569,166,0.569,167,0.569,168,0.004,169,0.004,176,1.641,177,2.398,178,3.091,183,0.185,184,1.153,185,3.477,186,2.696,187,2.419,191,1.017,193,3.302,196,1.825,198,1.313,199,0.524,200,1.624,202,1.808,203,2.189,206,1.226,223,1.67,253,1.529,255,0.393,285,1.723,297,1.641,313,1.438,314,1.323,322,0.716,386,1.386,395,1.529,396,1.529,397,1.868,398,1.602,399,1.565,400,1.681,427,0.968,450,2.27,457,1.089,536,1.089,543,1.67,552,2.077,625,1.58,635,1.776,660,0.925,715,2.614,837,1.345,875,8.622,876,8.622,877,2.902,878,2.98,879,2.077,880,3.827,881,2.94,882,2.696,883,2.784,884,2.878,885,3.97,886,3.97,887,5.475,888,3.679,889,3.214,890,5.201,891,4.849,892,5.475,893,4.437,894,4.437,895,4.482,896,3.632,897,5.019,898,3.351,899,3.38,900,2.571,901,4.989,902,2.75,903,3.991,904,3.728,905,4.482,906,4.482,907,2.902,908,2.902,909,3.632,910,2.902,911,3.697,912,2.902,913,2.902,914,2.902,915,2.902,916,3.38,917,2.902,918,2.439,919,3.351,920,2.902,921,3.991,922,2.902,923,4.482,924,2.902,925,2.902,926,3.758,927,2.207,928,3.97,929,2.902,930,2.902,931,3.632,932,2.902,933,1.429,934,1.58,935,1.271,936,1.476,937,1.429,938,1.776,939,3.35,940,1.776,941,3.38,942,2.571,943,2.571,944,1.144,945,2.189,946,2.352,947,2.902,948,2.352,949,2.571,950,2.189,951,2.352,952,2.742,953,1.86,954,2.279,955,2.356,956,2.742,957,2.742,958,2.352,959,2.571,960,2.902,961,2.571,962,2.902,963,1.812,964,2.902,965,2.902,966,1.95,967,3.011,968,1.95,969,2.571,970,1.857,971,4.129,972,1.526,973,2.352,974,2.571,975,1.476,976,1.476,977,1.476,978,2.902,979,2.902,980,1.429,981,1.429,982,2.902,983,3.632,984,2.902,985,2.902,986,2.902,987,2.902,988,3.236,989,2.189,990,2.902,991,2.902,992,2.902,993,2.352,994,2.571,995,2.189,996,3.632,997,4.482,998,4.482,999,4.482,1000,4.482,1001,4.482,1002,4.482]],["title/interfaces/CreateOrganizationRequestDto.html",[244,0.33,941,3.408]],["body/interfaces/CreateOrganizationRequestDto.html",[3,0.107,4,0.081,8,0.068,30,0.008,38,0.107,49,0.721,168,0.007,169,0.007,183,0.454,199,0.546,206,1.403,244,0.52,246,1.583,255,0.725,703,4.357,881,3.4,911,4.719,941,6.229,1003,5.05]],["title/interfaces/CreateProjectDebugFileDto.html",[244,0.33,1004,4.002]],["body/interfaces/CreateProjectDebugFileDto.html",[3,0.106,4,0.08,8,0.09,29,0.386,30,0.008,38,0.106,65,1.296,110,1.067,168,0.007,169,0.007,183,0.449,199,0.609,244,0.514,246,1.564,255,0.72,1003,4.992,1004,7.266,1005,6.233,1006,6.746,1007,6.233,1008,3.262]],["title/interfaces/CreateProjectReleaseDto.html",[244,0.33,1009,3.662]],["body/interfaces/CreateProjectReleaseDto.html",[3,0.108,4,0.082,8,0.069,30,0.008,38,0.108,110,1.094,168,0.007,169,0.007,183,0.46,199,0.477,206,1.331,244,0.527,246,1.604,255,0.73,1003,5.118,1009,6.746,1010,6.391,1011,5.292]],["title/interfaces/CreateProjectRequestDto.html",[244,0.33,1012,4.002]],["body/interfaces/CreateProjectRequestDto.html",[3,0.107,4,0.081,8,0.068,30,0.008,38,0.107,49,0.721,110,1.08,168,0.007,169,0.007,183,0.454,199,0.546,206,1.403,244,0.52,246,1.583,255,0.725,703,4.357,1003,5.05,1012,7.316,1013,6.033]],["title/interfaces/CreateTeamRequestDto.html",[244,0.33,1014,3.662]],["body/interfaces/CreateTeamRequestDto.html",[3,0.108,4,0.082,8,0.069,30,0.008,38,0.108,157,1.169,168,0.007,169,0.007,183,0.46,199,0.477,206,1.331,244,0.527,246,1.604,255,0.73,703,4.415,911,4.739,1003,5.118,1014,6.746]],["title/components/DetailsComponent.html",[0,0.172,68,0.868]],["body/components/DetailsComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,1.524,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,1015,5.02,1016,5.626,1017,5.887,1018,5.887]],["title/components/DevicesComponent.html",[0,0.172,70,0.868]],["body/components/DevicesComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,1.524,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,1019,5.02,1020,7.025,1021,6.647,1022,6.647]],["title/components/DocumentationComponent.html",[0,0.172,72,0.868]],["body/components/DocumentationComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,1.524,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,1023,5.02,1024,7.932,1025,6.647,1026,6.647]],["title/components/EnvironmentsTableComponent.html",[0,0.172,74,0.868]],["body/components/EnvironmentsTableComponent.html",[0,0.181,1,1.051,2,0.698,3,0.072,4,0.027,5,0.461,6,0.461,7,0.461,8,0.023,10,1.436,12,0.461,13,1.83,14,1.83,15,0.728,17,0.728,18,1.375,19,0.744,20,1.627,21,1.879,23,2.087,24,1.704,25,0.744,27,0.775,29,0.474,30,0.008,31,0.732,32,0.262,34,0.765,35,0.765,36,0.925,37,1.028,38,0.035,39,0.262,41,3.094,43,0.461,44,0.744,45,0.744,46,0.461,47,1.074,48,0.461,49,0.542,50,0.461,51,0.451,52,0.461,53,0.451,54,0.461,55,0.451,56,0.461,57,0.451,58,0.461,59,0.451,60,0.461,61,0.451,62,0.423,63,0.744,64,0.461,65,0.432,66,0.432,67,1.326,68,0.451,69,0.744,70,0.451,71,0.461,72,0.451,73,0.461,74,1.051,75,1.743,76,0.451,77,0.461,78,0.451,79,0.442,80,0.744,81,0.451,82,0.461,83,0.451,84,0.461,85,0.451,86,0.461,87,0.451,88,0.461,89,0.451,90,0.461,91,0.451,92,0.461,93,0.451,94,0.461,95,0.935,96,0.451,97,0.461,98,0.451,99,0.406,100,0.451,101,0.461,102,0.451,103,0.461,104,0.451,105,0.461,106,0.451,107,0.461,108,0.451,109,0.451,110,1.101,111,0.451,112,0.713,113,0.461,114,0.684,115,0.744,116,0.451,117,0.451,118,0.461,119,0.451,120,0.461,121,0.451,122,0.461,123,0.451,124,0.442,125,0.451,126,0.461,127,0.451,128,0.432,129,0.451,130,0.461,131,0.451,132,0.461,133,0.461,134,0.451,135,0.461,136,0.451,137,0.461,138,0.451,139,0.461,140,0.451,141,0.451,142,0.461,143,0.451,144,0.842,145,0.461,146,0.461,147,0.461,148,0.451,149,0.461,150,0.451,151,0.461,152,0.451,153,0.461,154,0.451,155,0.451,156,0.451,157,0.38,158,0.451,159,0.461,160,0.461,161,0.432,162,0.451,163,0.461,164,0.451,165,0.461,166,0.461,167,0.461,168,0.003,169,0.003,176,1.388,177,2.087,183,0.15,184,0.975,186,2.396,187,2.088,191,0.86,193,3.042,196,1.868,198,1.28,199,0.547,200,1.228,202,1.734,203,2.167,206,1.156,223,0.716,253,1.293,255,0.333,285,2.791,297,3.002,308,3.177,313,2.13,314,2,322,0.579,395,1.293,396,1.293,397,1.293,398,1.355,399,1.324,457,0.88,502,2.688,536,1.788,543,1.156,552,2.536,655,3.944,658,1.088,660,0.748,662,1.121,676,1.81,678,2.613,681,2.613,697,2.319,715,2.276,726,1.866,785,4.499,793,1.927,837,1.088,879,1.757,880,3.575,882,2.347,883,2.423,884,2.505,902,2.408,903,3.677,918,2.594,919,2.594,927,1.156,933,1.156,934,1.278,935,1.028,936,1.193,937,1.156,944,0.925,953,3.323,954,1.927,955,1.234,963,2.212,975,2.782,976,2.782,977,2.782,980,2.694,981,3.671,1008,1.088,1027,8.795,1028,8.795,1029,1.665,1030,4.879,1031,4.259,1032,3.203,1033,2.917,1034,3.381,1035,2.688,1036,2.688,1037,3.381,1038,4.767,1039,3.842,1040,3.863,1041,3.863,1042,4.767,1043,4.767,1044,4.767,1045,2.688,1046,5.471,1047,3.79,1048,5.471,1049,4.127,1050,3.072,1051,3.072,1052,3.595,1053,3.863,1054,3.381,1055,3.381,1056,3.381,1057,3.595,1058,3.381,1059,1.156,1060,2.079,1061,1.77,1062,1.77,1063,1.902,1064,2.079,1065,2.079,1066,1.665,1067,1.902,1068,2.079,1069,2.688,1070,3.881,1071,2.347,1072,2.347,1073,2.079,1074,3.79,1075,2.347,1076,2.347,1077,2.347,1078,3.79,1079,1.902,1080,4.792,1081,3.072,1082,2.347,1083,1.615,1084,2.688,1085,2.079,1086,3.79,1087,3.79,1088,1.902,1089,2.079,1090,3.348,1091,2.858,1092,2.425,1093,2.079,1094,1.902,1095,3.79,1096,2.347,1097,3.79,1098,2.347,1099,4.767,1100,1.902,1101,1.577,1102,1.902,1103,1.577,1104,1.436,1105,1.665,1106,1.502,1107,1.502,1108,2.347,1109,2.347,1110,2.347,1111,2.347,1112,2.347,1113,2.858,1114,1.902,1115,2.505,1116,1.278,1117,1.156,1118,1.436,1119,1.436,1120,1.121,1121,1.193,1122,1.436,1123,3.357,1124,3.357,1125,3.357,1126,1.577,1127,1.502,1128,2.798,1129,3.05,1130,3.595,1131,1.665,1132,2.858,1133,2.858,1134,2.688,1135,2.547,1136,2.688,1137,2.688,1138,2.858,1139,2.688,1140,2.858,1141,2.319,1142,3.501,1143,2.547,1144,2.688,1145,4.302,1146,2.547,1147,4.109,1148,2.688,1149,2.688,1150,3.881,1151,2.688,1152,2.347,1153,2.688,1154,2.347,1155,2.347,1156,2.347,1157,2.347,1158,3.863,1159,2.347,1160,2.347,1161,2.14,1162,2.063,1163,2.063,1164,2.425,1165,3.79,1166,2.688,1167,2.347,1168,2.688,1169,2.347,1170,2.347,1171,2.347,1172,2.347,1173,2.347,1174,2.347,1175,2.319,1176,3.79,1177,2.858,1178,3.79,1179,3.79,1180,3.79,1181,3.79]],["title/interfaces/FileDto.html",[244,0.33,1182,3.408]],["body/interfaces/FileDto.html",[3,0.102,4,0.077,8,0.065,30,0.008,38,0.102,168,0.007,169,0.007,183,0.433,199,0.604,206,1.438,244,0.496,246,1.508,255,0.704,310,4.211,799,6.666,1182,6.054,1183,6.782,1184,8.839,1185,8.839,1186,8.839,1187,8.839,1188,8.839,1189,3.745]],["title/components/FooterComponent.html",[0,0.172,76,0.868]],["body/components/FooterComponent.html",[0,0.284,1,0.966,2,1.225,3,0.075,4,0.057,5,0.986,6,0.986,7,0.986,8,0.048,12,0.986,13,1.899,14,1.899,15,0.966,17,1.278,18,1.2,19,0.986,25,1.305,27,1.361,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.986,44,1.305,45,1.305,46,0.986,47,1.557,48,0.986,49,0.534,50,0.986,51,0.966,52,0.986,53,0.966,54,0.986,55,0.966,56,0.986,57,0.966,58,0.986,59,0.966,60,0.986,61,0.966,62,0.906,63,1.305,64,0.986,65,0.926,66,0.926,67,1.697,68,0.966,69,1.305,70,0.966,71,0.986,72,0.966,73,0.986,74,0.966,75,0.966,76,1.525,77,0.986,78,0.966,79,0.945,80,1.305,81,0.966,82,0.986,83,0.966,84,0.986,85,0.966,86,0.986,87,0.966,88,0.986,89,0.966,90,0.986,91,0.966,92,0.986,93,0.966,94,0.986,95,1.463,96,0.966,97,0.986,98,0.966,99,0.869,100,0.966,101,0.986,102,0.966,103,0.986,104,0.966,105,0.986,106,0.966,107,0.986,108,0.966,109,0.966,110,1.131,111,0.966,112,1.251,113,0.986,114,1.2,115,1.305,116,0.966,117,0.966,118,0.986,119,0.966,120,0.986,121,0.966,122,0.986,123,0.966,124,0.945,125,0.966,126,0.986,127,0.966,128,0.926,129,0.966,130,0.986,131,0.966,132,0.986,133,0.986,134,0.966,135,0.986,136,0.966,137,0.986,138,0.966,139,0.986,140,0.966,141,0.966,142,0.986,143,0.966,144,1.316,145,0.986,146,0.986,147,0.986,148,0.966,149,0.986,150,0.966,151,0.986,152,0.966,153,0.986,154,0.966,155,0.966,156,0.966,157,0.814,158,0.966,159,0.986,160,0.986,161,0.926,162,0.966,163,0.986,164,0.966,165,0.986,166,0.986,167,0.986,168,0.006,169,0.006,1190,5.025,1191,6.651,1192,6.651,1193,6.651,1194,6.651]],["title/components/ForgotPasswordComponent.html",[0,0.172,78,0.868]],["body/components/ForgotPasswordComponent.html",[0,0.213,1,0.578,2,0.849,3,0.045,4,0.034,5,0.59,6,0.59,7,0.59,8,0.029,12,0.59,13,1.858,14,1.858,15,0.578,17,0.885,18,0.831,19,0.904,20,1.911,21,2.207,22,3.287,24,2.002,25,0.904,27,0.943,29,0.469,30,0.008,31,0.938,32,0.336,33,1.355,34,0.981,35,0.981,36,1.186,38,0.045,39,0.336,41,3.432,43,0.59,44,0.904,45,0.904,46,0.59,47,1.231,48,0.59,49,0.504,50,0.59,51,0.578,52,0.59,53,0.578,54,0.59,55,0.578,56,0.59,57,0.578,58,0.59,59,0.578,60,0.59,61,0.578,62,0.543,63,0.904,64,0.59,65,0.554,66,0.554,67,1.457,68,0.578,69,0.904,70,0.578,71,0.59,72,0.578,73,0.59,74,0.578,75,0.578,76,0.578,77,0.59,78,1.206,79,1.397,80,0.904,81,0.578,82,0.59,83,0.578,84,0.59,85,0.578,86,0.59,87,0.578,88,0.59,89,0.578,90,0.59,91,0.578,92,0.59,93,0.578,94,0.59,95,1.099,96,0.578,97,0.59,98,0.578,99,0.52,100,0.578,101,0.59,102,0.578,103,0.59,104,0.578,105,0.59,106,0.578,107,0.59,108,0.578,109,0.578,110,0.849,111,0.578,112,0.867,113,0.59,114,0.831,115,0.904,116,0.578,117,0.578,118,0.59,119,0.578,120,0.59,121,0.578,122,0.59,123,0.578,124,0.566,125,0.578,126,0.59,127,0.578,128,0.554,129,0.578,130,0.59,131,0.578,132,0.59,133,0.59,134,0.578,135,0.59,136,0.578,137,0.59,138,0.578,139,0.59,140,0.578,141,0.578,142,0.59,143,0.578,144,0.989,145,0.59,146,0.59,147,0.59,148,0.578,149,0.59,150,0.578,151,0.59,152,0.578,153,0.59,154,0.578,155,0.578,156,0.578,157,0.487,158,0.578,159,0.59,160,0.59,161,0.554,162,0.578,163,0.59,164,0.578,165,0.59,166,0.59,167,0.59,168,0.004,169,0.004,176,1.687,177,2.452,178,3.162,183,0.192,184,1.185,185,3.543,186,2.748,187,2.431,191,1.046,193,3.345,196,1.805,198,0.983,199,0.506,200,1.668,202,1.668,203,2.13,206,0.849,253,1.027,255,0.404,285,1.156,297,1.687,313,1.471,314,1.353,322,0.742,358,1.101,386,1.437,395,1.572,396,1.572,397,1.572,398,1.076,399,1.051,400,1.128,450,2.381,457,1.128,518,5.382,519,1.841,525,4.752,536,1.128,537,3.415,539,2.342,543,1.914,549,2.134,552,1.394,604,4.798,617,2.134,660,0.959,676,1.437,715,2.674,837,1.394,878,3.048,879,2.136,880,3.867,882,2.757,883,2.847,884,2.943,888,3.762,889,3.287,898,3.415,902,2.786,903,3.884,904,3.776,918,2.508,919,2.508,921,4.275,926,3.162,927,1.481,933,1.481,934,1.637,935,1.317,936,1.53,937,1.481,938,1.841,939,2.819,940,1.841,944,1.186,952,1.841,953,1.248,954,1.53,955,1.581,956,1.841,957,1.841,963,2.264,966,2.021,967,2.021,968,2.021,970,1.925,971,2.269,973,2.438,975,2.847,976,2.847,977,2.847,980,2.757,981,3.514,988,2.422,1120,1.437,1128,1.766,1195,8.542,1196,8.542,1197,2.665,1198,4.081,1199,4.081,1200,5.599,1201,4.959,1202,4.223,1203,4.223,1204,3.972,1205,3.475,1206,2.021,1207,4.607,1208,3.475,1209,3.008,1210,3.008,1211,3.008,1212,3.008,1213,3.008,1214,2.665,1215,3.475,1216,3.008,1217,3.268,1218,3.008,1219,2.665,1220,2.665,1221,3.008,1222,3.475,1223,2.665,1224,2.134,1225,4.959,1226,1.925,1227,3.008,1228,1.925,1229,2.269,1230,2.269,1231,2.269,1232,2.021,1233,2.134,1234,2.134,1235,2.134,1236,3.008,1237,8.612,1238,4.081,1239,3.008,1240,3.008,1241,2.665,1242,2.665,1243,2.665,1244,2.665,1245,3.008,1246,2.134,1247,2.665,1248,3.475,1249,2.269,1250,2.665,1251,2.665,1252,3.008,1253,2.269,1254,3.475,1255,4.081,1256,4.607,1257,4.081,1258,4.081,1259,4.607,1260,4.607,1261,4.081]],["title/interfaces/ForgotPasswordRequestDto.html",[244,0.33,1262,4.002]],["body/interfaces/ForgotPasswordRequestDto.html",[3,0.108,4,0.082,8,0.069,30,0.008,38,0.108,168,0.007,169,0.007,183,0.46,199,0.477,206,1.331,244,0.527,246,1.604,255,0.73,539,3.668,703,4.415,1262,7.372,1263,7.215,1264,4.907]],["title/components/GuidesComponent.html",[0,0.172,81,0.868]],["body/components/GuidesComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,1.524,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,1265,5.02,1266,7.932,1267,6.647,1268,6.647]],["title/components/HomeComponent.html",[0,0.172,83,0.868]],["body/components/HomeComponent.html",[0,0.186,1,0.468,2,0.719,3,0.037,4,0.028,5,0.478,6,0.478,7,0.478,8,0.023,12,0.478,13,1.835,14,1.835,15,0.468,17,0.75,18,0.704,19,0.766,20,1.668,25,0.766,27,0.799,29,0.462,30,0.008,31,0.76,32,0.272,33,1.097,34,0.794,35,0.794,38,0.037,39,0.684,43,0.478,44,0.766,45,1.281,46,0.478,47,1.097,48,0.478,49,0.449,50,0.478,51,0.468,52,0.478,53,0.468,54,0.478,55,0.468,56,0.478,57,0.468,58,0.478,59,1.074,60,0.478,61,0.468,62,0.439,63,0.766,64,0.478,65,0.449,66,0.449,67,1.346,68,0.468,69,0.766,70,0.468,71,0.478,72,0.468,73,0.478,74,0.468,75,0.468,76,1.074,77,0.478,78,0.468,79,0.458,80,0.766,81,0.468,82,0.478,83,1.074,84,0.478,85,0.468,86,0.478,87,0.468,88,0.478,89,0.468,90,0.478,91,0.468,92,0.478,93,0.468,94,0.478,95,0.959,96,0.468,97,0.478,98,0.468,99,0.421,100,0.468,101,0.478,102,0.468,103,0.478,104,0.468,105,0.478,106,0.468,107,0.478,108,0.468,109,0.468,110,0.741,111,0.468,112,0.735,113,0.478,114,0.704,115,0.766,116,0.468,117,0.468,118,0.478,119,0.468,120,0.478,121,0.468,122,0.478,123,0.468,124,0.458,125,0.468,126,0.478,127,0.468,128,0.449,129,0.468,130,0.478,131,0.468,132,0.478,133,0.478,134,0.468,135,0.478,136,0.468,137,0.478,138,0.468,139,0.478,140,0.468,141,1.254,142,0.478,143,0.468,144,0.863,145,0.478,146,0.478,147,0.478,148,0.468,149,0.478,150,0.468,151,0.478,152,0.468,153,0.478,154,0.468,155,0.468,156,0.468,157,0.395,158,0.468,159,0.478,160,0.478,161,0.449,162,1.254,163,0.478,164,0.468,165,0.478,166,0.478,167,0.478,168,0.003,169,0.003,176,1.43,177,2.14,178,2.759,183,0.155,184,1.004,185,3.156,186,2.448,187,2.286,191,0.886,193,3.089,194,4.259,195,5.172,196,1.843,198,0.833,199,0.527,200,1.336,202,1.813,203,2.195,206,0.99,211,1.728,212,1.637,213,1.974,223,2.092,230,2.769,235,2.624,248,1.491,253,1.907,255,0.343,259,1.728,262,3.965,266,4.705,270,2.938,275,3.283,276,3.995,278,4.387,283,2.945,285,0.936,288,2.945,290,3.156,291,4.216,292,3.685,308,2.382,313,1.025,314,0.943,317,3.127,322,0.601,343,1.837,347,4.105,349,2.624,353,2.945,354,2.624,357,1.728,378,1.067,385,3.42,386,1.163,395,1.332,396,1.332,397,1.668,398,1.396,399,1.364,400,1.465,427,1.864,450,1.633,457,0.914,519,1.491,543,1.191,660,0.777,709,2.769,718,4.178,728,2.624,733,2.769,748,3.466,771,3.458,790,4.951,799,6.233,808,4.53,838,3.466,843,4.328,845,2.157,847,2.157,851,3.458,878,2.66,881,1.163,898,3.042,902,2.449,904,3.487,921,3.733,927,1.923,933,1.199,935,1.067,944,0.96,945,1.837,946,1.974,949,2.157,950,1.837,953,2.028,954,2.484,961,2.157,963,0.985,969,2.157,970,1.559,971,2.945,972,2.569,974,2.157,981,1.199,1059,1.199,1083,1.038,1115,1.28,1120,1.163,1141,1.491,1142,2.499,1145,2.389,1147,3.127,1226,1.559,1228,1.559,1232,1.637,1269,2.436,1270,6.074,1271,4.887,1272,3.904,1273,3.904,1274,4.887,1275,4.887,1276,4.887,1277,4.887,1278,4.887,1279,4.887,1280,4.887,1281,4.887,1282,6.118,1283,5.59,1284,4.887,1285,5.59,1286,5.59,1287,5.59,1288,4.887,1289,6.118,1290,7.243,1291,7.352,1292,3.904,1293,2.436,1294,3.904,1295,5.291,1296,3.904,1297,5.59,1298,2.436,1299,7.971,1300,6.346,1301,2.436,1302,3.904,1303,6.074,1304,7.706,1305,6.118,1306,5.215,1307,3.96,1308,2.945,1309,2.945,1310,3.164,1311,3.904,1312,4.53,1313,2.436,1314,5.59,1315,3.904,1316,3.458,1317,2.436,1318,3.458,1319,4.951,1320,3.904,1321,2.436,1322,2.436,1323,2.436,1324,2.436,1325,5.59,1326,6.118,1327,3.904,1328,3.904,1329,2.436,1330,3.904,1331,3.458,1332,2.436,1333,2.436,1334,2.436,1335,2.436,1336,2.436,1337,2.436,1338,2.436,1339,2.436,1340,2.436,1341,2.436,1342,2.436,1343,2.436,1344,3.458,1345,2.436,1346,2.436,1347,2.436,1348,2.436,1349,2.436,1350,3.904,1351,2.436,1352,6.858,1353,3.904,1354,3.904,1355,5.59,1356,2.436,1357,2.436,1358,2.436,1359,2.436,1360,3.904,1361,6.118,1362,2.436,1363,2.436,1364,2.436,1365,2.436,1366,3.904,1367,4.887,1368,2.436,1369,2.157,1370,2.157,1371,2.157,1372,2.157,1373,2.436,1374,2.436,1375,2.436,1376,3.164,1377,2.436,1378,2.436,1379,2.436,1380,2.436,1381,2.436,1382,3.904,1383,2.436,1384,2.436,1385,2.157,1386,4.887,1387,2.436,1388,2.436,1389,2.436,1390,3.904,1391,2.436,1392,5.59,1393,2.157,1394,2.436,1395,3.904,1396,2.436,1397,2.436,1398,2.436,1399,3.904,1400,2.436,1401,2.436,1402,2.436,1403,3.904,1404,2.436,1405,3.904,1406,2.436,1407,2.436,1408,2.436,1409,3.458,1410,2.436,1411,2.436,1412,2.436,1413,1.974]],["title/interfaces/Invitation.html",[244,0.33,698,3.036]],["body/interfaces/Invitation.html",[3,0.105,4,0.08,8,0.067,29,0.384,30,0.008,38,0.105,168,0.007,169,0.007,183,0.446,199,0.572,206,1.397,244,0.511,246,1.555,255,0.717,698,5.494,1264,4.86,1414,6.997,1415,7.908,1416,5.094,1417,6.997]],["title/components/InvitationComponent.html",[0,0.172,85,0.868]],["body/components/InvitationComponent.html",[0,0.203,1,0.534,2,0.798,3,0.042,4,0.032,5,0.545,6,0.545,7,0.545,8,0.027,12,0.545,13,1.85,14,1.85,15,0.534,17,0.832,18,1.085,19,0.85,20,1.817,21,2.099,22,3.126,24,1.904,25,0.85,27,0.886,29,0.479,30,0.008,31,0.866,32,0.31,33,1.251,34,0.906,35,0.906,36,1.095,38,0.042,39,0.31,41,3.762,43,0.545,44,0.85,45,0.85,46,0.545,47,1.18,48,0.545,49,0.483,50,0.545,51,0.534,52,0.545,53,0.534,54,0.545,55,0.534,56,0.545,57,0.534,58,0.545,59,0.534,60,0.545,61,0.534,62,0.501,63,0.85,64,0.545,65,0.512,66,0.512,67,1.416,68,0.534,69,0.85,70,0.534,71,0.545,72,0.534,73,0.545,74,0.534,75,0.534,76,0.534,77,0.545,78,0.534,79,0.523,80,0.85,81,0.534,82,0.545,83,0.534,84,0.545,85,1.156,86,0.545,87,0.534,88,0.545,89,0.534,90,0.545,91,0.534,92,0.545,93,0.534,94,0.545,95,1.045,96,0.534,97,0.545,98,0.534,99,0.48,100,0.534,101,0.545,102,0.534,103,0.545,104,0.534,105,0.545,106,0.534,107,0.545,108,0.534,109,0.534,110,0.808,111,0.534,112,0.815,113,0.545,114,0.781,115,0.85,116,0.534,117,0.534,118,0.545,119,0.534,120,0.545,121,0.534,122,0.545,123,0.534,124,0.523,125,0.534,126,0.545,127,0.534,128,0.512,129,0.534,130,0.545,131,0.534,132,0.545,133,0.545,134,0.534,135,0.545,136,0.534,137,0.545,138,0.534,139,0.545,140,0.534,141,0.534,142,0.545,143,0.534,144,0.94,145,0.545,146,0.545,147,0.545,148,0.534,149,0.545,150,0.534,151,0.545,152,0.534,153,0.545,154,0.534,155,0.534,156,0.534,157,0.45,158,0.534,159,0.545,160,0.545,161,0.512,162,0.534,163,0.545,164,0.534,165,0.545,166,0.545,167,0.545,168,0.004,169,0.004,176,1.586,177,2.332,178,3.007,183,0.177,184,1.114,185,3.396,186,2.634,187,2.39,191,0.983,193,3.249,196,1.775,198,0.924,199,0.493,200,1.527,202,1.608,203,2.062,206,0.989,223,0.847,253,0.948,255,0.38,285,2.047,297,1.586,313,1.398,314,1.575,322,0.685,358,1.017,386,2.068,395,0.948,396,0.948,397,1.817,398,0.993,399,0.97,400,1.042,450,2.24,457,1.042,514,3.267,519,1.7,525,4.617,527,5.118,536,1.042,537,3.273,539,2.707,543,1.989,549,1.97,552,1.287,604,5.118,606,4.536,617,1.97,623,2.911,625,2.898,635,1.7,660,0.886,698,2.911,715,2.543,726,2.133,837,1.287,878,2.898,879,2.008,880,3.776,882,2.622,883,2.707,884,2.799,888,3.578,889,3.126,898,3.273,902,2.706,903,3.76,904,3.668,918,2.358,919,4.268,921,3.927,926,3.007,927,1.368,933,1.368,934,1.512,935,1.216,936,1.412,937,1.368,938,1.7,939,2.651,940,1.7,944,1.095,952,1.7,953,1.153,954,1.412,955,1.46,956,1.7,957,1.7,963,1.751,966,1.866,967,1.866,968,1.866,970,1.777,971,2.095,975,2.202,976,2.202,977,2.202,980,2.133,981,2.962,988,2.277,1016,1.97,1120,1.326,1128,1.631,1202,4.016,1203,4.016,1204,3.777,1205,3.267,1206,1.866,1208,3.267,1215,3.267,1217,3.072,1222,3.267,1224,1.97,1226,1.777,1228,1.777,1229,2.095,1230,2.095,1231,2.095,1232,1.866,1233,1.97,1234,1.97,1235,1.97,1246,1.97,1248,3.267,1253,2.095,1254,3.267,1264,2.898,1413,3.511,1418,2.778,1419,4.315,1420,4.016,1421,4.332,1422,4.332,1423,4.716,1424,5.327,1425,4.332,1426,2.778,1427,2.778,1428,2.778,1429,2.778,1430,2.778,1431,2.778,1432,2.778,1433,2.778,1434,3.267,1435,3.511,1436,3.511,1437,3.578,1438,3.578,1439,2.778,1440,2.778,1441,2.778,1442,2.778,1443,2.251,1444,2.095,1445,2.46,1446,2.778,1447,2.251,1448,2.251,1449,2.778,1450,2.778,1451,2.778,1452,2.251,1453,2.778,1454,2.778,1455,4.332,1456,2.778,1457,2.778,1458,2.46,1459,2.46,1460,2.46,1461,2.46,1462,2.46,1463,2.778,1464,4.332,1465,4.332,1466,4.332,1467,4.332,1468,4.332,1469,4.332,1470,4.332,1471,4.332,1472,4.332,1473,4.332,1474,4.332,1475,4.332,1476,4.332,1477,4.332,1478,4.332]],["title/interfaces/InvitationDto.html",[244,0.33,1479,3.205]],["body/interfaces/InvitationDto.html",[3,0.105,4,0.08,8,0.067,29,0.384,30,0.008,38,0.105,168,0.007,169,0.007,183,0.446,199,0.572,206,1.397,244,0.511,246,1.555,255,0.717,1264,4.86,1415,7.908,1416,5.094,1479,5.799,1480,6.997,1481,6.997]],["title/interfaces/InvitationRequestDto.html",[244,0.33,1482,3.662]],["body/interfaces/InvitationRequestDto.html",[3,0.107,4,0.081,8,0.068,30,0.008,38,0.107,168,0.007,169,0.007,183,0.455,199,0.546,206,1.403,244,0.521,246,1.585,255,0.725,703,4.363,1264,4.889,1482,6.7,1483,7.13,1484,6.371]],["title/injectables/InvitationService.html",[320,1.047,527,3.205]],["body/injectables/InvitationService.html",[3,0.09,4,0.068,8,0.057,29,0.494,30,0.008,32,0.669,38,0.09,39,0.669,49,0.68,168,0.006,169,0.006,179,2.775,183,0.382,184,1.914,191,1.359,196,1.807,198,1.807,199,0.56,200,1.733,202,1.997,206,1.347,320,1.725,322,1.477,367,2.948,368,2.696,388,4.257,427,2.701,512,2.301,514,5.613,527,5.279,607,3.831,608,5.184,610,4.369,623,5.693,625,4.834,630,3.831,631,4.554,635,4.554,638,5.302,640,6.031,642,6.592,644,3.831,697,3.663,1016,4.246,1424,7.504,1479,4.246,1482,6.866,1485,5.986,1486,7.442,1487,5.613,1488,5.986,1489,7.442,1490,5.986,1491,7.442,1492,5.986,1493,7.442,1494,5.986,1495,5.986,1496,5.986,1497,8.099,1498,5.986,1499,4.852]],["title/components/IssuesComponent.html",[0,0.172,87,0.868]],["body/components/IssuesComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,1.524,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,1500,5.02,1501,7.932,1502,6.647,1503,6.647]],["title/injectables/JwtService.html",[320,1.047,526,3.662]],["body/injectables/JwtService.html",[3,0.089,4,0.067,8,0.057,29,0.405,30,0.008,32,0.659,38,0.089,39,0.659,49,0.646,168,0.006,169,0.006,179,2.734,183,0.376,184,1.896,191,1.339,196,1.887,198,1.716,199,0.532,200,1.646,202,2.14,203,2.642,206,1.398,223,2.25,320,1.709,323,5.663,324,3.964,325,3.775,367,2.905,368,2.657,371,4.512,427,2.46,450,2.462,509,6.531,512,2.268,526,5.976,605,4.449,656,6.544,718,6.025,1504,8.978,1505,4.449,1506,5.978,1507,8.428,1508,8.428,1509,7.374,1510,7.374,1511,5.899,1512,5.899,1513,5.899,1514,5.899,1515,4.781,1516,7.374,1517,4.781,1518,7.374,1519,5.899,1520,5.899,1521,5.899,1522,7.374,1523,7.374,1524,5.899,1525,5.899,1526,5.899,1527,5.899]],["title/injectables/LayoutService.html",[194,2.551,320,1.047]],["body/injectables/LayoutService.html",[3,0.032,4,0.024,8,0.021,18,1.39,29,0.246,30,0.008,32,0.24,38,0.053,39,0.932,49,0.46,168,0.003,169,0.003,179,0.995,183,0.137,184,0.906,187,1.983,191,0.487,194,4.586,196,1.713,198,0.458,199,0.559,200,0.439,202,2.041,203,1.838,206,1.204,223,0.655,230,4.367,231,3.912,235,4.865,244,0.605,245,6.06,247,1.739,248,2.742,249,3.38,250,2.156,251,2.657,252,6.346,253,1.77,254,2.657,255,0.635,256,3.98,257,5.123,258,5.123,259,5.371,260,5.594,261,5.46,262,1.522,263,5.867,264,6.126,265,4.321,266,5.248,267,4.814,268,4.818,269,4.321,270,3.419,271,3.68,272,3.912,273,3.486,274,2.855,275,2.367,276,5.622,277,2.657,278,5.559,279,5.468,280,2.657,281,2.657,282,4.633,283,2.657,284,2.657,285,1.354,286,3.912,287,3.632,288,1.618,289,5.46,290,4.672,291,4.906,292,5.987,293,1.739,294,1.739,295,2.868,296,1.442,297,3.257,298,1.618,299,4.989,300,1.618,301,1.739,302,2.499,303,4.747,304,1.739,305,1.739,306,2.657,307,1.618,308,3.626,309,1.522,310,2.207,311,1.618,312,1.618,313,2.025,314,1.862,315,3.38,316,5.711,317,5.011,318,4.643,319,1.739,320,0.816,321,6.388,322,1.735,323,4.137,324,2.367,325,1.373,326,6.06,327,3.632,328,4.146,329,1.739,330,5.7,331,5.7,332,5.7,333,6.012,334,5.504,335,5.504,336,4.644,337,5.867,338,1.739,339,1.739,340,1.618,341,1.442,342,4.644,343,1.618,344,6.346,345,6.582,346,4.99,347,4.725,348,1.739,349,2.367,350,4.204,351,4.99,352,1.618,353,4.644,354,5.088,355,3.68,356,4.643,357,3.68,358,1.641,359,1.739,360,1.739,361,4.204,362,2.254,363,4.204,364,5.135,365,3.68,366,2.855,367,1.057,368,0.966,369,1.618,370,1.739,371,1.313,372,3.68,373,2.657,374,4.204,375,4.644,376,2.657,377,6.647,378,3.316,379,5.123,380,4.346,381,3.912,382,5.123,383,4.204,384,5.123,385,4.156,386,3.243,387,3.32,388,3.981,389,3.912,390,3.486,391,4.644,392,6.647,393,2.855,394,2.499,395,0.732,396,0.732,397,0.732,398,0.767,399,0.749,400,0.805,401,3.486,402,3.486,403,3.912,404,4.204,405,3.68,406,4.818,407,4.204,408,3.912,409,2.855,410,2.855,411,4.204,412,1.739,413,3.632,414,3.632,415,2.855,416,2.855,417,3.632,418,2.855,419,3.632,420,2.367,421,1.739,422,4.99,423,4.99,424,4.204,425,3.632,426,3.632,427,2.054,428,1.739,429,3.912,430,4.204,431,4.643,432,4.99,433,4.643,434,5.123,435,5.504,436,4.99,437,3.632,438,3.179,439,3.632,440,1.739,441,4.99,442,2.855,443,2.499,444,4.204,445,1.739,446,1.739,447,4.204,448,3.632,449,1.739,450,0.627,451,1.739,452,1.739,453,1.739,454,4.204,455,1.739,456,1.739,512,0.825,1528,2.146,1529,2.146,1530,2.146,1531,2.146,1532,2.146,1533,2.146,1534,2.146,1535,2.146,1536,2.146,1537,2.146,1538,2.146,1539,2.146,1540,2.146,1541,2.146,1542,2.146,1543,2.146,1544,2.146]],["title/interfaces/LayoutState.html",[244,0.33,326,3.408]],["body/interfaces/LayoutState.html",[3,0.037,4,0.028,8,0.023,18,1.439,29,0.269,30,0.008,32,0.273,38,0.059,39,0.914,49,0.314,168,0.003,169,0.003,179,1.132,183,0.156,187,1.534,194,4.504,199,0.556,202,1.612,206,1.21,223,0.745,230,3.97,231,3.692,235,4.794,244,0.641,245,5.923,246,0.543,247,1.979,248,3.425,249,4.222,250,2.995,251,3.692,252,6.874,253,1.67,254,3.692,255,0.662,256,4.366,257,4.93,258,4.93,259,5.354,260,5.178,261,5.381,262,1.732,263,6.118,264,6.016,265,3.692,266,5.342,267,5.101,268,5.06,269,4.62,270,3.608,271,3.97,272,4.222,273,3.761,274,3.967,275,3.289,276,5.719,277,3.692,278,5.894,279,5.971,280,2.951,281,2.951,282,4.393,283,2.951,284,2.951,285,1.504,286,4.222,287,3.171,288,1.842,289,4.62,290,4.931,291,5.693,292,6.098,293,1.979,294,1.979,295,2.504,296,1.641,297,3.399,298,1.842,299,5.735,300,1.842,301,1.979,302,2.775,303,5.104,304,1.979,305,1.979,306,2.951,307,1.842,308,3.286,309,1.732,310,2.41,311,1.842,312,1.842,313,1.47,314,1.352,315,2.951,316,4.93,317,4.709,318,4.537,319,1.979,320,0.907,321,6.058,322,1.511,323,3.289,324,2.629,325,1.563,326,6.442,327,3.967,328,4.278,329,3.171,330,6.553,331,6.553,332,6.553,333,6.631,334,6.364,335,6.364,336,5.55,337,6.25,338,3.171,339,3.171,340,2.951,341,2.629,342,5.923,343,2.951,344,5.564,345,6.118,346,4.964,347,4.678,348,3.171,349,3.761,350,5.782,351,4.964,352,2.951,353,5.55,354,5.498,355,4.345,356,3.967,357,3.472,358,1.792,359,3.171,360,3.171,361,3.171,362,1.563,363,3.171,364,4.345,365,2.775,366,1.979,367,1.202,368,1.1,369,1.842,370,1.979,371,1.494,372,2.775,373,1.842,374,3.171,375,3.692,376,1.842,377,5.782,378,2.862,379,4.222,380,3.582,381,2.951,382,4.222,383,3.171,384,4.222,385,3.425,386,2.673,387,2.504,388,3.436,389,2.951,390,2.629,391,3.692,392,5.782,393,1.979,394,1.732,395,0.833,396,0.833,397,0.833,398,0.873,399,0.853,400,0.916,401,2.629,402,2.629,403,2.951,404,3.171,405,2.775,406,3.97,407,3.171,408,2.951,409,1.979,410,1.979,411,3.171,412,1.979,413,3.967,414,3.967,415,3.171,416,3.171,417,3.967,418,1.979,419,3.967,420,1.641,421,1.979,422,3.967,423,3.171,424,3.171,425,1.979,426,1.979,427,1.867,428,1.979,429,2.951,430,3.171,431,3.171,432,3.967,433,3.171,434,3.692,435,3.967,436,3.171,437,1.979,438,1.732,439,1.979,440,1.979,441,3.171,442,1.979,443,1.732,444,1.979,445,1.979,446,1.979,447,1.979,448,3.967,449,1.979,450,0.713,451,1.979,452,1.979,453,1.979,454,1.979,455,1.979,456,1.979]],["title/injectables/LocalStorage.html",[320,1.047,323,3.036]],["body/injectables/LocalStorage.html",[3,0.084,4,0.064,8,0.054,29,0.431,30,0.008,31,1.744,32,0.625,38,0.084,39,0.625,49,0.664,168,0.006,169,0.006,176,2.048,179,2.592,183,0.455,184,1.834,187,2.15,191,1.782,196,1.916,198,1.763,199,0.564,200,1.691,202,2.106,203,2.606,206,1.424,211,3.967,223,1.706,255,0.626,310,4.071,314,1.997,320,1.652,323,4.791,325,3.579,367,2.754,371,5.342,378,2.449,427,2.618,450,2.415,512,2.15,728,4.791,1013,3.758,1505,4.218,1506,5.864,1515,4.533,1517,4.533,1545,9.069,1546,6.952,1547,5.779,1548,5.737,1549,5.779,1550,5.779,1551,6.362,1552,6.315,1553,5.779,1554,5.779,1555,4.954,1556,5.779,1557,4.954,1558,5.779,1559,4.954,1560,4.533,1561,4.533,1562,4.954,1563,5.378,1564,4.218,1565,4.954,1566,4.954,1567,4.954,1568,4.954,1569,6.315,1570,5.593,1571,4.954,1572,4.954,1573,4.954,1574,4.954,1575,4.954,1576,4.954]],["title/components/LoginComponent.html",[0,0.172,89,0.868]],["body/components/LoginComponent.html",[0,0.215,1,0.586,2,0.858,3,0.046,4,0.035,5,0.599,6,0.599,7,0.599,8,0.029,12,0.599,13,1.859,14,1.859,15,0.586,17,0.895,18,0.84,19,0.914,20,1.928,21,2.227,22,3.316,24,2.02,25,0.914,27,0.953,29,0.48,30,0.008,31,0.952,32,0.341,33,1.374,34,0.995,35,0.995,36,1.203,38,0.046,39,0.341,41,3.672,43,0.599,44,0.914,45,0.914,46,0.599,47,1.24,48,0.599,49,0.508,50,0.599,51,0.586,52,0.599,53,0.586,54,0.599,55,0.586,56,0.599,57,0.586,58,0.599,59,0.586,60,0.599,61,0.586,62,0.55,63,0.914,64,0.599,65,0.562,66,0.562,67,1.465,68,0.586,69,0.914,70,0.586,71,0.599,72,0.586,73,0.599,74,0.586,75,0.586,76,0.586,77,0.599,78,0.586,79,0.574,80,0.914,81,0.586,82,0.599,83,0.586,84,0.599,85,0.586,86,0.599,87,0.586,88,0.599,89,1.215,90,0.599,91,0.586,92,0.599,93,0.586,94,0.599,95,1.108,96,0.586,97,0.599,98,0.586,99,0.528,100,0.586,101,0.599,102,0.586,103,0.599,104,0.586,105,0.599,106,0.586,107,0.599,108,0.586,109,0.586,110,0.857,111,0.586,112,0.876,113,0.599,114,0.84,115,0.914,116,0.586,117,0.586,118,0.599,119,0.586,120,0.599,121,0.586,122,0.599,123,0.586,124,0.574,125,0.586,126,0.599,127,0.586,128,0.562,129,0.586,130,0.599,131,0.586,132,0.599,133,0.599,134,0.586,135,0.599,136,0.586,137,0.599,138,0.586,139,0.599,140,0.586,141,0.586,142,0.599,143,0.586,144,0.997,145,0.599,146,0.599,147,0.599,148,0.586,149,0.599,150,0.586,151,0.599,152,0.586,153,0.599,154,0.586,155,0.586,156,0.586,157,0.494,158,0.586,159,0.599,160,0.599,161,0.562,162,0.586,163,0.599,164,0.586,165,0.599,166,0.599,167,0.599,168,0.004,169,0.004,176,1.706,177,2.474,178,3.19,183,0.195,184,1.198,185,3.57,186,2.768,187,2.398,191,1.057,193,3.362,196,1.827,198,0.993,199,0.493,200,1.574,202,1.841,203,2.142,206,0.857,253,1.041,255,0.409,285,1.173,297,1.706,313,1.484,314,1.365,322,0.753,358,1.117,386,1.457,395,1.041,396,1.041,397,1.59,398,1.091,399,1.066,400,1.145,427,1.554,450,2.304,457,1.145,516,3.513,519,1.868,525,4.776,536,1.145,537,3.441,539,2.872,543,1.724,549,2.165,552,1.415,604,4.829,617,2.165,660,0.973,715,2.698,837,1.415,878,3.075,879,2.159,880,3.884,882,2.782,883,2.872,884,2.969,888,3.796,889,3.316,898,3.441,902,2.8,903,3.906,904,3.795,918,2.535,919,3.441,921,4.063,926,3.19,927,1.503,933,1.503,934,1.661,935,1.337,936,1.552,937,1.503,938,1.868,939,2.85,940,1.868,944,1.203,952,1.868,953,1.266,954,1.552,955,1.604,956,1.868,957,1.868,963,1.883,966,2.051,967,2.051,968,2.051,970,1.953,975,1.552,976,1.552,977,1.552,980,1.503,981,2.294,988,2.449,1080,2.165,1120,1.457,1128,1.792,1202,4.261,1203,4.261,1204,4.007,1205,3.513,1206,2.051,1208,3.513,1215,3.513,1217,3.304,1222,3.513,1224,2.165,1226,1.953,1228,1.953,1229,2.302,1230,2.302,1231,2.302,1232,2.051,1233,2.165,1234,2.165,1235,2.165,1246,2.165,1248,3.513,1253,2.302,1254,3.513,1257,4.126,1258,4.126,1419,4.578,1420,4.261,1434,3.513,1443,2.473,1444,2.302,1577,3.052,1578,7.176,1579,4.658,1580,4.658,1581,5.649,1582,7.176,1583,6.322,1584,4.658,1585,3.052,1586,3.052,1587,3.052,1588,3.052,1589,3.052,1590,3.052,1591,3.052,1592,3.052,1593,3.052,1594,3.052,1595,3.052,1596,3.052,1597,3.052,1598,2.473,1599,3.052,1600,3.052,1601,3.052,1602,3.052,1603,3.052,1604,3.052,1605,2.703,1606,2.703,1607,4.658,1608,4.658,1609,4.658,1610,4.658,1611,4.658,1612,4.658,1613,4.658,1614,4.658,1615,4.658]],["title/components/LogsComponent.html",[0,0.172,91,0.868]],["body/components/LogsComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,1.524,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,1616,5.02,1617,7.025,1618,6.647,1619,6.647]],["title/components/MemberPickerComponent.html",[0,0.172,93,0.868]],["body/components/MemberPickerComponent.html",[0,0.226,1,0.637,2,0.914,3,0.05,4,0.038,5,0.651,6,0.651,7,0.651,8,0.032,12,0.651,13,1.867,14,1.867,15,0.637,17,0.953,18,1.072,19,0.973,20,2.028,21,2.342,23,2.602,24,2.125,25,0.973,27,1.015,29,0.473,30,0.008,31,1.034,32,0.371,34,1.082,35,1.082,36,1.307,37,1.453,38,0.05,39,0.371,43,0.651,44,0.973,45,0.973,46,0.651,47,1.294,48,0.651,49,0.648,50,0.651,51,0.637,52,0.651,53,0.637,54,0.651,55,0.637,56,0.651,57,0.637,58,0.651,59,0.637,60,0.651,61,0.637,62,0.598,63,0.973,64,0.651,65,0.611,66,0.611,67,1.507,68,0.637,69,0.973,70,0.637,71,0.651,72,0.637,73,0.651,74,0.637,75,0.637,76,0.637,77,0.651,78,0.637,79,0.624,80,0.973,81,0.637,82,0.651,83,0.637,84,0.651,85,0.637,86,0.651,87,0.637,88,0.651,89,0.637,90,0.651,91,0.637,92,0.651,93,1.267,94,1.637,95,1.166,96,0.637,97,0.651,98,0.637,99,1.14,100,0.637,101,0.651,102,0.637,103,0.651,104,0.637,105,0.651,106,0.637,107,0.651,108,0.637,109,0.637,110,0.901,111,0.637,112,0.933,113,0.651,114,0.895,115,0.973,116,0.637,117,0.637,118,0.651,119,0.637,120,0.651,121,0.637,122,0.651,123,0.637,124,0.624,125,0.637,126,0.651,127,0.637,128,0.611,129,0.637,130,0.651,131,0.637,132,0.651,133,0.651,134,0.637,135,0.651,136,0.637,137,0.651,138,0.637,139,0.651,140,0.637,141,0.637,142,0.651,143,0.637,144,1.049,145,0.651,146,0.651,147,0.651,148,0.637,149,0.651,150,0.637,151,0.651,152,0.637,153,0.651,154,0.637,155,0.637,156,0.637,157,0.537,158,0.637,159,0.651,160,0.651,161,0.611,162,0.637,163,0.651,164,0.637,165,0.651,166,0.651,167,0.651,168,0.004,169,0.004,183,0.212,184,1.276,191,0.753,196,1.839,198,1.638,199,0.551,200,1.571,202,1.894,203,2.292,206,1.165,255,0.435,285,2.535,308,2.114,313,1.732,314,1.705,322,0.818,347,2.7,358,3.009,368,1.494,427,1.982,450,1.736,457,1.244,552,1.538,660,1.058,726,2.443,793,1.686,902,2.779,944,1.307,953,2.737,963,1.341,972,2.608,1033,3.636,1059,1.633,1083,2.532,1104,2.03,1115,2.608,1116,1.805,1161,1.873,1162,1.805,1163,1.805,1620,8.695,1621,7.701,1622,2.688,1623,4.02,1624,4.816,1625,3.636,1626,4.02,1627,4.02,1628,5.942,1629,4.816,1630,4.816,1631,4.394,1632,4.02,1633,4.02,1634,4.02,1635,4.02,1636,5.345,1637,3.741,1638,5.942,1639,5.942,1640,6.595,1641,2.938,1642,2.938,1643,2.938,1644,2.688,1645,4.394,1646,2.938,1647,4.02,1648,5.345,1649,3.317,1650,4.02,1651,5.345,1652,3.317,1653,4.02,1654,5.345,1655,3.317,1656,4.02,1657,5.345,1658,3.317,1659,3.317,1660,3.741,1661,3.317,1662,2.502,1663,2.938,1664,4.961,1665,2.688,1666,2.938,1667,2.03,1668,2.688,1669,2.688,1670,2.688,1671,2.688,1672,3.317,1673,3.317,1674,2.688,1675,2.938,1676,2.938,1677,2.938,1678,2.938,1679,2.938,1680,3.993,1681,2.502,1682,2.502,1683,2.502,1684,2.502,1685,3.741,1686,2.502,1687,3.317,1688,3.317,1689,3.317,1690,3.317,1691,2.502,1692,2.502,1693,3.317,1694,3.317,1695,3.317,1696,3.317,1697,2.688,1698,2.688,1699,4.961,1700,4.961,1701,4.961,1702,4.961,1703,6.595,1704,4.961,1705,4.961,1706,4.961]],["title/components/MembersComponent.html",[0,0.172,96,0.868]],["body/components/MembersComponent.html",[0,0.248,1,1.365,2,1.025,3,0.058,4,0.044,5,0.761,6,0.761,7,0.761,8,0.037,10,2.374,12,0.761,13,1.88,14,1.88,15,0.745,17,1.069,18,1.004,19,1.092,20,2.22,24,2.326,25,1.092,27,1.138,29,0.492,30,0.008,31,1.21,32,0.433,34,1.265,35,1.265,38,0.058,39,0.433,43,0.761,44,1.092,45,1.092,46,0.761,47,1.394,48,0.761,49,0.522,50,0.761,51,0.745,52,0.761,53,0.745,54,0.761,55,0.745,56,0.761,57,0.745,58,0.761,59,0.745,60,0.761,61,0.745,62,0.7,63,1.092,64,0.761,65,0.715,66,0.715,67,1.582,68,0.745,69,1.092,70,0.745,71,0.761,72,0.745,73,0.761,74,0.745,75,0.745,76,0.745,77,0.761,78,0.745,79,0.73,80,1.092,81,0.745,82,0.761,83,0.745,84,0.761,85,0.745,86,0.761,87,0.745,88,0.761,89,0.745,90,0.761,91,0.745,92,0.761,93,0.745,94,0.761,95,1.276,96,1.365,97,0.761,98,1.365,99,1.124,100,0.745,101,0.761,102,0.745,103,0.761,104,0.745,105,0.761,106,0.745,107,0.761,108,0.745,109,0.745,110,0.987,111,0.745,112,1.047,113,0.761,114,1.004,115,1.092,116,0.745,117,0.745,118,0.761,119,0.745,120,0.761,121,0.745,122,0.761,123,0.745,124,0.73,125,0.745,126,0.761,127,0.745,128,0.715,129,0.745,130,0.761,131,0.745,132,0.761,133,0.761,134,0.745,135,0.761,136,0.745,137,0.761,138,0.745,139,0.761,140,0.745,141,0.745,142,0.761,143,0.745,144,1.149,145,0.761,146,0.761,147,0.761,148,0.745,149,0.761,150,0.745,151,0.761,152,0.745,153,0.761,154,0.745,155,0.745,156,0.745,157,0.629,158,0.745,159,0.761,160,0.761,161,0.715,162,0.745,163,0.761,164,0.745,165,0.761,166,0.761,167,0.761,168,0.005,169,0.005,176,2.037,177,2.849,183,0.247,184,1.431,186,3.112,191,0.881,196,1.792,198,0.827,199,0.256,200,0.794,202,0.957,203,1.158,255,0.488,313,2.118,314,2.125,322,0.957,368,1.747,457,1.455,536,1.455,660,1.237,879,2.579,880,3.204,882,3.204,902,2.937,935,1.699,937,1.91,944,1.529,963,3.166,1008,1.798,1039,4.815,1059,1.91,1090,4.792,1092,3.561,1106,2.483,1117,1.91,1118,2.374,1119,2.374,1120,1.853,1121,1.972,1122,2.374,1175,3.405,1629,5.76,1671,3.144,1674,3.144,1707,3.88,1708,4.614,1709,5.564,1710,5.564,1711,5.762,1712,5.272,1713,4.906,1714,6.505,1715,5.272,1716,3.88,1717,3.88,1718,5.564,1719,5.554,1720,3.88,1721,7.831,1722,4.509,1723,3.88,1724,4.196,1725,3.88,1726,3.88,1727,5.564,1728,3.88,1729,5.564,1730,3.88,1731,5.564,1732,3.88,1733,2.752,1734,3.144,1735,3.88,1736,3.88,1737,3.88,1738,2.926,1739,3.436,1740,3.144,1741,2.926,1742,3.88]],["title/interfaces/MembersDto.html",[244,0.33,1743,3.408]],["body/interfaces/MembersDto.html",[3,0.104,4,0.079,8,0.067,29,0.447,30,0.008,38,0.104,168,0.007,169,0.007,183,0.443,199,0.571,244,0.508,246,1.544,255,0.714,636,6.237,1479,6.319,1715,7.219,1743,6.141,1744,6.947,1745,7.89,1746,6.718,1747,6.947,1748,6.947]],["title/injectables/MembersEffects.html",[320,1.047,472,3.662]],["body/injectables/MembersEffects.html",[3,0.075,4,0.057,8,0.048,29,0.465,30,0.008,32,0.557,38,0.075,39,0.557,49,0.401,99,1.144,168,0.006,169,0.006,183,0.318,187,2.035,191,1.502,196,1.805,198,1.064,199,0.33,200,1.021,255,0.581,313,2.163,314,1.989,320,1.534,322,1.23,472,5.365,512,1.918,527,6.125,528,4.7,530,5.304,531,5.262,533,5.612,536,2.786,541,5.148,543,2.675,560,5.069,587,5.863,589,2.929,590,2.817,591,2.929,602,4.419,673,5.863,1487,5.968,1670,6.413,1734,6.859,1749,4.989,1750,5.968,1751,7.496,1752,4.989,1753,6.859,1754,4.989,1755,6.619,1756,6.619,1757,6.619,1758,6.619,1759,6.619,1760,4.989,1761,6.619,1762,6.619,1763,7.008,1764,6.619,1765,6.619,1766,4.989,1767,6.619,1768,6.619,1769,6.619,1770,6.619,1771,4.989,1772,6.619,1773,6.619,1774,6.619,1775,4.989,1776,6.619,1777,6.619,1778,6.619,1779,5.863,1780,4.989,1781,4.419,1782,4.419,1783,4.419,1784,4.419,1785,4.419,1786,4.419,1787,4.419,1788,4.419,1789,4.989]],["title/injectables/MembersService.html",[320,1.047,1753,3.662]],["body/injectables/MembersService.html",[3,0.095,4,0.072,8,0.061,29,0.494,30,0.008,32,0.705,38,0.095,39,0.705,49,0.617,168,0.007,169,0.007,179,2.923,183,0.402,184,1.976,191,1.431,196,1.84,198,1.639,199,0.508,200,1.572,202,2.044,206,1.257,320,1.781,322,1.555,349,4.237,367,3.105,368,2.84,388,4.649,427,2.764,512,2.424,607,4.035,608,5.279,610,4.511,630,4.035,631,4.702,636,4.237,637,5.11,644,5.304,1743,4.756,1750,5.795,1753,6.227,1790,6.305,1791,8.627,1792,8.627,1793,6.305,1794,6.305,1795,6.305,1796,7.684,1797,6.305,1798,6.806,1799,5.585,1800,7.684,1801,6.305]],["title/interfaces/MembersState.html",[244,0.33,460,3.662]],["body/interfaces/MembersState.html",[3,0.068,4,0.052,8,0.044,29,0.453,30,0.008,38,0.107,99,1.55,168,0.005,169,0.005,183,0.291,199,0.588,200,0.933,223,1.901,244,0.333,246,1.014,253,2.127,255,0.547,270,2.398,328,4.48,358,2.793,395,2.127,396,2.127,397,1.557,398,1.631,399,2.177,400,1.711,450,2.785,460,5.753,474,4.041,543,2.798,655,4.231,658,4.186,659,3.814,660,1.455,661,2.792,662,2.178,664,3.065,667,3.814,668,4.669,669,4.888,670,2.792,672,4.669,676,2.976,678,3.643,679,3.814,681,3.643,682,4.882,698,5.126,881,2.178,1083,1.944,1249,3.441,1250,4.041,1251,4.041,1487,3.441,1670,3.697,1711,7.303,1715,3.697,1734,3.697,1743,5.754,1745,4.041,1746,3.441,1750,3.441,1751,4.041,1781,4.041,1782,4.041,1783,4.041,1784,4.041,1785,4.041,1786,4.041,1787,4.041,1788,4.041,1799,4.041,1802,4.562,1803,8.592,1804,8.592,1805,8.592,1806,8.815,1807,8.592,1808,8.592,1809,8.592,1810,4.562,1811,4.562,1812,4.562,1813,4.562,1814,4.562,1815,4.562,1816,4.562,1817,4.562,1818,4.562,1819,4.562,1820,4.562,1821,4.562,1822,4.562,1823,4.562,1824,4.562,1825,4.562]],["title/components/MembersTableComponent.html",[0,0.172,98,0.868]],["body/components/MembersTableComponent.html",[0,0.18,1,0.446,2,0.693,3,0.056,4,0.026,5,0.456,6,0.456,7,0.456,8,0.022,12,0.456,13,1.829,14,1.829,15,0.446,17,0.722,18,1.42,19,0.738,20,1.615,21,1.866,23,2.073,24,1.693,25,0.738,27,0.769,29,0.476,30,0.008,31,0.725,32,0.26,34,0.758,35,0.758,36,0.916,37,1.018,38,0.035,39,0.26,41,3.596,43,0.456,44,0.738,45,0.738,46,0.456,47,1.067,48,0.456,49,0.562,50,0.456,51,0.446,52,0.456,53,0.446,54,0.456,55,0.446,56,0.456,57,0.446,58,0.456,59,0.446,60,0.456,61,0.446,62,0.419,63,0.738,64,0.456,65,0.428,66,0.428,67,1.32,68,0.446,69,0.738,70,0.446,71,0.456,72,0.446,73,0.456,74,0.446,75,0.446,76,0.446,77,0.456,78,0.446,79,0.437,80,0.738,81,0.446,82,0.456,83,0.446,84,0.456,85,0.446,86,0.456,87,0.446,88,0.456,89,0.446,90,0.456,91,0.446,92,0.456,93,0.446,94,1.067,95,0.929,96,0.446,97,0.456,98,1.045,99,1.56,100,0.446,101,0.456,102,0.446,103,0.456,104,0.446,105,0.456,106,0.446,107,0.456,108,0.446,109,0.446,110,0.718,111,0.446,112,0.707,113,0.456,114,0.678,115,0.738,116,0.446,117,0.446,118,0.456,119,0.446,120,0.456,121,0.446,122,0.456,123,0.446,124,0.437,125,0.446,126,0.456,127,0.446,128,0.428,129,0.446,130,0.456,131,0.446,132,0.456,133,0.456,134,0.446,135,0.456,136,0.446,137,0.456,138,0.446,139,0.456,140,0.446,141,0.446,142,0.456,143,0.446,144,0.836,145,0.456,146,0.456,147,0.456,148,0.446,149,0.456,150,0.446,151,0.456,152,0.446,153,0.456,154,0.446,155,0.446,156,0.446,157,0.376,158,0.446,159,0.456,160,0.456,161,0.428,162,0.446,163,0.456,164,0.446,165,0.456,166,0.456,167,0.456,168,0.003,169,0.003,183,0.148,184,0.967,187,1.919,191,0.853,193,3.03,196,1.839,198,1.363,199,0.541,200,1.307,202,1.728,203,1.908,206,1.127,223,0.709,253,1.615,255,0.33,285,2.781,297,2.995,308,2.724,313,2.068,314,1.954,322,0.573,358,1.733,395,1.615,396,1.615,397,1.615,398,1.693,399,1.653,400,1.776,427,1.579,450,1.098,457,0.872,543,1.147,552,1.742,625,1.265,655,3.934,658,1.077,660,0.741,662,1.11,676,1.795,678,2.597,681,2.597,697,1.422,715,2.261,726,1.851,785,3.481,793,1.911,837,1.077,879,1.742,880,3.563,882,2.331,883,2.407,884,2.488,889,2.779,902,2.397,903,3.662,918,2.577,919,3.479,927,1.144,933,1.144,934,1.265,935,1.018,936,1.181,937,1.144,944,0.916,953,3.084,954,1.181,955,1.221,963,1.52,972,1.976,975,2.765,976,2.765,977,2.765,980,2.678,981,2.941,1029,1.648,1030,4.862,1031,4.237,1032,3.181,1033,2.897,1034,3.358,1035,2.666,1036,2.666,1037,3.358,1045,2.666,1054,3.358,1055,3.358,1056,3.358,1057,3.57,1058,3.358,1059,1.144,1066,1.648,1069,2.666,1070,3.858,1083,3.301,1084,2.666,1088,1.883,1094,1.883,1102,1.883,1103,1.561,1104,1.422,1105,1.648,1115,2.488,1116,1.265,1127,1.487,1131,1.648,1134,1.648,1135,1.561,1136,1.648,1137,1.648,1138,1.753,1139,1.648,1140,1.753,1141,1.422,1142,2.406,1143,1.561,1144,1.648,1145,3.328,1146,1.561,1147,3.029,1148,1.648,1149,1.648,1150,2.666,1151,1.648,1153,1.648,1161,2.123,1162,2.046,1163,2.046,1164,2.406,1166,2.666,1168,2.666,1177,2.835,1264,2.96,1416,3.662,1436,3.837,1479,3.358,1484,1.648,1487,1.753,1625,2.897,1631,3.33,1637,2.835,1645,3.33,1660,2.835,1662,1.753,1667,1.422,1669,1.883,1671,1.883,1674,1.883,1675,2.058,1676,2.058,1677,2.058,1678,2.058,1679,2.058,1680,3.181,1681,1.753,1682,1.753,1683,1.753,1684,1.753,1685,2.835,1686,1.753,1697,3.047,1740,7.024,1750,3.57,1798,5.29,1826,8.666,1827,3.837,1828,4.734,1829,4.734,1830,5.439,1831,5.439,1832,3.837,1833,5.439,1834,5.439,1835,5.439,1836,3.759,1837,2.779,1838,4.734,1839,2.324,1840,2.058,1841,2.058,1842,2.324,1843,2.324,1844,2.058,1845,2.058,1846,2.058,1847,1.883,1848,2.058,1849,2.324,1850,3.759,1851,2.324,1852,2.058,1853,2.058,1854,1.883,1855,3.759,1856,2.324,1857,2.324,1858,2.324,1859,2.324,1860,3.759,1861,3.759,1862,3.759,1863,1.883,1864,2.324,1865,2.324,1866,2.324,1867,1.883,1868,2.324,1869,2.324,1870,2.324,1871,2.324,1872,2.324,1873,4.734,1874,2.324,1875,5.973,1876,2.324,1877,2.324,1878,2.324,1879,2.324,1880,2.324,1881,2.324,1882,2.324,1883,2.324,1884,2.324,1885,2.324,1886,3.759,1887,2.324,1888,3.759,1889,3.759,1890,3.759,1891,3.759,1892,3.759,1893,3.759,1894,3.759,1895,3.759,1896,3.759,1897,5.439,1898,3.759,1899,3.759,1900,3.759,1901,3.759,1902,3.759,1903,3.759]],["title/injectables/MemoryStorage.html",[320,1.047,1563,3.408]],["body/injectables/MemoryStorage.html",[3,0.087,4,0.066,8,0.055,29,0.316,30,0.008,32,0.644,38,0.087,39,0.644,49,0.671,168,0.006,169,0.006,176,2.111,183,0.508,184,1.869,187,2.181,196,1.905,198,1.783,199,0.581,200,1.71,202,2.125,203,2.495,206,1.425,223,1.759,255,0.638,310,4.116,313,1.514,314,1.923,320,1.684,369,4.349,371,4.872,427,2.655,450,2.517,512,2.216,728,4.885,972,3.031,1101,3.874,1505,4.349,1506,5.929,1547,5.891,1548,6.003,1549,5.891,1550,5.891,1551,6.452,1553,5.891,1554,5.891,1556,4.673,1558,4.673,1560,4.673,1561,4.673,1563,5.483,1564,4.349,1837,4.674,1904,9.037,1905,5.766,1906,5.766,1907,5.766,1908,5.766,1909,5.766,1910,5.766,1911,5.107,1912,5.766,1913,4.885,1914,5.766,1915,5.766,1916,5.766,1917,7.269,1918,5.766,1919,5.107,1920,5.766,1921,5.766]],["title/interfaces/MenuChangeEvent.html",[244,0.33,1922,3.662]],["body/interfaces/MenuChangeEvent.html",[3,0.107,4,0.081,8,0.068,30,0.008,38,0.107,168,0.007,169,0.007,183,0.453,199,0.545,200,1.687,206,1.322,244,0.519,246,1.578,255,0.723,297,3.191,1548,6.027,1922,6.682,1923,7.099,1924,5.036,1925,7.099,1926,7.945]],["title/injectables/MenuService.html",[320,1.047,719,3.408]],["body/injectables/MenuService.html",[2,1.563,3,0.065,4,0.049,8,0.042,18,1.345,29,0.379,30,0.008,32,0.483,38,0.065,39,0.93,49,0.347,128,1.638,168,0.005,169,0.005,179,2.005,183,0.276,184,1.545,187,2.39,196,1.73,198,0.923,199,0.456,200,0.885,202,1.482,203,1.794,248,3.677,250,4.224,255,0.527,256,4.224,267,4.379,270,3.629,290,4.79,297,2.731,313,1.959,314,2.049,320,1.392,321,6.609,322,1.067,328,4.051,347,4.958,362,3.845,364,4.262,365,4.262,367,2.13,375,5.626,378,3.893,379,6.398,380,4.773,382,5.626,386,4.051,388,4.673,394,4.897,401,5.012,402,5.266,406,5.291,512,1.663,708,4.87,709,4.262,719,6.705,797,5.207,838,3.068,953,3.717,1310,5.595,1312,4.87,1837,4.053,1922,7.143,1924,3.068,1927,4.326,1928,6.009,1929,6.009,1930,7.459,1931,8.188,1932,8.188,1933,7.726,1934,6.009,1935,4.326,1936,7.459,1937,5.595,1938,5.595,1939,6.942,1940,6.904,1941,6.115,1942,6.904,1943,4.326,1944,6.798,1945,4.326,1946,7.514,1947,6.875,1948,7.514,1949,6.009,1950,4.326,1951,4.326,1952,6.009,1953,4.326,1954,4.326,1955,4.326,1956,4.326,1957,4.326]],["title/components/MenuitemComponent.html",[0,0.172,100,0.868]],["body/components/MenuitemComponent.html",[0,0.227,1,0.342,2,0.555,3,0.027,4,0.02,5,0.349,6,0.349,7,0.349,8,0.017,12,0.349,13,1.794,14,1.792,15,0.342,17,0.579,18,0.832,19,0.592,20,1.338,22,2.302,23,1.717,24,1.402,25,0.592,29,0.372,30,0.008,31,0.555,32,0.199,33,0.802,34,0.581,35,0.581,37,0.78,38,0.027,39,0.951,41,2.327,43,0.349,44,0.592,45,1.172,46,0.349,47,0.905,48,0.349,49,0.371,50,0.349,51,0.342,52,0.349,53,0.342,54,0.349,55,0.342,56,0.349,57,0.342,58,0.349,59,0.342,60,0.349,61,0.342,62,0.321,63,0.592,64,0.349,65,0.328,66,0.328,67,1.172,68,0.342,69,0.592,70,0.342,71,0.349,72,0.342,73,0.349,74,0.342,75,0.342,76,0.342,77,0.349,78,0.342,79,0.335,80,0.592,81,0.342,82,0.349,83,0.342,84,0.349,85,0.342,86,0.349,87,0.342,88,0.349,89,0.342,90,0.349,91,0.342,92,0.349,93,0.342,94,0.349,95,0.769,96,0.342,97,0.349,98,0.342,99,0.308,100,1.51,101,0.349,102,0.342,103,0.349,104,0.342,105,0.349,106,0.342,107,0.349,108,0.342,109,0.342,110,0.595,111,0.342,112,0.567,113,0.349,114,0.544,115,0.592,116,0.342,117,0.342,118,0.349,119,0.342,120,0.349,121,0.342,122,0.349,123,0.342,124,0.335,125,0.342,126,0.349,127,0.342,128,0.951,129,0.342,130,0.349,131,0.342,132,0.349,133,0.349,134,0.342,135,0.349,136,0.342,137,0.349,138,0.342,139,0.349,140,0.342,141,0.342,142,0.349,143,0.342,144,0.692,145,0.349,146,0.349,147,0.349,148,0.342,149,0.349,150,0.342,151,0.349,152,0.342,153,0.349,154,0.342,155,0.342,156,0.342,157,0.288,158,0.342,159,0.349,160,0.349,161,0.328,162,0.342,163,0.349,164,0.342,165,0.349,166,0.349,167,0.349,168,0.003,169,0.003,176,1.104,177,1.717,179,3.31,183,0.52,184,0.775,186,2.751,187,0.826,191,1.485,194,4.197,196,1.676,198,0.643,199,0.557,200,0.617,202,1.273,203,1.378,206,1.127,212,1.196,223,0.543,226,2.443,248,2.4,250,1.845,251,4.738,253,1.338,255,0.265,256,3.655,266,2.953,267,5.223,269,2.274,270,3.559,273,1.196,275,3.101,276,5.406,278,2.026,279,4.456,284,2.957,285,3.299,290,5.157,295,4.57,296,2.026,297,2.187,299,2.139,303,4.02,308,2.969,310,2.761,313,1.569,314,1.725,317,4.02,322,0.439,328,4.043,336,4.229,341,2.026,342,2.274,347,4.404,349,5.851,364,3.977,372,2.139,376,2.274,378,1.32,380,4.57,385,4.951,386,0.85,387,2.509,388,2.947,389,2.274,390,4.397,391,2.274,394,2.139,395,1.029,396,1.029,397,1.029,398,1.078,399,0.622,400,0.668,401,2.026,402,2.635,406,2.139,420,2.026,427,2.095,438,2.139,443,3.273,450,0.881,669,3.431,709,2.781,718,3.588,719,6.049,726,1.485,728,2.026,729,1.343,732,2.443,733,2.781,740,4.505,742,3.74,747,2.67,748,5.438,752,3.178,753,3.178,755,2.67,759,6.79,760,2.67,761,3.473,763,3.74,775,3.767,782,1.196,793,1.994,795,3.473,797,2.957,836,1.577,838,3.662,878,2.134,898,3.685,902,1.731,904,4.077,921,4.532,953,3.41,972,1.585,1115,0.936,1135,2.635,1141,1.845,1162,2.512,1163,1.641,1249,2.274,1290,5.997,1300,5.107,1306,2.139,1309,5.107,1319,4.573,1344,2.67,1369,1.577,1370,1.577,1371,1.577,1376,2.443,1385,4.088,1413,4.544,1548,5.437,1564,3.481,1837,2.302,1924,3.977,1926,1.577,1931,4.088,1932,2.67,1933,3.473,1937,4.184,1938,4.184,1939,4.573,1944,5.927,1947,2.443,1958,1.78,1959,8.188,1960,3.015,1961,2.67,1962,3.921,1963,3.015,1964,5.974,1965,5.974,1966,5.163,1967,4.615,1968,6.544,1969,3.015,1970,3.015,1971,3.921,1972,3.921,1973,5.607,1974,5.974,1975,3.015,1976,3.015,1977,3.921,1978,4.615,1979,5.607,1980,3.473,1981,3.921,1982,4.966,1983,5.607,1984,4.088,1985,4.088,1986,3.473,1987,3.473,1988,1.78,1989,3.015,1990,7.295,1991,5.564,1992,4.615,1993,5.607,1994,4.615,1995,2.67,1996,1.78,1997,5.564,1998,6.544,1999,2.443,2000,1.78,2001,4.088,2002,4.615,2003,4.615,2004,4.615,2005,4.615,2006,3.015,2007,1.78,2008,3.921,2009,3.015,2010,3.015,2011,3.015,2012,3.015,2013,3.015,2014,1.78,2015,3.015,2016,4.088,2017,3.015,2018,3.921,2019,3.921,2020,3.74,2021,3.473,2022,3.921,2023,3.473,2024,2.67,2025,2.67,2026,1.78,2027,3.015,2028,3.015,2029,3.015,2030,1.78,2031,1.78,2032,1.78,2033,3.015,2034,4.966,2035,2.67,2036,1.78,2037,1.78,2038,4.088,2039,4.615,2040,1.78,2041,1.78,2042,1.78,2043,1.78,2044,1.78,2045,1.78,2046,3.015,2047,1.577,2048,1.78,2049,1.78,2050,1.78,2051,1.78,2052,1.78,2053,3.921,2054,3.015,2055,1.78,2056,1.78,2057,1.78,2058,1.78,2059,3.015,2060,1.78,2061,1.78,2062,1.78,2063,5.974,2064,3.015,2065,5.163,2066,3.015,2067,3.015,2068,1.78,2069,3.015,2070,3.015,2071,3.015,2072,1.78,2073,1.78,2074,3.015,2075,1.78,2076,1.78,2077,1.577,2078,1.78,2079,3.921,2080,1.78,2081,1.78,2082,3.015,2083,1.577,2084,1.78,2085,1.78,2086,1.78,2087,3.015,2088,1.78,2089,1.78,2090,1.78,2091,3.015,2092,1.78,2093,1.78,2094,1.78,2095,5.607]],["title/components/MessagesComponent.html",[0,0.172,102,0.868]],["body/components/MessagesComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,1.524,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,2096,5.02,2097,7.932,2098,6.647,2099,6.647]],["title/components/NotFoundComponent.html",[0,0.172,104,0.868]],["body/components/NotFoundComponent.html",[0,0.276,1,0.91,2,1.178,3,0.071,4,0.054,5,0.929,6,0.929,7,0.929,8,0.045,12,0.929,13,1.895,14,1.895,15,0.91,17,1.228,18,1.153,19,1.254,20,2.47,21,2.852,22,4.248,23,3.169,24,2.587,25,1.254,27,1.308,29,0.458,30,0.008,31,1.477,32,0.529,33,2.133,34,1.544,35,1.544,36,1.866,37,2.074,38,0.071,39,0.529,41,3.215,43,0.929,44,1.254,45,1.254,46,0.929,47,1.52,48,0.929,49,0.513,50,0.929,51,0.91,52,0.929,53,0.91,54,0.929,55,0.91,56,0.929,57,0.91,58,0.929,59,0.91,60,0.929,61,0.91,62,0.854,63,1.254,64,0.929,65,0.872,66,0.872,67,1.672,68,0.91,69,1.254,70,0.91,71,0.929,72,0.91,73,0.929,74,0.91,75,0.91,76,0.91,77,0.929,78,0.91,79,0.891,80,1.254,81,0.91,82,0.929,83,0.91,84,0.929,85,0.91,86,0.929,87,0.91,88,0.929,89,0.91,90,0.929,91,0.91,92,0.929,93,0.91,94,0.929,95,1.42,96,0.91,97,0.929,98,0.91,99,0.819,100,0.91,101,0.929,102,0.91,103,0.929,104,1.489,105,0.929,106,0.91,107,0.929,108,0.91,109,0.91,110,1.098,111,0.91,112,1.203,113,0.929,114,1.153,115,1.254,116,0.91,117,0.91,118,0.929,119,0.91,120,0.929,121,0.91,122,0.929,123,0.91,124,0.891,125,0.91,126,0.929,127,0.91,128,0.872,129,0.91,130,0.929,131,0.91,132,0.929,133,0.929,134,0.91,135,0.929,136,0.91,137,0.929,138,0.91,139,0.929,140,0.91,141,0.91,142,0.929,143,0.91,144,1.278,145,0.929,146,0.929,147,0.929,148,0.91,149,0.929,150,0.91,151,0.929,152,0.91,153,0.929,154,0.91,155,0.91,156,0.91,157,0.767,158,0.91,159,0.929,160,0.929,161,0.872,162,0.91,163,0.929,164,0.91,165,0.929,166,0.929,167,0.929,168,0.005,169,0.005,973,5.181,2100,4.736,2101,4.194,2102,4.736,2103,5.662,2104,6.393,2105,6.393,2106,6.393,2107,6.393]],["title/components/NotificationsComponent.html",[0,0.172,106,0.868]],["body/components/NotificationsComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,1.524,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,1948,7.025,2108,5.02,2109,6.647,2110,6.647]],["title/interfaces/Organization.html",[244,0.33,881,2.157]],["body/interfaces/Organization.html",[3,0.102,4,0.077,8,0.065,30,0.008,38,0.102,49,0.71,168,0.007,169,0.007,183,0.433,199,0.604,206,1.438,244,0.496,246,1.508,255,0.704,881,3.833,911,4.646,1189,4.006,2111,6.782,2112,4.811,2113,7.829,2114,7.163,2115,5.189]],["title/components/OrganizationComponent.html",[0,0.172,108,0.868]],["body/components/OrganizationComponent.html",[0,0.194,1,0.498,2,0.756,3,0.039,4,0.03,5,0.509,6,0.509,7,0.509,8,0.056,12,0.509,13,1.842,14,1.842,15,0.498,17,0.789,18,0.919,19,0.805,20,1.738,21,2.008,23,2.231,24,1.821,25,0.805,27,0.84,29,0.489,30,0.008,31,0.809,32,0.29,34,0.846,35,0.846,36,1.022,37,1.136,38,0.039,39,0.29,41,3.685,43,0.509,44,0.805,45,0.805,46,0.509,47,1.136,48,0.509,49,0.617,50,0.509,51,0.498,52,0.509,53,0.498,54,0.509,55,0.498,56,0.509,57,0.498,58,0.509,59,0.498,60,0.509,61,0.498,62,0.468,63,0.805,64,0.509,65,0.478,66,0.478,67,1.379,68,0.498,69,0.805,70,0.498,71,0.509,72,0.498,73,0.509,74,0.498,75,0.498,76,0.498,77,0.509,78,0.498,79,0.488,80,0.805,81,0.498,82,0.509,83,0.498,84,0.509,85,0.498,86,0.509,87,0.498,88,0.509,89,0.498,90,0.509,91,0.498,92,0.509,93,0.498,94,0.509,95,0.999,96,0.498,97,0.509,98,0.498,99,0.448,100,0.498,101,0.509,102,0.498,103,0.509,104,0.498,105,0.509,106,0.498,107,0.509,108,1.113,109,0.498,110,0.773,111,0.498,112,0.772,113,0.509,114,0.74,115,0.805,116,0.498,117,0.498,118,0.509,119,0.498,120,0.509,121,0.498,122,0.509,123,0.498,124,0.488,125,0.498,126,0.509,127,0.498,128,0.478,129,0.498,130,0.509,131,0.498,132,0.509,133,0.509,134,0.498,135,0.509,136,0.498,137,0.509,138,0.498,139,0.509,140,0.498,141,0.498,142,0.509,143,0.498,144,0.899,145,0.509,146,0.509,147,0.509,148,0.498,149,0.509,150,0.498,151,0.509,152,0.498,153,0.509,154,0.498,155,0.498,156,0.498,157,0.42,158,0.498,159,0.509,160,0.509,161,0.478,162,0.498,163,0.509,164,0.498,165,0.509,166,0.509,167,0.509,168,0.004,169,0.004,176,1.503,178,2.876,183,0.165,184,1.056,185,3.27,187,2.106,191,0.932,193,3.166,196,1.84,198,1.499,199,0.535,200,1.535,202,1.851,203,2.098,206,1.317,223,1.252,253,1.401,255,0.36,285,0.997,297,1.503,308,1.105,310,2.852,313,1.846,314,1.761,322,0.64,378,1.797,386,1.238,395,1.401,396,1.401,397,1.738,398,1.467,399,1.433,400,0.973,427,1.932,450,2.291,457,0.973,536,0.973,543,1.252,552,1.902,655,3.107,658,1.202,660,0.827,662,1.238,678,1.238,681,1.96,715,2.432,793,1.319,837,1.202,878,2.772,879,1.902,880,3.696,881,3.959,882,2.508,883,2.59,885,3.635,886,3.635,890,4.476,893,4.128,894,4.128,896,3.326,898,3.152,899,3.096,901,4.986,902,2.517,909,3.326,911,3.317,916,3.096,921,2.772,926,2.876,927,2.021,931,3.326,933,1.277,935,1.136,936,1.319,937,1.277,938,1.587,939,2.512,940,1.587,943,2.297,944,1.022,946,2.102,948,2.102,950,1.956,951,2.102,952,1.587,953,1.703,954,1.319,955,1.363,956,1.587,957,1.587,958,2.102,963,1.049,972,3.044,975,1.319,976,1.319,977,1.319,980,1.277,981,1.277,983,3.326,988,3.695,989,1.956,993,2.102,994,2.297,995,1.956,996,3.326,1008,1.202,1059,1.277,1090,3.544,1115,2.157,1116,1.412,1117,1.277,1118,1.587,1119,1.587,1120,1.238,1121,1.319,1122,1.587,1127,1.66,1132,1.956,1133,1.956,1161,1.464,1162,1.412,1163,1.412,1164,1.66,1625,3.117,1637,3.096,1660,3.096,1662,1.956,1667,1.587,1680,3.423,1681,1.956,1682,1.956,1683,1.956,1684,1.956,1685,3.096,1686,1.956,1708,3.613,1713,3.842,1724,3.096,1733,1.84,2116,2.593,2117,4.511,2118,4.511,2119,5.094,2120,5.094,2121,4.511,2122,5.094,2123,5.094,2124,4.511,2125,5.094,2126,5.094,2127,5.791,2128,4.104,2129,4.104,2130,4.104,2131,4.104,2132,2.593,2133,2.593,2134,4.104,2135,2.593,2136,2.593,2137,2.593,2138,2.593,2139,2.593,2140,4.104,2141,2.593,2142,4.104,2143,5.791,2144,2.593,2145,3.635,2146,2.593,2147,4.104,2148,2.593,2149,5.791,2150,2.593,2151,4.104,2152,2.593,2153,2.593,2154,4.104,2155,2.593,2156,3.635,2157,2.593,2158,5.094,2159,4.104,2160,2.593,2161,2.593,2162,2.297,2163,2.297,2164,2.593,2165,2.593,2166,2.297,2167,2.593,2168,1.956,2169,2.593,2170,2.593,2171,4.104,2172,4.104,2173,4.104,2174,2.593,2175,2.593,2176,2.593,2177,2.593,2178,2.593,2179,2.593,2180,4.104,2181,4.104,2182,2.593,2183,2.593,2184,2.593,2185,2.593,2186,2.593,2187,2.593,2188,4.104,2189,4.104,2190,4.104,2191,4.104,2192,4.104,2193,4.104,2194,4.104,2195,5.791,2196,4.104,2197,4.104,2198,4.104,2199,4.104,2200,4.104,2201,4.104]],["title/interfaces/OrganizationDto.html",[244,0.33,2202,3.662]],["body/interfaces/OrganizationDto.html",[3,0.102,4,0.077,8,0.065,30,0.008,38,0.102,49,0.71,168,0.007,169,0.007,183,0.433,199,0.604,206,1.438,244,0.496,246,1.508,255,0.704,911,4.646,1189,4.006,2112,4.811,2113,7.829,2114,7.163,2115,5.189,2202,6.506,2203,6.782]],["title/injectables/OrganizationEffects.html",[320,1.047,476,3.662]],["body/injectables/OrganizationEffects.html",[3,0.084,4,0.064,8,0.054,29,0.469,30,0.008,32,0.627,38,0.084,39,0.627,49,0.451,168,0.006,169,0.006,183,0.358,187,1.958,191,1.622,196,1.765,198,1.197,199,0.371,200,1.148,255,0.627,313,2.065,314,1.899,320,1.656,322,1.384,476,5.791,512,2.157,528,4.833,530,5.213,531,5.13,533,5.871,536,2.105,541,5.13,543,2.666,560,4.615,589,3.295,590,3.169,591,3.295,897,4.233,900,4.971,901,6.198,945,6.243,2168,6.243,2204,5.612,2205,7.862,2206,5.612,2207,7.146,2208,7.146,2209,8.277,2210,7.146,2211,8.277,2212,5.612,2213,7.146,2214,7.146,2215,7.146,2216,5.612,2217,7.146,2218,7.146,2219,5.791,2220,7.146,2221,7.146,2222,5.612,2223,5.612,2224,4.971,2225,4.971,2226,4.971,2227,4.971,2228,4.971,2229,4.971]],["title/injectables/OrganizationService.html",[320,1.047,901,3.205]],["body/injectables/OrganizationService.html",[3,0.088,4,0.067,8,0.081,29,0.492,30,0.008,32,0.654,38,0.088,39,0.654,49,0.675,168,0.006,169,0.006,179,2.711,183,0.373,184,1.886,191,1.328,196,1.846,198,1.792,199,0.555,200,1.719,202,2.072,206,1.216,223,1.785,320,1.7,322,1.443,367,2.88,368,2.634,378,2.562,388,4.805,427,2.803,512,2.248,607,3.743,608,5.142,610,4.306,625,4.362,630,3.743,631,4.489,635,3.579,640,4.74,644,5.128,775,3.93,881,2.793,890,5.203,897,6.044,901,5.203,911,3.856,941,6.337,995,5.532,1182,4.412,1499,4.74,1837,4.306,2168,5.532,2202,4.74,2230,5.849,2231,8.403,2232,5.849,2233,5.849,2234,5.849,2235,5.849,2236,5.849,2237,7.335,2238,5.849,2239,7.098,2240,5.181,2241,5.849,2242,5.849,2243,8.014,2244,5.849,2245,5.181,2246,5.849,2247,5.849,2248,5.181,2249,5.849]],["title/interfaces/OrganizationState.html",[244,0.33,461,3.662]],["body/interfaces/OrganizationState.html",[3,0.078,4,0.059,8,0.05,29,0.441,30,0.008,38,0.114,62,1.366,168,0.006,169,0.006,183,0.331,199,0.551,223,2.073,244,0.379,246,1.154,253,2.319,255,0.596,270,2.729,328,4.473,378,3.318,395,2.319,396,2.319,397,2.319,398,2.43,399,2.373,400,2.549,450,2.72,461,6.14,478,4.598,543,2.85,655,4.478,658,4.042,659,4.158,660,1.655,661,3.177,662,2.479,667,4.158,668,4.158,669,5.412,670,3.177,672,4.636,676,3.618,678,3.618,679,4.636,681,3.618,682,4.349,775,4.566,881,4.52,897,3.916,945,3.916,1083,2.896,1182,3.916,2114,4.208,2168,3.916,2224,4.598,2225,4.598,2226,4.598,2227,4.598,2228,4.598,2229,4.598,2239,6.71,2250,5.192,2251,8.845,2252,8.845,2253,5.192,2254,5.192,2255,5.192,2256,5.192,2257,5.192,2258,5.192,2259,5.192,2260,5.192,2261,5.192,2262,5.192,2263,5.192,2264,5.192,2265,5.192,2266,5.192]],["title/interfaces/Platform.html",[244,0.33,2267,2.652]],["body/interfaces/Platform.html",[3,0.1,4,0.076,8,0.064,29,0.366,30,0.008,38,0.1,168,0.007,169,0.007,183,0.425,199,0.62,206,1.417,244,0.487,246,1.483,255,0.697,450,2.48,1008,3.092,1011,5.161,1013,5.907,1189,3.991,2112,4.785,2115,5.161,2267,4.666,2268,6.67,2269,7.786,2270,7.124,2271,6.67]],["title/interfaces/PlatformDto.html",[244,0.33,2272,3.205]],["body/interfaces/PlatformDto.html",[3,0.1,4,0.076,8,0.064,29,0.366,30,0.008,38,0.1,168,0.007,169,0.007,183,0.425,199,0.62,206,1.417,244,0.487,246,1.483,255,0.697,450,2.48,1008,3.092,1011,5.161,1013,5.907,1189,3.991,2112,4.785,2115,5.161,2269,7.786,2270,7.124,2272,5.638,2273,6.67,2274,6.67]],["title/injectables/PlatformEffects.html",[320,1.047,494,3.662]],["body/injectables/PlatformEffects.html",[3,0.094,4,0.072,8,0.06,29,0.485,30,0.008,32,0.703,38,0.094,39,0.703,49,0.505,168,0.007,169,0.007,183,0.401,187,2.102,191,1.741,196,1.636,198,1.341,199,0.416,200,1.287,255,0.673,313,1.652,314,1.519,320,1.778,322,1.551,494,6.217,512,2.418,528,4.953,530,4.86,531,4.504,536,2.359,541,4.504,543,2.341,560,4.86,589,3.692,590,3.551,591,3.692,988,4.033,2219,6.217,2275,6.289,2276,6.985,2277,6.289,2278,7.285,2279,6.289,2280,7.672,2281,7.672,2282,7.332,2283,6.217,2284,7.672,2285,6.289,2286,6.289,2287,5.57,2288,5.57]],["title/injectables/PlatformService.html",[320,1.047,2278,3.662]],["body/injectables/PlatformService.html",[3,0.101,4,0.077,8,0.065,29,0.494,30,0.008,32,0.751,38,0.101,39,0.751,49,0.54,168,0.007,169,0.007,179,3.117,183,0.429,184,2.054,191,1.526,196,1.703,198,1.434,199,0.444,200,1.376,202,1.659,320,1.851,322,1.659,367,3.312,368,3.029,388,4.479,427,2.243,512,2.585,607,4.304,608,5.394,610,4.689,630,4.304,631,4.888,644,4.304,2272,4.77,2278,6.473,2289,6.725,2290,8.815,2291,6.725,2292,6.725,2293,6.725,2294,6.725]],["title/interfaces/PlatformState.html",[244,0.33,462,3.662]],["body/interfaces/PlatformState.html",[3,0.092,4,0.069,8,0.059,29,0.468,30,0.008,38,0.123,99,1.054,168,0.006,169,0.006,183,0.389,199,0.54,223,2.297,244,0.446,246,1.356,253,2.081,255,0.661,270,3.206,328,4.261,395,2.081,396,2.081,397,2.081,398,2.181,399,2.13,400,2.288,450,2.69,462,6.619,492,5.402,543,2.827,645,4.6,655,4.498,658,3.953,659,4.607,660,1.945,661,3.732,662,2.912,667,4.607,668,3.732,669,4.997,670,3.732,672,3.732,676,2.912,678,2.912,679,3.732,681,2.912,682,4.818,881,2.912,1083,2.599,2267,5.006,2276,4.943,2282,5.402,2283,7.231,2287,5.402,2288,5.402,2295,6.099,2296,6.099,2297,6.099,2298,6.099,2299,6.099,2300,6.099]],["title/interfaces/Project.html",[110,0.685,244,0.33]],["body/interfaces/Project.html",[3,0.105,4,0.08,8,0.067,29,0.384,30,0.008,38,0.105,49,0.717,110,1.24,168,0.007,169,0.007,183,0.446,199,0.572,206,1.397,244,0.511,246,1.555,255,0.717,1129,5.714,2267,5.494,2301,6.997,2302,6.997]],["title/interfaces/ProjectDebugFile.html",[244,0.33,2303,4.002]],["body/interfaces/ProjectDebugFile.html",[3,0.102,4,0.077,8,0.088,29,0.372,30,0.008,38,0.102,65,1.249,168,0.007,169,0.007,183,0.433,199,0.619,206,1.421,244,0.496,246,1.508,255,0.704,1006,6.666,1008,3.143,1189,3.745,2112,4.811,2303,7.11,2304,6.006,2305,6.782,2306,7.829,2307,7.829,2308,6.782]],["title/interfaces/ProjectDebugFileDto.html",[244,0.33,2309,4.002]],["body/interfaces/ProjectDebugFileDto.html",[3,0.102,4,0.077,8,0.088,29,0.372,30,0.008,38,0.102,65,1.249,168,0.007,169,0.007,183,0.433,199,0.619,206,1.421,244,0.496,246,1.508,255,0.704,1005,6.006,1006,6.666,1007,6.006,1008,3.143,1189,3.745,2112,4.811,2306,7.829,2307,7.829,2309,7.11,2310,4.81]],["title/components/ProjectDetailsComponent.html",[0,0.172,109,0.868]],["body/components/ProjectDetailsComponent.html",[0,0.282,1,0.955,2,1.216,3,0.075,4,0.057,5,0.975,6,0.975,7,0.975,8,0.048,12,0.975,13,1.898,14,1.898,15,0.955,17,1.268,18,1.191,19,0.975,25,1.295,27,1.35,29,0.273,30,0.008,32,0.555,38,0.075,39,0.555,43,0.975,44,1.295,45,1.295,46,0.975,47,1.55,48,0.975,49,0.53,50,0.975,51,0.955,52,0.975,53,0.955,54,0.975,55,0.955,56,0.975,57,0.955,58,0.975,59,0.955,60,0.975,61,0.955,62,0.896,63,1.295,64,0.975,65,0.915,66,0.915,67,1.693,68,0.955,69,1.295,70,0.955,71,0.975,72,0.955,73,0.975,74,0.955,75,0.955,76,0.955,77,0.975,78,0.955,79,0.935,80,1.295,81,0.955,82,0.975,83,0.955,84,0.975,85,0.955,86,0.975,87,0.955,88,0.975,89,0.955,90,0.975,91,0.955,92,0.975,93,0.955,94,0.975,95,1.455,96,0.955,97,0.975,98,0.955,99,0.859,100,0.955,101,0.975,102,0.955,103,0.975,104,0.955,105,0.975,106,0.955,107,0.975,108,0.955,109,1.518,110,1.37,111,0.955,112,1.242,113,0.975,114,1.191,115,1.295,116,0.955,117,0.955,118,0.975,119,0.955,120,0.975,121,0.955,122,0.975,123,0.955,124,0.935,125,0.955,126,0.975,127,0.955,128,0.915,129,0.955,130,0.975,131,0.955,132,0.975,133,0.975,134,0.955,135,0.975,136,0.955,137,0.975,138,0.955,139,0.975,140,0.955,141,0.955,142,0.975,143,0.955,144,1.309,145,0.975,146,0.975,147,0.975,148,0.955,149,0.975,150,0.955,151,0.975,152,0.955,153,0.975,154,0.955,155,0.955,156,0.955,157,0.805,158,0.955,159,0.975,160,0.975,161,0.915,162,0.955,163,0.975,164,0.955,165,0.975,166,0.975,167,0.975,168,0.006,169,0.006,174,2.476,1016,5.603,1017,5.847,1018,5.847,2311,4.968,2312,4.968,2313,4.968]],["title/interfaces/ProjectDto.html",[244,0.33,2314,3.662]],["body/interfaces/ProjectDto.html",[3,0.105,4,0.08,8,0.067,29,0.384,30,0.008,38,0.105,49,0.717,168,0.007,169,0.007,183,0.446,199,0.572,206,1.397,244,0.511,246,1.555,255,0.717,1129,5.714,2267,5.241,2272,6.333,2314,6.626,2315,6.997,2316,6.197]],["title/injectables/ProjectEffects.html",[320,1.047,480,3.662]],["body/injectables/ProjectEffects.html",[3,0.084,4,0.064,8,0.054,29,0.468,30,0.008,32,0.624,38,0.084,39,0.624,49,0.448,114,1.49,168,0.006,169,0.006,183,0.356,187,1.951,191,1.616,196,1.761,198,1.19,199,0.369,200,1.142,255,0.625,313,2.059,314,1.894,320,1.65,322,1.376,480,5.77,512,2.145,528,4.827,530,5.206,531,5.122,533,5.859,536,2.093,541,5.122,543,2.662,560,4.603,589,3.276,590,3.151,591,3.276,1126,3.749,2317,5.58,2318,6.694,2319,6.229,2320,6.694,2321,4.522,2322,6.58,2323,5.58,2324,7.12,2325,7.12,2326,6.306,2327,7.12,2328,7.12,2329,5.58,2330,7.12,2331,7.12,2332,7.316,2333,7.12,2334,7.12,2335,5.58,2336,7.12,2337,7.12,2338,7.12,2339,7.12,2340,5.58,2341,4.942,2342,4.942,2343,4.942,2344,4.942,2345,4.942,2346,4.942,2347,4.942]],["title/interfaces/ProjectHourByHourStatDto.html",[244,0.33,2348,3.662]],["body/interfaces/ProjectHourByHourStatDto.html",[3,0.095,4,0.072,8,0.061,30,0.008,38,0.095,49,0.694,168,0.007,169,0.007,183,0.405,199,0.619,206,1.406,234,7.01,244,0.464,246,1.413,255,0.677,310,4.699,1129,5.535,1189,3.946,2310,4.508,2348,6.257,2349,6.838,2350,5.629,2351,8.65,2352,7.661,2353,8.65,2354,7.661,2355,8.65,2356,8.65,2357,8.65,2358,7.661]],["title/components/ProjectPickerComponent.html",[0,0.172,111,0.868]],["body/components/ProjectPickerComponent.html",[0,0.232,1,0.663,2,0.941,3,0.052,4,0.039,5,0.677,6,0.677,7,0.677,8,0.033,12,0.677,13,1.871,14,1.871,15,0.663,17,0.981,18,1.097,19,1.002,20,2.075,21,2.397,23,2.663,24,2.174,25,1.002,27,1.045,29,0.477,30,0.008,31,1.076,32,0.385,34,1.125,35,1.125,36,1.359,37,1.51,38,0.052,39,0.385,43,0.677,44,1.002,45,1.002,46,0.677,47,1.319,48,0.677,49,0.641,50,0.677,51,0.663,52,0.677,53,0.663,54,0.677,55,0.663,56,0.677,57,0.663,58,0.677,59,0.663,60,0.677,61,0.663,62,0.622,63,1.002,64,0.677,65,0.635,66,0.635,67,1.526,68,0.663,69,1.002,70,0.663,71,0.677,72,0.663,73,0.677,74,0.663,75,0.663,76,0.663,77,0.677,78,0.663,79,0.649,80,1.002,81,0.663,82,0.677,83,0.663,84,0.677,85,0.663,86,0.677,87,0.663,88,0.677,89,0.663,90,0.677,91,0.663,92,0.677,93,0.663,94,0.677,95,1.193,96,0.663,97,0.677,98,0.663,99,0.883,100,0.663,101,0.677,102,0.663,103,0.677,104,0.663,105,0.677,106,0.663,107,0.677,108,0.663,109,0.663,110,1.345,111,1.292,112,0.961,113,0.677,114,1.355,115,1.002,116,0.663,117,0.663,118,0.677,119,0.663,120,0.677,121,0.663,122,0.677,123,0.663,124,0.649,125,0.663,126,0.677,127,0.663,128,0.635,129,0.663,130,0.677,131,0.663,132,0.677,133,0.677,134,0.663,135,0.677,136,0.663,137,0.677,138,0.663,139,0.677,140,0.663,141,0.663,142,0.677,143,0.663,144,1.074,145,0.677,146,0.677,147,0.677,148,0.663,149,0.677,150,0.663,151,0.677,152,0.663,153,0.677,154,0.663,155,0.663,156,0.663,157,0.559,158,0.663,159,0.677,160,0.677,161,0.635,162,0.663,163,0.677,164,0.663,165,0.677,166,0.677,167,0.677,168,0.004,169,0.004,183,0.22,184,1.313,191,0.783,196,1.836,198,1.603,199,0.548,200,1.537,202,1.854,203,2.321,206,1.089,255,0.448,285,2.584,296,2.318,308,2.176,313,1.766,314,1.734,322,0.851,347,2.78,368,1.553,427,1.15,450,1.008,457,1.294,552,1.599,660,1.1,726,2.515,793,1.754,902,2.819,944,1.359,953,2.79,963,1.395,972,2.684,1033,3.721,1059,1.698,1083,1.47,1104,2.111,1107,2.207,1115,2.684,1116,1.877,1161,1.948,1162,1.877,1163,1.877,1622,2.795,1623,4.139,1624,4.929,1625,3.721,1626,4.139,1627,4.139,1630,4.929,1632,4.139,1633,4.139,1634,4.139,1635,4.139,1636,5.448,1637,3.852,1641,3.055,1642,3.055,1643,3.055,1644,2.795,1646,3.055,1647,4.139,1648,5.448,1650,4.139,1651,5.448,1653,4.139,1654,5.448,1656,4.139,1657,5.448,1660,3.852,1662,2.601,1663,3.055,1665,2.795,1666,3.055,1667,2.111,1668,2.795,1680,4.086,1681,2.601,1682,2.601,1683,2.601,1684,2.601,1685,3.852,1686,2.601,1691,2.601,1692,2.601,1698,2.795,2319,2.601,2359,8.685,2360,7.693,2361,6.081,2362,5.386,2363,6.081,2364,6.081,2365,5.954,2366,3.449,2367,3.449,2368,3.449,2369,3.449,2370,3.449,2371,4.523,2372,2.601,2373,3.055,2374,3.055,2375,2.601,2376,3.055,2377,3.055,2378,3.449,2379,3.449,2380,3.449,2381,3.449,2382,3.449,2383,3.449,2384,3.055,2385,5.107,2386,5.107,2387,5.107,2388,5.107,2389,5.107,2390,5.107,2391,4.523,2392,5.107]],["title/interfaces/ProjectRelease.html",[244,0.33,2393,3.662]],["body/interfaces/ProjectRelease.html",[3,0.106,4,0.08,8,0.068,30,0.008,38,0.106,168,0.007,169,0.007,183,0.449,199,0.574,206,1.399,244,0.514,246,1.564,255,0.72,1011,5.251,1189,3.803,2304,6.233,2393,6.649,2394,7.037,2395,7.249,2396,7.923]],["title/interfaces/ProjectReleaseDto.html",[244,0.33,2397,3.662]],["body/interfaces/ProjectReleaseDto.html",[3,0.106,4,0.08,8,0.068,30,0.008,38,0.106,168,0.007,169,0.007,183,0.449,199,0.574,206,1.399,244,0.514,246,1.564,255,0.72,1010,6.233,1011,5.251,1189,3.803,2310,4.992,2395,7.249,2396,7.923,2397,6.649]],["title/interfaces/ProjectSecurityClientDto.html",[244,0.33,2398,4.002]],["body/interfaces/ProjectSecurityClientDto.html",[3,0.105,4,0.08,8,0.067,30,0.008,38,0.105,168,0.007,169,0.007,183,0.448,199,0.573,206,1.428,244,0.513,246,1.562,255,0.719,2310,4.984,2398,7.26,2399,6.224,2400,7.027,2401,8.941,2402,8.941,2403,8.941]],["title/interfaces/ProjectStatDto.html",[244,0.33,2404,3.662]],["body/interfaces/ProjectStatDto.html",[3,0.093,4,0.071,8,0.06,29,0.452,30,0.008,38,0.093,49,0.689,110,1.155,124,1.615,168,0.007,169,0.007,183,0.397,199,0.617,206,1.36,244,0.454,246,1.382,255,0.668,310,4.691,1129,5.494,2267,5.04,2272,6.089,2310,4.409,2316,5.506,2348,6.957,2349,6.747,2350,5.506,2352,7.604,2397,6.957,2404,6.173,2405,8.585,2406,8.585,2407,8.585,2408,8.585,2409,8.585,2410,8.585,2411,5.506,2412,5.506]],["title/interfaces/ProjectState.html",[244,0.33,463,3.662]],["body/interfaces/ProjectState.html",[3,0.076,4,0.057,8,0.048,29,0.436,30,0.008,38,0.112,62,1.346,110,1.349,114,1.531,157,1.209,168,0.006,169,0.006,183,0.321,199,0.581,223,2.032,244,0.368,246,1.119,253,1.718,255,0.584,328,4.46,378,3.268,395,1.718,396,1.718,399,1.759,400,1.889,450,2.758,463,6.048,482,4.46,543,2.589,658,4.162,659,4.076,660,1.606,661,3.081,662,2.405,667,4.076,668,4.567,669,5.441,670,4.076,672,4.567,676,3.564,678,3.564,679,4.567,681,3.564,682,5.082,1083,3.18,1126,3.384,2318,4.081,2319,3.798,2320,4.081,2342,4.46,2343,4.46,2344,4.46,2345,4.46,2346,4.46,2347,4.46,2413,5.035,2414,8.655,2415,8.787,2416,8.787,2417,8.787,2418,8.787,2419,7.516,2420,8.787,2421,8.787,2422,4.081,2423,5.035,2424,5.035,2425,5.035,2426,5.035,2427,5.035,2428,5.035,2429,5.035,2430,5.035,2431,5.035,2432,5.035]],["title/components/ProjectsComponent.html",[0,0.172,112,0.85]],["body/components/ProjectsComponent.html",[0,0.234,1,0.675,2,0.954,3,0.053,4,0.04,5,0.689,6,0.689,7,0.689,8,0.034,12,0.689,13,1.872,14,1.872,15,0.675,17,0.995,18,1.411,19,1.016,20,2.098,21,2.423,23,2.692,24,2.198,25,1.016,27,1.059,29,0.493,30,0.008,31,1.096,32,0.393,34,1.146,35,1.146,36,1.385,37,1.539,38,0.053,39,0.393,41,2.149,43,0.689,44,1.016,45,1.016,46,0.689,47,1.331,48,0.689,49,0.545,50,0.689,51,0.675,52,0.689,53,0.675,54,0.689,55,0.675,56,0.689,57,0.675,58,0.689,59,0.675,60,0.689,61,0.675,62,0.634,63,1.016,64,0.689,65,0.647,66,0.647,67,1.535,68,0.675,69,1.016,70,0.675,71,0.689,72,0.675,73,0.689,74,0.675,75,0.675,76,0.675,77,0.689,78,0.675,79,0.661,80,1.016,81,0.675,82,0.689,83,0.675,84,0.689,85,0.675,86,0.689,87,0.675,88,0.689,89,0.675,90,0.689,91,0.675,92,0.689,93,0.675,94,0.689,95,1.206,96,0.675,97,0.689,98,0.675,99,0.607,100,0.675,101,0.689,102,0.675,103,0.689,104,0.675,105,0.689,106,0.675,107,0.689,108,0.675,109,0.675,110,1.187,111,0.675,112,1.361,113,0.689,114,1.224,115,1.016,116,0.675,117,0.675,118,0.689,119,0.675,120,0.689,121,0.675,122,0.689,123,0.675,124,0.661,125,0.675,126,0.689,127,0.675,128,0.647,129,0.675,130,0.689,131,0.675,132,0.689,133,0.689,134,0.675,135,0.689,136,0.675,137,0.689,138,0.675,139,0.689,140,0.675,141,0.675,142,0.689,143,1.303,144,1.086,145,0.689,146,0.689,147,0.689,148,0.675,149,0.689,150,0.675,151,0.689,152,0.675,153,0.689,154,0.675,155,0.675,156,0.675,157,0.996,158,0.675,159,0.689,160,0.689,161,1.25,162,0.675,163,0.689,164,0.675,165,0.689,166,0.689,167,0.689,168,0.004,169,0.004,176,1.896,177,2.692,183,0.392,184,1.332,186,2.971,187,1.419,191,1.175,196,1.777,198,1.104,199,0.406,200,1.059,202,1.516,203,2.025,206,0.785,255,0.454,313,1.987,314,2.013,322,0.867,341,3.479,457,1.318,536,1.318,660,1.121,715,2.936,837,1.629,879,2.4,883,3.126,884,3.232,902,2.838,935,1.539,936,1.787,944,1.385,953,1.458,963,2.743,972,1.847,1059,1.73,1083,2.62,1128,2.063,1175,4.151,1719,4.812,2121,5.445,2166,3.113,2320,4.196,2372,2.65,2375,2.65,2419,5.445,2433,3.514,2434,8.196,2435,6.148,2436,4.586,2437,4.586,2438,7.232,2439,6.148,2440,7.566,2441,6.008,2442,4.983,2443,5.178,2444,6.784,2445,3.514,2446,5.178,2447,6.784,2448,3.514,2449,3.514,2450,3.514,2451,6.148,2452,6.148,2453,6.148,2454,6.148,2455,6.148,2456,3.514,2457,3.514,2458,5.178,2459,3.514,2460,4.586,2461,3.514,2462,5.178,2463,3.514,2464,4.586,2465,3.514,2466,3.514,2467,3.113,2468,3.514,2469,2.65,2470,2.848,2471,3.113,2472,2.848,2473,3.514,2474,3.113,2475,3.514,2476,4.586,2477,3.514,2478,3.514,2479,3.514,2480,3.514,2481,3.514,2482,2.848,2483,3.514,2484,5.178]],["title/components/ProjectsComponent-1.html",[0,0.143,112,0.708,782,2.527]],["body/components/ProjectsComponent-1.html",[0,0.257,1,1.406,2,1.074,3,0.062,4,0.047,5,0.813,6,0.813,7,0.813,8,0.04,10,2.534,12,0.813,13,1.885,14,1.885,15,0.796,17,1.12,18,1.051,19,1.144,20,2.301,24,2.411,25,1.144,27,1.192,29,0.491,30,0.008,31,1.292,32,0.463,34,1.35,35,1.35,38,0.062,39,0.463,43,0.813,44,1.144,45,1.144,46,0.813,47,1.436,48,0.813,49,0.541,50,0.813,51,0.796,52,0.813,53,0.796,54,0.813,55,0.796,56,0.813,57,0.796,58,0.813,59,0.796,60,0.813,61,0.796,62,0.747,63,1.144,64,0.813,65,0.763,66,0.763,67,1.613,68,0.796,69,1.144,70,0.796,71,0.813,72,0.796,73,0.813,74,0.796,75,0.796,76,0.796,77,0.813,78,0.796,79,0.779,80,1.144,81,0.796,82,0.813,83,0.796,84,0.813,85,0.796,86,0.813,87,0.796,88,0.813,89,0.796,90,0.813,91,0.796,92,0.813,93,0.796,94,0.813,95,1.323,96,0.796,97,0.813,98,0.796,99,0.716,100,0.796,101,0.813,102,0.796,103,0.813,104,0.796,105,0.813,106,0.796,107,0.813,108,0.796,109,0.796,110,1.023,111,0.796,112,1.451,113,0.813,114,1.482,115,1.144,116,1.406,117,0.796,118,0.813,119,0.796,120,0.813,121,0.796,122,0.813,123,0.796,124,0.779,125,0.796,126,0.813,127,0.796,128,0.763,129,0.796,130,0.813,131,0.796,132,0.813,133,0.813,134,0.796,135,0.813,136,0.796,137,0.813,138,0.796,139,0.813,140,0.796,141,0.796,142,0.813,143,0.796,144,1.191,145,0.813,146,0.813,147,0.813,148,0.796,149,0.813,150,0.796,151,0.813,152,0.796,153,0.813,154,0.796,155,0.796,156,0.796,157,0.671,158,0.796,159,0.813,160,0.813,161,0.763,162,0.796,163,0.813,164,0.796,165,0.813,166,0.813,167,0.813,168,0.005,169,0.005,176,2.134,177,2.953,183,0.264,184,1.499,186,3.205,191,0.94,196,1.706,198,0.883,199,0.274,200,0.847,202,1.021,203,1.74,255,0.511,313,1.922,314,1.933,322,1.021,368,1.865,457,1.553,536,1.553,660,1.32,711,4.723,782,2.783,902,3.001,944,1.632,963,2.356,1008,1.92,1039,4.936,1059,2.039,1090,4.478,1091,5.52,1092,3.729,1106,2.65,1117,2.039,1118,2.534,1119,2.534,1120,1.977,1121,2.105,1122,2.534,1175,3.566,1708,4.783,1712,5.465,1719,4.134,1722,4.723,1733,2.937,1738,3.123,1741,3.123,2319,3.123,2371,5.162,2372,3.123,2373,6.482,2374,3.668,2375,3.123,2376,3.668,2377,5.162,2436,5.162,2437,5.162,2485,4.141,2486,4.141,2487,4.141,2488,4.141,2489,4.141,2490,4.141,2491,4.141,2492,3.668,2493,3.356]],["title/components/ProjectsTableComponent.html",[0,0.172,116,0.868]],["body/components/ProjectsTableComponent.html",[0,0.186,1,0.467,2,0.718,3,0.036,4,0.028,5,0.477,6,0.477,7,0.477,8,0.023,12,0.477,13,1.835,14,1.835,15,0.467,17,0.749,18,1.437,19,0.765,20,1.665,21,1.923,23,2.136,24,1.744,25,0.765,27,0.797,29,0.485,30,0.008,31,0.758,32,0.271,33,1.094,34,0.792,35,0.792,36,0.958,37,1.064,38,0.036,39,0.271,41,3.351,43,0.477,44,0.765,45,0.765,46,0.477,47,1.095,48,0.477,49,0.63,50,0.477,51,0.467,52,0.477,53,0.467,54,0.477,55,0.467,56,0.477,57,0.467,58,0.477,59,0.467,60,0.477,61,0.467,62,0.438,63,0.765,64,0.477,65,0.448,66,0.448,67,1.344,68,0.467,69,0.765,70,0.467,71,0.477,72,0.467,73,0.477,74,0.467,75,0.467,76,0.467,77,0.477,78,0.467,79,0.457,80,0.765,81,0.467,82,0.477,83,0.467,84,0.477,85,0.467,86,0.477,87,0.467,88,0.477,89,0.467,90,0.477,91,0.467,92,0.477,93,0.467,94,0.477,95,0.957,96,0.467,97,0.477,98,0.467,99,0.42,100,0.467,101,0.477,102,0.467,103,0.477,104,0.467,105,0.477,106,0.467,107,0.477,108,0.467,109,0.467,110,1.19,111,0.467,112,0.733,113,0.477,114,1.574,115,0.765,116,1.072,117,0.467,118,0.477,119,0.467,120,0.477,121,0.467,122,0.477,123,0.467,124,0.457,125,0.467,126,0.477,127,0.467,128,0.448,129,0.467,130,0.477,131,0.467,132,0.477,133,0.477,134,0.467,135,0.477,136,0.467,137,0.477,138,0.467,139,0.477,140,0.467,141,0.467,142,0.477,143,0.467,144,0.861,145,0.477,146,0.477,147,0.477,148,0.467,149,0.477,150,0.467,151,0.477,152,0.467,153,0.477,154,0.467,155,0.467,156,0.467,157,0.394,158,0.467,159,0.477,160,0.477,161,0.448,162,0.467,163,0.477,164,0.467,165,0.477,166,0.477,167,0.477,168,0.003,169,0.003,176,1.427,178,2.755,183,0.155,184,1.002,185,3.152,187,2.239,191,0.884,193,3.085,196,1.869,198,1.303,199,0.551,200,1.402,202,1.812,203,2.193,206,1.168,223,1.488,253,0.829,255,0.342,285,2.824,297,3.024,308,2.379,313,2.06,314,1.924,322,0.599,386,1.16,395,0.829,396,0.829,397,1.33,398,0.869,399,0.849,400,0.911,427,0.81,450,2.001,457,0.911,536,0.911,543,1.189,552,1.806,625,1.322,655,3.374,658,1.126,660,0.775,662,1.16,676,1.16,678,1.861,681,1.861,715,2.329,726,1.919,785,1.555,793,1.235,837,1.126,878,2.655,879,1.806,880,3.618,882,2.402,883,2.48,884,2.564,889,2.864,891,4.321,898,3.038,899,2.939,902,2.57,903,3.55,904,3.483,911,1.277,916,2.939,918,2.655,919,3.55,921,2.655,926,2.755,927,1.919,928,3.451,933,1.196,934,1.322,935,1.064,936,1.235,937,1.196,938,1.487,939,2.384,940,1.487,944,0.958,952,1.487,953,2.706,954,1.981,955,2.048,956,1.487,957,1.487,959,2.152,963,0.982,975,1.981,976,1.981,977,1.981,980,1.919,981,1.919,988,2.934,989,1.833,1013,1.633,1029,1.723,1030,3.278,1031,4.334,1032,3.278,1033,2.985,1034,3.46,1035,2.764,1036,2.764,1037,3.46,1045,2.764,1049,4.21,1052,3.679,1054,3.46,1055,3.46,1056,3.46,1058,3.46,1061,1.833,1062,1.833,1066,1.723,1069,2.764,1070,3.959,1073,2.152,1079,1.969,1083,3.212,1084,2.764,1093,2.152,1100,1.969,1103,1.633,1104,1.487,1105,1.723,1107,1.555,1115,2.048,1116,1.322,1127,1.555,1131,1.723,1145,1.487,1161,1.372,1162,1.322,1163,1.322,1164,1.555,1166,1.723,1168,1.723,1206,1.633,1625,2.985,1667,1.487,1827,3.954,1837,2.864,1844,2.152,1847,1.969,1853,2.152,1854,1.969,1863,1.969,2267,4.022,2276,1.969,2283,3.954,2318,1.969,2322,5.167,2372,1.833,2375,1.833,2391,5.776,2493,7.133,2494,8.802,2495,4.878,2496,4.878,2497,4.878,2498,4.878,2499,6.851,2500,4.878,2501,3.897,2502,5.582,2503,3.897,2504,5.582,2505,2.152,2506,2.43,2507,2.43,2508,2.43,2509,2.43,2510,3.897,2511,2.152,2512,2.152,2513,3.897,2514,4.878,2515,2.43,2516,2.43,2517,2.43,2518,2.43,2519,2.43,2520,3.897,2521,2.43,2522,2.43,2523,3.897,2524,2.43,2525,2.43,2526,2.152,2527,2.43,2528,2.43,2529,2.43,2530,2.43,2531,2.43,2532,2.43,2533,3.897,2534,2.43,2535,2.43,2536,4.878,2537,2.43,2538,3.897,2539,2.43,2540,2.43,2541,2.43,2542,2.43,2543,2.43,2544,2.43,2545,3.897,2546,2.43,2547,2.43,2548,2.43,2549,2.152,2550,2.43,2551,3.897,2552,3.897,2553,3.897,2554,3.451,2555,3.897,2556,3.897,2557,3.897,2558,3.897,2559,3.897,2560,3.897,2561,5.582,2562,5.582,2563,3.897]],["title/components/QueriesComponent.html",[0,0.172,117,0.868]],["body/components/QueriesComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,1.524,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,2564,5.02,2565,7.932,2566,6.647,2567,6.647]],["title/components/RegisterComponent.html",[0,0.172,119,0.868]],["body/components/RegisterComponent.html",[0,0.208,1,0.558,2,0.826,3,0.044,4,0.033,5,0.569,6,0.569,7,0.569,8,0.028,12,0.569,13,1.854,14,1.854,15,0.558,17,0.861,18,0.808,19,0.879,20,1.868,21,2.158,22,3.214,24,1.957,25,0.879,27,0.917,29,0.482,30,0.008,31,0.905,32,0.324,33,1.307,34,0.946,35,0.946,36,1.144,38,0.044,39,0.324,41,3.78,43,0.569,44,0.879,45,0.879,46,0.569,47,1.208,48,0.569,49,0.494,50,0.569,51,0.558,52,0.569,53,0.558,54,0.569,55,0.558,56,0.569,57,0.558,58,0.569,59,0.558,60,0.569,61,0.558,62,0.523,63,0.879,64,0.569,65,0.535,66,0.535,67,1.439,68,0.558,69,0.879,70,0.558,71,0.569,72,0.558,73,0.569,74,0.558,75,0.558,76,0.558,77,0.569,78,0.558,79,0.546,80,0.879,81,0.558,82,0.569,83,0.558,84,0.569,85,0.558,86,0.569,87,0.558,88,0.569,89,0.558,90,0.569,91,0.558,92,0.569,93,0.558,94,0.569,95,1.074,96,0.558,97,0.569,98,0.558,99,0.502,100,0.558,101,0.569,102,0.558,103,0.569,104,0.558,105,0.569,106,0.558,107,0.569,108,0.558,109,0.558,110,0.83,111,0.558,112,0.843,113,0.569,114,0.808,115,0.879,116,0.558,117,0.558,118,0.569,119,1.183,120,0.569,121,0.558,122,0.569,123,0.558,124,0.546,125,0.558,126,0.569,127,0.558,128,0.535,129,0.558,130,0.569,131,0.558,132,0.569,133,0.569,134,0.558,135,0.569,136,0.558,137,0.569,138,0.558,139,0.569,140,0.558,141,0.558,142,0.569,143,0.558,144,0.967,145,0.569,146,0.569,147,0.569,148,0.558,149,0.569,150,0.558,151,0.569,152,0.558,153,0.569,154,0.558,155,0.558,156,0.558,157,0.47,158,0.558,159,0.569,160,0.569,161,0.535,162,0.558,163,0.569,164,0.558,165,0.569,166,0.569,167,0.569,168,0.004,169,0.004,176,1.641,177,2.398,178,3.091,183,0.185,184,1.153,185,3.477,186,2.696,187,2.378,191,1.017,193,3.302,196,1.772,198,0.956,199,0.484,200,1.549,202,1.641,203,2.1,206,0.83,223,0.885,253,0.99,255,0.393,285,1.116,297,1.641,313,1.438,314,1.323,322,0.716,358,1.063,386,1.386,395,0.99,396,0.99,397,1.529,398,1.038,399,1.014,400,1.089,450,2.27,457,1.089,519,1.776,520,2.352,525,4.692,536,1.089,537,3.351,539,2.784,543,1.67,549,2.059,552,1.345,604,5.201,606,5.305,617,2.059,623,3.011,625,1.58,635,1.776,660,0.925,715,2.614,837,1.345,878,2.98,879,2.077,880,3.827,882,2.696,883,2.784,884,2.878,888,3.679,889,3.214,898,3.351,902,2.75,903,3.828,904,3.728,918,2.439,919,4.32,921,3.991,926,3.091,927,1.429,933,1.429,934,1.58,935,1.271,936,1.476,937,1.429,938,1.776,939,2.742,940,1.776,944,1.144,952,1.776,953,1.204,954,1.476,955,1.526,956,1.776,957,1.776,963,1.812,966,1.95,967,1.95,968,1.95,970,1.857,975,1.476,976,1.476,977,1.476,980,1.429,981,2.207,988,2.356,1080,2.059,1120,1.386,1202,4.129,1203,4.129,1204,3.883,1205,3.38,1206,1.95,1208,3.38,1215,3.38,1217,3.179,1222,3.38,1224,2.059,1226,1.857,1228,1.857,1229,2.189,1230,2.189,1231,2.189,1232,1.95,1233,2.059,1234,2.059,1235,2.059,1246,2.059,1248,3.38,1253,2.189,1254,3.38,1264,2.98,1419,4.437,1420,4.129,1423,4.849,1434,3.38,1435,3.632,1436,3.632,1437,3.679,1438,3.679,1443,2.352,1444,2.189,1445,2.571,1447,2.352,1448,2.352,1458,2.571,1459,2.571,1460,2.571,1461,2.571,1462,2.571,1598,2.352,1606,2.571,2568,2.902,2569,4.482,2570,4.482,2571,4.482,2572,2.902,2573,2.902,2574,2.902,2575,2.902,2576,2.902,2577,2.902,2578,2.902,2579,2.902,2580,2.902,2581,2.902,2582,2.902,2583,2.902,2584,2.902,2585,2.902,2586,2.902,2587,2.902,2588,2.902,2589,4.482,2590,4.482,2591,4.482,2592,4.482,2593,4.482,2594,4.482,2595,4.482,2596,4.482,2597,4.482,2598,4.482,2599,4.482,2600,4.482,2601,4.482,2602,4.482,2603,4.482]],["title/interfaces/RegisterRequestDto.html",[244,0.33,623,3.036]],["body/interfaces/RegisterRequestDto.html",[3,0.103,4,0.078,8,0.066,30,0.008,38,0.103,168,0.007,169,0.007,183,0.438,199,0.598,206,1.45,244,0.501,246,1.525,255,0.709,537,4.829,539,4.51,623,5.43,703,4.197,1264,4.829,1437,5.961,1438,5.961,2604,6.858]],["title/components/ReleasesComponent.html",[0,0.172,121,0.868]],["body/components/ReleasesComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,1.524,122,0.985,123,0.965,124,1.552,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,2605,5.02,2606,6.647,2607,6.647]],["title/components/ReleasesTableComponent.html",[0,0.172,123,0.868]],["body/components/ReleasesTableComponent.html",[0,0.18,1,1.044,2,0.692,3,0.071,4,0.026,5,0.456,6,0.456,7,0.456,8,0.022,10,1.421,12,0.456,13,1.829,14,1.829,15,0.722,17,0.722,18,1.37,19,0.737,20,1.614,21,1.865,23,2.072,24,1.691,25,0.737,27,0.768,29,0.478,30,0.008,31,0.724,32,0.259,34,0.757,35,0.757,36,0.915,37,1.017,38,0.035,39,0.259,41,3.314,43,0.456,44,0.737,45,0.737,46,0.456,47,1.067,48,0.456,49,0.54,50,0.456,51,0.446,52,0.456,53,0.446,54,0.456,55,0.446,56,0.456,57,0.446,58,0.456,59,0.446,60,0.456,61,0.446,62,0.419,63,0.737,64,0.456,65,0.428,66,0.428,67,1.319,68,0.446,69,0.737,70,0.446,71,0.456,72,0.446,73,0.456,74,0.446,75,0.446,76,0.446,77,0.456,78,0.446,79,0.437,80,0.737,81,0.446,82,0.456,83,0.446,84,0.456,85,0.446,86,0.456,87,0.446,88,0.456,89,0.446,90,0.456,91,0.446,92,0.456,93,0.446,94,0.456,95,0.928,96,0.446,97,0.456,98,0.446,99,0.401,100,0.446,101,0.456,102,0.446,103,0.456,104,0.446,105,0.456,106,0.446,107,0.456,108,0.446,109,0.446,110,1.127,111,0.446,112,0.707,113,0.456,114,0.677,115,0.737,116,0.446,117,0.446,118,0.456,119,0.446,120,0.456,121,0.446,122,0.456,123,1.044,124,1.67,125,0.446,126,0.456,127,0.446,128,0.428,129,0.446,130,0.456,131,0.446,132,0.456,133,0.456,134,0.446,135,0.456,136,0.446,137,0.456,138,0.446,139,0.456,140,0.446,141,0.446,142,0.456,143,0.446,144,0.835,145,0.456,146,0.456,147,0.456,148,0.446,149,0.456,150,0.446,151,0.456,152,0.446,153,0.456,154,0.446,155,0.446,156,0.446,157,0.376,158,0.446,159,0.456,160,0.456,161,0.428,162,0.446,163,0.456,164,0.446,165,0.456,166,0.456,167,0.456,168,0.003,169,0.003,176,1.375,177,2.072,183,0.148,184,0.966,186,2.381,187,2.082,191,0.853,193,3.029,196,1.865,198,1.273,199,0.54,200,1.221,202,1.727,203,2.159,206,1.097,223,0.708,253,1.282,255,0.33,285,2.78,297,2.995,308,3.166,313,2.124,314,1.996,322,0.573,395,1.282,396,1.282,397,1.282,398,1.343,399,1.312,457,0.871,502,2.664,536,0.871,543,1.146,552,1.741,625,2.575,655,3.933,658,1.076,660,0.74,662,1.109,676,1.794,678,2.596,681,2.596,697,2.299,715,2.259,726,1.85,785,4.48,793,1.91,837,1.076,879,1.741,880,3.562,882,2.33,883,2.405,884,2.487,902,2.396,903,3.66,918,2.575,919,2.575,927,1.143,933,1.143,934,1.264,935,1.017,936,1.18,937,1.143,942,2.056,944,0.915,953,3.314,954,1.91,955,1.22,963,2.198,975,2.764,976,2.764,977,2.764,980,2.677,981,2.677,1008,1.076,1009,3.044,1011,3.191,1029,1.647,1030,4.86,1031,4.235,1032,3.179,1033,2.895,1034,3.356,1035,2.664,1036,2.664,1037,3.356,1039,3.82,1040,3.834,1041,3.834,1045,2.664,1049,4.1,1050,3.044,1051,3.044,1052,3.568,1053,3.834,1054,3.356,1055,3.356,1056,3.356,1057,3.568,1058,3.356,1059,1.143,1061,1.751,1062,1.751,1063,1.881,1066,1.647,1067,1.881,1069,2.664,1070,3.856,1079,1.881,1081,3.044,1083,1.601,1084,2.664,1090,2.299,1091,2.833,1092,2.404,1103,1.56,1104,1.421,1105,1.647,1106,1.486,1107,1.486,1113,2.833,1114,1.881,1115,2.487,1116,1.264,1117,1.143,1118,1.421,1119,1.421,1120,1.109,1121,1.18,1122,1.421,1126,1.56,1127,1.486,1128,2.777,1129,3.027,1130,3.568,1131,1.647,1132,2.833,1133,2.833,1134,2.664,1135,2.524,1136,2.664,1137,2.664,1138,2.833,1139,2.664,1140,2.833,1141,2.299,1142,3.479,1143,2.524,1144,2.664,1145,4.284,1146,2.524,1147,4.088,1148,2.664,1149,2.664,1150,3.856,1151,2.664,1153,2.664,1158,3.834,1161,2.121,1162,2.045,1163,2.045,1164,2.404,1166,2.664,1168,2.664,1175,2.299,1177,2.833,1189,1.645,1840,2.056,1841,2.056,1845,2.056,1846,2.056,1847,1.881,1848,2.056,1852,2.056,2393,3.834,2395,1.881,2412,2.056,2608,8.781,2609,8.781,2610,4.731,2611,4.731,2612,4.731,2613,4.731,2614,5.436,2615,3.756,2616,5.436,2617,2.322,2618,2.322,2619,2.322,2620,2.322,2621,2.322,2622,2.322,2623,2.322,2624,3.756,2625,2.322,2626,3.834,2627,2.322,2628,3.756,2629,2.322,2630,2.322,2631,3.756,2632,3.756,2633,3.756,2634,2.322,2635,3.756,2636,3.756,2637,2.322,2638,2.322,2639,2.322,2640,2.322,2641,2.322,2642,2.322,2643,2.322,2644,2.322,2645,2.322,2646,3.327,2647,3.327,2648,3.327,2649,7.002,2650,2.322,2651,2.322,2652,2.322,2653,2.322,2654,2.322,2655,2.322,2656,2.322,2657,2.322,2658,2.322,2659,2.322,2660,2.322,2661,2.322,2662,2.322,2663,3.756,2664,3.756,2665,3.756,2666,3.756,2667,3.327,2668,3.327,2669,3.327,2670,3.044,2671,3.756,2672,3.756,2673,3.327,2674,3.756,2675,3.756,2676,3.756]],["title/components/ReplaysComponent.html",[0,0.172,125,0.868]],["body/components/ReplaysComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,1.524,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,2677,5.02,2678,7.932,2679,6.647,2680,6.647]],["title/components/ResetPasswordComponent.html",[0,0.172,127,0.868]],["body/components/ResetPasswordComponent.html",[0,0.228,1,0.644,2,0.921,3,0.05,4,0.038,5,0.658,6,0.658,7,0.658,8,0.032,12,0.658,13,1.868,14,1.868,15,0.644,17,0.961,18,0.902,19,0.981,20,2.041,21,2.357,22,3.511,24,2.138,25,0.981,27,1.023,29,0.478,30,0.008,31,1.046,32,0.375,33,1.51,34,1.094,35,1.094,36,1.322,38,0.05,39,0.375,41,3.515,43,0.658,44,0.981,45,0.981,46,0.658,47,1.301,48,0.658,49,0.48,50,0.658,51,0.644,52,0.658,53,0.644,54,0.658,55,0.644,56,0.658,57,0.644,58,0.658,59,0.644,60,0.658,61,0.644,62,0.605,63,0.981,64,0.658,65,0.618,66,0.618,67,1.512,68,0.644,69,0.981,70,0.644,71,0.658,72,0.644,73,0.658,74,0.644,75,0.644,76,0.644,77,0.658,78,0.644,79,0.631,80,0.981,81,0.644,82,0.658,83,0.644,84,0.658,85,0.644,86,0.658,87,0.644,88,0.658,89,0.644,90,0.658,91,0.644,92,0.658,93,0.644,94,0.658,95,1.174,96,0.644,97,0.658,98,0.644,99,0.58,100,0.644,101,0.658,102,0.644,103,0.658,104,0.644,105,0.658,106,0.644,107,0.658,108,0.644,109,0.644,110,0.907,111,0.644,112,0.941,113,0.658,114,0.902,115,0.981,116,0.644,117,0.644,118,0.658,119,0.644,120,0.658,121,0.644,122,0.658,123,0.644,124,0.631,125,0.644,126,0.658,127,1.274,128,1.42,129,0.644,130,0.658,131,0.644,132,0.658,133,0.658,134,0.644,135,0.658,136,0.644,137,0.658,138,0.644,139,0.658,140,0.644,141,0.644,142,0.658,143,0.644,144,1.056,145,0.658,146,0.658,147,0.658,148,0.644,149,0.658,150,0.644,151,0.658,152,0.644,153,0.658,154,0.644,155,0.644,156,0.644,157,0.543,158,0.644,159,0.658,160,0.658,161,0.618,162,0.644,163,0.658,164,0.644,165,0.658,166,0.658,167,0.658,168,0.004,169,0.004,176,1.831,177,2.619,183,0.214,184,1.286,186,2.904,187,2.387,191,1.135,193,3.471,196,1.758,198,0.715,199,0.469,200,1.577,202,1.475,203,1.785,206,0.759,223,1.023,255,0.439,285,1.923,313,1.314,314,1.208,322,0.827,358,1.228,450,1.747,457,1.258,519,2.052,522,5.61,539,3.371,543,1.526,660,1.069,676,1.601,715,2.856,726,2.463,837,1.555,878,3.256,879,2.318,880,3.987,882,2.945,884,3.144,888,4.019,889,3.511,898,3.609,902,2.891,903,4.049,904,3.918,918,2.722,919,2.722,921,4.195,934,1.825,935,1.469,937,1.651,944,1.322,963,2.418,966,2.254,967,2.254,968,2.254,970,2.146,975,2.543,976,2.543,977,2.543,980,2.463,981,2.945,1120,1.601,1128,1.969,1197,2.97,1198,4.43,1199,4.43,1201,5.298,1204,4.243,1206,2.254,1214,2.97,1217,3.548,1219,2.97,1220,2.97,1223,2.97,1224,2.379,1225,5.298,1226,2.146,1228,2.146,1232,2.254,1233,2.379,1234,2.379,1235,2.379,1238,2.97,1241,2.97,1242,2.97,1243,2.97,1244,2.97,1246,2.379,1247,2.97,1255,4.43,1261,4.43,1420,4.511,1434,3.772,1435,4.054,1444,2.529,1447,2.718,1448,2.718,1452,2.718,1680,2.254,2681,8.364,2682,8.364,2683,5.981,2684,5.981,2685,5.002,2686,3.354,2687,3.354,2688,3.354,2689,3.354,2690,3.354,2691,3.354,2692,3.354,2693,8.711,2694,3.354,2695,3.354,2696,5.002,2697,5.298,2698,3.354,2699,5.002,2700,5.002,2701,5.002,2702,5.002]],["title/interfaces/ResetPasswordRequestDto.html",[244,0.33,627,3.662]],["body/interfaces/ResetPasswordRequestDto.html",[3,0.107,4,0.081,8,0.068,30,0.008,38,0.107,168,0.007,169,0.007,183,0.454,199,0.546,206,1.403,244,0.52,246,1.583,255,0.725,539,3.62,627,6.694,703,4.357,1680,6.033,2697,7.952,2703,7.12]],["title/components/ResourcesComponent.html",[0,0.172,129,0.868]],["body/components/ResourcesComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,1.524,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,2704,5.02,2705,7.932,2706,6.647,2707,6.647]],["title/interfaces/Role.html",[244,0.33,1416,2.459]],["body/interfaces/Role.html",[3,0.098,4,0.074,8,0.062,29,0.43,30,0.008,38,0.117,49,0.7,168,0.007,169,0.007,183,0.415,199,0.605,206,1.43,244,0.572,246,1.445,255,0.687,282,4.159,297,3.191,358,2.38,450,1.899,537,3.538,1008,3.013,1101,5.259,1117,3.854,1121,3.979,1189,3.678,1264,3.538,1308,4.902,1416,4.744,1437,4.367,1438,4.367,1484,6.182,2112,3.538,2115,3.816,2708,5.757,2709,7.064,2710,6.574,2711,5.757,2712,5.757,2713,5.268,2714,5.268,2715,5.268]],["title/injectables/RoleEffects.html",[320,1.047,484,3.662]],["body/injectables/RoleEffects.html",[3,0.094,4,0.072,8,0.06,29,0.485,30,0.008,32,0.703,38,0.094,39,0.703,49,0.505,168,0.007,169,0.007,183,0.401,187,2.102,191,1.741,196,1.636,198,1.341,199,0.416,200,1.287,255,0.673,313,1.652,314,1.519,320,1.778,322,1.551,484,6.217,512,2.418,528,4.953,530,4.86,531,4.504,536,2.359,541,4.504,543,2.341,560,4.86,589,3.692,590,3.551,591,3.692,988,4.033,1832,6.217,1867,6.985,2219,6.217,2716,6.289,2717,6.289,2718,7.285,2719,6.289,2720,7.672,2721,7.672,2722,7.332,2723,7.672,2724,6.289,2725,6.289,2726,5.57,2727,5.57]],["title/injectables/RoleService.html",[320,1.047,2718,3.662]],["body/injectables/RoleService.html",[3,0.101,4,0.077,8,0.065,29,0.494,30,0.008,32,0.751,38,0.101,39,0.751,49,0.54,168,0.007,169,0.007,179,3.117,183,0.429,184,2.054,191,1.526,196,1.703,198,1.434,199,0.444,200,1.376,202,1.659,320,1.851,322,1.659,367,3.312,368,3.029,388,4.479,427,2.243,512,2.585,607,4.304,608,5.394,610,4.689,630,4.304,631,4.888,644,4.304,664,4.519,1416,3.66,2718,6.473,2728,6.725,2729,8.815,2730,6.725,2731,6.725,2732,6.725]],["title/interfaces/RoleState.html",[244,0.33,464,3.662]],["body/interfaces/RoleState.html",[3,0.092,4,0.069,8,0.059,29,0.468,30,0.008,38,0.123,99,1.054,168,0.006,169,0.006,183,0.389,199,0.54,223,2.297,244,0.446,246,1.356,253,2.081,255,0.661,270,3.206,328,4.261,395,2.081,396,2.081,397,2.081,398,2.181,399,2.13,400,2.288,450,2.69,464,6.619,486,5.402,543,2.827,645,4.6,655,4.498,658,3.953,659,4.607,660,1.945,661,3.732,662,2.912,664,4.098,667,4.607,668,3.732,669,4.997,670,3.732,672,3.732,676,2.912,678,2.912,679,3.732,681,2.912,682,4.818,881,2.912,1083,2.599,1416,4.642,1832,7.231,1867,4.943,2722,5.402,2726,5.402,2727,5.402,2733,6.099,2734,6.099,2735,6.099,2736,6.099,2737,6.099]],["title/components/ScreenLoadsComponent.html",[0,0.172,131,0.868]],["body/components/ScreenLoadsComponent.html",[0,0.282,1,0.955,2,1.216,3,0.075,4,0.057,5,0.975,6,0.975,7,0.975,8,0.048,12,0.975,13,1.898,14,1.898,15,0.955,17,1.268,18,1.191,19,0.975,25,1.295,27,1.35,29,0.273,30,0.008,32,0.555,38,0.075,39,0.555,43,0.975,44,1.295,45,1.295,46,0.975,47,1.55,48,0.975,49,0.53,50,0.975,51,0.955,52,0.975,53,0.955,54,0.975,55,0.955,56,0.975,57,0.955,58,0.975,59,0.955,60,0.975,61,0.955,62,0.896,63,1.295,64,0.975,65,0.915,66,0.915,67,1.693,68,0.955,69,1.295,70,0.955,71,0.975,72,0.955,73,0.975,74,0.955,75,0.955,76,0.955,77,0.975,78,0.955,79,0.935,80,1.295,81,0.955,82,0.975,83,0.955,84,0.975,85,0.955,86,0.975,87,0.955,88,0.975,89,0.955,90,0.975,91,0.955,92,0.975,93,0.955,94,0.975,95,1.455,96,0.955,97,0.975,98,0.955,99,0.859,100,0.955,101,0.975,102,0.955,103,0.975,104,0.955,105,0.975,106,0.955,107,0.975,108,0.955,109,0.955,110,1.125,111,0.955,112,1.242,113,0.975,114,1.191,115,1.295,116,0.955,117,0.955,118,0.975,119,0.955,120,0.975,121,0.955,122,0.975,123,0.955,124,0.935,125,0.955,126,0.975,127,0.955,128,0.915,129,0.955,130,0.975,131,1.518,132,1.74,133,0.975,134,0.955,135,0.975,136,0.955,137,0.975,138,0.955,139,0.975,140,0.955,141,0.955,142,0.975,143,0.955,144,1.309,145,0.975,146,0.975,147,0.975,148,0.955,149,0.975,150,0.955,151,0.975,152,0.955,153,0.975,154,0.955,155,0.955,156,0.955,157,0.805,158,0.955,159,0.975,160,0.975,161,0.915,162,0.955,163,0.975,164,0.955,165,0.975,166,0.975,167,0.975,168,0.006,169,0.006,174,2.476,2738,4.968,2739,4.968,2740,4.968,2741,6.997,2742,6.601,2743,6.601]],["title/components/SdksComponent.html",[0,0.172,134,0.868]],["body/components/SdksComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,1.524,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,2744,5.02,2745,7.932,2746,6.647,2747,6.647]],["title/components/SecurityComponent.html",[0,0.172,136,0.868]],["body/components/SecurityComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,1.524,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,2399,7.025,2748,5.02,2749,6.647,2750,6.647]],["title/injectables/SessionStorage.html",[320,1.047,2751,4.002]],["body/injectables/SessionStorage.html",[3,0.084,4,0.064,8,0.054,29,0.431,30,0.008,31,1.744,32,0.625,38,0.084,39,0.625,49,0.664,168,0.006,169,0.006,176,2.048,179,2.592,183,0.455,184,1.834,187,2.15,191,1.782,196,1.916,198,1.763,199,0.564,200,1.691,202,2.106,203,2.606,206,1.424,211,3.967,223,1.706,255,0.626,310,4.071,314,1.997,320,1.652,325,3.579,367,2.754,371,5.342,378,2.449,427,2.618,450,2.415,512,2.15,728,4.791,1013,3.758,1505,4.218,1506,5.864,1515,4.533,1517,4.533,1546,6.952,1547,5.779,1548,5.737,1549,5.779,1550,5.779,1551,6.362,1552,6.315,1553,5.779,1554,5.779,1555,4.954,1556,5.779,1557,4.954,1558,5.779,1559,4.954,1560,4.533,1561,4.533,1562,4.954,1563,5.378,1564,4.218,1565,4.954,1566,4.954,1567,4.954,1568,4.954,1569,6.315,1571,4.954,1572,4.954,1573,4.954,1574,4.954,1575,4.954,1576,4.954,2751,6.315,2752,9.069,2753,5.593]],["title/components/SessionsComponent.html",[0,0.172,138,0.868]],["body/components/SessionsComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,1.524,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,2754,5.02,2755,7.025,2756,6.647,2757,6.647]],["title/components/SettingsComponent.html",[0,0.172,140,0.868]],["body/components/SettingsComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,1.524,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,711,6.428,2758,5.02,2759,6.647,2760,6.647]],["title/components/SidebarComponent.html",[0,0.172,141,0.868]],["body/components/SidebarComponent.html",[0,0.198,1,0.515,2,0.776,3,0.04,4,0.031,5,0.526,6,0.526,7,0.526,8,0.026,12,0.526,13,1.846,14,1.846,15,1.232,17,0.81,18,0.939,19,0.827,20,1.776,25,0.827,29,0.374,30,0.008,31,0.836,32,0.3,34,0.874,35,0.874,38,0.04,39,0.848,43,0.526,44,0.827,45,1.523,46,0.526,47,1.157,48,0.526,49,0.474,50,0.526,51,0.515,52,0.526,53,0.515,54,0.526,55,0.515,56,0.526,57,0.515,58,0.526,59,0.515,60,0.526,61,0.515,62,0.484,63,0.827,64,0.526,65,0.494,66,0.494,67,1.397,68,0.515,69,0.827,70,0.515,71,0.526,72,0.515,73,0.526,74,0.515,75,0.515,76,0.515,77,0.526,78,0.515,79,0.504,80,0.827,81,0.515,82,0.526,83,0.515,84,0.526,85,0.515,86,0.526,87,0.515,88,0.526,89,0.515,90,0.526,91,0.515,92,0.526,93,0.515,94,0.526,95,1.021,96,0.515,97,0.526,98,0.515,99,0.463,100,1.133,101,0.526,102,0.515,103,0.526,104,0.515,105,0.526,106,0.515,107,0.526,108,0.515,109,0.515,110,0.789,111,0.515,112,0.793,113,0.526,114,0.76,115,0.827,116,0.515,117,0.515,118,0.526,119,0.515,120,0.526,121,0.515,122,0.526,123,0.515,124,0.504,125,0.515,126,0.526,127,0.515,128,0.494,129,0.515,130,0.526,131,0.515,132,0.526,133,0.526,134,0.515,135,0.526,136,0.515,137,0.526,138,0.515,139,0.526,140,0.515,141,1.133,142,0.526,143,0.515,144,0.919,145,0.526,146,0.526,147,0.526,148,0.515,149,0.526,150,0.515,151,0.526,152,0.515,153,0.526,154,0.515,155,0.515,156,0.515,157,0.434,158,0.515,159,0.526,160,0.526,161,0.494,162,0.515,163,0.526,164,0.515,165,0.526,166,0.526,167,0.526,168,0.004,169,0.004,176,1.543,177,2.279,183,0.171,184,1.951,186,2.981,187,1.616,191,1.545,193,3.72,194,4.469,196,1.452,198,1.258,199,0.47,200,0.862,202,1.039,203,1.258,212,1.801,248,1.64,250,1.64,253,0.915,254,3.178,255,0.597,256,3.61,266,4.556,267,4.646,273,1.801,276,3.61,279,2.988,290,2.379,295,4.103,308,1.142,313,0.704,314,0.648,347,3.211,354,2.831,357,1.902,358,1.906,362,4.356,372,2.988,380,4.356,385,4.357,387,2.696,390,3.497,395,0.915,396,0.915,397,1.438,398,1.506,399,0.936,400,1.006,420,2.831,675,3.732,708,4.218,709,3.692,718,4.356,729,2.022,731,3.732,733,3.692,734,5.225,735,3.925,740,3.178,742,4.781,743,3.414,748,5.05,752,3.414,753,3.414,765,4.218,808,4.781,838,4.184,902,1.58,926,4.283,935,1.174,1141,5.51,1142,6.105,1143,2.831,1147,3.331,1270,3.732,1300,5.721,1306,6.438,1312,3.414,1372,2.374,1376,7.318,1393,3.732,1416,2.293,1746,2.022,1837,2.473,1913,1.801,1944,3.178,1946,3.732,1961,3.732,1982,3.732,1986,3.732,2034,3.732,2035,3.732,2741,2.374,2761,2.681,2762,5.205,2763,4.213,2764,7.585,2765,6.306,2766,4.213,2767,4.213,2768,5.225,2769,5.899,2770,7.374,2771,5.225,2772,5.225,2773,5.205,2774,5.205,2775,5.205,2776,5.205,2777,4.61,2778,6.412,2779,5.205,2780,5.205,2781,5.205,2782,5.205,2783,2.681,2784,4.213,2785,5.225,2786,4.213,2787,2.681,2788,2.681,2789,2.681,2790,3.732,2791,2.681,2792,4.213,2793,2.681,2794,2.681,2795,5.205,2796,2.681,2797,2.681,2798,9.005,2799,2.681,2800,2.681,2801,2.681,2802,3.732,2803,2.681,2804,2.681,2805,2.681,2806,2.681,2807,2.681,2808,4.213,2809,2.681,2810,2.681,2811,2.681,2812,2.681,2813,2.681,2814,2.681,2815,2.681,2816,4.213,2817,2.681,2818,2.681,2819,2.681,2820,2.681,2821,2.681,2822,2.681,2823,2.681,2824,2.681,2825,2.681,2826,2.681,2827,2.681,2828,2.681,2829,2.681,2830,2.681,2831,2.681,2832,2.681,2833,3.732,2834,2.681,2835,2.681,2836,2.374,2837,2.681,2838,2.681,2839,2.681,2840,2.681,2841,2.681,2842,2.681,2843,2.681,2844,2.681,2845,2.681,2846,2.681,2847,2.681,2848,2.681,2849,2.681,2850,2.681,2851,2.681,2852,2.681,2853,2.681,2854,2.681,2855,2.681,2856,2.681,2857,2.681,2858,2.681,2859,2.681,2860,2.681,2861,2.681,2862,2.681,2863,2.681,2864,2.681,2865,2.681,2866,2.681,2867,2.681,2868,2.681,2869,2.681,2870,2.681,2871,2.681,2872,2.681,2873,2.681,2874,2.681,2875,2.681,2876,2.681,2877,2.681]],["title/components/SingleProjectCardComponent.html",[0,0.172,143,0.868]],["body/components/SingleProjectCardComponent.html",[0,0.207,1,0.549,2,0.816,3,0.043,4,0.033,5,0.561,6,0.561,7,0.561,8,0.027,12,0.561,13,1.853,14,1.853,15,0.549,17,0.851,18,1.102,19,0.869,20,1.851,21,2.138,22,3.184,23,2.375,24,1.939,25,0.869,27,0.906,29,0.454,30,0.008,31,0.892,32,0.32,33,1.288,34,0.932,35,0.932,36,1.127,37,1.252,38,0.043,39,0.32,41,3.28,43,1.064,44,0.869,45,0.869,46,0.561,47,1.199,48,0.561,49,0.531,50,0.561,51,0.549,52,0.561,53,0.549,54,0.561,55,0.549,56,0.561,57,0.549,58,0.561,59,0.549,60,0.561,61,0.549,62,0.516,63,0.869,64,0.561,65,0.527,66,0.527,67,1.431,68,0.549,69,0.869,70,0.549,71,0.561,72,0.549,73,0.561,74,0.549,75,0.549,76,0.549,77,0.561,78,0.549,79,0.538,80,0.869,81,0.549,82,0.561,83,0.549,84,0.561,85,0.549,86,0.561,87,0.549,88,0.561,89,0.549,90,0.561,91,0.549,92,0.561,93,0.549,94,0.561,95,1.064,96,0.549,97,0.561,98,0.549,99,0.494,100,0.549,101,0.561,102,0.549,103,0.561,104,0.549,105,0.561,106,0.549,107,0.561,108,0.549,109,0.549,110,1.399,111,0.549,112,0.834,113,0.561,114,0.799,115,0.869,116,0.549,117,0.549,118,0.561,119,0.549,120,0.561,121,0.549,122,0.561,123,0.549,124,0.538,125,0.549,126,0.561,127,0.549,128,0.527,129,0.549,130,0.561,131,0.549,132,0.561,133,0.561,134,0.549,135,0.561,136,0.549,137,0.561,138,0.549,139,0.561,140,0.549,141,0.549,142,0.561,143,1.174,144,1.366,145,0.561,146,0.561,147,0.561,148,0.549,149,0.561,150,0.549,151,0.561,152,0.549,153,0.561,154,0.549,155,0.549,156,0.549,157,0.463,158,0.549,159,0.561,160,0.561,161,0.527,162,0.549,163,0.561,164,0.549,165,0.561,166,0.561,167,0.561,168,0.004,169,0.004,176,1.622,178,3.063,183,0.346,184,1.139,185,3.449,187,2.12,191,1.006,196,1.686,198,1.157,199,0.532,200,1.492,202,1.507,203,1.823,206,0.672,255,0.389,285,1.703,297,1.622,308,2.979,310,3.711,313,1.164,314,1.07,317,1.83,341,2.977,386,1.365,397,0.976,427,0.954,543,0.872,720,3.924,726,2.182,782,5.064,879,2.054,889,4.725,904,3.708,972,4.155,988,4.067,1107,1.83,1130,2.157,1189,3.3,1306,4.333,1307,4.951,1625,3.319,1667,1.75,1837,3.586,2321,2.317,2322,5.273,2354,2.533,2358,2.533,2404,5.666,2411,2.533,2474,7.129,2526,2.533,2549,2.533,2554,3.924,2667,3.924,2668,3.924,2669,4.804,2670,4.396,2673,2.533,2755,3.924,2836,5.411,2878,8.049,2879,2.859,2880,7.737,2881,4.431,2882,5.424,2883,5.424,2884,5.424,2885,4.431,2886,4.431,2887,5.424,2888,5.424,2889,5.424,2890,4.431,2891,6.109,2892,4.431,2893,4.431,2894,2.859,2895,4.431,2896,5.424,2897,2.859,2898,2.859,2899,2.859,2900,2.859,2901,4.431,2902,2.859,2903,2.859,2904,4.431,2905,4.431,2906,2.859,2907,2.859,2908,2.859,2909,2.859,2910,2.859,2911,2.859,2912,2.533,2913,2.859,2914,4.431,2915,2.859,2916,2.859,2917,2.859,2918,2.859,2919,5.424,2920,2.859,2921,2.859,2922,2.859,2923,2.859,2924,2.859,2925,2.859,2926,2.533,2927,4.431,2928,4.431,2929,2.859,2930,2.859,2931,2.859,2932,6.109,2933,2.859,2934,2.859,2935,4.431,2936,4.431,2937,4.431,2938,4.431,2939,4.431,2940,4.431,2941,4.431,2942,4.431,2943,7.002,2944,8.172,2945,4.431,2946,4.431,2947,4.431,2948,4.431,2949,4.431]],["title/injectables/SingleProjectEffects.html",[320,1.047,504,3.662]],["body/injectables/SingleProjectEffects.html",[3,0.042,4,0.032,8,0.027,29,0.36,30,0.008,32,0.314,38,0.042,39,0.314,49,0.225,66,1.278,75,1.563,110,1.136,124,1.531,144,0.496,155,1.563,161,1.499,168,0.004,169,0.004,183,0.179,187,1.196,191,0.991,196,1.841,198,0.599,199,0.185,200,0.574,255,0.383,313,2.251,314,2.07,320,1.012,322,0.692,502,6.163,504,3.539,512,1.079,528,3.942,530,5.387,531,5.377,536,1.053,541,5.377,543,2.794,560,1.648,589,1.648,590,1.585,591,1.648,1123,5.357,1124,5.357,1125,5.357,1126,1.886,2321,2.274,2322,5.233,2326,5.357,2341,2.486,2646,5.357,2647,5.357,2648,5.357,2950,7.041,2951,2.807,2952,6.048,2953,5.357,2954,6.048,2955,6.048,2956,6.048,2957,5.357,2958,6.048,2959,6.048,2960,5.357,2961,6.048,2962,6.048,2963,2.807,2964,4.367,2965,8.112,2966,4.367,2967,6.145,2968,6.938,2969,5.36,2970,6.938,2971,4.367,2972,2.807,2973,4.367,2974,4.367,2975,6.048,2976,6.938,2977,5.36,2978,4.367,2979,2.807,2980,4.367,2981,4.367,2982,6.938,2983,5.36,2984,4.367,2985,2.807,2986,4.367,2987,4.367,2988,6.048,2989,6.938,2990,5.36,2991,4.367,2992,2.807,2993,4.367,2994,4.367,2995,6.633,2996,6.145,2997,5.36,2998,4.367,2999,2.807,3000,4.367,3001,4.367,3002,5.36,3003,4.367,3004,2.807,3005,4.367,3006,4.367,3007,5.36,3008,4.367,3009,2.807,3010,4.367,3011,4.367,3012,5.36,3013,4.367,3014,2.807,3015,4.367,3016,4.367,3017,5.36,3018,4.367,3019,2.807,3020,4.367,3021,4.367,3022,5.36,3023,4.367,3024,2.807,3025,4.367,3026,4.367,3027,5.36,3028,4.367,3029,2.807,3030,4.367,3031,4.367,3032,5.36,3033,4.367,3034,2.807,3035,4.367,3036,4.367,3037,5.36,3038,4.367,3039,2.807,3040,4.367,3041,4.367,3042,5.36,3043,4.367,3044,2.807,3045,4.367,3046,4.367,3047,5.36,3048,4.367,3049,2.807,3050,4.367,3051,4.367,3052,5.36,3053,4.367,3054,2.807,3055,4.367,3056,4.367,3057,5.36,3058,4.367,3059,2.807,3060,2.807,3061,2.807,3062,2.807,3063,2.807,3064,2.807,3065,2.807,3066,2.807,3067,2.807,3068,2.807,3069,2.807,3070,2.807,3071,2.807,3072,2.807,3073,2.807,3074,2.807,3075,2.807,3076,2.807]],["title/components/SingleTeamComponent.html",[0,0.172,148,0.868]],["body/components/SingleTeamComponent.html",[0,0.177,1,1.026,2,0.676,3,0.055,4,0.026,5,0.442,6,0.442,7,0.442,8,0.022,10,1.379,12,0.442,13,1.825,14,1.825,15,0.433,17,0.705,18,0.836,19,0.719,20,1.582,21,1.827,23,2.03,24,1.657,25,0.719,27,0.75,29,0.488,30,0.008,31,0.703,32,0.252,33,1.015,34,0.735,35,0.735,36,0.888,37,0.987,38,0.034,39,0.252,41,3.187,43,0.442,44,0.719,45,0.719,46,0.442,47,1.048,48,0.442,49,0.533,50,0.442,51,0.433,52,0.442,53,0.433,54,0.442,55,0.433,56,0.442,57,0.433,58,0.442,59,0.433,60,0.442,61,0.433,62,0.406,63,0.719,64,0.442,65,0.415,66,0.415,67,1.303,68,0.433,69,0.719,70,0.433,71,0.442,72,0.433,73,0.442,74,0.433,75,0.433,76,0.433,77,0.442,78,0.433,79,0.424,80,0.719,81,0.433,82,0.442,83,0.433,84,0.442,85,0.433,86,0.442,87,0.433,88,0.442,89,0.433,90,0.442,91,0.433,92,0.442,93,1.026,94,0.442,95,0.91,96,0.433,97,0.442,98,1.026,99,1.089,100,0.433,101,0.442,102,0.433,103,0.442,104,1.026,105,0.442,106,0.433,107,0.442,108,0.433,109,0.433,110,0.956,111,1.026,112,0.69,113,0.442,114,1.198,115,0.719,116,1.026,117,0.433,118,0.442,119,0.433,120,0.442,121,0.433,122,0.442,123,0.433,124,0.424,125,0.433,126,0.442,127,0.433,128,0.415,129,0.433,130,0.442,131,0.433,132,0.442,133,0.442,134,0.433,135,0.442,136,0.433,137,0.442,138,0.433,139,0.442,140,0.433,141,0.433,142,0.442,143,0.433,144,1.523,145,0.442,146,0.442,147,0.442,148,1.026,149,0.442,150,0.433,151,0.442,152,0.433,153,0.442,154,0.433,155,0.433,156,0.433,157,1.244,158,0.433,159,0.442,160,0.442,161,0.415,162,0.433,163,0.442,164,0.433,165,0.442,166,0.442,167,0.442,168,0.003,169,0.003,176,1.343,177,2.03,183,0.144,184,0.943,186,2.339,187,2.226,191,0.832,193,2.991,196,1.865,198,1.254,199,0.486,200,1.359,202,1.707,203,2.137,206,1.185,223,0.688,253,1.251,255,0.322,285,1.782,297,1.956,308,2.276,313,2.11,314,2.033,322,0.556,358,1.697,386,1.076,395,1.251,396,1.251,397,1.823,398,1.311,399,1.281,400,1.375,427,0.752,450,1.94,457,0.845,497,6.669,536,0.845,543,1.63,552,1.7,625,1.227,655,2.895,658,1.045,660,0.719,662,1.076,678,1.076,681,1.751,697,1.379,726,1.806,785,3.418,793,1.146,878,2.523,879,1.7,880,3.525,882,2.283,883,2.357,890,4.17,893,3.757,894,3.757,896,2.972,898,2.907,899,2.766,902,2.363,904,3.377,909,2.972,911,3.09,916,2.766,921,2.523,926,2.618,927,1.11,931,2.972,933,1.11,935,0.987,936,1.146,937,1.11,938,1.379,939,2.244,940,1.379,944,0.888,951,1.826,952,1.379,953,1.522,954,1.864,955,1.185,956,1.379,957,1.379,958,1.826,963,2.377,975,1.864,976,1.864,977,1.864,980,1.806,981,2.283,983,2.972,988,2.808,989,1.7,993,1.826,996,2.972,1008,1.045,1030,4.81,1032,3.115,1039,3.762,1059,1.11,1083,1.563,1090,3.856,1092,2.347,1103,1.514,1106,1.442,1107,1.442,1113,2.766,1115,1.927,1116,1.227,1117,1.11,1118,1.379,1119,1.379,1120,1.076,1121,1.146,1122,1.379,1127,1.442,1128,3.451,1134,1.599,1135,1.514,1136,1.599,1137,1.599,1139,1.599,1141,1.379,1142,2.347,1143,1.514,1144,1.599,1145,3.269,1146,1.514,1147,2.967,1148,1.599,1149,1.599,1150,2.601,1151,1.599,1153,1.599,1161,1.272,1162,1.227,1163,1.227,1164,1.442,1175,3.856,1621,1.996,1629,3.757,1669,1.826,1697,2.972,1708,3.288,1713,3.496,1719,3.789,1724,4.029,1733,1.599,1738,1.7,1739,1.996,1740,1.826,1741,2.766,2101,1.996,2117,4.106,2118,4.106,2124,4.106,2162,1.996,2163,1.996,2360,1.996,2362,4.106,2384,3.248,2492,1.996,2493,1.826,2626,4.329,3077,8.779,3078,2.254,3079,4.636,3080,4.636,3081,3.667,3082,3.667,3083,5.342,3084,4.636,3085,4.636,3086,4.636,3087,4.636,3088,4.636,3089,4.029,3090,5.342,3091,3.667,3092,3.667,3093,5.342,3094,4.711,3095,3.667,3096,2.254,3097,2.254,3098,2.254,3099,2.254,3100,2.254,3101,2.254,3102,3.667,3103,2.254,3104,2.254,3105,3.667,3106,2.254,3107,5.581,3108,2.254,3109,2.254,3110,2.254,3111,3.667,3112,2.254,3113,3.667,3114,2.254,3115,3.667,3116,2.254,3117,2.254,3118,3.667,3119,2.254,3120,2.254,3121,2.254,3122,2.254,3123,2.254,3124,3.667,3125,2.254,3126,2.254,3127,2.254,3128,3.667,3129,2.254,3130,2.254,3131,2.254,3132,2.766,3133,2.766,3134,1.826,3135,1.826,3136,1.826,3137,2.766,3138,2.766,3139,1.996,3140,2.766,3141,1.599,3142,2.254,3143,2.254,3144,2.254,3145,2.254,3146,2.254,3147,2.254,3148,2.254,3149,2.254,3150,3.667,3151,2.254,3152,2.254,3153,2.254,3154,2.254,3155,6.923,3156,2.254,3157,2.254,3158,3.667,3159,2.254,3160,2.254,3161,2.254,3162,4.636,3163,2.254,3164,2.254,3165,2.254,3166,2.254,3167,3.667,3168,2.254,3169,2.254,3170,2.254,3171,2.254,3172,3.667,3173,3.667,3174,3.667,3175,3.667,3176,3.667,3177,3.248,3178,3.667,3179,3.667,3180,3.667]],["title/injectables/SingleTeamEffects.html",[320,1.047,496,3.662]],["body/injectables/SingleTeamEffects.html",[3,0.061,4,0.046,8,0.039,29,0.42,30,0.008,32,0.454,38,0.061,39,0.454,49,0.326,99,1.52,114,1.586,144,0.717,157,1.353,168,0.005,169,0.005,183,0.259,187,1.575,191,1.305,196,1.811,198,0.866,199,0.268,200,0.831,255,0.504,313,2.193,314,2.017,320,1.332,322,1.002,496,4.659,497,6.494,512,1.561,528,4.449,530,5.327,531,5.302,536,1.523,541,5.302,543,2.755,560,2.384,589,2.384,590,2.293,591,2.384,1763,7.042,2332,7.042,2950,6.978,2965,7.999,2967,5.092,2995,7.396,3094,5.639,3132,5.472,3133,5.472,3134,5.88,3135,5.88,3136,5.88,3137,5.472,3138,3.063,3140,5.472,3141,2.881,3181,4.061,3182,6.673,3183,3.597,3184,4.061,3185,5.749,3186,5.749,3187,5.91,3188,5.749,3189,4.061,3190,5.749,3191,5.749,3192,5.91,3193,5.749,3194,4.061,3195,5.749,3196,5.749,3197,6.426,3198,5.91,3199,5.749,3200,4.061,3201,5.749,3202,5.749,3203,5.91,3204,5.749,3205,4.061,3206,5.749,3207,5.749,3208,5.91,3209,5.749,3210,4.061,3211,5.749,3212,5.749,3213,5.91,3214,5.749,3215,4.061,3216,5.749,3217,5.749,3218,5.91,3219,5.749,3220,4.061,3221,5.749,3222,5.749,3223,5.91,3224,5.749,3225,4.061,3226,3.597,3227,3.597,3228,3.597,3229,3.597,3230,3.597,3231,3.597,3232,3.597,3233,3.597,3234,3.597]],["title/interfaces/SingleTeamState.html",[244,0.33,466,3.662]],["body/interfaces/SingleTeamState.html",[3,0.056,4,0.043,8,0.036,29,0.424,30,0.008,38,0.096,99,1.522,110,1.059,114,1.588,144,0.659,157,1.323,168,0.005,169,0.005,183,0.238,199,0.598,223,1.651,244,0.273,246,0.83,253,1.274,255,0.475,328,4.541,358,2.556,395,1.274,396,1.274,399,1.304,400,1.4,450,2.785,466,5.159,497,2.816,499,3.307,543,2.722,658,4.278,659,3.312,660,1.19,661,2.284,662,1.783,664,2.508,667,3.895,668,4.997,672,4.997,678,3.899,681,3.899,1083,3.48,2422,3.026,2950,3.026,3132,2.816,3133,2.816,3134,3.026,3135,3.026,3136,3.026,3137,2.816,3138,2.816,3139,3.307,3140,2.816,3141,2.648,3187,3.307,3192,3.307,3198,3.307,3203,3.307,3208,3.307,3213,3.307,3218,3.307,3223,3.307,3227,3.307,3228,3.307,3229,3.307,3230,3.307,3231,3.307,3232,3.307,3233,3.307,3234,3.307,3235,3.733,3236,8.166,3237,8.166,3238,8.166,3239,8.166,3240,8.166,3241,8.166,3242,8.166,3243,8.166,3244,8.166,3245,8.166,3246,8.166,3247,8.166,3248,7.972,3249,8.166,3250,8.166,3251,8.166,3252,8.166,3253,3.307,3254,3.733,3255,3.733,3256,3.733,3257,3.733,3258,3.733,3259,3.733,3260,3.733,3261,3.733,3262,3.733,3263,3.733,3264,3.733,3265,3.733,3266,3.733,3267,3.733,3268,3.733,3269,3.733,3270,3.733,3271,3.733,3272,3.733,3273,3.733,3274,3.733,3275,3.733,3276,3.733,3277,3.733,3278,3.733]],["title/components/StatsComponent.html",[0,0.172,150,0.868]],["body/components/StatsComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,1.524,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,3279,5.02,3280,7.932,3281,6.647,3282,6.647]],["title/components/SupportComponent.html",[0,0.172,152,0.868]],["body/components/SupportComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,1.524,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,0.965,165,0.985,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,3283,5.02,3284,7.025,3285,6.647,3286,6.647]],["title/components/TagsTableComponent.html",[0,0.172,154,0.868]],["body/components/TagsTableComponent.html",[0,0.183,1,1.06,2,0.706,3,0.072,4,0.027,5,0.467,6,0.467,7,0.467,8,0.023,10,1.456,12,0.467,13,1.832,14,1.832,15,0.736,17,0.736,18,1.38,19,0.752,20,1.642,21,1.896,23,2.107,24,1.72,25,0.752,27,0.784,29,0.475,30,0.008,31,0.742,32,0.266,34,0.776,35,0.776,36,0.938,37,1.042,38,0.036,39,0.266,41,3.107,43,0.467,44,0.752,45,0.752,46,0.467,47,1.082,48,0.467,49,0.545,50,0.467,51,0.457,52,0.467,53,0.457,54,0.467,55,0.457,56,0.467,57,0.457,58,0.467,59,0.457,60,0.467,61,0.457,62,0.429,63,0.752,64,0.467,65,0.438,66,0.438,67,1.333,68,0.457,69,0.752,70,0.457,71,0.467,72,0.457,73,0.467,74,0.457,75,0.457,76,0.457,77,0.467,78,0.457,79,0.448,80,0.752,81,0.457,82,0.467,83,0.457,84,0.467,85,0.457,86,0.467,87,0.457,88,0.467,89,0.457,90,0.467,91,0.457,92,0.467,93,0.457,94,0.467,95,0.944,96,0.457,97,0.467,98,0.457,99,0.411,100,0.457,101,0.467,102,0.457,103,0.467,104,0.457,105,0.467,106,0.457,107,0.467,108,0.457,109,0.457,110,1.106,111,0.457,112,0.721,113,0.467,114,0.691,115,0.752,116,0.457,117,0.457,118,0.467,119,0.457,120,0.467,121,0.457,122,0.467,123,0.457,124,0.448,125,0.457,126,0.467,127,0.457,128,0.438,129,0.457,130,0.467,131,0.457,132,0.467,133,0.467,134,0.457,135,0.467,136,0.457,137,0.467,138,0.457,139,0.467,140,0.457,141,0.457,142,0.467,143,0.457,144,0.849,145,0.467,146,0.467,147,0.467,148,0.457,149,0.467,150,0.457,151,0.467,152,0.457,153,0.467,154,1.06,155,1.711,156,0.457,157,0.386,158,0.457,159,0.467,160,0.467,161,0.438,162,0.457,163,0.467,164,0.457,165,0.467,166,0.467,167,0.467,168,0.003,169,0.003,176,1.403,177,2.107,183,0.152,184,0.985,186,2.415,187,2.097,191,0.87,193,3.06,196,1.872,198,1.289,199,0.549,200,1.237,202,1.743,203,2.177,206,1.161,223,0.726,253,1.308,255,0.336,285,2.804,297,3.011,308,3.191,313,2.136,314,2.006,322,0.587,395,1.308,396,1.308,397,1.308,398,1.37,399,1.338,457,0.893,502,2.718,536,0.893,543,1.169,552,1.776,655,3.957,658,1.103,660,0.759,662,1.136,676,1.83,678,2.633,681,2.633,697,2.345,715,2.297,726,1.887,785,4.522,793,1.948,837,1.103,879,1.776,880,3.592,882,2.369,883,2.446,884,2.529,902,2.423,903,3.698,918,2.618,919,2.618,927,1.172,933,1.172,934,1.295,935,1.042,936,1.21,937,1.172,944,0.938,953,3.334,954,1.948,955,1.251,963,2.23,975,2.804,976,2.804,977,2.804,980,2.716,981,2.716,1008,1.103,1029,1.688,1030,4.902,1031,4.288,1032,3.232,1033,2.944,1034,3.412,1035,2.718,1036,2.718,1037,3.412,1039,3.869,1040,3.899,1041,3.899,1045,2.718,1049,4.159,1050,3.106,1051,3.106,1052,3.628,1053,3.899,1054,3.412,1055,3.412,1056,3.412,1057,3.628,1058,3.412,1059,1.172,1060,2.108,1061,1.795,1062,1.795,1063,1.929,1064,2.108,1065,2.108,1066,1.688,1067,1.929,1068,2.108,1069,2.718,1070,3.912,1081,3.106,1083,1.633,1084,2.718,1085,2.108,1088,1.929,1089,2.108,1090,2.345,1091,2.89,1092,2.452,1094,1.929,1100,1.929,1101,1.599,1102,1.929,1103,1.599,1104,1.456,1105,1.688,1106,1.523,1107,1.523,1113,2.89,1114,1.929,1115,2.529,1116,1.295,1117,1.172,1118,1.456,1119,1.456,1120,1.136,1121,1.21,1122,1.456,1126,1.599,1127,1.523,1128,2.824,1129,3.078,1130,3.628,1131,1.688,1132,2.89,1133,2.89,1134,2.718,1135,2.575,1136,2.718,1137,2.718,1138,2.89,1139,2.718,1140,2.89,1141,2.345,1142,3.529,1143,2.575,1144,2.718,1145,4.324,1146,2.575,1147,4.134,1148,2.718,1149,2.718,1150,3.912,1151,2.718,1153,2.718,1158,3.899,1161,2.164,1162,2.086,1163,2.086,1164,2.452,1166,2.718,1168,2.718,1175,2.345,1177,2.89,1854,1.929,2505,2.108,2511,2.108,2512,2.108,2953,3.394,2957,3.394,2960,3.394,3287,8.811,3288,8.811,3289,4.811,3290,4.811,3291,4.811,3292,4.811,3293,5.515,3294,3.832,3295,5.515,3296,2.38,3297,2.38,3298,3.832,3299,2.38,3300,2.38,3301,3.832,3302,2.38,3303,6.794,3304,3.832,3305,3.832,3306,2.38,3307,3.832,3308,2.38,3309,3.832,3310,3.832,3311,3.832,3312,2.38,3313,2.38,3314,2.38,3315,2.38,3316,2.38,3317,2.38,3318,7.067,3319,2.38,3320,2.38,3321,2.38,3322,2.38,3323,2.38,3324,2.38,3325,2.38,3326,2.38,3327,2.38,3328,2.38,3329,2.38,3330,2.38,3331,2.38,3332,3.832,3333,3.832,3334,3.832,3335,3.832,3336,3.832]],["title/interfaces/Team.html",[157,0.732,244,0.33]],["body/interfaces/Team.html",[3,0.104,4,0.079,8,0.067,30,0.008,38,0.104,157,1.32,168,0.007,169,0.007,183,0.444,199,0.589,206,1.395,244,0.508,246,1.546,255,0.715,911,4.685,1189,4.029,2112,4.851,2115,5.232,3093,6.321,3337,6.957]],["title/interfaces/TeamDto.html",[244,0.33,3338,3.662]],["body/interfaces/TeamDto.html",[3,0.104,4,0.079,8,0.067,30,0.008,38,0.104,168,0.007,169,0.007,183,0.444,199,0.589,206,1.395,244,0.508,246,1.546,255,0.715,911,4.685,1189,4.029,2112,4.851,2115,5.232,3093,6.321,3338,6.604,3339,6.957]],["title/injectables/TeamEffects.html",[320,1.047,488,3.662]],["body/injectables/TeamEffects.html",[3,0.079,4,0.06,8,0.051,29,0.46,30,0.008,32,0.588,38,0.079,39,0.588,49,0.423,161,1.489,168,0.006,169,0.006,183,0.336,187,1.879,191,1.557,196,1.787,198,1.123,199,0.348,200,1.077,255,0.602,313,2.122,314,1.952,320,1.589,322,1.299,488,5.558,512,2.024,528,4.762,530,5.265,531,5.208,533,5.732,536,2.861,541,5.208,543,2.706,560,4.919,589,3.091,590,2.973,591,3.091,2469,6.094,2996,7.157,3089,6.094,3094,6.094,3141,3.735,3183,4.663,3197,6.074,3226,4.663,3340,5.265,3341,7.157,3342,6.094,3343,5.265,3344,6.858,3345,6.858,3346,6.858,3347,6.858,3348,5.265,3349,6.858,3350,6.858,3351,6.858,3352,6.858,3353,6.858,3354,5.265,3355,6.858,3356,6.858,3357,6.858,3358,6.858,3359,5.265,3360,6.858,3361,6.858,3362,6.858,3363,6.858,3364,5.265,3365,4.663,3366,4.663,3367,4.663,3368,4.663,3369,5.265,3370,4.663,3371,4.663,3372,4.663]],["title/components/TeamPickerComponent.html",[0,0.172,156,0.868]],["body/components/TeamPickerComponent.html",[0,0.237,1,0.691,2,0.97,3,0.054,4,0.041,5,0.706,6,0.706,7,0.706,8,0.035,12,0.706,13,1.874,14,1.874,15,0.691,17,1.012,18,1.124,19,1.034,20,2.127,21,2.456,23,2.729,24,2.228,25,1.034,27,1.078,29,0.48,30,0.008,31,1.122,32,0.402,34,1.173,35,1.173,36,1.418,37,1.575,38,0.054,39,0.402,43,0.706,44,1.034,45,1.034,46,0.706,47,1.346,48,0.706,49,0.633,50,0.706,51,0.691,52,0.706,53,0.691,54,0.706,55,0.691,56,0.706,57,0.691,58,0.706,59,0.691,60,0.706,61,0.691,62,0.649,63,1.034,64,0.706,65,0.663,66,0.663,67,1.546,68,0.691,69,1.034,70,0.691,71,0.706,72,0.691,73,0.706,74,0.691,75,0.691,76,0.691,77,0.706,78,0.691,79,0.677,80,1.034,81,0.691,82,0.706,83,0.691,84,0.706,85,0.691,86,0.706,87,0.691,88,0.706,89,0.691,90,0.706,91,0.691,92,0.706,93,0.691,94,0.706,95,1.223,96,0.691,97,0.706,98,0.691,99,0.91,100,0.691,101,0.706,102,0.691,103,0.706,104,0.691,105,0.706,106,0.691,107,0.706,108,0.691,109,0.691,110,0.945,111,0.691,112,0.991,113,0.706,114,0.95,115,1.034,116,0.691,117,0.691,118,0.706,119,0.691,120,0.706,121,0.691,122,0.706,123,0.691,124,0.677,125,0.691,126,0.706,127,0.691,128,0.663,129,0.691,130,0.706,131,0.691,132,0.706,133,0.706,134,0.691,135,0.706,136,0.691,137,0.706,138,0.691,139,0.706,140,0.691,141,0.691,142,0.706,143,0.691,144,1.1,145,0.706,146,0.706,147,0.706,148,0.691,149,0.706,150,0.691,151,0.706,152,0.691,153,0.706,154,0.691,155,0.691,156,1.318,157,1.428,158,0.691,159,0.706,160,0.706,161,1.345,162,0.691,163,0.706,164,0.691,165,0.706,166,0.706,167,0.706,168,0.005,169,0.005,183,0.229,184,1.355,191,0.817,196,1.832,198,1.557,199,0.545,200,1.494,202,1.801,203,2.353,255,0.462,285,2.637,296,2.417,308,2.245,313,1.802,314,1.764,322,0.887,347,2.867,368,1.62,450,1.051,457,1.349,552,1.668,660,1.147,726,2.594,793,1.829,902,2.862,944,1.418,953,2.847,963,1.455,1033,3.814,1059,1.772,1083,1.533,1104,2.201,1115,2.769,1116,1.958,1161,2.031,1162,1.958,1163,1.958,1622,2.916,1623,4.269,1624,5.051,1625,3.814,1626,4.269,1627,4.269,1630,5.051,1632,4.269,1633,4.269,1634,4.269,1635,4.269,1636,5.56,1644,2.916,1647,4.269,1648,5.56,1650,4.269,1651,5.56,1653,4.269,1654,5.56,1656,4.269,1657,5.56,1665,2.916,1667,2.201,1668,2.916,1691,2.713,1692,2.713,1698,2.916,2365,3.186,2467,3.186,2470,2.916,2472,2.916,2482,2.916,3177,4.666,3342,2.713,3373,8.677,3374,8.677,3375,6.232,3376,6.232,3377,6.232,3378,6.232,3379,6.232,3380,3.598,3381,3.598,3382,3.598,3383,3.598,3384,3.598,3385,3.598,3386,3.598,3387,3.598,3388,4.666,3389,3.598,3390,3.598,3391,3.186,3392,3.186,3393,3.186,3394,3.186,3395,3.598,3396,3.598,3397,3.598,3398,3.598,3399,3.598,3400,3.598,3401,5.268,3402,5.268,3403,5.268,3404,5.268]],["title/injectables/TeamService.html",[320,1.047,3094,3.205]],["body/injectables/TeamService.html",[3,0.064,4,0.049,8,0.041,29,0.478,30,0.008,32,0.478,38,0.064,39,0.478,49,0.712,110,0.649,157,0.693,168,0.005,169,0.005,179,1.984,183,0.273,184,1.534,191,0.971,196,1.919,198,1.892,199,0.595,200,1.815,202,2.205,206,1.448,320,1.382,322,1.056,358,1.567,367,2.108,368,1.928,388,4.914,427,2.982,512,1.645,607,2.739,608,4.544,610,3.501,625,4.401,630,2.739,631,3.65,635,2.619,636,2.876,637,3.469,644,5.722,645,5.6,664,2.876,890,4.23,911,3.608,995,4.498,1014,6.017,1083,2.542,1101,4.008,1499,5.563,2240,3.791,2245,3.791,2248,3.791,2314,3.469,2422,3.469,2626,7.484,3089,4.498,3093,6.294,3094,4.23,3132,4.498,3133,4.498,3137,4.498,3138,4.498,3140,4.498,3338,3.469,3405,4.28,3406,5.964,3407,7.425,3408,7.425,3409,5.964,3410,5.964,3411,5.964,3412,4.28,3413,5.964,3414,4.28,3415,5.964,3416,4.28,3417,5.964,3418,4.28,3419,5.964,3420,4.28,3421,4.28,3422,4.28,3423,5.964,3424,4.28,3425,5.964,3426,4.28,3427,5.964,3428,4.28,3429,4.28,3430,5.964,3431,4.28,3432,5.964,3433,4.28,3434,5.964,3435,4.28,3436,4.28,3437,4.28,3438,6.865,3439,8.085,3440,6.865,3441,6.865,3442,4.28,3443,6.865,3444,5.964]],["title/interfaces/TeamState.html",[244,0.33,467,3.662]],["body/interfaces/TeamState.html",[3,0.068,4,0.052,8,0.044,29,0.418,30,0.008,38,0.106,62,1.279,157,1.453,161,1.518,168,0.005,169,0.005,183,0.29,199,0.582,223,1.898,244,0.332,246,1.011,253,2.6,255,0.546,270,2.391,328,4.479,358,1.666,378,3.104,395,2.6,396,2.6,397,2.6,398,2.724,399,2.661,400,2.858,450,2.762,467,5.745,490,4.029,543,2.657,655,2.24,658,4.184,659,3.806,660,1.45,661,2.784,662,2.172,667,3.806,668,4.663,669,5.329,670,3.806,672,4.663,676,3.385,678,3.639,679,4.338,681,3.639,682,4.876,881,2.172,1083,3.247,2442,6.677,2469,3.431,2482,3.687,3089,3.431,3093,4.412,3141,3.227,3253,4.029,3341,4.029,3342,3.431,3365,4.029,3366,4.029,3367,4.029,3368,4.029,3370,4.029,3371,4.029,3372,4.029,3445,4.549,3446,8.434,3447,8.434,3448,8.587,3449,8.587,3450,8.587,3451,8.587,3452,7.605,3453,8.587,3454,8.587,3455,4.549,3456,4.549,3457,6.22,3458,4.549,3459,4.549,3460,4.549,3461,4.549,3462,4.549,3463,4.549,3464,4.549,3465,4.549,3466,4.549,3467,4.549]],["title/components/TeamsComponent.html",[0,0.172,158,0.868]],["body/components/TeamsComponent.html",[0,0.251,1,1.38,2,1.042,3,0.06,4,0.045,5,0.779,6,0.779,7,0.779,8,0.038,10,2.428,12,0.779,13,1.882,14,1.882,15,0.762,17,1.087,18,1.02,19,1.11,20,2.248,24,2.355,25,1.11,27,1.157,29,0.488,30,0.008,31,1.238,32,0.443,34,1.294,35,1.294,38,0.06,39,0.443,43,0.779,44,1.11,45,1.11,46,0.779,47,1.409,48,0.779,49,0.529,50,0.779,51,0.762,52,0.779,53,0.762,54,0.779,55,0.762,56,0.779,57,0.762,58,0.779,59,0.762,60,0.779,61,0.762,62,0.716,63,1.11,64,0.779,65,0.731,66,0.731,67,1.593,68,0.762,69,1.11,70,0.762,71,0.779,72,0.762,73,0.779,74,0.762,75,0.762,76,0.762,77,0.779,78,0.762,79,0.747,80,1.11,81,0.762,82,0.779,83,0.762,84,0.779,85,0.762,86,0.779,87,0.762,88,0.779,89,0.762,90,0.779,91,0.762,92,0.779,93,0.762,94,0.779,95,1.293,96,0.762,97,0.779,98,0.762,99,0.686,100,0.762,101,0.779,102,0.762,103,0.779,104,0.762,105,0.779,106,0.762,107,0.779,108,0.762,109,0.762,110,0.999,111,0.762,112,1.064,113,0.779,114,1.02,115,1.11,116,0.762,117,0.762,118,0.779,119,0.762,120,0.779,121,0.762,122,0.779,123,0.762,124,0.747,125,0.762,126,0.779,127,0.762,128,0.731,129,0.762,130,0.779,131,0.762,132,0.779,133,0.779,134,0.762,135,0.779,136,0.762,137,0.779,138,0.762,139,0.779,140,0.762,141,0.762,142,0.779,143,0.762,144,1.163,145,0.779,146,0.779,147,0.779,148,0.762,149,0.779,150,0.762,151,0.779,152,0.762,153,0.779,154,0.762,155,0.762,156,0.762,157,0.643,158,1.38,159,0.779,160,1.409,161,1.214,162,0.762,163,0.779,164,0.762,165,0.779,166,0.779,167,0.779,168,0.005,169,0.005,176,2.07,177,2.885,183,0.253,184,1.454,186,3.145,191,0.901,196,1.801,198,0.846,199,0.262,200,0.812,202,0.979,203,1.688,255,0.496,313,2.132,314,2.094,322,0.979,368,1.787,457,1.488,536,1.488,660,1.265,902,2.959,944,1.564,963,2.903,1008,1.839,1039,4.857,1059,1.954,1090,4.828,1092,3.619,1106,2.539,1117,1.954,1118,2.428,1119,2.428,1120,1.895,1121,2.018,1122,2.428,1175,3.46,1708,4.673,1712,5.339,1713,4.969,1719,5.093,1722,4.583,1724,4.265,1733,2.815,1738,2.993,1741,2.993,2441,6.36,2442,5.339,2460,5.008,2464,5.008,2469,2.993,2470,3.216,2471,3.515,2472,3.216,2476,3.515,3107,6.988,3342,2.993,3388,5.008,3391,6.36,3392,3.515,3393,3.515,3394,5.008,3452,5.835,3468,3.968,3469,5.655,3470,5.655,3471,3.968,3472,3.968,3473,3.968,3474,3.968,3475,3.968,3476,3.968,3477,3.968,3478,3.968,3479,3.968,3480,3.968,3481,3.968]],["title/interfaces/Token.html",[244,0.33,656,3.408]],["body/interfaces/Token.html",[3,0.106,4,0.08,8,0.068,30,0.008,38,0.106,168,0.007,169,0.007,183,0.449,199,0.542,206,1.399,244,0.514,246,1.564,255,0.72,605,6.746,656,6.187,972,4.312,3482,7.037,3483,7.923,3484,7.923,3485,7.923]],["title/interfaces/TokenDto.html",[244,0.33,632,3.662]],["body/interfaces/TokenDto.html",[3,0.106,4,0.08,8,0.068,30,0.008,38,0.106,168,0.007,169,0.007,183,0.449,199,0.542,206,1.399,244,0.514,246,1.564,255,0.72,605,6.746,632,6.649,972,4.312,3483,7.923,3484,7.923,3485,7.923,3486,7.037]],["title/components/TopbarComponent.html",[0,0.172,162,0.868]],["body/components/TopbarComponent.html",[0,0.239,1,0.701,2,0.98,3,0.055,4,0.042,5,0.715,6,0.715,7,0.715,8,0.035,12,0.715,13,1.875,14,1.875,15,0.701,17,1.022,18,0.959,19,1.044,20,2.143,21,2.475,23,2.751,24,2.246,25,1.044,27,1.088,29,0.491,30,0.008,31,1.137,32,0.407,33,1.642,34,1.189,35,1.189,36,1.437,37,1.597,38,0.055,39,0.407,43,0.715,44,1.044,45,1.044,46,0.715,47,1.355,48,0.715,49,0.554,50,0.715,51,0.701,52,0.715,53,0.701,54,0.715,55,0.701,56,0.715,57,0.701,58,0.715,59,0.701,60,0.715,61,0.701,62,0.658,63,1.044,64,0.715,65,0.672,66,0.672,67,1.553,68,0.701,69,1.044,70,0.701,71,0.715,72,0.701,73,0.715,74,0.701,75,0.701,76,0.701,77,0.715,78,0.701,79,0.686,80,1.044,81,0.701,82,0.715,83,0.701,84,0.715,85,0.701,86,0.715,87,0.701,88,0.715,89,0.701,90,0.715,91,0.701,92,0.715,93,0.701,94,0.715,95,1.232,96,0.701,97,0.715,98,0.701,99,0.63,100,0.701,101,0.715,102,0.701,103,0.715,104,0.701,105,0.715,106,0.701,107,0.715,108,0.701,109,0.701,110,0.953,111,0.701,112,1.001,113,0.715,114,0.959,115,1.044,116,0.701,117,0.701,118,0.715,119,0.701,120,0.715,121,0.701,122,0.715,123,0.701,124,0.686,125,0.701,126,0.715,127,0.701,128,0.672,129,0.701,130,0.715,131,0.701,132,0.715,133,0.715,134,0.701,135,0.715,136,0.701,137,0.715,138,0.701,139,0.715,140,0.701,141,0.701,142,0.715,143,0.701,144,1.109,145,0.715,146,0.715,147,0.715,148,0.701,149,0.715,150,0.701,151,0.715,152,0.701,153,0.715,154,0.701,155,0.701,156,0.701,157,0.591,158,0.701,159,0.715,160,0.715,161,0.672,162,1.327,163,0.715,164,0.701,165,0.715,166,0.715,167,0.715,168,0.005,169,0.005,183,0.233,184,1.368,187,1.721,191,1.207,193,3.565,194,4.672,196,1.87,198,1.135,199,0.547,200,1.088,202,1.703,203,1.875,212,2.45,253,2.143,255,0.467,290,3.546,313,1.813,314,1.852,358,2.3,395,2.143,396,2.143,397,2.143,398,2.246,399,2.194,400,2.356,427,1.216,457,1.368,523,2.955,660,1.163,715,2.999,718,4.019,729,2.75,735,2.75,748,4.455,837,1.69,881,2.999,902,2.969,904,4.024,926,4.469,927,3.093,933,1.796,935,1.597,944,1.437,948,2.955,950,2.75,1080,2.586,1120,1.741,1226,2.333,1228,2.333,1300,4.737,1306,3.773,1331,4.712,1452,2.955,1598,2.955,1605,3.229,1625,3.843,1667,2.231,1827,5.09,1863,2.955,2156,4.712,2777,5.563,3487,3.646,3488,5.32,3489,5.32,3490,5.32,3491,6.281,3492,6.281,3493,6.281,3494,5.32,3495,7.665,3496,6.904,3497,7.665,3498,5.32,3499,5.32,3500,3.646,3501,3.646,3502,3.646,3503,3.646,3504,3.646,3505,5.32,3506,5.32,3507,5.32,3508,5.32,3509,3.646,3510,3.646,3511,5.32,3512,5.32,3513,3.646,3514,3.646,3515,3.646,3516,5.32,3517,3.646,3518,3.646,3519,3.646,3520,3.646,3521,3.646,3522,3.646,3523,3.646,3524,5.32,3525,5.32]],["title/interfaces/User.html",[244,0.33,358,1.654]],["body/interfaces/User.html",[3,0.091,4,0.069,8,0.058,29,0.413,30,0.008,38,0.113,49,0.488,168,0.006,169,0.006,183,0.388,199,0.618,206,1.447,244,0.549,246,1.352,255,0.66,282,3.893,297,3.12,358,2.752,450,2.383,537,4.638,1008,2.82,1117,3.702,1121,3.822,1189,4.03,1264,4.638,1308,6.426,1416,4.969,1437,5.725,1438,5.725,1484,4.315,2112,4.638,2115,5.002,2708,5.389,2709,4.931,2710,4.589,2711,5.389,2712,5.389,2713,6.905,2714,6.905,2715,6.905]],["title/interfaces/UserDto.html",[244,0.33,636,3.036]],["body/interfaces/UserDto.html",[3,0.092,4,0.069,8,0.059,29,0.413,30,0.008,38,0.092,49,0.49,168,0.006,169,0.006,183,0.389,199,0.623,206,1.447,244,0.446,246,1.356,255,0.661,282,3.903,297,3.122,450,2.386,537,4.642,636,5.059,1008,2.827,1101,5.059,1117,3.707,1121,3.828,1189,4.032,1264,4.642,1308,6.432,1416,4.642,1437,5.73,1438,5.73,1484,4.326,2112,4.642,2115,5.006,2709,4.943,2710,4.6,2713,6.912,2714,6.912,2715,6.912,3526,6.099,3527,6.099,3528,6.099]],["title/components/VitalsComponent.html",[0,0.172,164,0.868]],["body/components/VitalsComponent.html",[0,0.284,1,0.965,2,1.224,3,0.075,4,0.057,5,0.985,6,0.985,7,0.985,8,0.048,12,0.985,13,1.899,14,1.899,15,0.965,17,1.277,18,1.199,19,0.985,25,1.304,27,1.36,29,0.276,30,0.008,32,0.561,38,0.075,39,0.561,43,0.985,44,1.304,45,1.304,46,0.985,47,1.556,48,0.985,49,0.534,50,0.985,51,0.965,52,0.985,53,0.965,54,0.985,55,0.965,56,0.985,57,0.965,58,0.985,59,0.965,60,0.985,61,0.965,62,0.905,63,1.304,64,0.985,65,0.925,66,0.925,67,1.697,68,0.965,69,1.304,70,0.965,71,0.985,72,0.965,73,0.985,74,0.965,75,0.965,76,0.965,77,0.985,78,0.965,79,0.944,80,1.304,81,0.965,82,0.985,83,0.965,84,0.985,85,0.965,86,0.985,87,0.965,88,0.985,89,0.965,90,0.985,91,0.965,92,0.985,93,0.965,94,0.985,95,1.462,96,0.965,97,0.985,98,0.965,99,0.868,100,0.965,101,0.985,102,0.965,103,0.985,104,0.965,105,0.985,106,0.965,107,0.985,108,0.965,109,0.965,110,1.13,111,0.965,112,1.251,113,0.985,114,1.199,115,1.304,116,0.965,117,0.965,118,0.985,119,0.965,120,0.985,121,0.965,122,0.985,123,0.965,124,0.944,125,0.965,126,0.985,127,0.965,128,0.925,129,0.965,130,0.985,131,0.965,132,0.985,133,0.985,134,0.965,135,0.985,136,0.965,137,0.985,138,0.965,139,0.985,140,0.965,141,0.965,142,0.985,143,0.965,144,1.316,145,0.985,146,0.985,147,0.985,148,0.965,149,0.985,150,0.965,151,0.985,152,0.965,153,0.985,154,0.965,155,0.965,156,0.965,157,0.813,158,0.965,159,0.985,160,0.985,161,0.925,162,0.965,163,0.985,164,1.524,165,1.619,166,0.985,167,0.985,168,0.006,169,0.006,174,2.493,3529,5.02,3530,6.647,3531,6.647]],["title/dependencies.html",[3532,3.048,3533,4.819]],["body/dependencies.html",[8,0.063,30,0.008,31,2.041,32,0.731,33,2.947,34,2.562,35,2.134,168,0.007,169,0.007,322,1.614,590,3.695,660,2.506,837,3.033,1913,4.397,2047,5.796,3533,5.796,3534,6.544,3535,9.313,3536,6.544,3537,6.544,3538,6.544,3539,8.422,3540,6.96,3541,6.544,3542,6.544,3543,6.544,3544,8.422,3545,6.544,3546,6.544,3547,6.544,3548,6.544,3549,6.544,3550,6.544,3551,6.544,3552,6.544,3553,6.544,3554,6.544,3555,6.544,3556,6.544,3557,5.303,3558,6.544,3559,6.544,3560,6.544,3561,6.544,3562,6.544,3563,6.544,3564,6.544,3565,5.796,3566,6.544,3567,6.544,3568,6.544,3569,6.544,3570,6.544,3571,6.544]],["title/miscellaneous/enumerations.html",[3572,2.837,3573,4.819]],["body/miscellaneous/enumerations.html",[8,0.068,30,0.008,62,1.279,110,1.076,157,1.149,168,0.006,169,0.006,183,0.354,314,2.338,358,2.597,403,5.35,543,2.164,658,3.288,670,4.341,676,3.387,698,4.767,775,4.767,881,3.387,1006,5.35,1117,4.059,1121,3.607,1309,5.35,1416,3.861,1913,4.767,2267,4.164,2270,5.749,2768,6.283,2912,6.283,3557,5.749,3572,4.184,3573,4.914,3574,5.548,3575,8.712,3576,5.548,3577,5.548,3578,5.548,3579,5.548,3580,7.094,3581,5.548,3582,5.548,3583,6.283,3584,7.094,3585,5.548,3586,7.094,3587,7.094,3588,7.094,3589,7.094,3590,7.094,3591,7.094,3592,7.094,3593,7.094,3594,6.283,3595,7.094,3596,7.094,3597,7.094,3598,7.094,3599,7.094,3600,7.094,3601,7.094,3602,7.094,3603,7.094,3604,5.548,3605,7.094,3606,7.094,3607,7.094,3608,7.094,3609,7.094,3610,7.094,3611,7.094,3612,7.094,3613,5.548,3614,7.094]],["title/miscellaneous/functions.html",[268,3.859,3572,2.837]],["body/miscellaneous/functions.html",[30,0.008,49,0.712,168,0.007,169,0.007,183,0.437,198,1.891,199,0.586,200,1.814,202,1.689,268,4.858,297,2.507,314,1.654,358,3.144,608,4.941,610,4.02,1117,3.976,1121,4.105,1295,5.55,3572,5.165,3615,8.074,3616,8.074,3617,8.074,3618,6.849,3619,8.074,3620,6.849,3621,8.074,3622,6.849,3623,6.849,3624,6.849,3625,6.849,3626,6.849,3627,8.074,3628,8.074,3629,6.849,3630,6.849]],["title/index.html",[183,0.24,3631,3.331,3632,3.331]],["body/index.html",[0,0.292,2,1.274,4,0.061,17,1.025,30,0.007,49,0.555,66,1.274,110,1.232,168,0.006,169,0.006,176,1.953,250,3.264,267,3.132,302,4.906,303,3.414,324,3.584,328,2.547,362,3.414,378,2.336,385,5.37,387,4.912,397,1.82,401,3.584,405,6.115,610,3.132,631,3.264,740,4.023,775,3.584,799,4.023,904,2.712,1011,4.506,1080,5.444,1145,4.697,1309,6.346,1617,4.725,1913,5.158,1924,5.444,1984,4.725,1997,6.126,1999,6.221,2020,5.606,2267,3.132,2785,4.725,3532,4.323,3540,4.725,3565,4.725,3633,6.917,3634,6.917,3635,7.676,3636,6.917,3637,6.917,3638,6.917,3639,4.725,3640,4.725,3641,4.725,3642,5.335,3643,5.335,3644,5.335,3645,5.335,3646,6.917,3647,5.335,3648,5.335,3649,5.335,3650,5.335,3651,5.335,3652,5.335,3653,5.335,3654,5.335,3655,5.335,3656,5.335,3657,5.335,3658,5.335,3659,5.335,3660,4.725,3661,8.089,3662,8.622,3663,5.335,3664,5.335,3665,5.335,3666,5.335,3667,4.725,3668,5.335,3669,5.335,3670,6.798,3671,5.335,3672,8.991,3673,5.335,3674,5.335,3675,5.335,3676,5.335,3677,9.275,3678,8.622,3679,6.917,3680,6.798,3681,7.963,3682,6.917,3683,5.335,3684,5.335,3685,7.676,3686,6.798,3687,6.917,3688,6.917,3689,7.676,3690,6.126,3691,6.917,3692,8.121,3693,5.335,3694,6.917,3695,5.335,3696,5.335,3697,5.335,3698,4.725,3699,4.725,3700,5.335,3701,5.335,3702,6.917,3703,5.335,3704,5.335,3705,6.917,3706,5.335,3707,6.917,3708,5.335,3709,5.335,3710,4.725,3711,4.725,3712,7.676,3713,5.335,3714,6.917,3715,4.725,3716,5.335,3717,5.335,3718,4.725,3719,4.725,3720,5.335,3721,5.335,3722,4.725,3723,5.335,3724,5.335,3725,4.725]],["title/license.html",[3631,3.331,3632,3.331,3726,3.331]],["body/license.html",[0,0.165,4,0.097,8,0.023,15,0.916,16,1.181,29,0.073,30,0.005,39,0.149,66,0.698,144,0.415,168,0.003,169,0.002,174,2.409,184,0.343,187,0.365,195,2.373,196,0.284,199,0.155,203,0.398,244,0.376,246,0.699,249,2.373,250,5.067,256,4.616,262,0.946,265,1.005,267,3.77,271,4.792,272,4.127,275,4.035,276,0.816,277,3.26,289,1.771,290,0.753,295,3.051,298,2.373,299,3.066,300,1.005,306,1.005,309,0.946,310,1.156,317,4.827,321,0.946,324,1.578,328,0.637,340,2.373,355,0.946,358,2.526,365,2.689,371,0.816,373,3.596,378,2.254,381,2.373,384,3.596,387,2.426,397,0.455,398,0.477,405,0.946,408,1.005,427,0.445,429,1.005,434,1.005,438,3.381,443,0.946,528,0.726,539,0.678,655,0.656,679,0.816,697,1.437,718,5.014,732,1.08,733,1.665,735,1.771,736,4.222,743,3.503,744,1.181,749,1.181,756,1.181,757,6.431,763,1.08,764,3.358,765,3.072,768,2.08,773,1.181,779,2.08,782,2.904,791,2.08,793,2.424,797,5.096,798,1.181,805,1.181,806,2.08,807,2.08,810,5.098,867,5.844,881,1.121,953,0.553,980,0.656,988,0.701,1011,4.6,1016,1.665,1020,1.181,1116,0.726,1117,2.957,1146,0.896,1189,0.584,1249,4.341,1295,1.08,1303,2.787,1307,1.903,1310,1.903,1316,1.181,1318,1.181,1409,4.222,1506,0.946,1548,0.896,1691,1.005,1692,1.005,1746,4.341,1779,1.181,1837,1.847,1911,1.181,1913,2.904,1919,1.181,1924,3.066,1937,1.903,1938,4.435,1941,2.08,1944,2.373,1947,4.435,1959,1.181,1980,4.847,1985,2.08,1987,5.844,1991,1.181,1995,2.08,1999,6.297,2001,3.358,2016,1.181,2020,1.08,2021,1.181,2023,2.08,2024,4.558,2025,4.847,2038,2.08,2077,1.181,2083,1.181,2103,1.181,2145,1.181,2670,2.55,2710,4.529,2765,1.181,2771,1.181,2772,1.181,2790,1.181,2802,2.08,2833,1.181,2926,6.604,2943,3.828,3284,2.787,3557,1.903,3583,1.181,3594,4.847,3639,1.181,3640,1.181,3641,1.181,3660,1.181,3661,4.847,3667,3.358,3670,1.181,3680,2.08,3681,5.984,3686,1.181,3690,2.787,3698,3.828,3699,3.358,3710,5.984,3711,2.787,3715,2.787,3718,6.819,3719,2.08,3722,2.787,3725,2.08,3726,8.197,3727,7.363,3728,1.333,3729,1.333,3730,3.146,3731,8.11,3732,7.955,3733,4.767,3734,1.333,3735,1.333,3736,2.348,3737,4.322,3738,7.835,3739,4.322,3740,3.146,3741,6.756,3742,1.333,3743,3.146,3744,1.333,3745,1.333,3746,2.348,3747,4.767,3748,1.333,3749,4.767,3750,1.333,3751,5.472,3752,2.348,3753,1.333,3754,1.333,3755,1.333,3756,6.756,3757,8.68,3758,3.146,3759,9.215,3760,2.348,3761,5.146,3762,5.146,3763,4.767,3764,1.333,3765,1.333,3766,3.791,3767,5.472,3768,3.146,3769,1.333,3770,2.348,3771,1.333,3772,3.146,3773,7.363,3774,3.791,3775,1.333,3776,1.333,3777,2.348,3778,3.791,3779,2.348,3780,6.421,3781,2.348,3782,2.348,3783,3.791,3784,5.146,3785,4.322,3786,1.333,3787,5.472,3788,4.767,3789,8.2,3790,3.146,3791,5.146,3792,1.333,3793,1.333,3794,4.322,3795,5.472,3796,2.348,3797,6.225,3798,4.322,3799,2.348,3800,1.333,3801,1.333,3802,6.9,3803,2.348,3804,1.333,3805,1.333,3806,6.598,3807,2.348,3808,3.146,3809,1.333,3810,1.333,3811,2.348,3812,1.333,3813,3.791,3814,1.333,3815,1.333,3816,1.333,3817,1.333,3818,1.333,3819,2.348,3820,1.333,3821,1.333,3822,1.333,3823,2.348,3824,1.333,3825,3.146,3826,2.348,3827,1.333,3828,1.333,3829,2.348,3830,2.348,3831,6.756,3832,1.333,3833,2.348,3834,2.348,3835,1.333,3836,1.333,3837,2.348,3838,3.146,3839,2.348,3840,3.146,3841,2.348,3842,1.333,3843,1.333,3844,4.767,3845,1.333,3846,1.333,3847,4.322,3848,1.333,3849,3.791,3850,2.348,3851,3.146,3852,1.333,3853,1.333,3854,6.756,3855,3.791,3856,4.322,3857,4.767,3858,3.146,3859,1.333,3860,3.146,3861,2.348,3862,1.333,3863,1.333,3864,1.333,3865,3.146,3866,8.589,3867,1.333,3868,1.333,3869,2.348,3870,2.348,3871,1.333,3872,6.005,3873,1.333,3874,3.791,3875,3.146,3876,2.348,3877,8.51,3878,3.146,3879,5.756,3880,3.791,3881,2.348,3882,1.333,3883,2.348,3884,3.146,3885,5.756,3886,6.005,3887,3.791,3888,2.348,3889,2.348,3890,3.791,3891,1.333,3892,3.146,3893,7.897,3894,2.348,3895,1.333,3896,5.472,3897,1.333,3898,3.146,3899,5.472,3900,1.333,3901,6.9,3902,3.791,3903,2.348,3904,6.225,3905,4.767,3906,1.333,3907,1.333,3908,1.333,3909,5.472,3910,1.333,3911,2.348,3912,1.333,3913,3.146,3914,3.146,3915,1.333,3916,1.333,3917,1.333,3918,6.225,3919,3.146,3920,1.333,3921,1.333,3922,1.333,3923,2.348,3924,6.005,3925,1.333,3926,1.333,3927,1.333,3928,3.146,3929,3.146,3930,3.146,3931,3.146,3932,1.333,3933,1.333,3934,4.322,3935,1.333,3936,2.348,3937,1.333,3938,3.146,3939,1.333,3940,3.146,3941,1.333,3942,1.333,3943,1.333,3944,2.348,3945,1.333,3946,7.699,3947,5.472,3948,1.333,3949,2.348,3950,1.333,3951,1.333,3952,2.348,3953,2.348,3954,1.333,3955,1.333,3956,1.333,3957,2.348,3958,3.146,3959,4.322,3960,1.333,3961,2.348,3962,1.333,3963,1.333,3964,1.333,3965,1.333,3966,5.146,3967,3.791,3968,1.333,3969,4.322,3970,1.333,3971,1.333,3972,1.333,3973,3.146,3974,1.333,3975,1.333,3976,1.333,3977,1.333,3978,3.146,3979,3.146,3980,1.333,3981,1.333,3982,2.348,3983,2.348,3984,2.348,3985,1.333,3986,2.348,3987,1.333,3988,1.333,3989,1.333,3990,1.333,3991,1.333,3992,3.146,3993,1.333,3994,1.333,3995,6.9,3996,3.146,3997,1.333,3998,1.333,3999,1.333,4000,4.322,4001,4.322,4002,1.333,4003,1.333,4004,3.146,4005,1.333,4006,1.333,4007,3.791,4008,1.333,4009,2.348,4010,1.333,4011,1.333,4012,1.333,4013,1.333,4014,1.333,4015,1.333,4016,2.348,4017,2.348,4018,1.333,4019,3.146,4020,1.333,4021,1.333,4022,2.348,4023,1.333,4024,1.333,4025,1.333,4026,1.333,4027,2.348,4028,2.348,4029,2.348,4030,2.348,4031,5.756,4032,2.348,4033,4.767,4034,1.333,4035,1.333,4036,2.348,4037,3.146,4038,3.791,4039,3.791,4040,3.146,4041,3.791,4042,3.146,4043,1.333,4044,4.322,4045,4.322,4046,3.146,4047,1.333,4048,2.348,4049,4.322,4050,2.348,4051,3.791,4052,3.791,4053,2.348,4054,3.146,4055,4.322,4056,1.333,4057,1.333,4058,1.333,4059,3.146,4060,2.348,4061,1.333,4062,1.333,4063,1.333,4064,1.333,4065,2.348,4066,1.333,4067,1.333,4068,3.146,4069,1.333,4070,1.333,4071,2.348,4072,3.146,4073,1.333,4074,2.348,4075,1.333,4076,3.146,4077,1.333,4078,1.333,4079,1.333,4080,2.348,4081,2.348,4082,4.767,4083,7.543,4084,3.146,4085,2.348,4086,2.348,4087,2.348,4088,2.348,4089,3.791,4090,3.791,4091,2.348,4092,1.333,4093,1.333,4094,1.333,4095,1.333,4096,5.146,4097,4.767,4098,2.348,4099,1.333,4100,1.333,4101,1.333,4102,1.333,4103,2.348,4104,1.333,4105,2.348,4106,1.333,4107,4.322,4108,1.333,4109,6.225,4110,1.333,4111,1.333,4112,1.333,4113,1.333,4114,2.348,4115,1.333,4116,1.333,4117,1.333,4118,2.348,4119,3.146,4120,4.322,4121,2.348,4122,3.791,4123,2.348,4124,1.333,4125,1.333,4126,1.333,4127,1.333,4128,1.333,4129,2.348,4130,1.333,4131,1.333,4132,3.791,4133,1.333,4134,2.348,4135,2.348,4136,1.333,4137,1.333,4138,3.146,4139,1.333,4140,1.333,4141,1.333,4142,1.333,4143,1.333,4144,2.348,4145,1.333,4146,1.333,4147,2.348,4148,1.333,4149,1.333,4150,1.333,4151,3.146,4152,1.333,4153,1.333,4154,1.333,4155,1.333,4156,1.333,4157,4.322,4158,1.333,4159,3.791,4160,1.333,4161,1.333,4162,3.791,4163,1.333,4164,1.333,4165,1.333,4166,1.333,4167,1.333,4168,2.348,4169,5.146,4170,3.146,4171,1.333,4172,3.791,4173,1.333,4174,1.333,4175,3.146,4176,1.333,4177,1.333,4178,3.146,4179,1.333,4180,2.348,4181,1.333,4182,1.333,4183,1.333,4184,1.333,4185,1.333,4186,1.333,4187,1.333,4188,1.333,4189,2.348,4190,1.333,4191,1.333,4192,1.333,4193,2.348,4194,2.348,4195,1.333,4196,1.333,4197,3.146,4198,1.333,4199,2.348,4200,2.348,4201,1.333,4202,2.348,4203,1.333,4204,3.146,4205,5.146,4206,1.333,4207,1.333,4208,2.348,4209,1.333,4210,1.333,4211,1.333,4212,1.333,4213,1.333,4214,2.348,4215,3.791,4216,1.333,4217,4.322,4218,1.333,4219,1.333,4220,1.333,4221,1.333,4222,1.333,4223,2.348,4224,2.348,4225,2.348,4226,3.146,4227,1.333,4228,2.348,4229,1.333,4230,3.146,4231,1.333,4232,2.348,4233,1.333,4234,2.348,4235,2.348,4236,1.333,4237,1.333,4238,2.348,4239,7.699,4240,2.348,4241,1.333,4242,4.322,4243,6.005,4244,3.146,4245,1.333,4246,1.333,4247,1.333,4248,3.791,4249,1.333,4250,1.333,4251,3.146,4252,1.333,4253,2.348,4254,1.333,4255,1.333,4256,1.333,4257,3.791,4258,1.333,4259,1.333,4260,1.333,4261,1.333,4262,3.791,4263,1.333,4264,1.333,4265,3.146,4266,1.333,4267,2.348,4268,3.146,4269,2.348,4270,1.333,4271,1.333,4272,1.333,4273,2.348,4274,3.146,4275,1.333,4276,1.333,4277,2.348,4278,1.333,4279,1.333,4280,1.333,4281,1.333,4282,1.333,4283,1.333,4284,3.146,4285,2.348,4286,1.333,4287,1.333,4288,3.791,4289,1.333,4290,3.146,4291,1.333,4292,1.333,4293,1.333,4294,2.348,4295,1.333,4296,1.333,4297,1.333,4298,3.146,4299,2.348,4300,2.348,4301,1.333,4302,5.146,4303,2.348,4304,3.146,4305,3.791,4306,1.333,4307,1.333,4308,1.333,4309,2.348,4310,1.333,4311,3.146,4312,1.333,4313,2.348,4314,1.333,4315,1.333,4316,1.333,4317,1.333,4318,3.146,4319,1.333,4320,3.146,4321,2.348,4322,1.333,4323,2.348,4324,1.333,4325,1.333,4326,2.348,4327,2.348,4328,1.333,4329,1.333,4330,2.348,4331,1.333,4332,1.333,4333,1.333,4334,1.333,4335,1.333,4336,3.146,4337,1.333,4338,1.333,4339,1.333,4340,1.333,4341,1.333,4342,3.791,4343,3.146,4344,1.333,4345,1.333,4346,1.333,4347,1.333,4348,1.333,4349,2.348,4350,1.333,4351,1.333,4352,1.333,4353,1.333,4354,1.333,4355,1.333,4356,1.333,4357,1.333,4358,1.333,4359,1.333,4360,1.333,4361,1.333,4362,1.333,4363,1.333,4364,3.791,4365,1.333,4366,2.348,4367,1.333,4368,1.333,4369,1.333,4370,1.333,4371,1.333,4372,1.333,4373,1.333,4374,1.333,4375,1.333,4376,3.146,4377,1.333,4378,1.333,4379,1.333,4380,2.348,4381,1.333,4382,1.333,4383,1.333,4384,1.333,4385,1.333,4386,2.348,4387,2.348,4388,4.322,4389,3.146,4390,1.333,4391,2.348,4392,1.333,4393,1.333,4394,1.333,4395,1.333,4396,3.146,4397,2.348,4398,1.333,4399,2.348,4400,2.348,4401,2.348,4402,1.333,4403,1.333,4404,1.333,4405,1.333,4406,1.333,4407,1.333,4408,2.348,4409,1.333,4410,1.333,4411,1.333,4412,1.333,4413,3.146,4414,1.333,4415,1.333,4416,1.333,4417,1.333,4418,1.333,4419,1.333,4420,1.333,4421,1.333,4422,1.333,4423,1.333,4424,2.348,4425,1.333,4426,1.333,4427,1.333,4428,1.333,4429,1.333,4430,1.333,4431,1.333,4432,1.333,4433,1.333,4434,1.333,4435,1.333,4436,1.333,4437,1.333,4438,1.333,4439,1.333,4440,1.333,4441,1.333,4442,1.333,4443,3.146,4444,2.348,4445,1.333,4446,1.333,4447,1.333,4448,1.333,4449,1.333,4450,2.348,4451,1.333,4452,1.333,4453,1.333,4454,1.333,4455,1.333,4456,1.333,4457,1.333,4458,1.333,4459,2.348,4460,1.333,4461,1.333,4462,1.333,4463,1.333,4464,1.333,4465,1.333,4466,1.333,4467,1.333,4468,1.333,4469,1.333,4470,1.333,4471,1.333,4472,1.333,4473,1.333,4474,1.333,4475,1.333,4476,1.333,4477,1.333,4478,1.333]],["title/modules.html",[4479,5.484]],["body/modules.html",[30,0.007,168,0.007,169,0.007,4479,6.627]],["title/overview.html",[4480,5.484]],["body/overview.html",[2,1.366,30,0.007,168,0.007,169,0.007,246,1.648,512,2.85,4480,6.567,4481,7.414,4482,7.414,4483,7.414]],["title/properties.html",[255,0.477,3532,3.048]],["body/properties.html",[30,0.008,168,0.007,169,0.007,255,0.654,1011,4.372,4484,7.448]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":972,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/SingleProjectCardComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["0.0.0",{"_index":4484,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":3534,"title":{},"body":{"dependencies.html":{}}}],["0.07",{"_index":2058,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["0.14.4",{"_index":3571,"title":{},"body":{"dependencies.html":{}}}],["0xff",{"_index":1684,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["1",{"_index":782,"title":{"components/ProjectsComponent-1.html":{}},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["1.0.9",{"_index":3554,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":3551,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3996,"title":{},"body":{"license.html":{}}}],["100",{"_index":2187,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["11",{"_index":4009,"title":{},"body":{"license.html":{}}}],["12",{"_index":804,"title":{},"body":{"components/ConfigComponent.html":{}}}],["13",{"_index":805,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["14",{"_index":315,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["15",{"_index":806,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["15.0.0",{"_index":3546,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":807,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["17",{"_index":3652,"title":{},"body":{"index.html":{}}}],["17.1.1",{"_index":3544,"title":{},"body":{"dependencies.html":{}}}],["17.1.3",{"_index":3649,"title":{},"body":{"index.html":{}}}],["17.12.0",{"_index":3566,"title":{},"body":{"dependencies.html":{}}}],["17.2.1",{"_index":3537,"title":{},"body":{"dependencies.html":{}}}],["17.2.2",{"_index":3543,"title":{},"body":{"dependencies.html":{}}}],["17.2.3",{"_index":3535,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":4015,"title":{},"body":{"license.html":{}}}],["1].label",{"_index":1397,"title":{},"body":{"components/HomeComponent.html":{}}}],["2",{"_index":3794,"title":{},"body":{"license.html":{}}}],["2.0.5",{"_index":3560,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":3569,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":4013,"title":{},"body":{"license.html":{}}}],["2007",{"_index":3730,"title":{},"body":{"license.html":{}}}],["2021",{"_index":874,"title":{},"body":{"components/ConfigComponent.html":{}}}],["2022",{"_index":873,"title":{},"body":{"components/ConfigComponent.html":{}}}],["23",{"_index":4482,"title":{},"body":{"overview.html":{}}}],["28",{"_index":4360,"title":{},"body":{"license.html":{}}}],["29",{"_index":3728,"title":{},"body":{"license.html":{}}}],["3",{"_index":2943,"title":{},"body":{"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["3.3.1",{"_index":3562,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2145,"title":{},"body":{"components/OrganizationComponent.html":{},"license.html":{}}}],["4",{"_index":4046,"title":{},"body":{"license.html":{}}}],["4.19.2",{"_index":3558,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":3556,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":974,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["404",{"_index":973,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NotFoundComponent.html":{}}}],["409",{"_index":1454,"title":{},"body":{"components/InvitationComponent.html":{}}}],["47",{"_index":4483,"title":{},"body":{"overview.html":{}}}],["5",{"_index":4077,"title":{},"body":{"license.html":{}}}],["57",{"_index":4481,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":3564,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":4252,"title":{},"body":{"license.html":{}}}],["6b",{"_index":4104,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4127,"title":{},"body":{"license.html":{}}}],["7",{"_index":4042,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":3567,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1683,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["8.0.0",{"_index":3549,"title":{},"body":{"dependencies.html":{}}}],["80:4000",{"_index":3689,"title":{},"body":{"index.html":{}}}],["90",{"_index":2147,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["991",{"_index":432,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["_val",{"_index":816,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ability",{"_index":4177,"title":{},"body":{"license.html":{}}}],["above",{"_index":249,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["absence",{"_index":4043,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":4433,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":4458,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":3822,"title":{},"body":{"license.html":{}}}],["accept",{"_index":697,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"injectables/InvitationService.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"license.html":{}}}],["acceptance",{"_index":4262,"title":{},"body":{"license.html":{}}}],["acceptbuttonstyleclass",{"_index":1144,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["accepticon",{"_index":1149,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["acceptinvitation",{"_index":514,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{}}}],["acceptinvitation(invitationhash",{"_index":1489,"title":{},"body":{"injectables/InvitationService.html":{}}}],["acceptinvitationerror",{"_index":649,"title":{},"body":{"interfaces/AuthState.html":{}}}],["acceptinvitationfailure",{"_index":594,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["acceptinvitationsuccess",{"_index":515,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["access",{"_index":15,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["accessdeniedcomponent",{"_index":1,"title":{"components/AccessDeniedComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["accessible",{"_index":4329,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":728,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["accesstoken",{"_index":3483,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["accompanied",{"_index":4084,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4437,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4041,"title":{},"body":{"license.html":{}}}],["according",{"_index":4428,"title":{},"body":{"license.html":{}}}],["accordingly",{"_index":404,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["achieve",{"_index":4442,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":3976,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":4309,"title":{},"body":{"license.html":{}}}],["action",{"_index":673,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/MembersEffects.html":{}}}],["actions",{"_index":528,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"license.html":{}}}],["activated",{"_index":1308,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["activatedroute",{"_index":1291,"title":{},"body":{"components/HomeComponent.html":{}}}],["active",{"_index":349,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MembersService.html":{},"components/MenuitemComponent.html":{}}}],["activeclass",{"_index":1972,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activemembers",{"_index":1711,"title":{},"body":{"components/MembersComponent.html":{},"interfaces/MembersState.html":{}}}],["activememberserror",{"_index":1803,"title":{},"body":{"interfaces/MembersState.html":{}}}],["activemembersstatus",{"_index":1804,"title":{},"body":{"interfaces/MembersState.html":{}}}],["activeroute",{"_index":2074,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activities",{"_index":3892,"title":{},"body":{"license.html":{}}}],["activity",{"_index":4356,"title":{},"body":{"license.html":{}}}],["actual",{"_index":4334,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":167,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["actually",{"_index":4150,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":3871,"title":{},"body":{"license.html":{}}}],["add",{"_index":3699,"title":{},"body":{"index.html":{},"license.html":{}}}],["added",{"_index":4040,"title":{},"body":{"license.html":{}}}],["adding",{"_index":745,"title":{},"body":{"components/ConfigComponent.html":{}}}],["additional",{"_index":797,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["addmemberserror",{"_index":3236,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["addmembersstatus",{"_index":3237,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["addprojectdebugfile",{"_index":2952,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectdebugfilefailure",{"_index":3060,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectdebugfilesuccess",{"_index":2969,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectenvironments",{"_index":1123,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["addprojectenvironmentsfailure",{"_index":3061,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectenvironmentssuccess",{"_index":2977,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectrelease",{"_index":2646,"title":{},"body":{"components/ReleasesTableComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["addprojectreleasefailure",{"_index":3062,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectreleasesuccess",{"_index":2983,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectserror",{"_index":3238,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["addprojectsstatus",{"_index":3239,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["addprojecttags",{"_index":2953,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"components/TagsTableComponent.html":{}}}],["addprojecttagsfailure",{"_index":3063,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojecttagssuccess",{"_index":2990,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectteams",{"_index":2954,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectteamsfailure",{"_index":3064,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["addprojectteamssuccess",{"_index":2997,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["address",{"_index":4383,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":3868,"title":{},"body":{"license.html":{}}}],["adds",{"_index":1294,"title":{},"body":{"components/HomeComponent.html":{}}}],["addteammembers",{"_index":3132,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["addteammembers(teamid",{"_index":3413,"title":{},"body":{"injectables/TeamService.html":{}}}],["addteammembersfailure",{"_index":3227,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["addteammemberssuccess",{"_index":3187,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["addteamprojects",{"_index":3133,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["addteamprojects(teamid",{"_index":3415,"title":{},"body":{"injectables/TeamService.html":{}}}],["addteamprojectsfailure",{"_index":3228,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["addteamprojectssuccess",{"_index":3192,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["adjust",{"_index":311,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["adopted",{"_index":4012,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":4183,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4425,"title":{},"body":{"license.html":{}}}],["affects",{"_index":4184,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4376,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":4289,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3971,"title":{},"body":{"license.html":{}}}],["afterviewchecked",{"_index":3079,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["afterviewinit",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["against",{"_index":4030,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":4068,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4372,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4412,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":4320,"title":{},"body":{"license.html":{}}}],["aim",{"_index":3818,"title":{},"body":{"license.html":{}}}],["alerts",{"_index":171,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts'},{'name",{"_index":52,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["alerts.component.html",{"_index":172,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts.component.scss",{"_index":173,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alertscomponent",{"_index":51,"title":{"components/AlertsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["alleging",{"_index":4297,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3845,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":3743,"title":{},"body":{"license.html":{}}}],["alloweddomains",{"_index":2401,"title":{},"body":{"interfaces/ProjectSecurityClientDto.html":{}}}],["allows",{"_index":401,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["allprojects",{"_index":2414,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["allprojectserror",{"_index":2415,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["allprojectsstatus",{"_index":2416,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["along",{"_index":4045,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1914,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["already",{"_index":4308,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":4100,"title":{},"body":{"license.html":{}}}],["although",{"_index":3814,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":4263,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":3798,"title":{},"body":{"license.html":{}}}],["android",{"_index":3586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["angular",{"_index":1309,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["angular's",{"_index":1982,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["angular/animations",{"_index":2047,"title":{},"body":{"components/MenuitemComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":3536,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":31,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["angular/compiler",{"_index":3538,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":837,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsTableComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":3539,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":33,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":3542,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":2045,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animate('400ms",{"_index":2055,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animations",{"_index":2051,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["anti",{"_index":3999,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":4052,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3880,"title":{},"body":{"license.html":{}}}],["api",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"index.html":{}}}],["api.authoptions",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["api.authoptionsautocontenttype",{"_index":2249,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["api.authurl",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.invitationurl",{"_index":1497,"title":{},"body":{"injectables/InvitationService.html":{}}}],["api.noauthoptions",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{}}}],["api.organizationurl",{"_index":2243,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["api.teamurl",{"_index":3439,"title":{},"body":{"injectables/TeamService.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["app.component.html",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":53,"title":{"components/AppComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["appconfig",{"_index":245,"title":{"interfaces/AppConfig.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["appefects",{"_index":506,"title":{},"body":{"interfaces/AppState.html":{}}}],["applicable",{"_index":3885,"title":{},"body":{"license.html":{}}}],["application",{"_index":385,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["application's",{"_index":710,"title":{},"body":{"components/ConfigComponent.html":{}}}],["applications",{"_index":3641,"title":{},"body":{"index.html":{},"license.html":{}}}],["applied",{"_index":309,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applies",{"_index":779,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["apply",{"_index":271,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applyfilterglobal",{"_index":1045,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["applyfilterglobal($event",{"_index":1069,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["applyscale",{"_index":721,"title":{},"body":{"components/ConfigComponent.html":{}}}],["appropriate",{"_index":272,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["appropriately",{"_index":4035,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":4432,"title":{},"body":{"license.html":{}}}],["appsidebar",{"_index":1274,"title":{},"body":{"components/HomeComponent.html":{}}}],["appstate",{"_index":457,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["appstore",{"_index":507,"title":{},"body":{"interfaces/AppState.html":{}}}],["apptopbar",{"_index":1275,"title":{},"body":{"components/HomeComponent.html":{}}}],["archiveperiod",{"_index":2122,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["area",{"_index":3824,"title":{},"body":{"license.html":{}}}],["args.dto).pipe",{"_index":2967,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{}}}],["args.environments).pipe",{"_index":2975,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["args.ids).pipe",{"_index":2995,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{}}}],["args.tags).pipe",{"_index":2988,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["arise",{"_index":3832,"title":{},"body":{"license.html":{}}}],["arising",{"_index":4416,"title":{},"body":{"license.html":{}}}],["around",{"_index":2782,"title":{},"body":{"components/SidebarComponent.html":{}}}],["arrange",{"_index":4330,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":4343,"title":{},"body":{"license.html":{}}}],["array",{"_index":808,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["article",{"_index":4008,"title":{},"body":{"license.html":{}}}],["artifacts",{"_index":3673,"title":{},"body":{"index.html":{}}}],["asking",{"_index":3776,"title":{},"body":{"license.html":{}}}],["assert",{"_index":3793,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1250,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{}}}],["assets",{"_index":4279,"title":{},"body":{"license.html":{}}}],["assigning",{"_index":375,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["associated",{"_index":2021,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["assume",{"_index":4407,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":4436,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":4225,"title":{},"body":{"license.html":{}}}],["assures",{"_index":3852,"title":{},"body":{"license.html":{}}}],["async",{"_index":1175,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["async)?.pictureurl",{"_index":2195,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["async)?.slug",{"_index":3174,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["attach",{"_index":4444,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":4237,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":789,"title":{},"body":{"components/ConfigComponent.html":{}}}],["attributed",{"_index":3809,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":4209,"title":{},"body":{"license.html":{}}}],["auth",{"_index":509,"title":{},"body":{"components/AuthComponent.html":{},"injectables/JwtService.html":{}}}],["auth'},{'name",{"_index":56,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["auth.actions",{"_index":601,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["auth.component.html",{"_index":510,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":511,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.forgot",{"_index":1237,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["auth.invitation.back_to_login",{"_index":1478,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.email_is_required",{"_index":1473,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.email_label",{"_index":1472,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.first_name_is_required",{"_index":1475,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.first_name_label",{"_index":1474,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.last_name_is_required",{"_index":1477,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.last_name_label",{"_index":1476,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_label",{"_index":1469,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_length",{"_index":1470,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_not_strong",{"_index":1471,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error",{"_index":1455,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error_username_exists",{"_index":1456,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error_wrong_hash",{"_index":1457,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_is_required",{"_index":1467,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_label",{"_index":1466,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_length",{"_index":1468,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.welcome_description",{"_index":1465,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.welcome_message",{"_index":1464,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.login.authorization_error",{"_index":1601,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.forgot_password",{"_index":1614,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_is_required",{"_index":1612,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_label",{"_index":1611,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_length",{"_index":1613,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.register",{"_index":1615,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.sign_in_to_continue",{"_index":1608,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_is_required",{"_index":1609,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_label",{"_index":1257,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["auth.login.username_length",{"_index":1610,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.welcome_message",{"_index":1607,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.wrong_username_or_password",{"_index":1602,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.register.back_to_login",{"_index":2603,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_is_required",{"_index":2598,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_label",{"_index":2597,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_is_required",{"_index":2600,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_label",{"_index":2599,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_is_required",{"_index":2602,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_label",{"_index":2601,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_label",{"_index":2594,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_length",{"_index":2595,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_not_strong",{"_index":2596,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error",{"_index":2586,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error_description",{"_index":2587,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_is_required",{"_index":2592,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_label",{"_index":2591,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_length",{"_index":2593,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_description",{"_index":2590,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_message",{"_index":2589,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.reset",{"_index":2693,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["auth/auth.effects",{"_index":469,"title":{},"body":{"interfaces/AppState.html":{}}}],["auth/auth.reducer",{"_index":471,"title":{},"body":{"interfaces/AppState.html":{}}}],["authcomponent",{"_index":55,"title":{"components/AuthComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["autheffects",{"_index":468,"title":{"injectables/AuthEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{}}}],["authenticate",{"_index":516,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{}}}],["authenticate(request",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticaterequestdto",{"_index":612,"title":{"interfaces/AuthenticateRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{}}}],["authentication",{"_index":675,"title":{},"body":{"interfaces/AuthState.html":{},"components/SidebarComponent.html":{}}}],["authenticationfailure",{"_index":595,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["authenticationsuccess",{"_index":517,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["authenticationsuccess(token",{"_index":556,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["author",{"_index":4208,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":4161,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":4201,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":4303,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":4347,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3762,"title":{},"body":{"license.html":{}}}],["authreducer",{"_index":470,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["authservice",{"_index":525,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["authstate",{"_index":459,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["automatic",{"_index":4271,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":3667,"title":{},"body":{"index.html":{},"license.html":{}}}],["avaialbleteams",{"_index":3375,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["available",{"_index":810,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["availablemembers",{"_index":1628,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["availableprojects",{"_index":2361,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["avatarmodule",{"_index":1625,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/TeamPickerComponent.html":{},"components/TopbarComponent.html":{}}}],["avoid",{"_index":2083,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["away",{"_index":3750,"title":{},"body":{"license.html":{}}}],["b",{"_index":1409,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["badgemodule",{"_index":2118,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["bar",{"_index":2836,"title":{},"body":{"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["based",{"_index":295,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["basic",{"_index":3965,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":3987,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":294,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["being",{"_index":1310,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["believe",{"_index":4340,"title":{},"body":{"license.html":{}}}],["bell",{"_index":2863,"title":{},"body":{"components/SidebarComponent.html":{}}}],["below",{"_index":3993,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":4333,"title":{},"body":{"license.html":{}}}],["best",{"_index":4441,"title":{},"body":{"license.html":{}}}],["better",{"_index":1912,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["between",{"_index":3963,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":4070,"title":{},"body":{"license.html":{}}}],["bezier(0.86",{"_index":2057,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["binding",{"_index":2009,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["block",{"_index":1296,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockbodyscroll",{"_index":1283,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocked",{"_index":1325,"title":{},"body":{"components/HomeComponent.html":{}}}],["blue",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["body",{"_index":1295,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["book",{"_index":2867,"title":{},"body":{"components/SidebarComponent.html":{}}}],["boolean",{"_index":297,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/Role.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":866,"title":{},"body":{"components/ConfigComponent.html":{}}}],["both",{"_index":3803,"title":{},"body":{"license.html":{}}}],["box",{"_index":2833,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["breadcrumb",{"_index":1304,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbmodule",{"_index":1271,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs",{"_index":1299,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.length",{"_index":1394,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.push",{"_index":1395,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs[breadcrumbs.length",{"_index":1396,"title":{},"body":{"components/HomeComponent.html":{}}}],["browser",{"_index":3540,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":3672,"title":{},"body":{"index.html":{}}}],["building",{"_index":2853,"title":{},"body":{"components/SidebarComponent.html":{}}}],["business",{"_index":4353,"title":{},"body":{"license.html":{}}}],["button",{"_index":785,"title":{},"body":{"components/ConfigComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["buttonmodule",{"_index":21,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TopbarComponent.html":{}}}],["buttons",{"_index":304,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["c",{"_index":3594,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["calendarmodule",{"_index":2495,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["call",{"_index":2022,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["callback",{"_index":800,"title":{},"body":{"components/ConfigComponent.html":{}}}],["called",{"_index":1944,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["calls",{"_index":3656,"title":{},"body":{"index.html":{}}}],["can't",{"_index":3721,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":3646,"title":{},"body":{"index.html":{}}}],["card",{"_index":2881,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card'},{'name",{"_index":145,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["card.component",{"_index":2475,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["card.component.html",{"_index":2885,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.scss",{"_index":2886,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts",{"_index":2879,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:110",{"_index":2897,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:119",{"_index":2899,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:35",{"_index":2894,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:37",{"_index":2907,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:39",{"_index":2903,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:40",{"_index":2906,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:53",{"_index":2893,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:61",{"_index":2900,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:76",{"_index":2902,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card/single",{"_index":2474,"title":{},"body":{"components/ProjectsComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["cardmodule",{"_index":2883,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["carry",{"_index":4048,"title":{},"body":{"license.html":{}}}],["case",{"_index":3923,"title":{},"body":{"license.html":{}}}],["cases",{"_index":4144,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":591,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["catcherror((error",{"_index":541,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["cause",{"_index":4074,"title":{},"body":{"license.html":{}}}],["cd",{"_index":1973,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cease",{"_index":4241,"title":{},"body":{"license.html":{}}}],["centralized",{"_index":3635,"title":{},"body":{"index.html":{}}}],["certain",{"_index":764,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["cessation",{"_index":4254,"title":{},"body":{"license.html":{}}}],["chain",{"_index":1251,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{}}}],["change",{"_index":1924,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["changed",{"_index":798,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":1974,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["changelanguage",{"_index":3494,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changelanguage(language",{"_index":3499,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changes",{"_index":402,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["changeslugandcheckvalidity",{"_index":895,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["changeslugandcheckvalidity(organizationname",{"_index":906,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["changetheme",{"_index":722,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changetheme(theme",{"_index":769,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changing",{"_index":3742,"title":{},"body":{"license.html":{}}}],["char.charcodeat(0",{"_index":1682,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["characterized",{"_index":4174,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3767,"title":{},"body":{"license.html":{}}}],["chart",{"_index":2816,"title":{},"body":{"components/SidebarComponent.html":{}}}],["chart.js",{"_index":3555,"title":{},"body":{"dependencies.html":{}}}],["chartdata",{"_index":2887,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["chartmodule",{"_index":2882,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["chartoptions",{"_index":2888,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["checkname",{"_index":2501,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["checkname(name",{"_index":2510,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["checks",{"_index":422,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["checkslug",{"_index":896,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["checkslug(slug",{"_index":909,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["checkusername",{"_index":1205,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusername(username",{"_index":1208,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["child",{"_index":1385,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["child.snapshot.data['breadcrumb",{"_index":1391,"title":{},"body":{"components/HomeComponent.html":{}}}],["child.snapshot.url",{"_index":1387,"title":{},"body":{"components/HomeComponent.html":{}}}],["children",{"_index":1382,"title":{},"body":{"components/HomeComponent.html":{}}}],["children.length",{"_index":1384,"title":{},"body":{"components/HomeComponent.html":{}}}],["choice",{"_index":3697,"title":{},"body":{"index.html":{}}}],["choose",{"_index":4391,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":4395,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1143,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["circumstances",{"_index":3991,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4000,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4435,"title":{},"body":{"license.html":{}}}],["claim",{"_index":4294,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4305,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["class.active",{"_index":1970,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["class.layout",{"_index":2010,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cleanupperiod",{"_index":2123,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["clear",{"_index":1506,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clearly",{"_index":3800,"title":{},"body":{"license.html":{}}}],["cli",{"_index":3648,"title":{},"body":{"index.html":{}}}],["click",{"_index":1319,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["clicked",{"_index":307,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["clicking",{"_index":1960,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["client",{"_index":3655,"title":{},"body":{"index.html":{}}}],["client.dto.ts",{"_index":2400,"title":{},"body":{"interfaces/ProjectSecurityClientDto.html":{}}}],["clock",{"_index":2813,"title":{},"body":{"components/SidebarComponent.html":{}}}],["clone",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement.addeventlistener('load",{"_index":855,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('href",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('id",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["close",{"_index":352,"title":{},"body":{"interfaces/AppConfig.html":{},"components/CloseComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["close'},{'name",{"_index":58,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["close.component.html",{"_index":705,"title":{},"body":{"components/CloseComponent.html":{}}}],["close.component.scss",{"_index":706,"title":{},"body":{"components/CloseComponent.html":{}}}],["closecomponent",{"_index":57,"title":{"components/CloseComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["closed",{"_index":394,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["closely",{"_index":4431,"title":{},"body":{"license.html":{}}}],["cms",{"_index":3638,"title":{},"body":{"index.html":{}}}],["cms:1",{"_index":3688,"title":{},"body":{"index.html":{}}}],["cms:latestimportant",{"_index":3709,"title":{},"body":{"index.html":{}}}],["cms:latestthen",{"_index":3708,"title":{},"body":{"index.html":{}}}],["code",{"_index":250,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["collapsed",{"_index":2053,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["collect",{"_index":3639,"title":{},"body":{"index.html":{},"license.html":{}}}],["color",{"_index":280,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["colorscheme",{"_index":258,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["colour",{"_index":1685,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["combination",{"_index":4379,"title":{},"body":{"license.html":{}}}],["combine",{"_index":4377,"title":{},"body":{"license.html":{}}}],["combined",{"_index":4065,"title":{},"body":{"license.html":{}}}],["comes",{"_index":4053,"title":{},"body":{"license.html":{}}}],["command",{"_index":1997,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["commands",{"_index":3913,"title":{},"body":{"license.html":{}}}],["comment",{"_index":3605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comments",{"_index":274,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["commercial",{"_index":4155,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":4321,"title":{},"body":{"license.html":{}}}],["common",{"_index":4149,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":20,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["communication",{"_index":3961,"title":{},"body":{"license.html":{}}}],["compact",{"_index":869,"title":{},"body":{"components/ConfigComponent.html":{}}}],["compilation",{"_index":4060,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4069,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4358,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":3943,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":4276,"title":{},"body":{"license.html":{}}}],["comply",{"_index":3985,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{},"license.html":{}}}],["component's",{"_index":761,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["component_template",{"_index":48,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{},"overview.html":{}}}],["components/config/config.component",{"_index":1346,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/footer/footer.component",{"_index":1347,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/sidebar/sidebar.component",{"_index":1348,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/single",{"_index":2473,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["components/topbar/topbar.component",{"_index":1349,"title":{},"body":{"components/HomeComponent.html":{}}}],["compose",{"_index":3714,"title":{},"body":{"index.html":{}}}],["computer",{"_index":3888,"title":{},"body":{"license.html":{}}}],["computers",{"_index":3848,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":4378,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":4384,"title":{},"body":{"license.html":{}}}],["conditionally",{"_index":762,"title":{},"body":{"components/ConfigComponent.html":{}}}],["conditioned",{"_index":4352,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":3854,"title":{},"body":{"license.html":{}}}],["config",{"_index":316,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["config'},{'name",{"_index":60,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["config.component.html",{"_index":716,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.component.scss",{"_index":717,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.filled",{"_index":864,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.input_style",{"_index":862,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.menu_type",{"_index":859,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.outlined",{"_index":863,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.overlay",{"_index":861,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.ripple_effect",{"_index":865,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.scale",{"_index":858,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.static",{"_index":860,"title":{},"body":{"components/ConfigComponent.html":{}}}],["configcomponent",{"_index":59,"title":{"components/ConfigComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["configsidebarvisible",{"_index":333,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configupdate",{"_index":377,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configuration",{"_index":264,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["confirmationservice",{"_index":1030,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["confirmdialogmodule",{"_index":1032,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["conjunction",{"_index":774,"title":{},"body":{"components/ConfigComponent.html":{}}}],["connection",{"_index":4342,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":4265,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4415,"title":{},"body":{"license.html":{}}}],["consider",{"_index":4472,"title":{},"body":{"license.html":{}}}],["considered",{"_index":4227,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":4313,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":4034,"title":{},"body":{"license.html":{}}}],["const",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{}}}],["constantly",{"_index":3843,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":3975,"title":{},"body":{"license.html":{}}}],["construct",{"_index":1992,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["constructed",{"_index":1311,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(authservice",{"_index":524,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(formbuilder",{"_index":1206,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(http",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["constructor(layoutservice",{"_index":729,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(localstorage",{"_index":1528,"title":{},"body":{"injectables/LayoutService.html":{}}}],["constructor(membersservice",{"_index":1752,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["constructor(organizationservice",{"_index":900,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{}}}],["constructor(platformservice",{"_index":2277,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["constructor(private",{"_index":368,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{},"injectables/RoleService.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{}}}],["constructor(projectservice",{"_index":2321,"title":{},"body":{"injectables/ProjectEffects.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["constructor(roleservice",{"_index":2717,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["constructor(storage",{"_index":1511,"title":{},"body":{"injectables/JwtService.html":{}}}],["constructor(store",{"_index":1059,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(teamservice",{"_index":3183,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["constructor(translate",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["construed",{"_index":4362,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":4132,"title":{},"body":{"license.html":{}}}],["contact",{"_index":4451,"title":{},"body":{"license.html":{}}}],["contain",{"_index":744,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["container",{"_index":3705,"title":{},"body":{"index.html":{}}}],["containerclass",{"_index":1288,"title":{},"body":{"components/HomeComponent.html":{}}}],["containing",{"_index":4210,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1937,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["content",{"_index":3974,"title":{},"body":{"license.html":{}}}],["contents",{"_index":4317,"title":{},"body":{"license.html":{}}}],["contenttype",{"_index":1184,"title":{},"body":{"interfaces/FileDto.html":{}}}],["context",{"_index":3937,"title":{},"body":{"license.html":{}}}],["continue",{"_index":4180,"title":{},"body":{"license.html":{}}}],["continued",{"_index":4164,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":4224,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4368,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3753,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":4302,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":4304,"title":{},"body":{"license.html":{}}}],["control",{"_index":736,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["controlled",{"_index":4307,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":3906,"title":{},"body":{"license.html":{}}}],["convention",{"_index":407,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["converttodate",{"_index":3615,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converttodate(body",{"_index":3623,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convey",{"_index":3893,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":4345,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4175,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3901,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":4223,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3741,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3738,"title":{},"body":{"license.html":{}}}],["copying",{"_index":3855,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3745,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3731,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3864,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3989,"title":{},"body":{"license.html":{}}}],["core/domain/dto/invitation.dto",{"_index":1864,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/domain/dto/project",{"_index":2911,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["core/domain/dto/requests/create",{"_index":942,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["core/domain/dto/requests/register",{"_index":1445,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["core/domain/models/enums/permission.enum",{"_index":1118,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["core/domain/models/enums/resource",{"_index":1122,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["core/domain/models/enums/state",{"_index":1127,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["core/domain/models/organization.entity",{"_index":2167,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["core/domain/models/platform.entity",{"_index":2525,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/domain/models/project",{"_index":2638,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["core/domain/models/project.entity",{"_index":1107,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["core/domain/models/team.entity",{"_index":2467,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamPickerComponent.html":{}}}],["core/domain/models/user.entity",{"_index":1669,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["core/services/api/auth.api.service",{"_index":1229,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/api/invitation.api.service",{"_index":1449,"title":{},"body":{"components/InvitationComponent.html":{}}}],["core/services/api/organization.api.service",{"_index":943,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["core/services/api/project.api.service",{"_index":2526,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["core/services/api/team.api.service",{"_index":3131,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["core/services/layout.service",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["core/services/menu.service",{"_index":836,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["core/state/app.state",{"_index":944,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.actions",{"_index":1228,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.selectors",{"_index":1120,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/members/members.actions",{"_index":1671,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{}}}],["core/state/members/members.selectors",{"_index":1674,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{}}}],["core/state/organization/organization.actions",{"_index":946,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/OrganizationComponent.html":{}}}],["core/state/organization/organization.selectors",{"_index":950,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/OrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/platform/platform.actions",{"_index":2527,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/state/platform/platform.selectors",{"_index":2529,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/state/project/project.actions",{"_index":2372,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{}}}],["core/state/project/project.selectors",{"_index":2375,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{}}}],["core/state/role/role.actions",{"_index":1868,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/state/role/role.selectors",{"_index":1870,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/state/single",{"_index":1113,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["core/state/team/team.actions",{"_index":2470,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["core/state/team/team.selectors",{"_index":2472,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["core/utils/regex.constants",{"_index":1448,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["correction",{"_index":4411,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":3713,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":3946,"title":{},"body":{"license.html":{}}}],["cost",{"_index":4098,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":4295,"title":{},"body":{"license.html":{}}}],["countries",{"_index":3891,"title":{},"body":{"license.html":{}}}],["country",{"_index":4336,"title":{},"body":{"license.html":{}}}],["course",{"_index":4463,"title":{},"body":{"license.html":{}}}],["court",{"_index":4367,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4430,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":4324,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":4147,"title":{},"body":{"license.html":{}}}],["covered",{"_index":3877,"title":{},"body":{"license.html":{}}}],["cpp",{"_index":3595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["crash",{"_index":2925,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["crashfreegain",{"_index":2351,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["crashfreepercentage",{"_index":2352,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["crashfreepercentagegain",{"_index":2405,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["create",{"_index":62,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["createbreadcrumbs",{"_index":1284,"title":{},"body":{"components/HomeComponent.html":{}}}],["createbreadcrumbs(route",{"_index":1298,"title":{},"body":{"components/HomeComponent.html":{}}}],["created",{"_index":389,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["createdat",{"_index":2112,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/Role.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["createdtime",{"_index":1185,"title":{},"body":{"interfaces/FileDto.html":{}}}],["createeffect",{"_index":530,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["createnewenvironment",{"_index":1046,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["createneworganization",{"_index":2205,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["createnewproject",{"_index":2502,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["createnewprojectform",{"_index":2496,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["createnewrelease",{"_index":2614,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["createnewtag",{"_index":3293,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["createnewteam",{"_index":3406,"title":{},"body":{"injectables/TeamService.html":{}}}],["createnewteam(dto",{"_index":3417,"title":{},"body":{"injectables/TeamService.html":{}}}],["createorganization",{"_index":897,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["createorganization(dto",{"_index":2233,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["createorganizationcomponent",{"_index":61,"title":{"components/CreateOrganizationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["createorganizationfailure",{"_index":2254,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["createorganizationform",{"_index":887,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["createorganizationrequestdto",{"_index":941,"title":{"interfaces/CreateOrganizationRequestDto.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"injectables/OrganizationService.html":{}}}],["createorganizationsuccess",{"_index":2224,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["createorganizationsuccess(organization",{"_index":2210,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["createorganizationteamerror",{"_index":3446,"title":{},"body":{"interfaces/TeamState.html":{}}}],["createorganizationteamstatus",{"_index":3447,"title":{},"body":{"interfaces/TeamState.html":{}}}],["createproject",{"_index":2318,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{}}}],["createprojectdebugfiledto",{"_index":1004,"title":{"interfaces/CreateProjectDebugFileDto.html":{}},"body":{"interfaces/CreateProjectDebugFileDto.html":{}}}],["createprojecterror",{"_index":2417,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["createprojectfailure",{"_index":2342,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["createprojectreleasedto",{"_index":1009,"title":{"interfaces/CreateProjectReleaseDto.html":{}},"body":{"interfaces/CreateProjectReleaseDto.html":{},"components/ReleasesTableComponent.html":{}}}],["createprojectrequestdto",{"_index":1012,"title":{"interfaces/CreateProjectRequestDto.html":{}},"body":{"interfaces/CreateProjectRequestDto.html":{}}}],["createprojectstatus",{"_index":2418,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["createprojectsuccess",{"_index":2343,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["createprojectsuccess(project",{"_index":2327,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["createreducer",{"_index":659,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["createreleaseform",{"_index":2610,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["creates",{"_index":1302,"title":{},"body":{"components/HomeComponent.html":{}}}],["createteam",{"_index":3341,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamfailure",{"_index":3365,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamrequestdto",{"_index":1014,"title":{"interfaces/CreateTeamRequestDto.html":{}},"body":{"interfaces/CreateTeamRequestDto.html":{},"injectables/TeamService.html":{}}}],["createteamsuccess",{"_index":3366,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamsuccess(team",{"_index":3346,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["creating",{"_index":379,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["credentials",{"_index":650,"title":{},"body":{"interfaces/AuthState.html":{}}}],["criterion",{"_index":3916,"title":{},"body":{"license.html":{}}}],["cross",{"_index":4293,"title":{},"body":{"license.html":{}}}],["cs",{"_index":3603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["css",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["cubic",{"_index":2056,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cure",{"_index":4258,"title":{},"body":{"license.html":{}}}],["current",{"_index":270,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["currently",{"_index":342,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["currentuser",{"_index":1276,"title":{},"body":{"components/HomeComponent.html":{}}}],["currentusererrorsubscription",{"_index":1277,"title":{},"body":{"components/HomeComponent.html":{}}}],["custom",{"_index":1930,"title":{},"body":{"injectables/MenuService.html":{}}}],["customarily",{"_index":4087,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4094,"title":{},"body":{"license.html":{}}}],["d",{"_index":2670,"title":{},"body":{"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["damages",{"_index":4413,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1146,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"license.html":{}}}],["dark",{"_index":283,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["data",{"_index":1837,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"components/ProjectsTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["data.append('picture",{"_index":2247,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["database",{"_index":2819,"title":{},"body":{"components/SidebarComponent.html":{}}}],["datasets",{"_index":2922,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["date",{"_index":1189,"title":{},"body":{"interfaces/FileDto.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"components/ReleasesTableComponent.html":{},"interfaces/Role.html":{},"components/SingleProjectCardComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["datepipe",{"_index":2880,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["days",{"_index":4253,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":938,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["debouncetime(500",{"_index":956,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["debug",{"_index":65,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["debug_file",{"_index":3606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["debugfileid",{"_index":2306,"title":{},"body":{"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{}}}],["debugfiles",{"_index":2970,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["debugfilestablecomponent",{"_index":64,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["debugfiletype",{"_index":1006,"title":{},"body":{"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"miscellaneous/enumerations.html":{}}}],["december",{"_index":4014,"title":{},"body":{"license.html":{}}}],["decide",{"_index":4393,"title":{},"body":{"license.html":{}}}],["declares",{"_index":329,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["declaring",{"_index":279,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["declining",{"_index":4216,"title":{},"body":{"license.html":{}}}],["decorator",{"_index":755,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["decorators",{"_index":927,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["decrements",{"_index":778,"title":{},"body":{"components/ConfigComponent.html":{}}}],["decrementscale",{"_index":723,"title":{},"body":{"components/ConfigComponent.html":{}}}],["deemed",{"_index":4002,"title":{},"body":{"license.html":{}}}],["default",{"_index":313,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["defective",{"_index":4406,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4365,"title":{},"body":{"license.html":{}}}],["defined",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["defines",{"_index":361,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["defining",{"_index":251,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["definition",{"_index":3953,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":3859,"title":{},"body":{"license.html":{}}}],["delete",{"_index":3584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deleteorganization",{"_index":2127,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["deleteteam",{"_index":3089,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{}}}],["deleteteam(teamid",{"_index":3419,"title":{},"body":{"injectables/TeamService.html":{}}}],["deleteteamerror",{"_index":3448,"title":{},"body":{"interfaces/TeamState.html":{}}}],["deleteteamfailure",{"_index":3367,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["deleteteamstatus",{"_index":3449,"title":{},"body":{"interfaces/TeamState.html":{}}}],["deleteteamsuccess",{"_index":3368,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["deleteteamsuccess({teamid",{"_index":3351,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["denied",{"_index":16,"title":{},"body":{"components/AccessDeniedComponent.html":{},"license.html":{}}}],["denied'},{'name",{"_index":50,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["denied.access_denied",{"_index":40,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component",{"_index":1106,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["denied.component.html",{"_index":26,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component.scss",{"_index":28,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component.ts",{"_index":11,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.insufficient_permission",{"_index":42,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied/access",{"_index":10,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["denominated",{"_index":4322,"title":{},"body":{"license.html":{}}}],["deny",{"_index":3812,"title":{},"body":{"license.html":{}}}],["denying",{"_index":3775,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":3533,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":752,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["deploy",{"_index":3679,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":3701,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":4331,"title":{},"body":{"license.html":{}}}],["description",{"_index":248,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["design",{"_index":868,"title":{},"body":{"components/ConfigComponent.html":{}}}],["designated",{"_index":4106,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3749,"title":{},"body":{"license.html":{}}}],["desktop",{"_index":344,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["detail",{"_index":980,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"license.html":{}}}],["details",{"_index":1016,"title":{},"body":{"components/DetailsComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/ProjectDetailsComponent.html":{},"license.html":{}}}],["details'},{'name",{"_index":69,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["details.component.html",{"_index":1017,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProjectDetailsComponent.html":{}}}],["details.component.scss",{"_index":1018,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProjectDetailsComponent.html":{}}}],["details.component.ts",{"_index":2313,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["details.the",{"_index":4461,"title":{},"body":{"license.html":{}}}],["details/project",{"_index":2312,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["detailscomponent",{"_index":68,"title":{"components/DetailsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["detected",{"_index":1981,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["detection",{"_index":1979,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["determine",{"_index":269,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["determining",{"_index":4142,"title":{},"body":{"license.html":{}}}],["dev",{"_index":3664,"title":{},"body":{"index.html":{}}}],["develop",{"_index":4438,"title":{},"body":{"license.html":{}}}],["developers",{"_index":3790,"title":{},"body":{"license.html":{}}}],["development",{"_index":3660,"title":{},"body":{"index.html":{},"license.html":{}}}],["device",{"_index":345,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["device_state",{"_index":3607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["devices",{"_index":1020,"title":{},"body":{"components/DevicesComponent.html":{},"license.html":{}}}],["devices'},{'name",{"_index":71,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["devices.component.html",{"_index":1021,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.component.scss",{"_index":1022,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devicescomponent",{"_index":70,"title":{"components/DevicesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["devtools",{"_index":3545,"title":{},"body":{"dependencies.html":{}}}],["dialogmodule",{"_index":1033,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["differ",{"_index":4382,"title":{},"body":{"license.html":{}}}],["different",{"_index":765,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["differently",{"_index":4206,"title":{},"body":{"license.html":{}}}],["direction",{"_index":3988,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4112,"title":{},"body":{"license.html":{}}}],["directive",{"_index":46,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["directives",{"_index":166,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3671,"title":{},"body":{"index.html":{}}}],["directly",{"_index":3881,"title":{},"body":{"license.html":{}}}],["directory",{"_index":3676,"title":{},"body":{"index.html":{}}}],["disable",{"_index":396,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["disabled",{"_index":1413,"title":{},"body":{"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/MenuitemComponent.html":{}}}],["disclaim",{"_index":4025,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4396,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4203,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":4349,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":587,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{}}}],["display",{"_index":1307,"title":{},"body":{"components/HomeComponent.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["displayed",{"_index":2790,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["displays",{"_index":3903,"title":{},"body":{"license.html":{}}}],["dist",{"_index":3675,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":939,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["distinguishing",{"_index":4385,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3739,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3640,"title":{},"body":{"index.html":{},"license.html":{}}}],["distributing",{"_index":4354,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3856,"title":{},"body":{"license.html":{}}}],["dividermodule",{"_index":2117,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["docker",{"_index":3677,"title":{},"body":{"index.html":{}}}],["document",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"license.html":{}}}],["document.body.classname.replace",{"_index":1407,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":1024,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation'},{'name",{"_index":73,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["documentation.component.html",{"_index":1025,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.scss",{"_index":1026,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentationcomponent",{"_index":72,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["documented",{"_index":4190,"title":{},"body":{"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["domain/dto/file.dto",{"_index":2242,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["domain/dto/invitation.dto",{"_index":1495,"title":{},"body":{"injectables/InvitationService.html":{}}}],["domain/dto/members.dto",{"_index":1799,"title":{},"body":{"injectables/MembersService.html":{},"interfaces/MembersState.html":{}}}],["domain/dto/organization.dto",{"_index":2241,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["domain/dto/platform.dto",{"_index":2293,"title":{},"body":{"injectables/PlatformService.html":{}}}],["domain/dto/project.dto",{"_index":3436,"title":{},"body":{"injectables/TeamService.html":{}}}],["domain/dto/requests/authenticate",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{}}}],["domain/dto/requests/create",{"_index":2240,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["domain/dto/requests/invitation",{"_index":1496,"title":{},"body":{"injectables/InvitationService.html":{}}}],["domain/dto/requests/register",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{}}}],["domain/dto/requests/reset",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/team.dto",{"_index":3437,"title":{},"body":{"injectables/TeamService.html":{}}}],["domain/dto/token.dto",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/user.dto",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MembersService.html":{},"injectables/TeamService.html":{}}}],["domain/models/enums/state",{"_index":661,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["domain/models/invitation.entity",{"_index":1810,"title":{},"body":{"interfaces/MembersState.html":{}}}],["domain/models/menu",{"_index":1954,"title":{},"body":{"injectables/MenuService.html":{}}}],["domain/models/organization.entity",{"_index":2253,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["domain/models/platform.entity",{"_index":2296,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["domain/models/project.entity",{"_index":2422,"title":{},"body":{"interfaces/ProjectState.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["domain/models/team.entity",{"_index":3253,"title":{},"body":{"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["domain/models/token.entity",{"_index":663,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/user.entity",{"_index":664,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["domain/your",{"_index":3683,"title":{},"body":{"index.html":{}}}],["domains",{"_index":3834,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":4143,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":4273,"title":{},"body":{"license.html":{}}}],["dradman",{"_index":1194,"title":{},"body":{"components/FooterComponent.html":{}}}],["dradman/loghub",{"_index":3687,"title":{},"body":{"index.html":{}}}],["dropdownmodule",{"_index":1827,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["dt",{"_index":1037,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["dto",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateOrganizationComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/MembersTableComponent.html":{},"injectables/OrganizationService.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{}}}],["due",{"_index":3717,"title":{},"body":{"index.html":{}}}],["durable",{"_index":4086,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":4141,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":3541,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3955,"title":{},"body":{"license.html":{}}}],["e",{"_index":4121,"title":{},"body":{"license.html":{}}}],["e.g",{"_index":2018,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["e2e",{"_index":3696,"title":{},"body":{"index.html":{}}}],["each",{"_index":275,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["earlier",{"_index":3876,"title":{},"body":{"license.html":{}}}],["effect",{"_index":306,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["effected",{"_index":4023,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4003,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3850,"title":{},"body":{"license.html":{}}}],["effects",{"_index":301,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["efforts",{"_index":4287,"title":{},"body":{"license.html":{}}}],["el",{"_index":2764,"title":{},"body":{"components/SidebarComponent.html":{}}}],["electronic",{"_index":4452,"title":{},"body":{"license.html":{}}}],["element",{"_index":45,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["elementref",{"_index":926,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{}}}],["elements",{"_index":286,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["email",{"_index":1264,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["embodied",{"_index":4081,"title":{},"body":{"license.html":{}}}],["emit",{"_index":382,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["emits",{"_index":363,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["emitted",{"_index":1163,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["emitting",{"_index":1928,"title":{},"body":{"injectables/MenuService.html":{}}}],["employer",{"_index":4465,"title":{},"body":{"license.html":{}}}],["empty",{"_index":2035,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["en",{"_index":3508,"title":{},"body":{"components/TopbarComponent.html":{}}}],["enable",{"_index":300,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["enableaddaction",{"_index":1052,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["enableeditaction",{"_index":1053,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["enablefiltering",{"_index":1054,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["enableglobalsearch",{"_index":1055,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["enableinviteaction",{"_index":1838,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["enablepagination",{"_index":1056,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["enableremoveaction",{"_index":1057,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["enables",{"_index":3895,"title":{},"body":{"license.html":{}}}],["enablesorting",{"_index":1058,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["end",{"_index":405,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["enddate",{"_index":2896,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["endinterval",{"_index":2353,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["enforce",{"_index":4323,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":4029,"title":{},"body":{"license.html":{}}}],["english",{"_index":3507,"title":{},"body":{"components/TopbarComponent.html":{}}}],["enhancing",{"_index":3643,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":4118,"title":{},"body":{"license.html":{}}}],["entered",{"_index":4359,"title":{},"body":{"license.html":{}}}],["entire",{"_index":4051,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":4375,"title":{},"body":{"license.html":{}}}],["entity",{"_index":4277,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":3573,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/debug",{"_index":2308,"title":{},"body":{"interfaces/ProjectDebugFile.html":{}}}],["enums/permission.enum",{"_index":2711,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["enums/platform",{"_index":2271,"title":{},"body":{"interfaces/Platform.html":{}}}],["enums/resource",{"_index":2712,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["env",{"_index":3723,"title":{},"body":{"index.html":{}}}],["envelope",{"_index":2808,"title":{},"body":{"components/SidebarComponent.html":{}}}],["environment",{"_index":1080,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["environment.appname",{"_index":1605,"title":{},"body":{"components/LoginComponent.html":{},"components/TopbarComponent.html":{}}}],["environment.enableregistration",{"_index":1606,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["environment.environment",{"_index":1178,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["environments",{"_index":75,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["environments/environment",{"_index":1598,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["environments?.map((environment",{"_index":1087,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["environmentsform",{"_index":1038,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["environmentstablecomponent",{"_index":74,"title":{"components/EnvironmentsTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["equal",{"_index":426,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["equivalent",{"_index":3978,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":3810,"title":{},"body":{"license.html":{}}}],["error",{"_index":543,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["error('method",{"_index":2172,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["error.status",{"_index":971,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{}}}],["errors",{"_index":2354,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["errorsubscription",{"_index":888,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["eslint",{"_index":395,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["eslint/ban",{"_index":853,"title":{},"body":{"components/ConfigComponent.html":{}}}],["eslint/component",{"_index":2050,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["eslint/no",{"_index":399,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["essential",{"_index":3938,"title":{},"body":{"license.html":{}}}],["even",{"_index":4424,"title":{},"body":{"license.html":{}}}],["event",{"_index":953,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"license.html":{}}}],["event.files.length",{"_index":2178,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["event.files[0",{"_index":2179,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["event.model",{"_index":1955,"title":{},"body":{"injectables/MenuService.html":{}}}],["event.model.ts",{"_index":1925,"title":{},"body":{"interfaces/MenuChangeEvent.html":{}}}],["event.preventdefault",{"_index":2086,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["event.target",{"_index":954,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["event.value",{"_index":2478,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["events",{"_index":364,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["eventtarget",{"_index":1136,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["everyone",{"_index":3736,"title":{},"body":{"license.html":{}}}],["exact",{"_index":2077,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["example",{"_index":3681,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":3887,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":4194,"title":{},"body":{"license.html":{}}}],["exclamation",{"_index":2851,"title":{},"body":{"components/SidebarComponent.html":{}}}],["excluded",{"_index":4131,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":4363,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":4447,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4314,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3983,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4369,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3929,"title":{},"body":{"license.html":{}}}],["execute",{"_index":2020,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["executed",{"_index":801,"title":{},"body":{"components/ConfigComponent.html":{}}}],["executing",{"_index":2016,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["exercise",{"_index":4288,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4024,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2029,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["expanded",{"_index":2034,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["expected",{"_index":4153,"title":{},"body":{"license.html":{}}}],["expects",{"_index":4152,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":3484,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["explains",{"_index":3801,"title":{},"body":{"license.html":{}}}],["explicit",{"_index":400,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["explicitly",{"_index":2023,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{}}}],["express",{"_index":3557,"title":{},"body":{"dependencies.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["expressed",{"_index":4398,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":4236,"title":{},"body":{"license.html":{}}}],["extend",{"_index":3837,"title":{},"body":{"license.html":{}}}],["extended",{"_index":4348,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":4064,"title":{},"body":{"license.html":{}}}],["extent",{"_index":3905,"title":{},"body":{"license.html":{}}}],["f",{"_index":4221,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3984,"title":{},"body":{"license.html":{}}}],["fails",{"_index":4249,"title":{},"body":{"license.html":{}}}],["failure",{"_index":679,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"license.html":{}}}],["fair",{"_index":3977,"title":{},"body":{"license.html":{}}}],["false",{"_index":308,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["family",{"_index":4136,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":3873,"title":{},"body":{"license.html":{}}}],["favor",{"_index":4146,"title":{},"body":{"license.html":{}}}],["feature",{"_index":3908,"title":{},"body":{"license.html":{}}}],["features",{"_index":3651,"title":{},"body":{"index.html":{}}}],["fee",{"_index":3783,"title":{},"body":{"license.html":{}}}],["feel",{"_index":739,"title":{},"body":{"components/ConfigComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["file.dto.ts",{"_index":1005,"title":{},"body":{"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/ProjectDebugFileDto.html":{}}}],["file.entity.ts",{"_index":2305,"title":{},"body":{"interfaces/ProjectDebugFile.html":{}}}],["filedto",{"_index":1182,"title":{"interfaces/FileDto.html":{}},"body":{"interfaces/FileDto.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["filedto.url",{"_index":2264,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["filename",{"_index":1186,"title":{},"body":{"interfaces/FileDto.html":{}}}],["files",{"_index":66,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{},"license.html":{}}}],["filesize",{"_index":1187,"title":{},"body":{"interfaces/FileDto.html":{}}}],["fileupload",{"_index":2158,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fileuploadhandlerevent",{"_index":2143,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fileuploadmodule",{"_index":2120,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fileurl",{"_index":2307,"title":{},"body":{"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{}}}],["filled",{"_index":288,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["filter",{"_index":1115,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["filter((members",{"_index":1689,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["filter((projects",{"_index":2378,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["filter((teams",{"_index":3395,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["filteredprojects",{"_index":2438,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filtermyteams",{"_index":2443,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filtermyteams($event",{"_index":2446,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filterprojects",{"_index":2444,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filterservice",{"_index":2434,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filtervalue",{"_index":2439,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["finally",{"_index":3841,"title":{},"body":{"license.html":{}}}],["find",{"_index":4114,"title":{},"body":{"license.html":{}}}],["first",{"_index":3680,"title":{},"body":{"index.html":{},"license.html":{}}}],["firstname",{"_index":1437,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["fitness",{"_index":4401,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":4085,"title":{},"body":{"license.html":{}}}],["flag",{"_index":3505,"title":{},"body":{"components/TopbarComponent.html":{}}}],["flow",{"_index":3962,"title":{},"body":{"license.html":{}}}],["fluent",{"_index":871,"title":{},"body":{"components/ConfigComponent.html":{}}}],["follow",{"_index":3858,"title":{},"body":{"license.html":{}}}],["following",{"_index":4318,"title":{},"body":{"license.html":{}}}],["font",{"_index":767,"title":{},"body":{"components/ConfigComponent.html":{}}}],["footer",{"_index":1191,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":77,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["footer.component.html",{"_index":1192,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1193,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":76,"title":{"components/FooterComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forbid",{"_index":4022,"title":{},"body":{"license.html":{}}}],["force",{"_index":3980,"title":{},"body":{"license.html":{}}}],["foreach((value",{"_index":2176,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["forgot",{"_index":79,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forgotpassword",{"_index":518,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{}}}],["forgotpassword(username",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":78,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forgotpassworderror",{"_index":651,"title":{},"body":{"interfaces/AuthState.html":{}}}],["forgotpasswordfailure",{"_index":596,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["forgotpasswordform",{"_index":1200,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordrequestdto",{"_index":1262,"title":{"interfaces/ForgotPasswordRequestDto.html":{}},"body":{"interfaces/ForgotPasswordRequestDto.html":{}}}],["forgotpasswordsuccess",{"_index":567,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["form",{"_index":3918,"title":{},"body":{"license.html":{}}}],["format",{"_index":4188,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":903,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsTableComponent.html":{}}}],["formdata",{"_index":2246,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["forms",{"_index":4075,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":715,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["found",{"_index":2103,"title":{},"body":{"components/NotFoundComponent.html":{},"license.html":{}}}],["found'},{'name",{"_index":105,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["found.component",{"_index":3152,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["found.component.html",{"_index":2104,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":2105,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":2102,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.not_available",{"_index":2107,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.not_found",{"_index":2106,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":2101,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SingleTeamComponent.html":{}}}],["foundation",{"_index":3733,"title":{},"body":{"license.html":{}}}],["fragment",{"_index":2081,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["free",{"_index":2926,"title":{},"body":{"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["freedom",{"_index":3751,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":3786,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":940,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["fromevent(this.nameinput.nativeelement",{"_index":959,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["fromevent(this.sluginput.nativeelement",{"_index":951,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["fromevent(this.usernameinput.nativeelement",{"_index":1230,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fulfilling",{"_index":4006,"title":{},"body":{"license.html":{}}}],["full",{"_index":3686,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":347,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MemberPickerComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/ProjectPickerComponent.html":{},"components/SidebarComponent.html":{},"components/TeamPickerComponent.html":{}}}],["functionality",{"_index":708,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["functioning",{"_index":4165,"title":{},"body":{"license.html":{}}}],["functions",{"_index":268,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":3816,"title":{},"body":{"license.html":{}}}],["further",{"_index":2025,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["future",{"_index":3839,"title":{},"body":{"license.html":{}}}],["fw",{"_index":2798,"title":{},"body":{"components/SidebarComponent.html":{}}}],["gb",{"_index":3506,"title":{},"body":{"components/TopbarComponent.html":{}}}],["general",{"_index":3718,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":3951,"title":{},"body":{"license.html":{}}}],["generate",{"_index":3670,"title":{},"body":{"index.html":{},"license.html":{}}}],["generated",{"_index":3647,"title":{},"body":{"index.html":{}}}],["getactiveclass",{"_index":2044,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getactivemembers",{"_index":1791,"title":{},"body":{"injectables/MembersService.html":{}}}],["getapplicationname",{"_index":1582,"title":{},"body":{"components/LoginComponent.html":{}}}],["getappname",{"_index":3495,"title":{},"body":{"components/TopbarComponent.html":{}}}],["getattribute('href",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["getchartlabel",{"_index":2890,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["getchartlabel(startdate",{"_index":2895,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["getcontainerclass",{"_index":1342,"title":{},"body":{"components/HomeComponent.html":{}}}],["getinputstyle",{"_index":825,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getinvitationdetails",{"_index":1486,"title":{},"body":{"injectables/InvitationService.html":{}}}],["getinvitationdetails(invitationhash",{"_index":1491,"title":{},"body":{"injectables/InvitationService.html":{}}}],["getitem",{"_index":1547,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getitem(key",{"_index":1553,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getlength",{"_index":1560,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getmembers",{"_index":1792,"title":{},"body":{"injectables/MembersService.html":{}}}],["getmenumode",{"_index":821,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getmyteams",{"_index":3407,"title":{},"body":{"injectables/TeamService.html":{}}}],["getorganization",{"_index":2231,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["getorganizationinitials",{"_index":2128,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getorganizationinitials(organization",{"_index":2134,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getorganizationteams",{"_index":3408,"title":{},"body":{"injectables/TeamService.html":{}}}],["getplatforms",{"_index":2290,"title":{},"body":{"injectables/PlatformService.html":{}}}],["getprojectstats(this.project?.projectid",{"_index":2913,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["getrefreshtoken",{"_index":1507,"title":{},"body":{"injectables/JwtService.html":{}}}],["getripple",{"_index":829,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getroles",{"_index":2729,"title":{},"body":{"injectables/RoleService.html":{}}}],["getscale",{"_index":817,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getsubmenuanimation",{"_index":2042,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getteambyid",{"_index":3409,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteambyid(teamid",{"_index":3423,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteammembers",{"_index":3410,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteammembers(teamid",{"_index":3425,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteamprojects",{"_index":3411,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteamprojects(teamid",{"_index":3427,"title":{},"body":{"injectables/TeamService.html":{}}}],["getting",{"_index":3631,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":1508,"title":{},"body":{"injectables/JwtService.html":{}}}],["getuserinitials",{"_index":1631,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["getuserinitials(member",{"_index":1645,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["getvisible",{"_index":812,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ghcr.io/dradman/loghub",{"_index":3707,"title":{},"body":{"index.html":{}}}],["gi",{"_index":1411,"title":{},"body":{"components/HomeComponent.html":{}}}],["github",{"_index":3704,"title":{},"body":{"index.html":{}}}],["give",{"_index":4044,"title":{},"body":{"license.html":{}}}],["given",{"_index":1303,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["gives",{"_index":4057,"title":{},"body":{"license.html":{}}}],["giving",{"_index":3796,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":3727,"title":{},"body":{"license.html":{}}}],["go",{"_index":3592,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gotoprofilepage",{"_index":3496,"title":{},"body":{"components/TopbarComponent.html":{}}}],["governed",{"_index":4197,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3791,"title":{},"body":{"license.html":{}}}],["grant",{"_index":4217,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3966,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4268,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":3782,"title":{},"body":{"license.html":{}}}],["greater",{"_index":431,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["greatest",{"_index":4439,"title":{},"body":{"license.html":{}}}],["green",{"_index":319,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["guarantee",{"_index":3755,"title":{},"body":{"license.html":{}}}],["gui",{"_index":4464,"title":{},"body":{"license.html":{}}}],["guides",{"_index":1266,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guides'},{'name",{"_index":82,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["guides.component.html",{"_index":1267,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guides.component.scss",{"_index":1268,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guidescomponent",{"_index":81,"title":{"components/GuidesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["h:mm",{"_index":2932,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["h:mm:ss",{"_index":2672,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["handle",{"_index":669,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["handles",{"_index":2015,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["handleupdate",{"_index":2265,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["handling",{"_index":750,"title":{},"body":{"components/ConfigComponent.html":{}}}],["hascreatepermission",{"_index":1712,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["hasdeletepermission",{"_index":1713,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["hash",{"_index":1680,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["haspermission",{"_index":3617,"title":{},"body":{"miscellaneous/functions.html":{}}}],["haspermission(user",{"_index":3626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasreadpermission",{"_index":1039,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["hasupdatepermission",{"_index":2124,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["having",{"_index":3982,"title":{},"body":{"license.html":{}}}],["header",{"_index":1139,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["heart",{"_index":2822,"title":{},"body":{"components/SidebarComponent.html":{}}}],["height",{"_index":2054,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["here",{"_index":3685,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":4310,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":348,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["hidemenu",{"_index":1285,"title":{},"body":{"components/HomeComponent.html":{}}}],["hideprofilemenu",{"_index":1286,"title":{},"body":{"components/HomeComponent.html":{}}}],["hides",{"_index":1314,"title":{},"body":{"components/HomeComponent.html":{}}}],["holder",{"_index":4243,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4202,"title":{},"body":{"license.html":{}}}],["home",{"_index":1270,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["home'},{'name",{"_index":84,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["home.component.html",{"_index":1272,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1273,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/devices",{"_index":2811,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/documentation",{"_index":2868,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/guides",{"_index":2874,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/sdks",{"_index":2871,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/support",{"_index":2877,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/issues",{"_index":2806,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/logs",{"_index":2803,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/messages",{"_index":2809,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/performance",{"_index":2817,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/projects",{"_index":2800,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/queries",{"_index":2820,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/releases",{"_index":2834,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/replays",{"_index":2831,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/resources",{"_index":2828,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/screen",{"_index":2826,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/sessions",{"_index":2814,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings",{"_index":2839,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account",{"_index":2841,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/close",{"_index":2850,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/details",{"_index":2843,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/notifications",{"_index":2848,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/security",{"_index":2845,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/alerts",{"_index":2864,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/members",{"_index":2861,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/organization",{"_index":2854,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/projects",{"_index":2856,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/teams",{"_index":2859,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/stats",{"_index":2837,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/vitals",{"_index":2823,"title":{},"body":{"components/SidebarComponent.html":{}}}],["homecomponent",{"_index":83,"title":{"components/HomeComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["hope",{"_index":4449,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":293,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["host",{"_index":2011,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding",{"_index":2048,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.active",{"_index":2092,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.layout",{"_index":2008,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbindings",{"_index":1969,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hosts",{"_index":4115,"title":{},"body":{"license.html":{}}}],["hour",{"_index":2349,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["hourbyhour",{"_index":2406,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["hourlystat",{"_index":2928,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.endinterval",{"_index":2921,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.errors",{"_index":2924,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.numberofcrashfreesessions",{"_index":2929,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.numberofsessions",{"_index":2930,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.transactions",{"_index":2923,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["household",{"_index":4137,"title":{},"body":{"license.html":{}}}],["hover",{"_index":2019,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hovering",{"_index":359,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["href",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["html",{"_index":44,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["htmlelement).closest",{"_index":2546,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["htmlinputelement).value",{"_index":955,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["http",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":3666,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory",{"_index":3619,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":3630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpparams",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpparams().set('username",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://fsf.org",{"_index":3735,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses",{"_index":4469,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":4477,"title":{},"body":{"license.html":{}}}],["hyphen",{"_index":2003,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hypothetical",{"_index":4462,"title":{},"body":{"license.html":{}}}],["i.e",{"_index":2033,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["icon",{"_index":1141,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["iconurl",{"_index":2269,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{}}}],["id",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"interfaces/ProjectHourByHourStatDto.html":{}}}],["identifiable",{"_index":4338,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1994,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["identifiers",{"_index":2006,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["identify",{"_index":2005,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["ids",{"_index":2626,"title":{},"body":{"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{}}}],["if(isusernametaken",{"_index":1258,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ignored",{"_index":2079,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["image",{"_index":3678,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1911,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["implementation",{"_index":3936,"title":{},"body":{"license.html":{}}}],["implemented",{"_index":2173,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["implements",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{},"index.html":{}}}],["implied",{"_index":4364,"title":{},"body":{"license.html":{}}}],["import",{"_index":29,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["important",{"_index":3716,"title":{},"body":{"index.html":{}}}],["importing",{"_index":4301,"title":{},"body":{"license.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["impose",{"_index":4226,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4366,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4417,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4420,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":343,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inbox",{"_index":2805,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inc",{"_index":3734,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4414,"title":{},"body":{"license.html":{}}}],["include",{"_index":373,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["included",{"_index":3931,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2001,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["including",{"_index":3947,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":4073,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":3817,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":4470,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4140,"title":{},"body":{"license.html":{}}}],["increments",{"_index":781,"title":{},"body":{"components/ConfigComponent.html":{}}}],["incrementscale",{"_index":724,"title":{},"body":{"components/ConfigComponent.html":{}}}],["indemnification",{"_index":4222,"title":{},"body":{"license.html":{}}}],["independent",{"_index":4062,"title":{},"body":{"license.html":{}}}],["index",{"_index":183,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["indicate",{"_index":408,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["indicates",{"_index":391,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["indicating",{"_index":434,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["individual",{"_index":4071,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":3826,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":4156,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{}}}],["inform",{"_index":4124,"title":{},"body":{"license.html":{}}}],["information",{"_index":1938,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["infringe",{"_index":4269,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4298,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3884,"title":{},"body":{"license.html":{}}}],["initial",{"_index":376,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["initialized",{"_index":760,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["initializing",{"_index":372,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["initialstate",{"_index":667,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["initiate",{"_index":4291,"title":{},"body":{"license.html":{}}}],["inject",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["inject(document",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["inject(platform_id",{"_index":1566,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["injectable",{"_index":320,"title":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}}}],["injectables",{"_index":512,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"overview.html":{}}}],["injected",{"_index":1986,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["injection",{"_index":753,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["input",{"_index":285,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["inputmaskmodule",{"_index":1419,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inputnumbermodule",{"_index":2119,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["inputs",{"_index":726,"title":{},"body":{"components/ConfigComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/InvitationComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["inputstyle",{"_index":257,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inputstyle(_val",{"_index":846,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputswitchmodule",{"_index":714,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputtextmodule",{"_index":883,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["inside",{"_index":2771,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["insights",{"_index":3553,"title":{},"body":{"dependencies.html":{}}}],["install",{"_index":3813,"title":{},"body":{"license.html":{}}}],["installation",{"_index":4159,"title":{},"body":{"license.html":{}}}],["installed",{"_index":4178,"title":{},"body":{"license.html":{}}}],["instance",{"_index":380,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["instanceof",{"_index":1371,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["instead",{"_index":4475,"title":{},"body":{"license.html":{}}}],["intact",{"_index":4037,"title":{},"body":{"license.html":{}}}],["intended",{"_index":3754,"title":{},"body":{"license.html":{}}}],["intention",{"_index":4026,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":3898,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":751,"title":{},"body":{"components/ConfigComponent.html":{}}}],["interactive",{"_index":3902,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":4088,"title":{},"body":{"license.html":{}}}],["interest",{"_index":4285,"title":{},"body":{"license.html":{}}}],["interface",{"_index":244,"title":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["interfaces",{"_index":246,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":4167,"title":{},"body":{"license.html":{}}}],["internal",{"_index":2709,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["internationalization",{"_index":2773,"title":{},"body":{"components/SidebarComponent.html":{}}}],["interpretation",{"_index":4427,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3945,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3960,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":4058,"title":{},"body":{"license.html":{}}}],["invitation",{"_index":698,"title":{"interfaces/Invitation.html":{}},"body":{"interfaces/AuthState.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/MembersState.html":{},"miscellaneous/enumerations.html":{}}}],["invitation'},{'name",{"_index":86,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["invitation.component.html",{"_index":1421,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.component.scss",{"_index":1422,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.dto",{"_index":1747,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["invitationcomponent",{"_index":85,"title":{"components/InvitationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["invitationdto",{"_index":1479,"title":{"interfaces/InvitationDto.html":{}},"body":{"interfaces/InvitationDto.html":{},"injectables/InvitationService.html":{},"interfaces/MembersDto.html":{},"components/MembersTableComponent.html":{}}}],["invitationhash",{"_index":1424,"title":{},"body":{"components/InvitationComponent.html":{},"injectables/InvitationService.html":{}}}],["invitationid",{"_index":1415,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{}}}],["invitationrequestdto",{"_index":1482,"title":{"interfaces/InvitationRequestDto.html":{}},"body":{"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{}}}],["invitations",{"_index":1745,"title":{},"body":{"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{}}}],["invitationservice",{"_index":527,"title":{"injectables/InvitationService.html":{}},"body":{"injectables/AuthEffects.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/MembersEffects.html":{}}}],["invitationstatus",{"_index":1805,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitedmember",{"_index":1806,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitedmembers",{"_index":1714,"title":{},"body":{"components/MembersComponent.html":{}}}],["invitemember",{"_index":1487,"title":{},"body":{"injectables/InvitationService.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{}}}],["invitemember(dto",{"_index":1493,"title":{},"body":{"injectables/InvitationService.html":{}}}],["invitemembererror",{"_index":1807,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitememberfailure",{"_index":1781,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["invitemembersuccess",{"_index":1782,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["invitemembersuccess(invitation",{"_index":1758,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["invitenewuserform",{"_index":1828,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["ios",{"_index":3587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["irrevocable",{"_index":3968,"title":{},"body":{"license.html":{}}}],["isaddnewdialogvisible",{"_index":1040,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["isaddnewprojectdialogvisible",{"_index":2497,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isdeletebuttonclicked",{"_index":2545,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isdesktop",{"_index":435,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isinvitedialogvisible",{"_index":1829,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isiso8601",{"_index":3621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isiso8601(value",{"_index":3624,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":889,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["isloadingactivemembers",{"_index":1672,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["isloadingallprojects",{"_index":2373,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["isloadingauthstate",{"_index":1224,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isloadingcreatenew",{"_index":1041,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["isloadingcreatenewproject",{"_index":2498,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isloadingcreateproject",{"_index":2530,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isloadingenvironments",{"_index":1042,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["isloadingmembers",{"_index":1629,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/SingleTeamComponent.html":{}}}],["isloadingmyprojects",{"_index":2440,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["isloadingmyteams",{"_index":2441,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["isloadingorganization",{"_index":947,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["isloadingorganizationteams",{"_index":3391,"title":{},"body":{"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["isloadingprojects",{"_index":2362,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/SingleTeamComponent.html":{}}}],["isloadingreleases",{"_index":2611,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["isloadingremoveenvironments",{"_index":1043,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["isloadingremovemembers",{"_index":1830,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isloadingremovereleases",{"_index":2612,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["isloadingremovetags",{"_index":3289,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["isloadingsendinvitation",{"_index":1831,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isloadingsingleprojectaddenvironments",{"_index":1108,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["isloadingsingleprojectaddrelease",{"_index":2640,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["isloadingsingleprojectaddtags",{"_index":3312,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["isloadingsingleprojectenvironments",{"_index":1109,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["isloadingsingleprojectreleases",{"_index":2641,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["isloadingsingleprojectremoveenvironments",{"_index":1099,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["isloadingsingleprojectremovereleases",{"_index":2642,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["isloadingsingleprojectremovetags",{"_index":3313,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["isloadingsingleprojecttags",{"_index":3314,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["isloadingtags",{"_index":3290,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["isloadingteammembers",{"_index":3142,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["isloadingteamprojects",{"_index":3143,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["isloadingteams",{"_index":3376,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["isloadingupdateteam",{"_index":3083,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["ismobile",{"_index":441,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isnametaken",{"_index":2499,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isnametaken(name",{"_index":2550,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isoutsideclicked",{"_index":1355,"title":{},"body":{"components/HomeComponent.html":{}}}],["isoverlay",{"_index":423,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ispickerdialogvisible",{"_index":1630,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["isplatformbrowser",{"_index":1565,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isplatformbrowser(platformid",{"_index":1567,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isregistrationenabled",{"_index":1583,"title":{},"body":{"components/LoginComponent.html":{}}}],["isslugtaken",{"_index":890,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{}}}],["isslugtaken(slug",{"_index":995,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["issuccess",{"_index":1225,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["issue",{"_index":3608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["issues",{"_index":1501,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issues'},{'name",{"_index":88,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["issues.component.html",{"_index":1502,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issues.component.scss",{"_index":1503,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issuescomponent",{"_index":87,"title":{"components/IssuesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["isupdateorganizationpictureloading",{"_index":2169,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["isuploadinprogress",{"_index":2125,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["isusernameavialable",{"_index":652,"title":{},"body":{"interfaces/AuthState.html":{}}}],["isusernametaken",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isusernametaken(username",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["item",{"_index":1959,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["item.label",{"_index":2095,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick",{"_index":1966,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick(event",{"_index":2013,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["items",{"_index":748,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["itself",{"_index":4181,"title":{},"body":{"license.html":{}}}],["java",{"_index":3593,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["join",{"_index":1390,"title":{},"body":{"components/HomeComponent.html":{}}}],["js",{"_index":3596,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["json.parse(localstorageconfig",{"_index":452,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["json.stringify(this.config",{"_index":456,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["june",{"_index":3729,"title":{},"body":{"license.html":{}}}],["jwtservice",{"_index":526,"title":{"injectables/JwtService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{}}}],["karma",{"_index":3695,"title":{},"body":{"index.html":{}}}],["keep",{"_index":340,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["kernel",{"_index":3939,"title":{},"body":{"license.html":{}}}],["key",{"_index":1548,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["key(index",{"_index":1554,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["keys",{"_index":1919,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["keys.length",{"_index":1921,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["kind",{"_index":3894,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":3746,"title":{},"body":{"license.html":{}}}],["know",{"_index":3770,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":4326,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4335,"title":{},"body":{"license.html":{}}}],["label",{"_index":1306,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/TopbarComponent.html":{}}}],["labels",{"_index":2918,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["landscape",{"_index":437,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["language",{"_index":735,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["language.label",{"_index":3525,"title":{},"body":{"components/TopbarComponent.html":{}}}],["languages",{"_index":2777,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["lara",{"_index":318,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["laravel",{"_index":3600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["larger",{"_index":4066,"title":{},"body":{"license.html":{}}}],["lastlogintime",{"_index":2714,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["lastname",{"_index":1438,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["later",{"_index":4388,"title":{},"body":{"license.html":{}}}],["latest",{"_index":3703,"title":{},"body":{"index.html":{}}}],["law",{"_index":3886,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3861,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4296,"title":{},"body":{"license.html":{}}}],["layout",{"_index":266,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["layoutservice",{"_index":194,"title":{"injectables/LayoutService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["layoutstate",{"_index":326,"title":{"interfaces/LayoutState.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["leaks",{"_index":2039,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["legal",{"_index":3797,"title":{},"body":{"license.html":{}}}],["legend",{"_index":43,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["length",{"_index":1551,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["lesser",{"_index":4474,"title":{},"body":{"license.html":{}}}],["lgpl.html",{"_index":4478,"title":{},"body":{"license.html":{}}}],["liability",{"_index":4205,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3883,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3928,"title":{},"body":{"license.html":{}}}],["library",{"_index":381,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["license",{"_index":3726,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3865,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3867,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3869,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3747,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":4272,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4215,"title":{},"body":{"license.html":{}}}],["light",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["likewise",{"_index":4266,"title":{},"body":{"license.html":{}}}],["limit",{"_index":4027,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":3719,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":4399,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":4204,"title":{},"body":{"license.html":{}}}],["line",{"_index":398,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["link",{"_index":773,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["linked",{"_index":3956,"title":{},"body":{"license.html":{}}}],["linking",{"_index":4473,"title":{},"body":{"license.html":{}}}],["links",{"_index":305,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["list",{"_index":2802,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["listener",{"_index":1320,"title":{},"body":{"components/HomeComponent.html":{}}}],["literal",{"_index":1101,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/Role.html":{},"components/TagsTableComponent.html":{},"injectables/TeamService.html":{},"interfaces/UserDto.html":{}}}],["litigation",{"_index":4292,"title":{},"body":{"license.html":{}}}],["load",{"_index":682,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["loadactivemembers",{"_index":1670,"title":{},"body":{"components/MemberPickerComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadactivemembersfailure",{"_index":1783,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadactivememberssuccess",{"_index":1784,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadactivememberssuccess({members",{"_index":1764,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["loadallprojects",{"_index":2319,"title":{},"body":{"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{}}}],["loadallprojectsfailure",{"_index":2344,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadallprojectssuccess",{"_index":2345,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadallprojectssuccess({projects",{"_index":2333,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["loadcurrentorganization",{"_index":945,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationfailure",{"_index":2225,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationsuccess",{"_index":2226,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationsuccess(organization",{"_index":2215,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["loadcurrentuser",{"_index":519,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loadcurrentuserfailure",{"_index":597,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["loadcurrentusersuccess",{"_index":598,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["loadcurrentusersuccess(user",{"_index":563,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["loaded",{"_index":794,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loader",{"_index":3548,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":670,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["loadmyprojects",{"_index":2320,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{}}}],["loadmyprojectsfailure",{"_index":2346,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadmyprojectssuccess",{"_index":2347,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadmyprojectssuccess({projects",{"_index":2338,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["loadmyteams",{"_index":2469,"title":{},"body":{"components/ProjectsComponent.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["loadmyteamsfailure",{"_index":3369,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadmyteamssuccess",{"_index":3370,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadmyteamssuccess({teams",{"_index":3357,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadorganizationmembers",{"_index":1734,"title":{},"body":{"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmembersfailure",{"_index":1785,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmemberssuccess",{"_index":1786,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmemberssuccess(members",{"_index":1769,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["loadorganizationteams",{"_index":3342,"title":{},"body":{"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["loadorganizationteamsfailure",{"_index":3371,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadorganizationteamssuccess",{"_index":3372,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadorganizationteamssuccess({teams",{"_index":3362,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadplatforms",{"_index":2276,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{}}}],["loadplatformsfailure",{"_index":2287,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["loadplatformssuccess",{"_index":2282,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["loadprojectbyid",{"_index":2955,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectbyidfailure",{"_index":3065,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectbyidsuccess",{"_index":3002,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectdebugfiles",{"_index":2956,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectdebugfilesfailure",{"_index":3066,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectdebugfilessuccess",{"_index":3007,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectenvironments",{"_index":1124,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["loadprojectenvironmentsfailure",{"_index":3067,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectenvironmentssuccess",{"_index":3012,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectreleases",{"_index":2647,"title":{},"body":{"components/ReleasesTableComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["loadprojectreleasesfailure",{"_index":3068,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectreleasessuccess",{"_index":3017,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojecttags",{"_index":2957,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"components/TagsTableComponent.html":{}}}],["loadprojecttagsfailure",{"_index":3069,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojecttagssuccess",{"_index":3022,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectteams",{"_index":2958,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectteamsfailure",{"_index":3070,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadprojectteamssuccess",{"_index":3027,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["loadroles",{"_index":1867,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loadrolesfailure",{"_index":2726,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loadrolessuccess",{"_index":2722,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loads",{"_index":2741,"title":{},"body":{"components/ScreenLoadsComponent.html":{},"components/SidebarComponent.html":{}}}],["loads'},{'name",{"_index":133,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["loads.component.html",{"_index":2742,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads.component.scss",{"_index":2743,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads.component.ts",{"_index":2740,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads/screen",{"_index":2739,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loadteambyid",{"_index":3134,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteambyidfailure",{"_index":3229,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteambyidsuccess",{"_index":3198,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteammembers",{"_index":3135,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteammembersfailure",{"_index":3230,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteammemberssuccess",{"_index":3203,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteamprojects",{"_index":3136,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteamprojectsfailure",{"_index":3231,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteamprojectssuccess",{"_index":3208,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["local",{"_index":324,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["localization",{"_index":2774,"title":{},"body":{"components/SidebarComponent.html":{}}}],["localizedlabel",{"_index":1392,"title":{},"body":{"components/HomeComponent.html":{}}}],["localstorage",{"_index":323,"title":{"injectables/LocalStorage.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{}}}],["localstorageconfig",{"_index":448,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["location",{"_index":3642,"title":{},"body":{"index.html":{}}}],["log_entry",{"_index":3609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_session",{"_index":3610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_source",{"_index":3611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logging",{"_index":3636,"title":{},"body":{"index.html":{}}}],["loghub",{"_index":3633,"title":{},"body":{"index.html":{}}}],["login",{"_index":1578,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":90,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["login.component.html",{"_index":1579,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1580,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":89,"title":{"components/LoginComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["loginform",{"_index":1581,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":3497,"title":{},"body":{"components/TopbarComponent.html":{}}}],["logs",{"_index":1617,"title":{},"body":{"components/LogsComponent.html":{},"index.html":{}}}],["logs'},{'name",{"_index":92,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["logs.component.html",{"_index":1618,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.component.scss",{"_index":1619,"title":{},"body":{"components/LogsComponent.html":{}}}],["logscomponent",{"_index":91,"title":{"components/LogsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["long",{"_index":3979,"title":{},"body":{"license.html":{}}}],["look",{"_index":738,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loss",{"_index":4418,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4421,"title":{},"body":{"license.html":{}}}],["machine",{"_index":4078,"title":{},"body":{"license.html":{}}}],["made",{"_index":4168,"title":{},"body":{"license.html":{}}}],["mail",{"_index":4454,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":4111,"title":{},"body":{"license.html":{}}}],["major",{"_index":3934,"title":{},"body":{"license.html":{}}}],["make",{"_index":3710,"title":{},"body":{"index.html":{},"license.html":{}}}],["makes",{"_index":3997,"title":{},"body":{"license.html":{}}}],["making",{"_index":1980,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["manage",{"_index":740,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["management",{"_index":3658,"title":{},"body":{"index.html":{}}}],["managing",{"_index":734,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["manipulate",{"_index":741,"title":{},"body":{"components/ConfigComponent.html":{}}}],["manner",{"_index":4311,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1977,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["manufacturer",{"_index":3815,"title":{},"body":{"license.html":{}}}],["map",{"_index":536,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamsComponent.html":{}}}],["map((environments",{"_index":2976,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["map((event",{"_index":952,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["map((files",{"_index":2968,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["map((invitation",{"_index":1757,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["map((members",{"_index":1763,"title":{},"body":{"injectables/MembersEffects.html":{},"injectables/SingleTeamEffects.html":{}}}],["map((organization",{"_index":2209,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["map((project",{"_index":2326,"title":{},"body":{"injectables/ProjectEffects.html":{},"injectables/SingleProjectEffects.html":{}}}],["map((projects",{"_index":2332,"title":{},"body":{"injectables/ProjectEffects.html":{},"injectables/SingleTeamEffects.html":{}}}],["map((releases",{"_index":2982,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["map((result",{"_index":2219,"title":{},"body":{"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/RoleEffects.html":{}}}],["map((segment",{"_index":1388,"title":{},"body":{"components/HomeComponent.html":{}}}],["map((tags",{"_index":2989,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["map((team",{"_index":3197,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["map((teams",{"_index":2996,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"injectables/TeamEffects.html":{}}}],["map((token",{"_index":553,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((user",{"_index":562,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((value",{"_index":2452,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["march",{"_index":4361,"title":{},"body":{"license.html":{}}}],["marked",{"_index":3807,"title":{},"body":{"license.html":{}}}],["marks",{"_index":756,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["masks",{"_index":3863,"title":{},"body":{"license.html":{}}}],["matching",{"_index":169,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["material",{"_index":867,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["materially",{"_index":4182,"title":{},"body":{"license.html":{}}}],["matrixparams",{"_index":2080,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["meaning",{"_index":4229,"title":{},"body":{"license.html":{}}}],["means",{"_index":757,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["measure",{"_index":4005,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4019,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":1983,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["medium",{"_index":4033,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4047,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3915,"title":{},"body":{"license.html":{}}}],["member",{"_index":94,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["member.email",{"_index":1895,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.email.charat(0",{"_index":1679,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.firstname",{"_index":1676,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.firstname?.charat(0",{"_index":1677,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.invitationid",{"_index":1886,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.lastname",{"_index":1675,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.lastname?.charat(0",{"_index":1678,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.pictureurl",{"_index":1897,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.role.name",{"_index":1896,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.userid",{"_index":1697,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["member?.firstname",{"_index":1893,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member?.lastname",{"_index":1894,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["memberid",{"_index":1798,"title":{},"body":{"injectables/MembersService.html":{},"components/MembersTableComponent.html":{}}}],["memberpickercomponent",{"_index":93,"title":{"components/MemberPickerComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members",{"_index":99,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/PlatformState.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members'},{'name",{"_index":97,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members.actions",{"_index":1788,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["members.component.html",{"_index":1709,"title":{},"body":{"components/MembersComponent.html":{}}}],["members.component.scss",{"_index":1710,"title":{},"body":{"components/MembersComponent.html":{}}}],["members.map((member",{"_index":3172,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["members/members.effects",{"_index":473,"title":{},"body":{"interfaces/AppState.html":{}}}],["members/members.reducer",{"_index":475,"title":{},"body":{"interfaces/AppState.html":{}}}],["members?.filter",{"_index":1694,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["memberscomponent",{"_index":96,"title":{"components/MembersComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["membersdto",{"_index":1743,"title":{"interfaces/MembersDto.html":{}},"body":{"interfaces/MembersDto.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{}}}],["memberseffects",{"_index":472,"title":{"injectables/MembersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MembersEffects.html":{}}}],["memberserror",{"_index":3240,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["membersreducer",{"_index":474,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/MembersState.html":{}}}],["membersservice",{"_index":1753,"title":{"injectables/MembersService.html":{}},"body":{"injectables/MembersEffects.html":{},"injectables/MembersService.html":{}}}],["membersstate",{"_index":460,"title":{"interfaces/MembersState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MembersState.html":{}}}],["membersstatus",{"_index":3241,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["memberstablecomponent",{"_index":98,"title":{"components/MembersTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["memory",{"_index":1564,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["memorystorage",{"_index":1563,"title":{"injectables/MemoryStorage.html":{}},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["menu",{"_index":290,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["menubutton",{"_index":3491,"title":{},"body":{"components/TopbarComponent.html":{}}}],["menuchangeevent",{"_index":1922,"title":{"interfaces/MenuChangeEvent.html":{}},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{}}}],["menuhoveractive",{"_index":335,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuitem",{"_index":1300,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["menuitem.component.html",{"_index":1963,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem.component.scss",{"_index":1962,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem/menuitem.component",{"_index":2791,"title":{},"body":{"components/SidebarComponent.html":{}}}],["menuitem]'},{'name",{"_index":101,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["menuitemcomponent",{"_index":100,"title":{"components/MenuitemComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["menumode",{"_index":260,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menumode(_val",{"_index":844,"title":{},"body":{"components/ConfigComponent.html":{}}}],["menuoutsideclicklistener",{"_index":1278,"title":{},"body":{"components/HomeComponent.html":{}}}],["menuresetsubscription",{"_index":1964,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menus",{"_index":338,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuservice",{"_index":719,"title":{"injectables/MenuService.html":{}},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["menusource",{"_index":1931,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["menusourcesubscription",{"_index":1965,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["merchantability",{"_index":4400,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3897,"title":{},"body":{"license.html":{}}}],["merging",{"_index":4281,"title":{},"body":{"license.html":{}}}],["message",{"_index":1137,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["messages",{"_index":2097,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages'},{'name",{"_index":103,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["messages.component.html",{"_index":2098,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages.component.scss",{"_index":2099,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messagescomponent",{"_index":102,"title":{"components/MessagesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["messageservice",{"_index":880,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["met",{"_index":3970,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["method",{"_index":1990,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["methods",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["minimal",{"_index":727,"title":{},"body":{"components/ConfigComponent.html":{}}}],["miscellaneous",{"_index":3572,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["misrepresentation",{"_index":4211,"title":{},"body":{"license.html":{}}}],["mmm",{"_index":2669,"title":{},"body":{"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["mobile",{"_index":357,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":289,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["model",{"_index":2765,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["models/enums/debug",{"_index":1007,"title":{},"body":{"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/ProjectDebugFileDto.html":{}}}],["models/enums/permission.enum",{"_index":3527,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/enums/platform",{"_index":2274,"title":{},"body":{"interfaces/PlatformDto.html":{}}}],["models/enums/resource",{"_index":3528,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/user.entity",{"_index":1481,"title":{},"body":{"interfaces/InvitationDto.html":{}}}],["modification",{"_index":3857,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3919,"title":{},"body":{"license.html":{}}}],["modified",{"_index":3806,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":4050,"title":{},"body":{"license.html":{}}}],["modify",{"_index":3780,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3889,"title":{},"body":{"license.html":{}}}],["modules",{"_index":4479,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitoring",{"_index":3645,"title":{},"body":{"index.html":{}}}],["more",{"_index":4096,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":4255,"title":{},"body":{"license.html":{}}}],["mouseevent",{"_index":2514,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["move",{"_index":370,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["multiselectchangeevent",{"_index":2447,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["multiselectmodule",{"_index":2435,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["myprojects",{"_index":2419,"title":{},"body":{"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{}}}],["myprojectserror",{"_index":2420,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["myprojectsstatus",{"_index":2421,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["myteams",{"_index":2442,"title":{},"body":{"components/ProjectsComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["myteamserror",{"_index":3450,"title":{},"body":{"interfaces/TeamState.html":{}}}],["myteamsstatus",{"_index":3451,"title":{},"body":{"interfaces/TeamState.html":{}}}],["na",{"_index":2174,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectStatDto.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:your",{"_index":3684,"title":{},"body":{"index.html":{}}}],["namechecksubscription",{"_index":2500,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["named",{"_index":252,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["nameinput",{"_index":891,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["names",{"_index":4214,"title":{},"body":{"license.html":{}}}],["native",{"_index":2770,"title":{},"body":{"components/SidebarComponent.html":{}}}],["nature",{"_index":4063,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":3665,"title":{},"body":{"index.html":{}}}],["navigatetoprojectsettings",{"_index":2891,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["navigation",{"_index":742,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["navigationend",{"_index":1344,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["necessary",{"_index":4408,"title":{},"body":{"license.html":{}}}],["need",{"_index":3698,"title":{},"body":{"index.html":{},"license.html":{}}}],["needed",{"_index":3840,"title":{},"body":{"license.html":{}}}],["nest",{"_index":3602,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["network",{"_index":3899,"title":{},"body":{"license.html":{}}}],["new",{"_index":378,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/ProjectState.html":{},"injectables/SessionStorage.html":{},"interfaces/TeamState.html":{},"index.html":{},"license.html":{}}}],["newhref",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["newpassword",{"_index":2697,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["next",{"_index":397,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"index.html":{},"license.html":{}}}],["ng",{"_index":3662,"title":{},"body":{"index.html":{}}}],["ngafterviewchecked",{"_index":3090,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["ngafterviewinit",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["ngondestroy",{"_index":898,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["ngoninit",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["ngrx",{"_index":3657,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":590,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":660,"title":{},"body":{"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":34,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["node",{"_index":3588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["non",{"_index":1249,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["noncommercially",{"_index":4102,"title":{},"body":{"license.html":{}}}],["none",{"_index":1150,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["normal",{"_index":3932,"title":{},"body":{"license.html":{}}}],["normally",{"_index":4135,"title":{},"body":{"license.html":{}}}],["notfoundcomponent",{"_index":104,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["nothing",{"_index":4267,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3909,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3904,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":1948,"title":{},"body":{"injectables/MenuService.html":{},"components/NotificationsComponent.html":{}}}],["notifications'},{'name",{"_index":107,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["notifications.component.html",{"_index":2109,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":2110,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationscomponent",{"_index":106,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["notifies",{"_index":4256,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4250,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":4200,"title":{},"body":{"license.html":{}}}],["null",{"_index":450,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["number",{"_index":310,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"interfaces/FileDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{},"injectables/SessionStorage.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["numbered",{"_index":4387,"title":{},"body":{"license.html":{}}}],["numberofcrashfreesessions",{"_index":2355,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["numberofsessions",{"_index":2356,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["numbers",{"_index":809,"title":{},"body":{"components/ConfigComponent.html":{}}}],["object",{"_index":317,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["object's",{"_index":425,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["object.keys(this.data",{"_index":1920,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["object.keys(this.data).length",{"_index":1916,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["objects",{"_index":1312,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["obligate",{"_index":4373,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4117,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4007,"title":{},"body":{"license.html":{}}}],["observable",{"_index":388,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["observables",{"_index":366,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["occasionally",{"_index":4101,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":4264,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3823,"title":{},"body":{"license.html":{}}}],["of(acceptinvitationfailure",{"_index":542,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(addprojectdebugfilefailure",{"_index":2971,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(addprojectenvironmentsfailure",{"_index":2978,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(addprojectreleasefailure",{"_index":2984,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(addprojecttagsfailure",{"_index":2991,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(addprojectteamsfailure",{"_index":2998,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(addteammembersfailure",{"_index":3188,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(addteamprojectsfailure",{"_index":3193,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(authenticate(request",{"_index":546,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(authenticationfailure",{"_index":557,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(createprojectfailure",{"_index":2328,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(createteamfailure",{"_index":3347,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(deleteteamfailure",{"_index":3353,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(forgotpasswordfailure",{"_index":568,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(invitememberfailure",{"_index":1759,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadactivemembersfailure",{"_index":1765,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadallprojectsfailure",{"_index":2334,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(loadcurrentorganizationfailure",{"_index":2211,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["of(loadcurrentuserfailure",{"_index":571,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(loadmyprojectsfailure",{"_index":2339,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(loadmyteamsfailure",{"_index":3358,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(loadorganizationmembers",{"_index":1777,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadorganizationmembersfailure",{"_index":1770,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadorganizationteamsfailure",{"_index":3363,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(loadplatformsfailure",{"_index":2284,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["of(loadprojectbyidfailure",{"_index":3003,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(loadprojectdebugfilesfailure",{"_index":3008,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(loadprojectenvironmentsfailure",{"_index":3013,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(loadprojectreleasesfailure",{"_index":3018,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(loadprojecttagsfailure",{"_index":3023,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(loadprojectteamsfailure",{"_index":3028,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(loadrolesfailure",{"_index":2723,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["of(loadteambyidfailure",{"_index":3199,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(loadteammembersfailure",{"_index":3204,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(loadteamprojectsfailure",{"_index":3209,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(registernewuserfailure",{"_index":575,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(removememberfailure",{"_index":1774,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(removeprojectdebugfilesfailure",{"_index":3033,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(removeprojectenvironmentsfailure",{"_index":3038,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(removeprojectreleasesfailure",{"_index":3043,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(removeprojecttagsfailure",{"_index":3048,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(removeprojectteamsfailure",{"_index":3053,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(removeteammembersfailure",{"_index":3214,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(removeteamprojectsfailure",{"_index":3219,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(resetpasswordfailure",{"_index":582,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(updateorganizationpicturefailure",{"_index":2221,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["of(updateprojectfailure",{"_index":3058,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["of(updateteamfailure",{"_index":3224,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["offer",{"_index":3795,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4126,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4105,"title":{},"body":{"license.html":{}}}],["official",{"_index":3920,"title":{},"body":{"license.html":{}}}],["oftype",{"_index":589,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["oftype(acceptinvitation",{"_index":532,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(acceptinvitationsuccess",{"_index":545,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(addprojectdebugfile",{"_index":2964,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(addprojectenvironments",{"_index":2973,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(addprojectrelease",{"_index":2980,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(addprojecttags",{"_index":2986,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(addprojectteams",{"_index":2993,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(addteammembers",{"_index":3185,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(addteamprojects",{"_index":3190,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(authenticate",{"_index":548,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticationsuccess",{"_index":559,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(createorganization",{"_index":2207,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(createproject",{"_index":2324,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(createteam",{"_index":3344,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(deleteteam",{"_index":3349,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(forgotpassword",{"_index":565,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(invitemember",{"_index":1755,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadactivemembers",{"_index":1761,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadallprojects",{"_index":2330,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(loadcurrentorganization",{"_index":2213,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(loadcurrentuser",{"_index":570,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(loadmyprojects",{"_index":2336,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(loadmyteams",{"_index":3355,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(loadorganizationmembers",{"_index":1767,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadorganizationteams",{"_index":3360,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(loadplatforms",{"_index":2280,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["oftype(loadprojectbyid",{"_index":3000,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(loadprojectdebugfiles",{"_index":3005,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(loadprojectenvironments",{"_index":3010,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(loadprojectreleases",{"_index":3015,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(loadprojecttags",{"_index":3020,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(loadprojectteams",{"_index":3025,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(loadroles",{"_index":2720,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["oftype(loadteambyid",{"_index":3195,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(loadteammembers",{"_index":3201,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(loadteamprojects",{"_index":3206,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(registernewuser",{"_index":573,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(registernewusersuccess",{"_index":577,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(removemember",{"_index":1772,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(removemembersuccess",{"_index":1776,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(removeprojectdebugfiles",{"_index":3030,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(removeprojectenvironments",{"_index":3035,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(removeprojectreleases",{"_index":3040,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(removeprojecttags",{"_index":3045,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(removeprojectteams",{"_index":3050,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(removeteammembers",{"_index":3211,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(removeteamprojects",{"_index":3216,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(resetpassword",{"_index":579,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(signout",{"_index":584,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(updateorganizationpicture",{"_index":2217,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(updateproject",{"_index":3055,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["oftype(updateteam",{"_index":3221,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["on(acceptinvitation",{"_index":699,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(acceptinvitationfailure",{"_index":701,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(acceptinvitationsuccess",{"_index":700,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(addteammembers",{"_index":3267,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteammembersfailure",{"_index":3269,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteammemberssuccess",{"_index":3268,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteamprojects",{"_index":3273,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteamprojectsfailure",{"_index":3275,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteamprojectssuccess",{"_index":3274,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(authenticate",{"_index":674,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(authenticationfailure",{"_index":680,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(authenticationsuccess",{"_index":677,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(createorganization",{"_index":2258,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createorganizationfailure",{"_index":2260,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createorganizationsuccess",{"_index":2259,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createproject",{"_index":2429,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createprojectfailure",{"_index":2432,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createprojectsuccess",{"_index":2430,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createteam",{"_index":3460,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(createteamfailure",{"_index":3463,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(createteamsuccess",{"_index":3461,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteam",{"_index":3464,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteamfailure",{"_index":3467,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteamsuccess",{"_index":3465,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(forgotpassword",{"_index":688,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(forgotpasswordfailure",{"_index":690,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(forgotpasswordsuccess",{"_index":689,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(invitemember",{"_index":1814,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(invitememberfailure",{"_index":1819,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(invitemembersuccess",{"_index":1815,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadactivemembers",{"_index":1823,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadactivemembersfailure",{"_index":1825,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadactivememberssuccess",{"_index":1824,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadallprojects",{"_index":2423,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadallprojectsfailure",{"_index":2425,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadallprojectssuccess",{"_index":2424,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadcurrentorganization",{"_index":2255,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentorganizationfailure",{"_index":2257,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentorganizationsuccess",{"_index":2256,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentuser",{"_index":671,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadcurrentuserfailure",{"_index":684,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadcurrentusersuccess",{"_index":683,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadmyprojects",{"_index":2426,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadmyprojectsfailure",{"_index":2428,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadmyprojectssuccess",{"_index":2427,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadmyteams",{"_index":3458,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadmyteamssuccess",{"_index":3459,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationmembers",{"_index":1811,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationmembersfailure",{"_index":1813,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationmemberssuccess",{"_index":1812,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationteams",{"_index":3455,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationteamsfailure",{"_index":3457,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationteamssuccess",{"_index":3456,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadplatforms",{"_index":2297,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadplatformsfailure",{"_index":2300,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadplatformssuccess",{"_index":2298,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadroles",{"_index":2734,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadrolesfailure",{"_index":2737,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadrolessuccess",{"_index":2735,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadteambyid",{"_index":3255,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteambyidfailure",{"_index":3257,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteambyidsuccess",{"_index":3256,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteammembers",{"_index":3258,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteammembersfailure",{"_index":3260,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteammemberssuccess",{"_index":3259,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteamprojects",{"_index":3261,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteamprojectsfailure",{"_index":3263,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteamprojectssuccess",{"_index":3262,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(registernewuser",{"_index":694,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(registernewuserfailure",{"_index":696,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(registernewusersuccess",{"_index":695,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(removemember",{"_index":1820,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removememberfailure",{"_index":1822,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removemembersuccess",{"_index":1821,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removeteammembers",{"_index":3270,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteammembersfailure",{"_index":3272,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteammemberssuccess",{"_index":3271,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteamprojects",{"_index":3276,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteamprojectsfailure",{"_index":3278,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteamprojectssuccess",{"_index":3277,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(resetpassword",{"_index":691,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetpasswordfailure",{"_index":693,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetpasswordsuccess",{"_index":692,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetsingleteamstate",{"_index":3254,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(setcurrentuser",{"_index":685,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(settoken",{"_index":686,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(signout",{"_index":687,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(updateorganizationpicture",{"_index":2261,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(updateorganizationpicturefailure",{"_index":2266,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(updateorganizationpicturesuccess",{"_index":2262,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(updateteam",{"_index":3264,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(updateteamfailure",{"_index":3266,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(updateteamsuccess",{"_index":3265,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["onaddmembers",{"_index":3084,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["onaddprojects",{"_index":3085,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["once",{"_index":792,"title":{},"body":{"components/ConfigComponent.html":{}}}],["oncomplete",{"_index":786,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigbuttonclick",{"_index":725,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigupdate",{"_index":444,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ondestroy",{"_index":878,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["one",{"_index":793,"title":{},"body":{"components/ConfigComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"license.html":{}}}],["oninit",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["onmemberspicked",{"_index":1638,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["onmembersremoved",{"_index":1639,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["onmenustatechange",{"_index":1933,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["onmenustatechange(event",{"_index":1934,"title":{},"body":{"injectables/MenuService.html":{}}}],["onmenutoggle",{"_index":346,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["onmovealltosource",{"_index":1632,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovealltosource(event",{"_index":1647,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovealltotarget",{"_index":1633,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovealltotarget(event",{"_index":1650,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovetosource",{"_index":1634,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovetosource(event",{"_index":1653,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovetotarget",{"_index":1635,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onmovetotarget(event",{"_index":1656,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["onprojectspicked",{"_index":2363,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["onprojectsremoved",{"_index":2364,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["onremovemembers",{"_index":3086,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["onremoveprojects",{"_index":3087,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["onteamspicked",{"_index":3377,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["onteamsremoved",{"_index":3378,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["open",{"_index":1940,"title":{},"body":{"injectables/MenuService.html":{}}}],["opened",{"_index":393,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opens",{"_index":418,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opensingleproject",{"_index":2503,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["opensingleproject(event",{"_index":2513,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["operate",{"_index":4423,"title":{},"body":{"license.html":{}}}],["operated",{"_index":4108,"title":{},"body":{"license.html":{}}}],["operating",{"_index":3941,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4028,"title":{},"body":{"license.html":{}}}],["operator",{"_index":374,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opposite",{"_index":442,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["option",{"_index":298,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["optional",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":265,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["order",{"_index":1995,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["organization",{"_index":881,"title":{"interfaces/Organization.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/MembersState.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["organization'},{'name",{"_index":63,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["organization.actions",{"_index":2229,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["organization.archive_period",{"_index":2196,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.archive_period_description",{"_index":2197,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.avatar",{"_index":2194,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.cleanup_period",{"_index":2198,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.cleanup_period_description",{"_index":2199,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.html",{"_index":885,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":886,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["organization.component.ts",{"_index":877,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:108",{"_index":915,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:140",{"_index":914,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:146",{"_index":912,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:154",{"_index":917,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:159",{"_index":907,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:165",{"_index":910,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:64",{"_index":932,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:65",{"_index":905,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:76",{"_index":920,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:81",{"_index":925,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:82",{"_index":924,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:84",{"_index":930,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:85",{"_index":929,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:86",{"_index":922,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:88",{"_index":913,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.delete",{"_index":2200,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.delete_description",{"_index":2201,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.error",{"_index":979,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.error_description",{"_index":982,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.failed_to_upload_picture",{"_index":2185,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.id",{"_index":2188,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.id_description",{"_index":2189,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.name",{"_index":2192,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.name_description",{"_index":2193,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.name_is_required",{"_index":1000,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.name_label",{"_index":999,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.slug",{"_index":2190,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.slug.split",{"_index":2175,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.slug_description",{"_index":2191,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.slug_is_required",{"_index":1002,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.slug_label",{"_index":1001,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.welcome_description",{"_index":998,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.welcome_message",{"_index":997,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization/create",{"_index":876,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization/organization.effects",{"_index":477,"title":{},"body":{"interfaces/AppState.html":{}}}],["organization/organization.reducer",{"_index":479,"title":{},"body":{"interfaces/AppState.html":{}}}],["organizationcomponent",{"_index":108,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["organizationdto",{"_index":2202,"title":{"interfaces/OrganizationDto.html":{}},"body":{"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{}}}],["organizationeffects",{"_index":476,"title":{"injectables/OrganizationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/OrganizationEffects.html":{}}}],["organizationerrorsubscription",{"_index":1279,"title":{},"body":{"components/HomeComponent.html":{}}}],["organizationid",{"_index":2113,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{}}}],["organizationname",{"_index":908,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organizationreducer",{"_index":478,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/OrganizationState.html":{}}}],["organizations",{"_index":3870,"title":{},"body":{"license.html":{}}}],["organizationservice",{"_index":901,"title":{"injectables/OrganizationService.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{}}}],["organizationstate",{"_index":461,"title":{"interfaces/OrganizationState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/OrganizationState.html":{}}}],["organizationsubscription",{"_index":892,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organizationteams",{"_index":3452,"title":{},"body":{"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["organizationteamserror",{"_index":3453,"title":{},"body":{"interfaces/TeamState.html":{}}}],["organizationteamsstatus",{"_index":3454,"title":{},"body":{"interfaces/TeamState.html":{}}}],["origin",{"_index":4212,"title":{},"body":{"license.html":{}}}],["original",{"_index":791,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["originalevent",{"_index":2088,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["others",{"_index":3774,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":438,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["out",{"_index":1691,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{},"license.html":{}}}],["outlined",{"_index":287,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["output",{"_index":3973,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1318,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["over",{"_index":360,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overall",{"_index":737,"title":{},"body":{"components/ConfigComponent.html":{}}}],["overlay",{"_index":292,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuactive",{"_index":331,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuopensubscription",{"_index":1280,"title":{},"body":{"components/HomeComponent.html":{}}}],["overlayopen",{"_index":392,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overview",{"_index":4480,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":4306,"title":{},"body":{"license.html":{}}}],["owner",{"_index":1715,"title":{},"body":{"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{}}}],["p",{"_index":1145,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"index.html":{}}}],["package",{"_index":3532,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packaged",{"_index":4056,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":3933,"title":{},"body":{"license.html":{}}}],["page",{"_index":2769,"title":{},"body":{"components/SidebarComponent.html":{}}}],["panelmodule",{"_index":1708,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["paper",{"_index":4453,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":4240,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":4319,"title":{},"body":{"license.html":{}}}],["param",{"_index":838,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameter",{"_index":390,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameters",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{},"injectables/TeamService.html":{}}}],["params.platforms",{"_index":2299,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["params.roles",{"_index":2736,"title":{},"body":{"interfaces/RoleState.html":{}}}],["parent",{"_index":759,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["parentkey",{"_index":1968,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["part",{"_index":3872,"title":{},"body":{"license.html":{}}}],["particular",{"_index":3924,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3896,"title":{},"body":{"license.html":{}}}],["parts",{"_index":384,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["party",{"_index":4109,"title":{},"body":{"license.html":{}}}],["party's",{"_index":4283,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1991,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["passed",{"_index":758,"title":{},"body":{"components/ConfigComponent.html":{}}}],["password",{"_index":539,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"license.html":{}}}],["password'},{'name",{"_index":80,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["password.back_to_login",{"_index":1261,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.check_your_email",{"_index":1245,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.html",{"_index":1198,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1199,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1197,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:125",{"_index":2688,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:144",{"_index":1212,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:152",{"_index":1210,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:160",{"_index":1209,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":2685,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":1207,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":2689,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:65",{"_index":1216,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:69",{"_index":1218,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:70",{"_index":1219,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":1214,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:73",{"_index":1223,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:74",{"_index":1220,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:75",{"_index":1221,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":2686,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:77",{"_index":1211,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:82",{"_index":2687,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:88",{"_index":1213,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.error",{"_index":1238,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.error_description",{"_index":1240,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.new_password_label",{"_index":2699,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_is_required",{"_index":2700,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_length",{"_index":2701,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_not_strong",{"_index":2702,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.success",{"_index":1244,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.success_message",{"_index":2695,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.user_does_not_exist",{"_index":1239,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_is_required",{"_index":1259,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_length",{"_index":1260,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_description",{"_index":1256,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_message",{"_index":1255,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.wrong_hash",{"_index":2694,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":1196,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/reset",{"_index":2682,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordmodule",{"_index":1420,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["patent",{"_index":4239,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3844,"title":{},"body":{"license.html":{}}}],["paths",{"_index":2076,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["pattern",{"_index":3821,"title":{},"body":{"license.html":{}}}],["payment",{"_index":4355,"title":{},"body":{"license.html":{}}}],["peer",{"_index":4122,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4125,"title":{},"body":{"license.html":{}}}],["pending",{"_index":3614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":796,"title":{},"body":{"components/ConfigComponent.html":{}}}],["performance",{"_index":4404,"title":{},"body":{"license.html":{}}}],["performing",{"_index":3952,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":4248,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1117,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"interfaces/Role.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["permission.create",{"_index":1722,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["permission.delete",{"_index":1724,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["permission.read",{"_index":1092,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["permission.update",{"_index":2151,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["permissions",{"_index":2710,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["permissiontype",{"_index":3627,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permissionvalue",{"_index":3628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permissive",{"_index":4039,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4072,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4231,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3737,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":4173,"title":{},"body":{"license.html":{}}}],["personal",{"_index":4134,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":4371,"title":{},"body":{"license.html":{}}}],["php",{"_index":3601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["physical",{"_index":4082,"title":{},"body":{"license.html":{}}}],["physically",{"_index":4099,"title":{},"body":{"license.html":{}}}],["pi",{"_index":1142,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["picker",{"_index":1623,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picker'},{'name",{"_index":95,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["picker.component",{"_index":3150,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["picker.component.html",{"_index":1626,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picker.component.scss",{"_index":1627,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picker.component.ts",{"_index":1622,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picker.component.ts:100",{"_index":1658,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:102",{"_index":2366,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:106",{"_index":1649,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:108",{"_index":2367,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:112",{"_index":1652,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:31",{"_index":3380,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:34",{"_index":3389,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:35",{"_index":3387,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:36",{"_index":3390,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:39",{"_index":3382,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:40",{"_index":1641,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:42",{"_index":1665,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picker.component.ts:43",{"_index":1663,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:44",{"_index":1666,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:45",{"_index":3381,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:47",{"_index":1644,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picker.component.ts:50",{"_index":1642,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:53",{"_index":1643,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:55",{"_index":1646,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:63",{"_index":1661,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:68",{"_index":2370,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:69",{"_index":3385,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:75",{"_index":3386,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:76",{"_index":1659,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:81",{"_index":3383,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:87",{"_index":3384,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picker.component.ts:90",{"_index":2368,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:94",{"_index":1655,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:96",{"_index":2369,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker/member",{"_index":1621,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/SingleTeamComponent.html":{}}}],["picker/project",{"_index":2360,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/SingleTeamComponent.html":{}}}],["picker/team",{"_index":3374,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["picklistmodule",{"_index":1624,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picklistmovealltosourceevent",{"_index":1648,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picklistmovealltotargetevent",{"_index":1651,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picklistmovetosourceevent",{"_index":1654,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picklistmovetotargetevent",{"_index":1657,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["picture",{"_index":2239,"title":{},"body":{"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["pictureurl",{"_index":2114,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{}}}],["pieces",{"_index":3769,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":552,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["pipe(filter((event",{"_index":1370,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["pipe(map((releases",{"_index":2636,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["pipe(map((tags",{"_index":3310,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["pipe(map((value",{"_index":1719,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["pixels",{"_index":433,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["place",{"_index":4107,"title":{},"body":{"license.html":{}}}],["platform",{"_index":2267,"title":{"interfaces/Platform.html":{}},"body":{"interfaces/Platform.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectStatDto.html":{},"components/ProjectsTableComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["platform.actions",{"_index":2288,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["platform.dto",{"_index":2316,"title":{},"body":{"interfaces/ProjectDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["platform.entity",{"_index":2302,"title":{},"body":{"interfaces/Project.html":{}}}],["platform.type",{"_index":2561,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["platform.version",{"_index":2562,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["platform/platform.effects",{"_index":495,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform/platform.reducer",{"_index":493,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform_id",{"_index":1562,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformdto",{"_index":2272,"title":{"interfaces/PlatformDto.html":{}},"body":{"interfaces/PlatformDto.html":{},"injectables/PlatformService.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["platformeffects",{"_index":494,"title":{"injectables/PlatformEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/PlatformEffects.html":{}}}],["platformid",{"_index":1013,"title":{},"body":{"interfaces/CreateProjectRequestDto.html":{},"injectables/LocalStorage.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"components/ProjectsTableComponent.html":{},"injectables/SessionStorage.html":{}}}],["platformreducer",{"_index":492,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/PlatformState.html":{}}}],["platforms",{"_index":2283,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{}}}],["platformservice",{"_index":2278,"title":{"injectables/PlatformService.html":{}},"body":{"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{}}}],["platformstate",{"_index":462,"title":{"interfaces/PlatformState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/PlatformState.html":{}}}],["platformtype",{"_index":2270,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"miscellaneous/enumerations.html":{}}}],["play",{"_index":2830,"title":{},"body":{"components/SidebarComponent.html":{}}}],["please",{"_index":4476,"title":{},"body":{"license.html":{}}}],["plugins",{"_index":2905,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["plus",{"_index":4286,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":4448,"title":{},"body":{"license.html":{}}}],["portion",{"_index":4129,"title":{},"body":{"license.html":{}}}],["portrait",{"_index":439,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["possesses",{"_index":4095,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4054,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4426,"title":{},"body":{"license.html":{}}}],["possible",{"_index":4440,"title":{},"body":{"license.html":{}}}],["power",{"_index":4021,"title":{},"body":{"license.html":{}}}],["practical",{"_index":3748,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3830,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":3744,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3853,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":3827,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":4284,"title":{},"body":{"license.html":{}}}],["preference",{"_index":2779,"title":{},"body":{"components/SidebarComponent.html":{}}}],["preferred",{"_index":3917,"title":{},"body":{"license.html":{}}}],["present",{"_index":1692,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{},"license.html":{}}}],["presents",{"_index":3912,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4207,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":2038,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["prevented",{"_index":4166,"title":{},"body":{"license.html":{}}}],["previous",{"_index":3811,"title":{},"body":{"license.html":{}}}],["price",{"_index":3766,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4357,"title":{},"body":{"license.html":{}}}],["primefileupload",{"_index":2126,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeflex",{"_index":3561,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":3563,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":3565,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":935,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/avatar",{"_index":1667,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/TeamPickerComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/badge",{"_index":2162,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["primeng/breadcrumb",{"_index":1345,"title":{},"body":{"components/HomeComponent.html":{}}}],["primeng/button",{"_index":36,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/calendar",{"_index":2524,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["primeng/card",{"_index":2908,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["primeng/chart",{"_index":2909,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["primeng/confirmdialog",{"_index":1103,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["primeng/dialog",{"_index":1104,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["primeng/divider",{"_index":2163,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["primeng/dropdown",{"_index":1863,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/fileupload",{"_index":2164,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeng/inputmask",{"_index":1443,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["primeng/inputnumber",{"_index":2165,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeng/inputswitch",{"_index":835,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/inputtext",{"_index":936,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["primeng/multiselect",{"_index":2466,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["primeng/panel",{"_index":1733,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["primeng/password",{"_index":1444,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/picklist",{"_index":1668,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["primeng/progressspinner",{"_index":2166,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{}}}],["primeng/radiobutton",{"_index":833,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/ripple",{"_index":37,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/sidebar",{"_index":834,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/skeleton",{"_index":2910,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["primeng/table",{"_index":1105,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["primeng/tabview",{"_index":3130,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["primeng/toast",{"_index":937,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["primeone",{"_index":872,"title":{},"body":{"components/ConfigComponent.html":{}}}],["prior",{"_index":4251,"title":{},"body":{"license.html":{}}}],["private",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["problems",{"_index":3808,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":4160,"title":{},"body":{"license.html":{}}}],["processing",{"_index":2084,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["procuring",{"_index":4344,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3944,"title":{},"body":{"license.html":{}}}],["product",{"_index":4083,"title":{},"body":{"license.html":{}}}],["products",{"_index":3825,"title":{},"body":{"license.html":{}}}],["profile",{"_index":353,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["profileiconurl",{"_index":2715,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["profilemenuoutsideclicklistener",{"_index":1281,"title":{},"body":{"components/HomeComponent.html":{}}}],["profilesidebarvisible",{"_index":332,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["program",{"_index":3757,"title":{},"body":{"license.html":{}}}],["program's",{"_index":4032,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":4466,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3925,"title":{},"body":{"license.html":{}}}],["programs",{"_index":3763,"title":{},"body":{"license.html":{}}}],["progressspinnermodule",{"_index":2121,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{}}}],["prohibit",{"_index":3829,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":4017,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":4351,"title":{},"body":{"license.html":{}}}],["project",{"_index":110,"title":{"interfaces/Project.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["project'},{'name",{"_index":147,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["project.actions",{"_index":1126,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ReleasesTableComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/TagsTableComponent.html":{}}}],["project.effects",{"_index":505,"title":{},"body":{"interfaces/AppState.html":{}}}],["project.effects.ts",{"_index":2951,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:110",{"_index":3054,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:122",{"_index":3049,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:134",{"_index":2992,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:14",{"_index":3004,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:146",{"_index":3039,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:158",{"_index":2979,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:170",{"_index":3044,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:182",{"_index":2985,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:194",{"_index":3034,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:206",{"_index":2972,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:26",{"_index":3059,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:38",{"_index":3029,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:50",{"_index":3024,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:62",{"_index":3014,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:74",{"_index":3009,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:8",{"_index":2963,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:86",{"_index":3019,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.effects.ts:98",{"_index":2999,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["project.name",{"_index":2389,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["project.name.includes(this.filtervalue",{"_index":2455,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["project.platform.type",{"_index":2390,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["project.platform.version",{"_index":2392,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["project.projectid",{"_index":2384,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/SingleTeamComponent.html":{}}}],["project.reducer",{"_index":503,"title":{},"body":{"interfaces/AppState.html":{}}}],["project.selectors",{"_index":1114,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["project/project.effects",{"_index":481,"title":{},"body":{"interfaces/AppState.html":{}}}],["project/project.reducer",{"_index":483,"title":{},"body":{"interfaces/AppState.html":{}}}],["project/single",{"_index":502,"title":{},"body":{"interfaces/AppState.html":{},"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/TagsTableComponent.html":{}}}],["project?.name",{"_index":2554,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["project?.platform?.type",{"_index":2555,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["project?.platform?.version",{"_index":2556,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["project_release",{"_index":3612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projectdebugfile",{"_index":2303,"title":{"interfaces/ProjectDebugFile.html":{}},"body":{"interfaces/ProjectDebugFile.html":{}}}],["projectdebugfiledto",{"_index":2309,"title":{"interfaces/ProjectDebugFileDto.html":{}},"body":{"interfaces/ProjectDebugFileDto.html":{}}}],["projectdetailscomponent",{"_index":109,"title":{"components/ProjectDetailsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectdto",{"_index":2314,"title":{"interfaces/ProjectDto.html":{}},"body":{"interfaces/ProjectDto.html":{},"injectables/TeamService.html":{}}}],["projecteffects",{"_index":480,"title":{"injectables/ProjectEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ProjectEffects.html":{}}}],["projecthourbyhourstatdto",{"_index":2348,"title":{"interfaces/ProjectHourByHourStatDto.html":{}},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["projectid",{"_index":1129,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["projectpickercomponent",{"_index":111,"title":{"components/ProjectPickerComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectreducer",{"_index":482,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ProjectState.html":{}}}],["projectrelease",{"_index":2393,"title":{"interfaces/ProjectRelease.html":{}},"body":{"interfaces/ProjectRelease.html":{},"components/ReleasesTableComponent.html":{}}}],["projectreleasedto",{"_index":2397,"title":{"interfaces/ProjectReleaseDto.html":{}},"body":{"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["projects",{"_index":114,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projects'},{'name",{"_index":113,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projects.component.html",{"_index":2436,"title":{},"body":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["projects.component.scss",{"_index":2437,"title":{},"body":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["projects.crash_free_sessions",{"_index":2941,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects.errors",{"_index":2937,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects.latest_deploys",{"_index":2945,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects.map((project",{"_index":3173,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["projects.projects",{"_index":2484,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects.sessions",{"_index":2939,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects.transactions",{"_index":2935,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects?.filter",{"_index":2381,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["projectscomponent",{"_index":112,"title":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectsecurityclientdto",{"_index":2398,"title":{"interfaces/ProjectSecurityClientDto.html":{}},"body":{"interfaces/ProjectSecurityClientDto.html":{}}}],["projectserror",{"_index":3242,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["projectservice",{"_index":2322,"title":{},"body":{"injectables/ProjectEffects.html":{},"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["projectsstatus",{"_index":3243,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["projectstablecomponent",{"_index":116,"title":{"components/ProjectsTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectstat",{"_index":2889,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.crashfreepercentage",{"_index":2942,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.crashfreepercentagegain",{"_index":2944,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.releases",{"_index":2946,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.releases?.length",{"_index":2947,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.releases?.slice(0",{"_index":2949,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.totalerrors",{"_index":2938,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.totalsessions",{"_index":2940,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.totaltransactions",{"_index":2936,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstatdto",{"_index":2404,"title":{"interfaces/ProjectStatDto.html":{}},"body":{"interfaces/ProjectStatDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["projectstate",{"_index":463,"title":{"interfaces/ProjectState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ProjectState.html":{}}}],["prominent",{"_index":3914,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3907,"title":{},"body":{"license.html":{}}}],["promise.resolve(null).then",{"_index":2061,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["propagate",{"_index":3879,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":4270,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3890,"title":{},"body":{"license.html":{}}}],["properties",{"_index":255,"title":{"properties.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"properties.html":{}}}],["property",{"_index":276,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["proprietary",{"_index":3851,"title":{},"body":{"license.html":{}}}],["protect",{"_index":3772,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":3819,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3799,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":4187,"title":{},"body":{"license.html":{}}}],["prove",{"_index":4405,"title":{},"body":{"license.html":{}}}],["provide",{"_index":277,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["provided",{"_index":1987,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["providedin",{"_index":367,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamService.html":{}}}],["providers",{"_index":879,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["provides",{"_index":362,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["provision",{"_index":3838,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":4245,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":4392,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":4394,"title":{},"body":{"license.html":{}}}],["public",{"_index":718,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["publicity",{"_index":4213,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4189,"title":{},"body":{"license.html":{}}}],["publish",{"_index":4036,"title":{},"body":{"license.html":{}}}],["published",{"_index":4389,"title":{},"body":{"license.html":{}}}],["pull",{"_index":3702,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":3847,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":4138,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":4341,"title":{},"body":{"license.html":{}}}],["px",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["python",{"_index":3597,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["qualify",{"_index":4261,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4403,"title":{},"body":{"license.html":{}}}],["queries",{"_index":2565,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queries'},{'name",{"_index":118,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["queries.component.html",{"_index":2566,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queries.component.scss",{"_index":2567,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queriescomponent",{"_index":117,"title":{"components/QueriesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["queryparams",{"_index":2078,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["question",{"_index":2873,"title":{},"body":{"components/SidebarComponent.html":{}}}],["radiobuttonmodule",{"_index":713,"title":{},"body":{"components/ConfigComponent.html":{}}}],["react",{"_index":403,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"miscellaneous/enumerations.html":{}}}],["reactiveformsmodule",{"_index":884,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsTableComponent.html":{}}}],["read",{"_index":3583,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["readable",{"_index":4079,"title":{},"body":{"license.html":{}}}],["readily",{"_index":4328,"title":{},"body":{"license.html":{}}}],["reading",{"_index":4192,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":1546,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["ready",{"_index":3836,"title":{},"body":{"license.html":{}}}],["reason",{"_index":4339,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4097,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":4259,"title":{},"body":{"license.html":{}}}],["receive",{"_index":1947,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["received",{"_index":3787,"title":{},"body":{"license.html":{}}}],["receives",{"_index":4274,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":4346,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":4172,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":4337,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3784,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3921,"title":{},"body":{"license.html":{}}}],["redistribute",{"_index":4443,"title":{},"body":{"license.html":{}}}],["referring",{"_index":3765,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3860,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":4374,"title":{},"body":{"license.html":{}}}],["refresh_token_key",{"_index":1521,"title":{},"body":{"injectables/JwtService.html":{}}}],["refreshexpiresin",{"_index":3485,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshtoken",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshtoken(refreshtoken",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["regard",{"_index":4198,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":4055,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":3964,"title":{},"body":{"license.html":{}}}],["regexp",{"_index":1408,"title":{},"body":{"components/HomeComponent.html":{}}}],["register",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":120,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["register(dto",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.html",{"_index":2569,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":2570,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":119,"title":{"components/RegisterComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["registerform",{"_index":1423,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["registernewuser",{"_index":520,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{}}}],["registernewuserfailure",{"_index":599,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["registernewusersuccess",{"_index":521,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["registeronce",{"_index":3088,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["registerrequestdto",{"_index":623,"title":{"interfaces/RegisterRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{}}}],["registrationerror",{"_index":653,"title":{},"body":{"interfaces/AuthState.html":{}}}],["registry",{"_index":3706,"title":{},"body":{"index.html":{}}}],["reinstated",{"_index":4244,"title":{},"body":{"license.html":{}}}],["reject",{"_index":1153,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["rejectbuttonstyleclass",{"_index":1148,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["rejecticon",{"_index":1151,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["related",{"_index":709,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["relationship",{"_index":3990,"title":{},"body":{"license.html":{}}}],["release",{"_index":2948,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["release.dto",{"_index":2412,"title":{},"body":{"interfaces/ProjectStatDto.html":{},"components/ReleasesTableComponent.html":{}}}],["release.dto.ts",{"_index":1010,"title":{},"body":{"interfaces/CreateProjectReleaseDto.html":{},"interfaces/ProjectReleaseDto.html":{}}}],["release.entity",{"_index":2639,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["release.entity.ts",{"_index":2394,"title":{},"body":{"interfaces/ProjectRelease.html":{}}}],["release.releaseid",{"_index":2666,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["release.releasetimestamp",{"_index":2668,"title":{},"body":{"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["release.version",{"_index":2667,"title":{},"body":{"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["released",{"_index":3760,"title":{},"body":{"license.html":{}}}],["releaseid",{"_index":2395,"title":{},"body":{"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"components/ReleasesTableComponent.html":{}}}],["releases",{"_index":124,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectStatDto.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["releases'},{'name",{"_index":122,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["releases.component.html",{"_index":2606,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["releases.component.scss",{"_index":2607,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["releasescomponent",{"_index":121,"title":{"components/ReleasesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["releasestablecomponent",{"_index":123,"title":{"components/ReleasesTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["releasetimestamp",{"_index":2396,"title":{},"body":{"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{}}}],["relevant",{"_index":1941,"title":{},"body":{"injectables/MenuService.html":{},"license.html":{}}}],["relicensing",{"_index":4232,"title":{},"body":{"license.html":{}}}],["reload",{"_index":3668,"title":{},"body":{"index.html":{}}}],["relying",{"_index":4327,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4116,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3758,"title":{},"body":{"license.html":{}}}],["remote",{"_index":3634,"title":{},"body":{"index.html":{}}}],["removal",{"_index":1779,"title":{},"body":{"injectables/MembersEffects.html":{},"license.html":{}}}],["remove",{"_index":4199,"title":{},"body":{"license.html":{}}}],["removeenvironments",{"_index":1047,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["removeenvironments(environments",{"_index":1074,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["removeitem",{"_index":1549,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removeitem(key",{"_index":1556,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removemember",{"_index":1750,"title":{},"body":{"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{}}}],["removemember(member",{"_index":1850,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["removemember(memberid",{"_index":1796,"title":{},"body":{"injectables/MembersService.html":{}}}],["removemembererror",{"_index":1808,"title":{},"body":{"interfaces/MembersState.html":{}}}],["removememberfailure",{"_index":1787,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["removememberserror",{"_index":3244,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["removemembersstatus",{"_index":3245,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["removememberstatus",{"_index":1809,"title":{},"body":{"interfaces/MembersState.html":{}}}],["removemembersuccess",{"_index":1751,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["removeprojectdebugfiles",{"_index":2959,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectdebugfilesfailure",{"_index":3071,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectdebugfilessuccess",{"_index":3032,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectenvironments",{"_index":1125,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["removeprojectenvironmentsfailure",{"_index":3072,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectenvironmentssuccess",{"_index":3037,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectreleases",{"_index":2648,"title":{},"body":{"components/ReleasesTableComponent.html":{},"injectables/SingleProjectEffects.html":{}}}],["removeprojectreleasesfailure",{"_index":3073,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectreleasessuccess",{"_index":3042,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectserror",{"_index":3246,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["removeprojectsstatus",{"_index":3247,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["removeprojecttags",{"_index":2960,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"components/TagsTableComponent.html":{}}}],["removeprojecttagsfailure",{"_index":3074,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojecttagssuccess",{"_index":3047,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectteams",{"_index":2961,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectteamsfailure",{"_index":3075,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removeprojectteamssuccess",{"_index":3052,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["removereleases",{"_index":2615,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["removereleases(ids",{"_index":2624,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["removes",{"_index":790,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["removetags",{"_index":3294,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["removetags(tags",{"_index":3298,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["removeteammembers",{"_index":3137,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["removeteammembers(teamid",{"_index":3430,"title":{},"body":{"injectables/TeamService.html":{}}}],["removeteammembersfailure",{"_index":3232,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["removeteammemberssuccess",{"_index":3213,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["removeteamprojects",{"_index":3138,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["removeteamprojects(teamid",{"_index":3432,"title":{},"body":{"injectables/TeamService.html":{}}}],["removeteamprojectsfailure",{"_index":3233,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["removeteamprojectss",{"_index":3182,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["removeteamprojectssuccess",{"_index":3218,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["removing",{"_index":746,"title":{},"body":{"components/ConfigComponent.html":{}}}],["render",{"_index":763,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["rendered",{"_index":4419,"title":{},"body":{"license.html":{}}}],["renderer",{"_index":1282,"title":{},"body":{"components/HomeComponent.html":{}}}],["renderer2",{"_index":1289,"title":{},"body":{"components/HomeComponent.html":{}}}],["rendering",{"_index":3654,"title":{},"body":{"index.html":{}}}],["repair",{"_index":4410,"title":{},"body":{"license.html":{}}}],["replace('lara",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["replace(this.layoutservice.config.theme",{"_index":850,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replaces",{"_index":788,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replacethemelink",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["replacethemelink(href",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["replacing",{"_index":772,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replays",{"_index":2678,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replays'},{'name",{"_index":126,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["replays.component.html",{"_index":2679,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replays.component.scss",{"_index":2680,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replayscomponent",{"_index":125,"title":{"components/ReplaysComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["represent",{"_index":262,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["representing",{"_index":776,"title":{},"body":{"components/ConfigComponent.html":{}}}],["represents",{"_index":278,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["request",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["request.dto",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"injectables/TeamService.html":{}}}],["request.dto).pipe",{"_index":535,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.dto.password",{"_index":540,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.dto.ts",{"_index":703,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["request.dto.username",{"_index":538,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.password",{"_index":551,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.teamid",{"_index":3352,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["request.username",{"_index":550,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["require",{"_index":3959,"title":{},"body":{"license.html":{}}}],["required",{"_index":4162,"title":{},"body":{"license.html":{}}}],["requirement",{"_index":4049,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4120,"title":{},"body":{"license.html":{}}}],["requires",{"_index":3805,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":3874,"title":{},"body":{"license.html":{}}}],["reset",{"_index":128,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resetenvironmentsform",{"_index":1048,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["resetinviteform",{"_index":1833,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["resetpassword",{"_index":522,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(dto",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":127,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resetpassworderror",{"_index":654,"title":{},"body":{"interfaces/AuthState.html":{}}}],["resetpasswordfailure",{"_index":600,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["resetpasswordform",{"_index":2683,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordrequestdto",{"_index":627,"title":{"interfaces/ResetPasswordRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["resetpasswordsuccess",{"_index":581,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["resetprojectsform",{"_index":2504,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["resetreleasesform",{"_index":2616,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["resets",{"_index":1315,"title":{},"body":{"components/HomeComponent.html":{}}}],["resetsingleteamstate",{"_index":3139,"title":{},"body":{"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{}}}],["resetsource",{"_index":1932,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["resettagsform",{"_index":3295,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["resolved",{"_index":4145,"title":{},"body":{"license.html":{}}}],["resources",{"_index":2705,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources'},{'name",{"_index":130,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resources.component.html",{"_index":2706,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources.component.scss",{"_index":2707,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resourcescomponent",{"_index":129,"title":{"components/ResourcesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resourcetype",{"_index":1121,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"interfaces/Role.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["respect",{"_index":3781,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":3779,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":4275,"title":{},"body":{"license.html":{}}}],["restoreconfig",{"_index":447,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["restorescale",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["restoretheme",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["restrict",{"_index":3846,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":4018,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":4230,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":4228,"title":{},"body":{"license.html":{}}}],["result",{"_index":988,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"injectables/PlatformEffects.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleEffects.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"license.html":{}}}],["result.hourbyhour.map",{"_index":2927,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["result.hourbyhour.map((hourlystat",{"_index":2919,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["resulting",{"_index":3875,"title":{},"body":{"license.html":{}}}],["results",{"_index":168,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retains",{"_index":4176,"title":{},"body":{"license.html":{}}}],["return",{"_index":427,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["returning",{"_index":424,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["returns",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["reviewing",{"_index":4429,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4380,"title":{},"body":{"license.html":{}}}],["right",{"_index":4170,"title":{},"body":{"license.html":{}}}],["rights",{"_index":3773,"title":{},"body":{"license.html":{}}}],["ripple",{"_index":259,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ripple(_val",{"_index":848,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ripplemodule",{"_index":23,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TopbarComponent.html":{}}}],["risk",{"_index":4402,"title":{},"body":{"license.html":{}}}],["role",{"_index":1416,"title":{"interfaces/Role.html":{}},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"components/MembersTableComponent.html":{},"interfaces/Role.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["role.actions",{"_index":2727,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["role/role.effects",{"_index":485,"title":{},"body":{"interfaces/AppState.html":{}}}],["role/role.reducer",{"_index":487,"title":{},"body":{"interfaces/AppState.html":{}}}],["roleeffects",{"_index":484,"title":{"injectables/RoleEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/RoleEffects.html":{}}}],["roleid",{"_index":1484,"title":{},"body":{"interfaces/InvitationRequestDto.html":{},"components/MembersTableComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["rolereducer",{"_index":486,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/RoleState.html":{}}}],["roles",{"_index":1832,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["roleservice",{"_index":2718,"title":{"injectables/RoleService.html":{}},"body":{"injectables/RoleEffects.html":{},"injectables/RoleService.html":{}}}],["rolestate",{"_index":464,"title":{"interfaces/RoleState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/RoleState.html":{}}}],["rom",{"_index":4179,"title":{},"body":{"license.html":{}}}],["root",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamService.html":{}}}],["root'},{'name",{"_index":54,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["route",{"_index":1290,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["route.children",{"_index":1383,"title":{},"body":{"components/HomeComponent.html":{}}}],["routeevent",{"_index":1926,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{}}}],["router",{"_index":904,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["routerlink",{"_index":1376,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodule",{"_index":22,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["routeroutlet",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["routeurl",{"_index":1386,"title":{},"body":{"components/HomeComponent.html":{}}}],["routing",{"_index":1984,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["royalty",{"_index":4290,"title":{},"body":{"license.html":{}}}],["ruby",{"_index":3599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rules",{"_index":4186,"title":{},"body":{"license.html":{}}}],["run",{"_index":3661,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":3690,"title":{},"body":{"index.html":{},"license.html":{}}}],["runs",{"_index":3942,"title":{},"body":{"license.html":{}}}],["rust",{"_index":3598,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rxjs",{"_index":322,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2049,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["safest",{"_index":4445,"title":{},"body":{"license.html":{}}}],["sake",{"_index":3804,"title":{},"body":{"license.html":{}}}],["sale",{"_index":4300,"title":{},"body":{"license.html":{}}}],["same",{"_index":3785,"title":{},"body":{"license.html":{}}}],["satisfy",{"_index":4119,"title":{},"body":{"license.html":{}}}],["saveconfig",{"_index":454,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["saver",{"_index":3559,"title":{},"body":{"dependencies.html":{}}}],["saverefreshtoken",{"_index":1509,"title":{},"body":{"injectables/JwtService.html":{}}}],["saverefreshtoken(token",{"_index":1516,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken",{"_index":1510,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":1518,"title":{},"body":{"injectables/JwtService.html":{}}}],["saying",{"_index":4113,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":3669,"title":{},"body":{"index.html":{}}}],["scale",{"_index":261,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["scale(_val",{"_index":841,"title":{},"body":{"components/ConfigComponent.html":{}}}],["scales",{"_index":720,"title":{},"body":{"components/ConfigComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["scheme",{"_index":281,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["school",{"_index":4467,"title":{},"body":{"license.html":{}}}],["scope",{"_index":4350,"title":{},"body":{"license.html":{}}}],["screen",{"_index":132,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["screenloadscomponent",{"_index":131,"title":{"components/ScreenLoadsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["scripts",{"_index":3948,"title":{},"body":{"license.html":{}}}],["scroll",{"_index":1326,"title":{},"body":{"components/HomeComponent.html":{}}}],["scroll'.split",{"_index":1410,"title":{},"body":{"components/HomeComponent.html":{}}}],["scrolling",{"_index":1297,"title":{},"body":{"components/HomeComponent.html":{}}}],["sdks",{"_index":2745,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdks'},{'name",{"_index":135,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sdks.component.html",{"_index":2746,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdks.component.scss",{"_index":2747,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdkscomponent",{"_index":134,"title":{"components/SdksComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["secondarily",{"_index":3882,"title":{},"body":{"license.html":{}}}],["secret",{"_index":2684,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["section",{"_index":3995,"title":{},"body":{"license.html":{}}}],["sections",{"_index":4076,"title":{},"body":{"license.html":{}}}],["securepasswordregex",{"_index":1447,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["security",{"_index":2399,"title":{},"body":{"interfaces/ProjectSecurityClientDto.html":{},"components/SecurityComponent.html":{}}}],["security'},{'name",{"_index":137,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["security.component.html",{"_index":2749,"title":{},"body":{"components/SecurityComponent.html":{}}}],["security.component.scss",{"_index":2750,"title":{},"body":{"components/SecurityComponent.html":{}}}],["securitycomponent",{"_index":136,"title":{"components/SecurityComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["securityheader",{"_index":2402,"title":{},"body":{"interfaces/ProjectSecurityClientDto.html":{}}}],["securitytoken",{"_index":2403,"title":{},"body":{"interfaces/ProjectSecurityClientDto.html":{}}}],["see",{"_index":3715,"title":{},"body":{"index.html":{},"license.html":{}}}],["segment.path",{"_index":1389,"title":{},"body":{"components/HomeComponent.html":{}}}],["select(issuccess",{"_index":1242,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectacceptinvitationerror",{"_index":1453,"title":{},"body":{"components/InvitationComponent.html":{}}}],["select(selectactivemembers",{"_index":1688,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["select(selectaddprojectenvironmentsstatus",{"_index":1160,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["select(selectaddprojectreleasestatus",{"_index":2655,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["select(selectaddprojecttagsstatus",{"_index":3324,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["select(selectallprojects",{"_index":2377,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["select(selectauthorizationerror",{"_index":1600,"title":{},"body":{"components/LoginComponent.html":{}}}],["select(selectcreateprojectstatus",{"_index":2537,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["select(selectcurrentorganization",{"_index":964,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["select(selectcurrentuser",{"_index":1234,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectforgotpassworderror",{"_index":1236,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["select(selectinvitationsendstatus",{"_index":1874,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["select(selectinvitedmembers",{"_index":1727,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectmyprojects",{"_index":2462,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["select(selectmyteams",{"_index":2464,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["select(selectorganizationerror",{"_index":969,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["select(selectorganizationmembers",{"_index":1718,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectorganizationteams",{"_index":3394,"title":{},"body":{"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["select(selectownerasarray",{"_index":1731,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectregistrationerror",{"_index":2585,"title":{},"body":{"components/RegisterComponent.html":{}}}],["select(selectremovememberstatus",{"_index":1883,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["select(selectremoveprojectenvironmentsstatus",{"_index":1170,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["select(selectremoveprojectreleasesstatus",{"_index":2658,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["select(selectremoveprojecttagsstatus",{"_index":3327,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["select(selectresetpassworderror",{"_index":2691,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["select(selectsingleprojectenvironments",{"_index":1086,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["select(selectsingleprojectreleases",{"_index":2635,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["select(selectsingleprojecttags",{"_index":3309,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["select(selectsingleteammembers",{"_index":3118,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["select(selectsingleteamprojects",{"_index":3124,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["select(selectupdateorganizationpicturestatus",{"_index":2183,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["select(selectupdateteamstatus",{"_index":3170,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["selectacceptinvitationerror",{"_index":1446,"title":{},"body":{"components/InvitationComponent.html":{}}}],["selectactivemembers",{"_index":1673,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["selectaddprojectenvironmentsstatus",{"_index":1110,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["selectaddprojectreleasestatus",{"_index":2643,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["selectaddprojecttagsstatus",{"_index":3315,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["selectallprojects",{"_index":2374,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["selectauthorizationerror",{"_index":1599,"title":{},"body":{"components/LoginComponent.html":{}}}],["selectcreateprojectstatus",{"_index":2531,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["selectcurrentorganization",{"_index":948,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["selectcurrentuser",{"_index":1226,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["selected",{"_index":296,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["selected.projectid",{"_index":2383,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["selected.teamid",{"_index":3400,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["selected.userid",{"_index":1696,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["selectedenvironments",{"_index":1044,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["selectedlanguage",{"_index":3492,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectedlanguage.label",{"_index":3524,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectedmembers",{"_index":1640,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["selectedprojects",{"_index":2365,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["selectedreleases",{"_index":2613,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["selectedtags",{"_index":3291,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["selectedteams",{"_index":3379,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["selectforgotpassworderror",{"_index":1227,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["selecthaspermission",{"_index":1119,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["selecthaspermission(resourcetype.organization",{"_index":2149,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["selecthaspermission(resourcetype.project",{"_index":1091,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["selecthaspermission(resourcetype.team",{"_index":3107,"title":{},"body":{"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["selecthaspermission(resourcetype.user",{"_index":1721,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectinvitationsendstatus",{"_index":1865,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectinvitedmembers",{"_index":1736,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectmyprojects",{"_index":2468,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["selectmyteams",{"_index":2471,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["selectorganizationerror",{"_index":949,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["selectorganizationmembers",{"_index":1735,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectorganizationteams",{"_index":3392,"title":{},"body":{"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["selectownerasarray",{"_index":1737,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectplatforms",{"_index":2528,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["selectregistrationerror",{"_index":2583,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selectremovememberstatus",{"_index":1866,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectremoveprojectenvironmentsstatus",{"_index":1111,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["selectremoveprojectreleasesstatus",{"_index":2644,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["selectremoveprojecttagsstatus",{"_index":3316,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["selectresetpassworderror",{"_index":2690,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["selectroles",{"_index":1869,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectsingleprojectenvironments",{"_index":1112,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["selectsingleprojectreleases",{"_index":2645,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["selectsingleprojecttags",{"_index":3317,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["selectsingleteam",{"_index":3144,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["selectsingleteammembers",{"_index":3145,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["selectsingleteamprojects",{"_index":3146,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["selectupdateorganizationpicturestatus",{"_index":2170,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["selectupdateteamstatus",{"_index":3147,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["sell",{"_index":4316,"title":{},"body":{"license.html":{}}}],["selling",{"_index":4299,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":3862,"title":{},"body":{"license.html":{}}}],["send",{"_index":1498,"title":{},"body":{"injectables/InvitationService.html":{}}}],["sendinvite",{"_index":1834,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["sends",{"_index":1936,"title":{},"body":{"injectables/MenuService.html":{}}}],["separable",{"_index":4128,"title":{},"body":{"license.html":{}}}],["separate",{"_index":4061,"title":{},"body":{"license.html":{}}}],["separated",{"_index":2002,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["separately",{"_index":4059,"title":{},"body":{"license.html":{}}}],["serve",{"_index":3663,"title":{},"body":{"index.html":{}}}],["served",{"_index":3720,"title":{},"body":{"index.html":{}}}],["server",{"_index":1913,"title":{},"body":{"injectables/MemoryStorage.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["serves",{"_index":3935,"title":{},"body":{"license.html":{}}}],["service",{"_index":733,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["services",{"_index":1946,"title":{},"body":{"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["services/api/auth.api.service",{"_index":592,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["services/api/invitation.api.service",{"_index":602,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{}}}],["services/api/members.api.service",{"_index":1789,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["services/api/organization.api.service",{"_index":2223,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["services/api/platform.api.service",{"_index":2286,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["services/api/project.api.service",{"_index":2341,"title":{},"body":{"injectables/ProjectEffects.html":{},"injectables/SingleProjectEffects.html":{}}}],["services/api/role.api.service",{"_index":2725,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["services/api/team.api.service",{"_index":3226,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["services/token",{"_index":593,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["servicing",{"_index":4409,"title":{},"body":{"license.html":{}}}],["sessions",{"_index":2755,"title":{},"body":{"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["sessions'},{'name",{"_index":139,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sessions.component.html",{"_index":2756,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.component.scss",{"_index":2757,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessionscomponent",{"_index":138,"title":{"components/SessionsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sessionstorage",{"_index":2751,"title":{"injectables/SessionStorage.html":{}},"body":{"injectables/SessionStorage.html":{}}}],["set",{"_index":303,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["setcurrentuser",{"_index":665,"title":{},"body":{"interfaces/AuthState.html":{}}}],["setinputstyle(_val",{"_index":827,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setitem",{"_index":1550,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setitem(key",{"_index":1558,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setmenumode(_val",{"_index":823,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setripple(_val",{"_index":831,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sets",{"_index":420,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["setscale(_val",{"_index":819,"title":{},"body":{"components/ConfigComponent.html":{}}}],["settings",{"_index":711,"title":{},"body":{"components/ConfigComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SettingsComponent.html":{}}}],["settings'},{'name",{"_index":115,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["settings.component.html",{"_index":2759,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":2760,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingscomponent",{"_index":140,"title":{"components/SettingsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["settoken",{"_index":666,"title":{},"body":{"interfaces/AuthState.html":{}}}],["setupchartdata",{"_index":2892,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["setupchartdata(result",{"_index":2901,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["setupsidenavitems",{"_index":2766,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setupsidenavitems(sidenav",{"_index":2786,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setvisible(_val",{"_index":814,"title":{},"body":{"components/ConfigComponent.html":{}}}],["several",{"_index":254,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["severity",{"_index":976,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["shall",{"_index":4001,"title":{},"body":{"license.html":{}}}],["shape",{"_index":327,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["share",{"_index":3752,"title":{},"body":{"license.html":{}}}],["shared",{"_index":3954,"title":{},"body":{"license.html":{}}}],["shared/components/access",{"_index":1738,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["shared/components/member",{"_index":3149,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["shared/components/members",{"_index":1739,"title":{},"body":{"components/MembersComponent.html":{},"components/SingleTeamComponent.html":{}}}],["shared/components/not",{"_index":3151,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["shared/components/project",{"_index":3153,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["shared/components/projects",{"_index":2492,"title":{},"body":{"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{}}}],["shared/components/teams",{"_index":3480,"title":{},"body":{"components/TeamsComponent.html":{}}}],["shield",{"_index":2846,"title":{},"body":{"components/SidebarComponent.html":{}}}],["short",{"_index":4456,"title":{},"body":{"license.html":{}}}],["show",{"_index":3788,"title":{},"body":{"license.html":{}}}],["showadddialog",{"_index":1049,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["showconfigsidebar",{"_index":356,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showdeleteconfirmation",{"_index":1050,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["showdeleteconfirmation(environment",{"_index":1078,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["showdeleteconfirmation(releaseid",{"_index":2628,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["showdeleteconfirmation(tag",{"_index":3301,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["showdeleteselectionconfirmation",{"_index":1051,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["showdeleteselectionconfirmation(event",{"_index":1081,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["showdeleteteamconfirmation",{"_index":3091,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["showdeleteteamconfirmation(event",{"_index":3102,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["showinvitedialog",{"_index":1835,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["shown",{"_index":350,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showpickerdialog",{"_index":1636,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["showprofilesidebar",{"_index":351,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showremovememberconfirmation",{"_index":1836,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["showremovememberconfirmation(member",{"_index":1855,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["shows",{"_index":784,"title":{},"body":{"components/ConfigComponent.html":{}}}],["side",{"_index":2785,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["sidebar",{"_index":354,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":142,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sidebar.component.html",{"_index":2763,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2762,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":141,"title":{"components/SidebarComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sidebarmodule",{"_index":712,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sidebars",{"_index":339,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sidenav",{"_index":1393,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["sidenav.devices",{"_index":2810,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.general",{"_index":2796,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help",{"_index":2865,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_documentation",{"_index":2866,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_guides",{"_index":2872,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_sdks",{"_index":2869,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_support",{"_index":2875,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.home",{"_index":2797,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.issues",{"_index":2804,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.logs",{"_index":2801,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.messages",{"_index":2807,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.performance",{"_index":2815,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.projects",{"_index":2799,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.queries",{"_index":2818,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.releases",{"_index":2832,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.replays",{"_index":2829,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.resources",{"_index":2827,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.screen_loads",{"_index":2824,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.sessions",{"_index":2812,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings",{"_index":2838,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account",{"_index":2840,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_close",{"_index":2849,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_details",{"_index":2842,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_notifications",{"_index":2847,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_security",{"_index":2844,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_alerts",{"_index":2862,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_members",{"_index":2860,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_organization",{"_index":2852,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_projects",{"_index":2855,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_teams",{"_index":2857,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.stats",{"_index":2835,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.vitals",{"_index":2821,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sign",{"_index":4468,"title":{},"body":{"license.html":{}}}],["significant",{"_index":4158,"title":{},"body":{"license.html":{}}}],["signout",{"_index":523,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/TopbarComponent.html":{}}}],["similar",{"_index":4016,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":4370,"title":{},"body":{"license.html":{}}}],["single",{"_index":144,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["singleprojectcardcomponent",{"_index":143,"title":{"components/SingleProjectCardComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["singleprojectcomponent",{"_index":146,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["singleprojecteffects",{"_index":504,"title":{"injectables/SingleProjectEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SingleProjectEffects.html":{}}}],["singleprojectreducer",{"_index":501,"title":{},"body":{"interfaces/AppState.html":{}}}],["singleprojectstate",{"_index":465,"title":{},"body":{"interfaces/AppState.html":{}}}],["singleteam",{"_index":3248,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["singleteamcomponent",{"_index":148,"title":{"components/SingleTeamComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["singleteameffects",{"_index":496,"title":{"injectables/SingleTeamEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SingleTeamEffects.html":{}}}],["singleteamerror",{"_index":3249,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["singleteamreducer",{"_index":499,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/SingleTeamState.html":{}}}],["singleteamstate",{"_index":466,"title":{"interfaces/SingleTeamState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/SingleTeamState.html":{}}}],["singleteamstatus",{"_index":3250,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["sitemap",{"_index":2858,"title":{},"body":{"components/SidebarComponent.html":{}}}],["size",{"_index":312,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sizes",{"_index":811,"title":{},"body":{"components/ConfigComponent.html":{}}}],["skeletonmodule",{"_index":2884,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["slug",{"_index":911,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{}}}],["slug.tolowercase().replaceall",{"_index":989,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["slug/taken?slug",{"_index":2245,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["slugchecksubscription",{"_index":893,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["sluginput",{"_index":894,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["snippet",{"_index":1942,"title":{},"body":{"injectables/MenuService.html":{}}}],["software",{"_index":3732,"title":{},"body":{"license.html":{}}}],["sold",{"_index":4139,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3981,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3992,"title":{},"body":{"license.html":{}}}],["solution",{"_index":3637,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"index.html":{},"license.html":{}}}],["spare",{"_index":4093,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3764,"title":{},"body":{"license.html":{}}}],["special",{"_index":3849,"title":{},"body":{"license.html":{}}}],["specific",{"_index":3940,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":3958,"title":{},"body":{"license.html":{}}}],["specified",{"_index":768,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["specifies",{"_index":4386,"title":{},"body":{"license.html":{}}}],["specify",{"_index":4390,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":4381,"title":{},"body":{"license.html":{}}}],["spring",{"_index":3591,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.config.ts",{"_index":3620,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.selectors.ts",{"_index":3618,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../date.interceptor.ts",{"_index":3616,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../debug",{"_index":3574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../permission.enum.ts",{"_index":3576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../platform",{"_index":3577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../resource",{"_index":3578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state",{"_index":3579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":210,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":3629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/domain/dto/file.dto.ts",{"_index":1183,"title":{},"body":{"interfaces/FileDto.html":{}}}],["src/app/core/domain/dto/invitation.dto.ts",{"_index":1480,"title":{},"body":{"interfaces/InvitationDto.html":{}}}],["src/app/core/domain/dto/members.dto.ts",{"_index":1744,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["src/app/core/domain/dto/organization.dto.ts",{"_index":2203,"title":{},"body":{"interfaces/OrganizationDto.html":{}}}],["src/app/core/domain/dto/platform.dto.ts",{"_index":2273,"title":{},"body":{"interfaces/PlatformDto.html":{}}}],["src/app/core/domain/dto/project",{"_index":2310,"title":{},"body":{"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["src/app/core/domain/dto/project.dto.ts",{"_index":2315,"title":{},"body":{"interfaces/ProjectDto.html":{}}}],["src/app/core/domain/dto/requests/authenticate",{"_index":702,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{}}}],["src/app/core/domain/dto/requests/create",{"_index":1003,"title":{},"body":{"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{}}}],["src/app/core/domain/dto/requests/forgot",{"_index":1263,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{}}}],["src/app/core/domain/dto/requests/invitation",{"_index":1483,"title":{},"body":{"interfaces/InvitationRequestDto.html":{}}}],["src/app/core/domain/dto/requests/register",{"_index":2604,"title":{},"body":{"interfaces/RegisterRequestDto.html":{}}}],["src/app/core/domain/dto/requests/reset",{"_index":2703,"title":{},"body":{"interfaces/ResetPasswordRequestDto.html":{}}}],["src/app/core/domain/dto/team.dto.ts",{"_index":3339,"title":{},"body":{"interfaces/TeamDto.html":{}}}],["src/app/core/domain/dto/token.dto.ts",{"_index":3486,"title":{},"body":{"interfaces/TokenDto.html":{}}}],["src/app/core/domain/dto/user.dto.ts",{"_index":3526,"title":{},"body":{"interfaces/UserDto.html":{}}}],["src/app/core/domain/models/enums/debug",{"_index":3581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/permission.enum.ts",{"_index":3582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/platform",{"_index":3585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/resource",{"_index":3604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/state",{"_index":3613,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/invitation.entity.ts",{"_index":1414,"title":{},"body":{"interfaces/Invitation.html":{}}}],["src/app/core/domain/models/menu",{"_index":1923,"title":{},"body":{"interfaces/MenuChangeEvent.html":{}}}],["src/app/core/domain/models/organization.entity.ts",{"_index":2111,"title":{},"body":{"interfaces/Organization.html":{}}}],["src/app/core/domain/models/platform.entity.ts",{"_index":2268,"title":{},"body":{"interfaces/Platform.html":{}}}],["src/app/core/domain/models/project",{"_index":2304,"title":{},"body":{"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectRelease.html":{}}}],["src/app/core/domain/models/project.entity.ts",{"_index":2301,"title":{},"body":{"interfaces/Project.html":{}}}],["src/app/core/domain/models/team.entity.ts",{"_index":3337,"title":{},"body":{"interfaces/Team.html":{}}}],["src/app/core/domain/models/token.entity.ts",{"_index":3482,"title":{},"body":{"interfaces/Token.html":{}}}],["src/app/core/domain/models/user.entity.ts",{"_index":2708,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["src/app/core/interceptors/date.interceptor.ts",{"_index":3622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/services/api/auth.api.service.ts",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:14",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:17",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:25",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:33",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:37",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:45",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:53",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:61",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts",{"_index":1485,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:12",{"_index":1488,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:15",{"_index":1494,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:23",{"_index":1492,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:30",{"_index":1490,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/members.api.service.ts",{"_index":1790,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:11",{"_index":1793,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:14",{"_index":1795,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:18",{"_index":1794,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:23",{"_index":1797,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/organization.api.service.ts",{"_index":2230,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:12",{"_index":2232,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:15",{"_index":2234,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:25",{"_index":2235,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:29",{"_index":2236,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:36",{"_index":2238,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/platform.api.service.ts",{"_index":2289,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/platform.api.service.ts:10",{"_index":2291,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/platform.api.service.ts:13",{"_index":2292,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/role.api.service.ts",{"_index":2728,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/role.api.service.ts:10",{"_index":2730,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/role.api.service.ts:13",{"_index":2731,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/team.api.service.ts",{"_index":3405,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:15",{"_index":3412,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:18",{"_index":3422,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:22",{"_index":3421,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:26",{"_index":3424,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:30",{"_index":3426,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:37",{"_index":3428,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:44",{"_index":3429,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:51",{"_index":3418,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:55",{"_index":3420,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:59",{"_index":3435,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:67",{"_index":3414,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:78",{"_index":3431,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:85",{"_index":3416,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:96",{"_index":3433,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/layout.service.ts",{"_index":247,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["src/app/core/services/layout.service.ts:100",{"_index":1539,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:115",{"_index":1544,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:130",{"_index":1540,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:139",{"_index":1542,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:145",{"_index":1541,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:151",{"_index":1543,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:156",{"_index":1534,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:180",{"_index":1538,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:190",{"_index":1537,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:199",{"_index":1532,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:211",{"_index":1530,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:220",{"_index":1531,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:227",{"_index":1533,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:232",{"_index":1535,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:240",{"_index":1536,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:92",{"_index":1529,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/local",{"_index":1545,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["src/app/core/services/memory",{"_index":1904,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["src/app/core/services/menu.service.ts",{"_index":1927,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:16",{"_index":1945,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:22",{"_index":1951,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:27",{"_index":1950,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:31",{"_index":1953,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:40",{"_index":1935,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:47",{"_index":1943,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/session",{"_index":2752,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["src/app/core/services/token",{"_index":1504,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/state/app.state.ts",{"_index":458,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/core/state/auth/auth.effects.ts",{"_index":513,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:111",{"_index":588,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:122",{"_index":576,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:139",{"_index":578,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:146",{"_index":544,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:163",{"_index":547,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:30",{"_index":529,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:38",{"_index":572,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:50",{"_index":558,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:71",{"_index":569,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:85",{"_index":583,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:99",{"_index":564,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.reducer.ts",{"_index":648,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/core/state/auth/auth.selectors.ts",{"_index":3625,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/state/members/members.effects.ts",{"_index":1749,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:22",{"_index":1754,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:29",{"_index":1771,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:41",{"_index":1766,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:53",{"_index":1760,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:65",{"_index":1775,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:77",{"_index":1780,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.reducer.ts",{"_index":1802,"title":{},"body":{"interfaces/MembersState.html":{}}}],["src/app/core/state/organization/organization.effects.ts",{"_index":2204,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:14",{"_index":2216,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:26",{"_index":2212,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:38",{"_index":2222,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:8",{"_index":2206,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.reducer.ts",{"_index":2250,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["src/app/core/state/platform/platform.effects.ts",{"_index":2275,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.effects.ts:12",{"_index":2279,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.effects.ts:18",{"_index":2285,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.reducer.ts",{"_index":2295,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["src/app/core/state/project/project.effects.ts",{"_index":2317,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:14",{"_index":2335,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:26",{"_index":2340,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:39",{"_index":2329,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:8",{"_index":2323,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.reducer.ts",{"_index":2413,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["src/app/core/state/role/role.effects.ts",{"_index":2716,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.effects.ts:14",{"_index":2724,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.effects.ts:8",{"_index":2719,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.reducer.ts",{"_index":2733,"title":{},"body":{"interfaces/RoleState.html":{}}}],["src/app/core/state/single",{"_index":2950,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["src/app/core/state/team/team.effects.ts",{"_index":3340,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:14",{"_index":3364,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:26",{"_index":3359,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:38",{"_index":3348,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:50",{"_index":3354,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:8",{"_index":3343,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.reducer.ts",{"_index":3445,"title":{},"body":{"interfaces/TeamState.html":{}}}],["src/app/features/auth/auth.component.ts",{"_index":508,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/features/auth/components/forgot",{"_index":1195,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts",{"_index":1418,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:147",{"_index":1427,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:158",{"_index":1428,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:164",{"_index":1430,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:177",{"_index":1426,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:60",{"_index":1441,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:62",{"_index":1425,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:74",{"_index":1432,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:75",{"_index":1433,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:77",{"_index":1439,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:95",{"_index":1442,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:96",{"_index":1431,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:97",{"_index":1440,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:99",{"_index":1429,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts",{"_index":1577,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:127",{"_index":1588,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:136",{"_index":1590,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:142",{"_index":1586,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:146",{"_index":1587,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:150",{"_index":1585,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:65",{"_index":1584,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:76",{"_index":1595,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:81",{"_index":1593,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:82",{"_index":1594,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:84",{"_index":1597,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:85",{"_index":1592,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:86",{"_index":1596,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:88",{"_index":1589,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:99",{"_index":1591,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts",{"_index":2568,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:100",{"_index":2575,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:131",{"_index":2573,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:142",{"_index":2574,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:148",{"_index":2576,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:159",{"_index":2572,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:67",{"_index":2571,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:78",{"_index":2578,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:79",{"_index":2579,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:81",{"_index":2580,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:96",{"_index":2582,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:97",{"_index":2577,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:98",{"_index":2581,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/reset",{"_index":2681,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["src/app/features/create",{"_index":875,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["src/app/features/devices/devices.component.ts",{"_index":1019,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/help/documentation/documentation.component.ts",{"_index":1023,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/features/help/guides/guides.component.ts",{"_index":1265,"title":{},"body":{"components/GuidesComponent.html":{}}}],["src/app/features/help/sdks/sdks.component.ts",{"_index":2744,"title":{},"body":{"components/SdksComponent.html":{}}}],["src/app/features/help/support/support.component.ts",{"_index":3283,"title":{},"body":{"components/SupportComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts",{"_index":707,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:101",{"_index":832,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:109",{"_index":783,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:121",{"_index":770,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:143",{"_index":787,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:163",{"_index":777,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:171",{"_index":780,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:179",{"_index":766,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:37",{"_index":754,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:43",{"_index":730,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:57",{"_index":802,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:58",{"_index":803,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:62",{"_index":813,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:66",{"_index":815,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:70",{"_index":818,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:74",{"_index":820,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:79",{"_index":822,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:83",{"_index":824,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:88",{"_index":826,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:92",{"_index":828,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:97",{"_index":830,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/footer/footer.component.ts",{"_index":1190,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts",{"_index":1958,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:103",{"_index":2037,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:111",{"_index":1975,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:129",{"_index":2036,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:131",{"_index":2041,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:171",{"_index":2030,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:185",{"_index":2031,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:209",{"_index":2014,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:229",{"_index":2043,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:234",{"_index":2012,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:241",{"_index":2026,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:62",{"_index":1996,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:69",{"_index":1988,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:74",{"_index":2007,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:83",{"_index":2000,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:89",{"_index":2032,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:96",{"_index":2040,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts",{"_index":2761,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:19",{"_index":2767,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:36",{"_index":2789,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:37",{"_index":2788,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:44",{"_index":2783,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:54",{"_index":2787,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts",{"_index":3487,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:35",{"_index":3513,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:36",{"_index":3517,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:37",{"_index":3498,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:40",{"_index":3510,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:48",{"_index":3504,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:50",{"_index":3509,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:52",{"_index":3515,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:54",{"_index":3514,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:55",{"_index":3518,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:57",{"_index":3503,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:62",{"_index":3502,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:67",{"_index":3500,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:71",{"_index":3501,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":1269,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:120",{"_index":1332,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:122",{"_index":1334,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:123",{"_index":1335,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:125",{"_index":1337,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:127",{"_index":1340,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:129",{"_index":1333,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:130",{"_index":1339,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:131",{"_index":1338,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:133",{"_index":1323,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:140",{"_index":1321,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:155",{"_index":1322,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:177",{"_index":1301,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:218",{"_index":1313,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:232",{"_index":1317,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:243",{"_index":1293,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:254",{"_index":1324,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:268",{"_index":1343,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":1329,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:44",{"_index":1292,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:49",{"_index":1336,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:50",{"_index":1341,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/issues/issues.component.ts",{"_index":1500,"title":{},"body":{"components/IssuesComponent.html":{}}}],["src/app/features/logs/logs.component.ts",{"_index":1616,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/features/messages/messages.component.ts",{"_index":2096,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/features/peformance/queries/queries.component.ts",{"_index":2564,"title":{},"body":{"components/QueriesComponent.html":{}}}],["src/app/features/peformance/resources/resources.component.ts",{"_index":2704,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/features/peformance/screen",{"_index":2738,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["src/app/features/peformance/vitals/vitals.component.ts",{"_index":3529,"title":{},"body":{"components/VitalsComponent.html":{}}}],["src/app/features/project",{"_index":2311,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["src/app/features/projects/components/single",{"_index":2878,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["src/app/features/projects/projects.component.ts",{"_index":2433,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:46",{"_index":2445,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:52",{"_index":2465,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:55",{"_index":2461,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:57",{"_index":2457,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:59",{"_index":2463,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:63",{"_index":2456,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:71",{"_index":2459,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:73",{"_index":2450,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:78",{"_index":2448,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:93",{"_index":2449,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/releases/releases.component.ts",{"_index":2605,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["src/app/features/replays/replays.component.ts",{"_index":2677,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts",{"_index":2754,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/settings/account/close/close.component.ts",{"_index":704,"title":{},"body":{"components/CloseComponent.html":{}}}],["src/app/features/settings/account/details/details.component.ts",{"_index":1015,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/settings/account/notifications/notifications.component.ts",{"_index":2108,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/features/settings/account/security/security.component.ts",{"_index":2748,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/features/settings/alerts/alerts.component.ts",{"_index":170,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/features/settings/members/members.component.ts",{"_index":1707,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:38",{"_index":1716,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:41",{"_index":1726,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:44",{"_index":1725,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:47",{"_index":1723,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:50",{"_index":1730,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:51",{"_index":1720,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:54",{"_index":1728,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:57",{"_index":1732,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:61",{"_index":1717,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts",{"_index":2116,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:110",{"_index":2137,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:114",{"_index":2133,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:118",{"_index":2139,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:123",{"_index":2135,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:135",{"_index":2138,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:148",{"_index":2144,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:182",{"_index":2141,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:186",{"_index":2132,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:75",{"_index":2161,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:76",{"_index":2131,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:85",{"_index":2157,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:86",{"_index":2152,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:89",{"_index":2150,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:92",{"_index":2153,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:93",{"_index":2146,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:94",{"_index":2148,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:95",{"_index":2155,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:97",{"_index":2160,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:99",{"_index":2136,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/projects/projects.component.ts",{"_index":2485,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:32",{"_index":2486,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:35",{"_index":2489,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:38",{"_index":2488,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:42",{"_index":2490,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:43",{"_index":2491,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:47",{"_index":2487,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":2758,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/features/settings/teams/components/single",{"_index":3077,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts",{"_index":3468,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:37",{"_index":3471,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:40",{"_index":3475,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:43",{"_index":3474,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:46",{"_index":3473,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:50",{"_index":3477,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:51",{"_index":3476,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:52",{"_index":3479,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:55",{"_index":3478,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:59",{"_index":3472,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/stats/stats.component.ts",{"_index":3279,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/shared/components/access",{"_index":9,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["src/app/shared/components/environments",{"_index":1027,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["src/app/shared/components/member",{"_index":1620,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["src/app/shared/components/members",{"_index":1826,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["src/app/shared/components/not",{"_index":2100,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["src/app/shared/components/project",{"_index":2359,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["src/app/shared/components/projects",{"_index":2494,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["src/app/shared/components/releases",{"_index":2608,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["src/app/shared/components/tags",{"_index":3287,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["src/app/shared/components/team",{"_index":3373,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["ssr",{"_index":3653,"title":{},"body":{"index.html":{}}}],["stand",{"_index":3835,"title":{},"body":{"license.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{}}}],["standard",{"_index":3722,"title":{},"body":{"index.html":{},"license.html":{}}}],["standards",{"_index":3922,"title":{},"body":{"license.html":{}}}],["start",{"_index":4446,"title":{},"body":{"license.html":{}}}],["startdate",{"_index":2898,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["started",{"_index":3632,"title":{"index.html":{},"license.html":{}},"body":{}}],["startinterval",{"_index":2357,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["starts",{"_index":4457,"title":{},"body":{"license.html":{}}}],["stat.dto",{"_index":2411,"title":{},"body":{"interfaces/ProjectStatDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["stat.dto.ts",{"_index":2350,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["state",{"_index":328,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"index.html":{},"license.html":{}}}],["state.allprojects",{"_index":2431,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["state.members?.invitations",{"_index":1817,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.members?.owner",{"_index":1816,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.members?.users",{"_index":1818,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.organization",{"_index":2263,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["state.organizationteams",{"_index":3462,"title":{},"body":{"interfaces/TeamState.html":{}}}],["state.organizationteams?.filter((team",{"_index":3466,"title":{},"body":{"interfaces/TeamState.html":{}}}],["stated",{"_index":3969,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4234,"title":{},"body":{"license.html":{}}}],["states",{"_index":1316,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["statestatus",{"_index":658,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["statestatus.error",{"_index":681,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{}}}],["statestatus.loading",{"_index":672,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["statestatus.pending",{"_index":668,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["statestatus.success",{"_index":678,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{}}}],["static",{"_index":291,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenudesktopinactive",{"_index":330,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenumobileactive",{"_index":334,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["stating",{"_index":4038,"title":{},"body":{"license.html":{}}}],["stats",{"_index":3280,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats'},{'name",{"_index":151,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["stats.component.html",{"_index":3281,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats.component.scss",{"_index":3282,"title":{},"body":{"components/StatsComponent.html":{}}}],["statscomponent",{"_index":150,"title":{"components/StatsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["status",{"_index":655,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"license.html":{}}}],["status.enum",{"_index":662,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{}}}],["status.enum.ts",{"_index":3580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["steps",{"_index":3792,"title":{},"body":{"license.html":{}}}],["stopwatch",{"_index":2825,"title":{},"body":{"components/SidebarComponent.html":{}}}],["storage",{"_index":371,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["storage.service",{"_index":325,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts",{"_index":1505,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:10",{"_index":1512,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:12",{"_index":1905,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:14",{"_index":1513,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:16",{"_index":1906,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:19",{"_index":1519,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:20",{"_index":1561,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:24",{"_index":1515,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:26",{"_index":1907,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:28",{"_index":1517,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:30",{"_index":1908,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:32",{"_index":1555,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:33",{"_index":1514,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:36",{"_index":1557,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:40",{"_index":1559,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:6",{"_index":1909,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:8",{"_index":1910,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:9",{"_index":1552,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["store",{"_index":902,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["stored",{"_index":3674,"title":{},"body":{"index.html":{}}}],["str",{"_index":1662,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["str.split('').foreach((char",{"_index":1681,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["stream",{"_index":1188,"title":{},"body":{"interfaces/FileDto.html":{}}}],["string",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/SessionStorage.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["string(this.index",{"_index":2073,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["strings",{"_index":2776,"title":{},"body":{"components/SidebarComponent.html":{}}}],["stringtocolour",{"_index":1637,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["stringtocolour(str",{"_index":1660,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["stringval",{"_index":1070,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["style",{"_index":284,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["styles",{"_index":273,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["styleurl",{"_index":27,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["styleurls",{"_index":1961,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["sub",{"_index":1998,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subdividing",{"_index":4280,"title":{},"body":{"license.html":{}}}],["subject",{"_index":321,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["sublicenses",{"_index":4312,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3994,"title":{},"body":{"license.html":{}}}],["submenuanimation",{"_index":1971,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subprograms",{"_index":3957,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":4471,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":386,"title":{},"body":{"interfaces/AppConfig.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{}}}],["subscribe((data",{"_index":957,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["subscribe((error",{"_index":970,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((issuccess",{"_index":1243,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((members",{"_index":1690,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["subscribe((organization",{"_index":965,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["subscribe((projects",{"_index":2379,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["subscribe((status",{"_index":1164,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["subscribe((teams",{"_index":3396,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["subscribe((user",{"_index":1235,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribes",{"_index":1976,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subscribing",{"_index":1929,"title":{},"body":{"injectables/MenuService.html":{}}}],["subscription",{"_index":921,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["subscriptions",{"_index":2028,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subsection",{"_index":4103,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":4154,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3833,"title":{},"body":{"license.html":{}}}],["success",{"_index":676,"title":{},"body":{"interfaces/AuthState.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["successful",{"_index":1778,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["successsubscription",{"_index":1201,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":256,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["sue",{"_index":4325,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4163,"title":{},"body":{"license.html":{}}}],["summary",{"_index":977,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["supplement",{"_index":4193,"title":{},"body":{"license.html":{}}}],["support",{"_index":3284,"title":{},"body":{"components/SupportComponent.html":{},"license.html":{}}}],["support'},{'name",{"_index":153,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["support.component.html",{"_index":3285,"title":{},"body":{"components/SupportComponent.html":{}}}],["support.component.scss",{"_index":3286,"title":{},"body":{"components/SupportComponent.html":{}}}],["supportcomponent",{"_index":152,"title":{"components/SupportComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["supports",{"_index":4110,"title":{},"body":{"license.html":{}}}],["sure",{"_index":3711,"title":{},"body":{"index.html":{},"license.html":{}}}],["surrender",{"_index":3777,"title":{},"body":{"license.html":{}}}],["survive",{"_index":4233,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4422,"title":{},"body":{"license.html":{}}}],["svelte",{"_index":3590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":560,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["switchmap((args",{"_index":2965,"title":{},"body":{"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{}}}],["switchmap((request",{"_index":533,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/TeamEffects.html":{}}}],["symbol",{"_index":1989,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["system",{"_index":743,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["systematic",{"_index":3820,"title":{},"body":{"license.html":{}}}],["t",{"_index":3682,"title":{},"body":{"index.html":{}}}],["table",{"_index":1031,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table'},{'name",{"_index":67,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["table.actions",{"_index":1177,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.avatar",{"_index":1892,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component",{"_index":1741,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["table.component.html",{"_index":1035,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.scss",{"_index":1036,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts",{"_index":1029,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:100",{"_index":1094,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:101",{"_index":2506,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:102",{"_index":1102,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:103",{"_index":1088,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:104",{"_index":2507,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:105",{"_index":1848,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:106",{"_index":3308,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:107",{"_index":2505,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:108",{"_index":3306,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:109",{"_index":1854,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:110",{"_index":2629,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:111",{"_index":1098,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:112",{"_index":1096,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:113",{"_index":1100,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:114",{"_index":2521,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:115",{"_index":1853,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:116",{"_index":1093,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:118",{"_index":2522,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:119",{"_index":3296,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:120",{"_index":1073,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:124",{"_index":3302,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:126",{"_index":1071,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:131",{"_index":1079,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:135",{"_index":2509,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:139",{"_index":2517,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:145",{"_index":2512,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:151",{"_index":1852,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:154",{"_index":1082,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:156",{"_index":2622,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:159",{"_index":1856,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:165",{"_index":3300,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:170",{"_index":3297,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:178",{"_index":1077,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:182",{"_index":1851,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:183",{"_index":1072,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:185",{"_index":2518,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:190",{"_index":2516,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:193",{"_index":2625,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:197",{"_index":2515,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:207",{"_index":2511,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:222",{"_index":1849,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:226",{"_index":1075,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:229",{"_index":2627,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:230",{"_index":1857,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:243",{"_index":3299,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.component.ts:266",{"_index":1076,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.component.ts:48",{"_index":2617,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:57",{"_index":2630,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:60",{"_index":2621,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:61",{"_index":1839,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:62",{"_index":1060,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:63",{"_index":2620,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:66",{"_index":2619,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:69",{"_index":2618,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:70",{"_index":1858,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:71",{"_index":1085,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:72",{"_index":1840,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:74",{"_index":1068,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:75",{"_index":1847,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:77",{"_index":1065,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:78",{"_index":1841,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:80",{"_index":1064,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:81",{"_index":1846,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:83",{"_index":1063,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:84",{"_index":1842,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:85",{"_index":2519,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:86",{"_index":1067,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:87",{"_index":1844,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:88",{"_index":2637,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:89",{"_index":1061,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:90",{"_index":1843,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:92",{"_index":1062,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:93",{"_index":1845,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{}}}],["table.component.ts:94",{"_index":2634,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.component.ts:95",{"_index":1066,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:96",{"_index":1859,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:97",{"_index":1089,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.component.ts:98",{"_index":2508,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:99",{"_index":2623,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.created_at",{"_index":2665,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.delete_confirmation",{"_index":1140,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.delete_confirmation_message",{"_index":1138,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.email",{"_index":1890,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.email_is_required",{"_index":1900,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.email_label",{"_index":1899,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.environment",{"_index":1176,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.environment_created",{"_index":1169,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.environment_is_required",{"_index":1181,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.environment_label",{"_index":1180,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.error",{"_index":1166,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.failed_to_create_environment",{"_index":1167,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.failed_to_create_project",{"_index":2539,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.failed_to_create_release",{"_index":2656,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.failed_to_create_tag",{"_index":3325,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.failed_to_delete_environments",{"_index":1171,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.failed_to_delete_releases",{"_index":2659,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.failed_to_delete_tags",{"_index":3328,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.failed_to_remove_member",{"_index":1884,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.failed_to_send_invite",{"_index":1876,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.first_name",{"_index":1888,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.id",{"_index":2663,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.invalid_email",{"_index":1901,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.invite_sent",{"_index":1877,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.last_name",{"_index":1889,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.name",{"_index":2552,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.name_is_required",{"_index":2559,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.name_label",{"_index":2558,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.no_environments_found",{"_index":1179,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.no_members_found",{"_index":1898,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.no_projects_found",{"_index":2557,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.no_releases_found",{"_index":2674,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.no_tags_found",{"_index":3334,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.platform",{"_index":2553,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.platform_is_required",{"_index":2563,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.platform_label",{"_index":2560,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.project_created",{"_index":2540,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.release_created",{"_index":2657,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.removed_environments",{"_index":1172,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table.removed_memeber",{"_index":1885,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.removed_releases",{"_index":2660,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.removed_tags",{"_index":3329,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.role",{"_index":1891,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.role_is_required",{"_index":1903,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.role_label",{"_index":1902,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.success",{"_index":1168,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["table.tag",{"_index":3332,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.tag_created",{"_index":3326,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.tag_is_required",{"_index":3336,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.tag_label",{"_index":3335,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table.version",{"_index":2664,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.version_is_required",{"_index":2676,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table.version_label",{"_index":2675,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table/environments",{"_index":1028,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["table/members",{"_index":1740,"title":{},"body":{"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["table/projects",{"_index":2493,"title":{},"body":{"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["table/releases",{"_index":2609,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["table/tags",{"_index":3288,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["table/teams",{"_index":3481,"title":{},"body":{"components/TeamsComponent.html":{}}}],["tablemodule",{"_index":1034,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["tablet",{"_index":436,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["tabviewmodule",{"_index":3080,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["tag",{"_index":3303,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["tag.tag",{"_index":3333,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["tags",{"_index":155,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["tags?.map((tag",{"_index":3311,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["tagsform",{"_index":3292,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["tagstablecomponent",{"_index":154,"title":{"components/TagsTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["tailwind",{"_index":870,"title":{},"body":{"components/ConfigComponent.html":{}}}],["take",{"_index":1116,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"license.html":{}}}],["take(1",{"_index":1161,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["takes",{"_index":731,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["tangible",{"_index":4133,"title":{},"body":{"license.html":{}}}],["tap",{"_index":585,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["target",{"_index":1135,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["team",{"_index":157,"title":{"interfaces/Team.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["team'},{'name",{"_index":149,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["team.actions",{"_index":3141,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["team.component.html",{"_index":3081,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.scss",{"_index":3082,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts",{"_index":3078,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:100",{"_index":3095,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:110",{"_index":3109,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:113",{"_index":3108,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:116",{"_index":3110,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:119",{"_index":3112,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:120",{"_index":3114,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:121",{"_index":3116,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:122",{"_index":3117,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:123",{"_index":3129,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:124",{"_index":3119,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:127",{"_index":3125,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:130",{"_index":3126,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:132",{"_index":3127,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:134",{"_index":3101,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:140",{"_index":3099,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:154",{"_index":3100,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:160",{"_index":3103,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:180",{"_index":3104,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:185",{"_index":3098,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:202",{"_index":3097,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:214",{"_index":3106,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:240",{"_index":3120,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:249",{"_index":3122,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:258",{"_index":3121,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:267",{"_index":3123,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:98",{"_index":3096,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.delete",{"_index":3179,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.delete_confirmation",{"_index":3163,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.delete_confirmation_message",{"_index":3161,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.delete_description",{"_index":3180,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.effects",{"_index":498,"title":{},"body":{"interfaces/AppState.html":{}}}],["team.effects.ts",{"_index":3181,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:111",{"_index":3194,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:123",{"_index":3220,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:33",{"_index":3184,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:39",{"_index":3200,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:51",{"_index":3205,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:63",{"_index":3210,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:75",{"_index":3225,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:87",{"_index":3189,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:99",{"_index":3215,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.error",{"_index":3167,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.failed_to_delete_team",{"_index":3168,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.failed_to_update_team",{"_index":3171,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.id",{"_index":3175,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.id_description",{"_index":3176,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.reducer",{"_index":500,"title":{},"body":{"interfaces/AppState.html":{}}}],["team.reducer.ts",{"_index":3235,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["team.selectors",{"_index":3148,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.slug",{"_index":3177,"title":{},"body":{"components/SingleTeamComponent.html":{},"components/TeamPickerComponent.html":{}}}],["team.slug_description",{"_index":3178,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.teamid",{"_index":2482,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{}}}],["team/single",{"_index":497,"title":{},"body":{"interfaces/AppState.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["team/team.effects",{"_index":489,"title":{},"body":{"interfaces/AppState.html":{}}}],["team/team.reducer",{"_index":491,"title":{},"body":{"interfaces/AppState.html":{}}}],["teamdto",{"_index":3338,"title":{"interfaces/TeamDto.html":{}},"body":{"interfaces/TeamDto.html":{},"injectables/TeamService.html":{}}}],["teameffects",{"_index":488,"title":{"injectables/TeamEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TeamEffects.html":{}}}],["teamid",{"_index":3093,"title":{},"body":{"components/SingleTeamComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{}}}],["teamids",{"_index":2480,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["teamid}/members",{"_index":3440,"title":{},"body":{"injectables/TeamService.html":{}}}],["teamid}/projects",{"_index":3441,"title":{},"body":{"injectables/TeamService.html":{}}}],["teampickercomponent",{"_index":156,"title":{"components/TeamPickerComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teamreducer",{"_index":490,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TeamState.html":{}}}],["teams",{"_index":161,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teams'},{'name",{"_index":159,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teams.component.html",{"_index":3469,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.scss",{"_index":3470,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.map((team",{"_index":2481,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["teams?.filter",{"_index":3398,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["teams?.length",{"_index":2479,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["teamscomponent",{"_index":158,"title":{"components/TeamsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teamservice",{"_index":3094,"title":{"injectables/TeamService.html":{}},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}}}],["teamstablecomponent",{"_index":160,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teamstate",{"_index":467,"title":{"interfaces/TeamState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TeamState.html":{}}}],["technological",{"_index":4004,"title":{},"body":{"license.html":{}}}],["technologies",{"_index":3659,"title":{},"body":{"index.html":{}}}],["tells",{"_index":3910,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1915,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["term",{"_index":3967,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":4455,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":4238,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":4260,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":4247,"title":{},"body":{"license.html":{}}}],["termination",{"_index":4235,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3789,"title":{},"body":{"license.html":{}}}],["test",{"_index":3693,"title":{},"body":{"index.html":{}}}],["testing",{"_index":3700,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3692,"title":{},"body":{"index.html":{}}}],["text",{"_index":1147,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["theme",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["themelink",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.clonenode(true",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.nextsibling",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.parentnode!.insertbefore(clonelinkelement",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.remove",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["therefore",{"_index":3778,"title":{},"body":{"license.html":{}}}],["things",{"_index":3771,"title":{},"body":{"license.html":{}}}],["third",{"_index":4031,"title":{},"body":{"license.html":{}}}],["this.actions$.pipe",{"_index":531,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleProjectEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["this.active",{"_index":2063,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.applyscale",{"_index":857,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.appsidebar.el.nativeelement.contains(event.target",{"_index":1357,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.appsidebar.el.nativeelement.issamenode(event.target",{"_index":1356,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.contains(event.target",{"_index":1363,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.issamenode(event.target",{"_index":1362,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.contains(event.target",{"_index":1359,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.issamenode",{"_index":1358,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.contains",{"_index":1365,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.issamenode",{"_index":1364,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice",{"_index":549,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.forgotpassword(request.username).pipe",{"_index":566,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.me().pipe",{"_index":561,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.register(request).pipe",{"_index":574,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.resetpassword(request).pipe",{"_index":580,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.avaialbleteams",{"_index":3397,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["this.availablemembers",{"_index":1693,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.availableprojects",{"_index":2380,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.blockbodyscroll",{"_index":1368,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.changeslugandcheckvalidity(data",{"_index":960,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.chartdata",{"_index":2917,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.checkname(data",{"_index":2532,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.checkslug(data",{"_index":958,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.checkslug(slug",{"_index":992,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.checkusername(data",{"_index":1231,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.config",{"_index":451,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.config.menumode",{"_index":428,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.asobservable",{"_index":409,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.next(this.config",{"_index":446,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.confirmationservice.confirm",{"_index":1134,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.createbreadcrumbs(child",{"_index":1398,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createbreadcrumbs(this.route.root",{"_index":1374,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createnewprojectform",{"_index":2544,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createnewprojectform.get('name')?.value",{"_index":2541,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createnewprojectform.get('platform')?.value?.platformid",{"_index":2542,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createorganizationform.get('name')?.value",{"_index":985,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createorganizationform.get('slug')?.setvalue(slug",{"_index":991,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createorganizationform.get('slug')?.value",{"_index":986,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createreleaseform",{"_index":2662,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.createreleaseform.get('version')?.value",{"_index":2654,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.currentusererrorsubscription?.unsubscribe",{"_index":1379,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data",{"_index":1917,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.data[key",{"_index":1918,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.datepipe.transform(enddate",{"_index":2933,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.datepipe.transform(startdate",{"_index":2931,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.deleteteam",{"_index":3164,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.document",{"_index":1354,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist",{"_index":1403,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.add('blocked",{"_index":1404,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.remove('blocked",{"_index":1406,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classname",{"_index":1405,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.documentelement.style.fontsize",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.document.getelementbyid('theme",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.dt?.filterglobal(($event.target",{"_index":1131,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.environmentsform",{"_index":1174,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.environmentsform.get('environment')?.value",{"_index":1159,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.errorsubscription",{"_index":968,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errorsubscription?.unsubscribe",{"_index":967,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.filteredprojects",{"_index":2483,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.filtervalue",{"_index":2454,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.forgotpasswordform.get('username')?.value",{"_index":1252,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formbuilder.group",{"_index":918,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.getchartlabel(hourlystat.startinterval",{"_index":2920,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.hidemenu",{"_index":1360,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.hideprofilemenu",{"_index":1366,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.home",{"_index":1375,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.delete(api.membersurl",{"_index":1801,"title":{},"body":{"injectables/MembersService.html":{}}}],["this.http.delete(api.teamurl",{"_index":3443,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.get",{"_index":1499,"title":{},"body":{"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["this.http.get(api.authurl",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(api.membersurl",{"_index":1800,"title":{},"body":{"injectables/MembersService.html":{}}}],["this.http.get(api.organizationurl",{"_index":2244,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.http.get(api.platformurl",{"_index":2294,"title":{},"body":{"injectables/PlatformService.html":{}}}],["this.http.get(api.roleurl",{"_index":2732,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.http.get(api.teamurl",{"_index":3438,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.patch",{"_index":2248,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["this.http.post",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{}}}],["this.http.post(api.teamurl",{"_index":3442,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.put",{"_index":3444,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.index",{"_index":2072,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.invitationhash",{"_index":1463,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.invitationservice.acceptinvitation(request.invitationhash",{"_index":534,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.invitationservice.getinvitationdetails(this.invitationhash",{"_index":1450,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.invitationservice.invitemember(request).pipe",{"_index":1756,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.invitenewuserform",{"_index":1881,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.invitenewuserform.get('email')?.value",{"_index":1878,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.invitenewuserform.get('role')?.value?.roleid",{"_index":1879,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.isaddnewdialogvisible",{"_index":1158,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.isaddnewprojectdialogvisible",{"_index":2536,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.isdesktop",{"_index":415,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.isinvitedialogvisible",{"_index":1873,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.isloading",{"_index":2914,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.isnametaken",{"_index":2551,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.isoverlay",{"_index":412,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.ispickerdialogvisible",{"_index":1698,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"components/TeamPickerComponent.html":{}}}],["this.isslugtaken",{"_index":996,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.isusernametaken",{"_index":1254,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.item",{"_index":2089,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.command",{"_index":2087,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.disabled",{"_index":2085,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.items",{"_index":2090,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.routerlink",{"_index":2069,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.items",{"_index":1373,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.jwtservice.clear",{"_index":586,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.saverefreshtoken(token.refreshtoken",{"_index":555,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.savetoken(token.accesstoken",{"_index":554,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.key",{"_index":2065,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.languages[0",{"_index":3520,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.layoutservice.config.colorscheme",{"_index":851,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.inputstyle",{"_index":845,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.menumode",{"_index":843,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.ripple",{"_index":847,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.scale",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.layoutservice.config.theme",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.layoutservice.onconfigupdate",{"_index":852,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.overlayopen$.subscribe",{"_index":1351,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.restoreconfig",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["this.layoutservice.saveconfig",{"_index":842,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.showconfigsidebar",{"_index":849,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.configsidebarvisible",{"_index":839,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.menuhoveractive",{"_index":1400,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.overlaymenuactive",{"_index":1399,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.profilesidebarvisible",{"_index":1402,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenudesktopinactive",{"_index":1412,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenumobileactive",{"_index":1367,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.localstorage.getitem(\"ui_config",{"_index":449,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.localstorage.setitem(\"ui_config",{"_index":455,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.loginform.get('password')?.value",{"_index":1604,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":1603,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.membersservice.getactivemembers().pipe",{"_index":1762,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.membersservice.getmembers().pipe",{"_index":1768,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.membersservice.removemember(request.memberid).pipe",{"_index":1773,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.menuoutsideclicklistener",{"_index":1352,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.menuresetsubscription",{"_index":2067,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuresetsubscription.unsubscribe",{"_index":2094,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.menusource$.subscribe",{"_index":2060,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.onmenustatechange",{"_index":2082,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.resetsource$.subscribe",{"_index":2068,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusource.asobservable",{"_index":1949,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusource.next(event",{"_index":1956,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusourcesubscription",{"_index":2059,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusourcesubscription.unsubscribe",{"_index":2093,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.messageservice.add",{"_index":975,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.model",{"_index":2793,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.model.push",{"_index":2795,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.myprojects.pipe",{"_index":2451,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.namechecksubscription",{"_index":2548,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.namechecksubscription?.unsubscribe",{"_index":2533,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.onconfigupdate",{"_index":453,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.onmemberspicked",{"_index":1701,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.onmemberspicked(event.items",{"_index":1702,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.onmembersremoved",{"_index":1699,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.onmembersremoved(event.items",{"_index":1700,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.onprojectspicked",{"_index":2387,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.onprojectspicked(event.items",{"_index":2388,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.onprojectsremoved",{"_index":2385,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.onprojectsremoved(event.items",{"_index":2386,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.onteamspicked",{"_index":3403,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["this.onteamspicked(event.items",{"_index":3404,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["this.onteamsremoved",{"_index":3401,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["this.onteamsremoved(event.items",{"_index":3402,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["this.organizationerrorsubscription",{"_index":1377,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.organizationerrorsubscription?.unsubscribe",{"_index":1380,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.organizationservice",{"_index":994,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.organizationservice.createorganization(request).pipe",{"_index":2208,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationservice.getorganization().pipe",{"_index":2214,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationservice.updateorganizationpicture(request.file).pipe",{"_index":2218,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationsubscription",{"_index":962,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.organizationsubscription?.unsubscribe",{"_index":984,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.overlaymenuopensubscription",{"_index":1350,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlaymenuopensubscription.unsubscribe",{"_index":1381,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlayopen.asobservable",{"_index":410,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.overlayopen.next(null",{"_index":414,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.parentkey",{"_index":2071,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.platformservice.getplatforms().pipe",{"_index":2281,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["this.primefileupload.clear",{"_index":2186,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.primefileupload.progress",{"_index":2181,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.primefileupload.uploading",{"_index":2180,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.profilemenuoutsideclicklistener",{"_index":1361,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.project?.projectid",{"_index":1130,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.projectservice",{"_index":2549,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["this.projectservice.addprojectdebugfile(args.projectid",{"_index":2966,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.addprojectenvironments(args.projectid",{"_index":2974,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.addprojectrelease(args.projectid",{"_index":2981,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.addprojecttags(args.projectid",{"_index":2987,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.addprojectteams(args.projectid",{"_index":2994,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.createproject(request).pipe",{"_index":2325,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.projectservice.getallprojects().pipe",{"_index":2331,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.projectservice.getmyprojects(request.teamids).pipe",{"_index":2337,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.projectservice.getprojectbyid(args.projectid).pipe",{"_index":3001,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.getprojectdebugfiles(args.projectid).pipe",{"_index":3006,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.getprojectenvironments(args.projectid).pipe",{"_index":3011,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.getprojectreleases(args.projectid).pipe",{"_index":3016,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.getprojecttags(args.projectid).pipe",{"_index":3021,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.getprojectteams(args.projectid).pipe",{"_index":3026,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.removeprojectdebugfiles(args.projectid",{"_index":3031,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.removeprojectenvironments(args.projectid",{"_index":3036,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.removeprojectreleases(args.projectid",{"_index":3041,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.removeprojecttags(args.projectid",{"_index":3046,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.removeprojectteams(args.projectid",{"_index":3051,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectservice.updateproject(args.projectid",{"_index":3056,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["this.projectstat",{"_index":2915,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.registerform.get('email')?.setvalue(details.email",{"_index":1451,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.registerform.get('email')?.value",{"_index":1460,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('firstname')?.value",{"_index":1461,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('lastname')?.value",{"_index":1462,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('password')?.value",{"_index":1459,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('username')?.value",{"_index":1458,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registeronce",{"_index":3158,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.removeenvironments",{"_index":1154,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.removeenvironments([environment",{"_index":1152,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.removemember(member",{"_index":1882,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.removereleases([releaseid",{"_index":2650,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.removereleases(this.selectedreleases.map((value",{"_index":2651,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.removetags([tag",{"_index":3319,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.removetags(this.selectedtags.map((value",{"_index":3320,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.renderer.listen",{"_index":1353,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.replacethemelink(newhref",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.resetenvironmentsform",{"_index":1157,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.resetinviteform",{"_index":1871,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.resetpasswordform.get('password')?.value",{"_index":2698,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetprojectsform",{"_index":2534,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.resetreleasesform",{"_index":2653,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.resetsource.asobservable",{"_index":1952,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.resetsource.next(true",{"_index":1957,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.resettagsform",{"_index":3322,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.restorescale",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["this.restoretheme",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["this.roleservice.getroles().pipe",{"_index":2721,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["this.root",{"_index":2091,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.events",{"_index":1369,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["this.router.isactive(this.item.routerlink[0",{"_index":2075,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":1452,"title":{},"body":{"components/InvitationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":2584,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/create",{"_index":1378,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigate(['/home",{"_index":966,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/home/settings/account",{"_index":3522,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.router.navigate(['/home/settings/projects",{"_index":2934,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.router.navigate(['/home/settings/teams",{"_index":3166,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.router.navigate([`/home/settings/projects/${project.projectid",{"_index":2547,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.saveconfig",{"_index":445,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.scale",{"_index":856,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.secret",{"_index":2696,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.selectedenvironments",{"_index":1173,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.selectedenvironments.map((value",{"_index":1155,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.selectedlanguage",{"_index":3519,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.selectedmembers.some((selected",{"_index":1695,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.selectedprojects.some",{"_index":2382,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.selectedreleases",{"_index":2661,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.selectedtags",{"_index":3330,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.selectedteams.some",{"_index":3399,"title":{},"body":{"components/TeamPickerComponent.html":{}}}],["this.setupchartdata(result",{"_index":2916,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.setupsidenavitems(sidenav",{"_index":2794,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.slugchecksubscription",{"_index":993,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.slugchecksubscription?.unsubscribe",{"_index":983,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.sluginput",{"_index":3159,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.state.configsidebarvisible",{"_index":421,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.overlaymenuactive",{"_index":413,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.profilesidebarvisible",{"_index":419,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenudesktopinactive",{"_index":416,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenumobileactive",{"_index":417,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.storage",{"_index":1569,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.clear",{"_index":1572,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(key",{"_index":1573,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(refresh_token_key",{"_index":1527,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.getitem(token_key",{"_index":1525,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.key(index",{"_index":1574,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.length",{"_index":1571,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(key",{"_index":1575,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(refresh_token_key",{"_index":1523,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.removeitem(token_key",{"_index":1522,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(key",{"_index":1576,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.setitem(refresh_token_key",{"_index":1526,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(token_key",{"_index":1524,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.store",{"_index":963,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.dispatch",{"_index":1128,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.store.dispatch(createorganization(dto",{"_index":987,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.store.dispatch(createproject(dto",{"_index":2543,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.dispatch(invitemember(dto",{"_index":1880,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(loadactivemembers",{"_index":1687,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.store.dispatch(loadallprojects",{"_index":2376,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["this.store.dispatch(loadcurrentorganization",{"_index":961,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["this.store.dispatch(loadcurrentuser",{"_index":1232,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(loadmyprojects",{"_index":2477,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.store.dispatch(loadmyteams",{"_index":2476,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.dispatch(loadorganizationmembers",{"_index":1742,"title":{},"body":{"components/MembersComponent.html":{}}}],["this.store.dispatch(loadorganizationteams",{"_index":3393,"title":{},"body":{"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.dispatch(loadplatforms",{"_index":2535,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.dispatch(loadroles",{"_index":1872,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(loadteambyid",{"_index":3154,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(loadteammembers",{"_index":3156,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(loadteamprojects",{"_index":3157,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(registernewuser(dto",{"_index":2588,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.store.dispatch(removemember",{"_index":1887,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(resetsingleteamstate",{"_index":3160,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(signout",{"_index":3521,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.store.dispatch(updateorganizationpicture",{"_index":2182,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.store.select",{"_index":1090,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.select(isloadingactivemembers",{"_index":1664,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.store.select(isloadingallprojects",{"_index":2371,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["this.store.select(isloadingauthstate",{"_index":1217,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(isloadingcreateproject",{"_index":2520,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.select(isloadingmembers",{"_index":1729,"title":{},"body":{"components/MembersComponent.html":{}}}],["this.store.select(isloadingmyprojects",{"_index":2458,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.store.select(isloadingmyteams",{"_index":2460,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.select(isloadingorganization",{"_index":923,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.store.select(isloadingorganizationteams",{"_index":3388,"title":{},"body":{"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.select(isloadingremovemembers",{"_index":1860,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(isloadingsendinvitation",{"_index":1861,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectaddenvironments",{"_index":1095,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectaddrelease",{"_index":2631,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectaddtags",{"_index":3304,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectenvironments",{"_index":1097,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectreleases",{"_index":2632,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectremovereleases",{"_index":2633,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.store.select(isloadingsingleprojectremovetags",{"_index":3305,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.store.select(isloadingsingleprojecttags",{"_index":3307,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.store.select(isloadingteammembers",{"_index":3111,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.select(isloadingteamprojects",{"_index":3113,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.select(isloadingupdateteam",{"_index":3115,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.select(isupdateorganizationpictureloading",{"_index":2154,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.store.select(selectcurrentorganization",{"_index":2156,"title":{},"body":{"components/OrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.select(selectcurrentuser",{"_index":1331,"title":{},"body":{"components/HomeComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.select(selectplatforms",{"_index":2523,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.select(selectroles",{"_index":1862,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(selectsingleteam",{"_index":3128,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.successsubscription",{"_index":1241,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.successsubscription?.unsubscribe",{"_index":1247,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.tagsform",{"_index":3331,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.tagsform.get('tag')?.value",{"_index":3323,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.teamid",{"_index":3155,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.teamservice.addteammembers(args.teamid",{"_index":3186,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.addteamprojects(args.teamid",{"_index":3191,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.createnewteam(request).pipe",{"_index":3345,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.deleteteam(request.teamid).pipe",{"_index":3350,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.deleteteam(this.teamid",{"_index":3165,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.teamservice.getmyteams().pipe",{"_index":3356,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.getorganizationteams().pipe",{"_index":3361,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.getteambyid(args.teamid).pipe",{"_index":3196,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.getteammembers(args.teamid).pipe",{"_index":3202,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.getteamprojects(args.teamid).pipe",{"_index":3207,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.isslugtaken(slug).subscribe",{"_index":3169,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.teamservice.removeteammembers(args.teamid",{"_index":3212,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.removeteamprojects(args.teamid",{"_index":3217,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.updateteam(args.teamid",{"_index":3222,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.toslugvalue(organizationname",{"_index":990,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.translateservice.instant",{"_index":981,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["this.translateservice.instant('auth.reset",{"_index":2692,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant('create",{"_index":978,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.translateservice.instant('environments",{"_index":1165,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["this.translateservice.instant('members",{"_index":1875,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.translateservice.instant('organization.error",{"_index":2184,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.translateservice.instant('projects",{"_index":2538,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.translateservice.instant('releases",{"_index":2649,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["this.translateservice.instant('single",{"_index":3162,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.translateservice.instant('tags",{"_index":3318,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["this.translateservice.stream('sidenav').subscribe",{"_index":1372,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["this.translateservice.use(language.value",{"_index":3523,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.unblockbodyscroll",{"_index":1401,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updateactivestatefromroute",{"_index":2070,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.usernamechecksubscription",{"_index":1253,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usernamechecksubscription?.unsubscribe",{"_index":1248,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usersubscription",{"_index":1233,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.usersubscription?.unsubscribe",{"_index":1246,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["those",{"_index":3831,"title":{},"body":{"license.html":{}}}],["though",{"_index":4196,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":3842,"title":{},"body":{"license.html":{}}}],["three",{"_index":4091,"title":{},"body":{"license.html":{}}}],["through",{"_index":365,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["throw",{"_index":2171,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["thus",{"_index":3986,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":2876,"title":{},"body":{"components/SidebarComponent.html":{}}}],["time",{"_index":4257,"title":{},"body":{"license.html":{}}}],["titlecase",{"_index":2391,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["toastmodule",{"_index":882,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["todo",{"_index":369,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MemoryStorage.html":{}}}],["toggle",{"_index":336,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["toggles",{"_index":411,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["toggling",{"_index":2017,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["token",{"_index":656,"title":{"interfaces/Token.html":{}},"body":{"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{}}}],["token_key",{"_index":1520,"title":{},"body":{"injectables/JwtService.html":{}}}],["tokendto",{"_index":632,"title":{"interfaces/TokenDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/TokenDto.html":{}}}],["tools",{"_index":3950,"title":{},"body":{"license.html":{}}}],["topbar",{"_index":3488,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar'},{'name",{"_index":163,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["topbar.component.html",{"_index":3489,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":3490,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbarcomponent",{"_index":162,"title":{"components/TopbarComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["topbarmenubutton",{"_index":3493,"title":{},"body":{"components/TopbarComponent.html":{}}}],["toslugvalue",{"_index":899,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["toslugvalue(slug",{"_index":916,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["totalcrashfreesessions",{"_index":2407,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["totalerrors",{"_index":2408,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["totalsessions",{"_index":2409,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["totaltransactions",{"_index":2410,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["track",{"_index":341,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["trade",{"_index":4219,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4218,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4220,"title":{},"body":{"license.html":{}}}],["trail",{"_index":1305,"title":{},"body":{"components/HomeComponent.html":{}}}],["transaction",{"_index":4169,"title":{},"body":{"license.html":{}}}],["transactions",{"_index":2358,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["transfer",{"_index":3900,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":4171,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":4278,"title":{},"body":{"license.html":{}}}],["transition",{"_index":2046,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["translate",{"_index":41,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{}}}],["translate.addlangs(['en",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('en",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":35,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":3547,"title":{},"body":{"dependencies.html":{}}}],["translatemodule",{"_index":24,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["translateservice",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["translating",{"_index":2775,"title":{},"body":{"components/SidebarComponent.html":{}}}],["transmission",{"_index":4123,"title":{},"body":{"license.html":{}}}],["treated",{"_index":4195,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":4011,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["trigger",{"_index":1978,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["trigger('children",{"_index":2052,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["triggered",{"_index":1939,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["troubleshooting",{"_index":3644,"title":{},"body":{"index.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["tslib",{"_index":3568,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":732,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["type",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectDebugFileDto.html":{},"interfaces/CreateProjectReleaseDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/EnvironmentsTableComponent.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectSecurityClientDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["type.enum",{"_index":1008,"title":{},"body":{"interfaces/CreateProjectDebugFileDto.html":{},"components/EnvironmentsTableComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/ProjectDebugFile.html":{},"interfaces/ProjectDebugFileDto.html":{},"components/ProjectsComponent-1.html":{},"components/ReleasesTableComponent.html":{},"interfaces/Role.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["type.enum.ts",{"_index":3575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types",{"_index":854,"title":{},"body":{"components/ConfigComponent.html":{}}}],["typescript",{"_index":253,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["typical",{"_index":4148,"title":{},"body":{"license.html":{}}}],["typically",{"_index":795,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["ui",{"_index":302,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{}}}],["unacceptable",{"_index":3828,"title":{},"body":{"license.html":{}}}],["unblock",{"_index":1327,"title":{},"body":{"components/HomeComponent.html":{}}}],["unblockbodyscroll",{"_index":1287,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":1083,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/HomeComponent.html":{},"components/MemberPickerComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{}}}],["under",{"_index":3866,"title":{},"body":{"license.html":{}}}],["unique",{"_index":1993,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["uniquely",{"_index":2004,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["unit",{"_index":3691,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":2912,"title":{},"body":{"components/SingleProjectCardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":4157,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":3972,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3878,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3998,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":4191,"title":{},"body":{"license.html":{}}}],["unsubscribe",{"_index":1162,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{}}}],["unsubscribes",{"_index":2027,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["until",{"_index":4246,"title":{},"body":{"license.html":{}}}],["unused",{"_index":1132,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["up",{"_index":2784,"title":{},"body":{"components/SidebarComponent.html":{}}}],["update",{"_index":775,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["updateactivestatefromroute",{"_index":1967,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["updated",{"_index":383,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["updatedat",{"_index":2115,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Role.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["updateorganizationnameandslug",{"_index":2129,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["updateorganizationnameandslug(name",{"_index":2140,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["updateorganizationpicture",{"_index":2168,"title":{},"body":{"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["updateorganizationpicture(picture",{"_index":2237,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["updateorganizationpicturefailure",{"_index":2227,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["updateorganizationpicturesuccess",{"_index":2228,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["updateorganizationpicturesuccess(result",{"_index":2220,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["updatepictureerror",{"_index":2251,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["updatepicturestatus",{"_index":2252,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["updateproject",{"_index":2962,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["updateprojectfailure",{"_index":3076,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["updateprojectsucess",{"_index":3057,"title":{},"body":{"injectables/SingleProjectEffects.html":{}}}],["updates",{"_index":443,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["updateteam",{"_index":3140,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["updateteam(teamid",{"_index":3434,"title":{},"body":{"injectables/TeamService.html":{}}}],["updateteamerror",{"_index":3251,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["updateteamfailure",{"_index":3234,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["updateteamslug",{"_index":3092,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["updateteamslug(slug",{"_index":3105,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["updateteamstatus",{"_index":3252,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["updateteamsuccess",{"_index":3223,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["updating",{"_index":747,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["uploadnewavatar",{"_index":2130,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["uploadnewavatar($event",{"_index":2142,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["url",{"_index":799,"title":{},"body":{"components/ConfigComponent.html":{},"interfaces/FileDto.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["use",{"_index":1999,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":267,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["useful",{"_index":4450,"title":{},"body":{"license.html":{}}}],["user",{"_index":358,"title":{"interfaces/User.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Role.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["user's",{"_index":2778,"title":{},"body":{"components/SidebarComponent.html":{}}}],["user.dto",{"_index":1748,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["user.email",{"_index":1706,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["user.entity",{"_index":1417,"title":{},"body":{"interfaces/Invitation.html":{}}}],["user.firstname",{"_index":1704,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["user.lastname",{"_index":1705,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["user.pictureurl",{"_index":1703,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["userdto",{"_index":636,"title":{"interfaces/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/MembersDto.html":{},"injectables/MembersService.html":{},"injectables/TeamService.html":{},"interfaces/UserDto.html":{}}}],["userid",{"_index":2713,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username",{"_index":537,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username/taken",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernamecheckerror",{"_index":657,"title":{},"body":{"interfaces/AuthState.html":{}}}],["usernamechecksubscription",{"_index":1202,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["usernameinput",{"_index":1203,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["users",{"_index":1746,"title":{},"body":{"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["userservice",{"_index":2792,"title":{},"body":{"components/SidebarComponent.html":{}}}],["userstorageservice",{"_index":2780,"title":{},"body":{"components/SidebarComponent.html":{}}}],["usersubscription",{"_index":1204,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uses",{"_index":4151,"title":{},"body":{"license.html":{}}}],["using",{"_index":387,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["utc",{"_index":2673,"title":{},"body":{"components/ReleasesTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["utilizes",{"_index":3650,"title":{},"body":{"index.html":{}}}],["valid",{"_index":4090,"title":{},"body":{"license.html":{}}}],["validators",{"_index":934,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsTableComponent.html":{}}}],["validators.email",{"_index":1436,"title":{},"body":{"components/InvitationComponent.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":1215,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":1434,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.pattern(securepasswordregex",{"_index":1435,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":919,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TagsTableComponent.html":{}}}],["value",{"_index":314,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"injectables/SingleProjectEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/TagsTableComponent.html":{},"injectables/TeamEffects.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["value.charat(0",{"_index":2177,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["value.environment",{"_index":1156,"title":{},"body":{"components/EnvironmentsTableComponent.html":{}}}],["value.filter((project",{"_index":2453,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["value.key",{"_index":2064,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.key.startswith(this.key",{"_index":2066,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.releaseid",{"_index":2652,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["value.routeevent",{"_index":2062,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.tag",{"_index":3321,"title":{},"body":{"components/TagsTableComponent.html":{}}}],["value.tostring(16).padstart(2",{"_index":1686,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["values",{"_index":282,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["var",{"_index":47,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["varaibles",{"_index":3724,"title":{},"body":{"index.html":{}}}],["variable",{"_index":406,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["variables",{"_index":3712,"title":{},"body":{"index.html":{}}}],["various",{"_index":263,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["vars",{"_index":1133,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["verbatim",{"_index":3740,"title":{},"body":{"license.html":{}}}],["vercel/analytics",{"_index":3550,"title":{},"body":{"dependencies.html":{}}}],["vercel/speed",{"_index":3552,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":1011,"title":{},"body":{"interfaces/CreateProjectReleaseDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/ProjectRelease.html":{},"interfaces/ProjectReleaseDto.html":{},"components/ReleasesTableComponent.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":3756,"title":{},"body":{"license.html":{}}}],["via",{"_index":3694,"title":{},"body":{"index.html":{}}}],["view",{"_index":2772,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["viewchild",{"_index":933,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["viewchild('dt",{"_index":1084,"title":{},"body":{"components/EnvironmentsTableComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ReleasesTableComponent.html":{},"components/TagsTableComponent.html":{}}}],["viewchild('fileupload",{"_index":2159,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["viewchild('menubutton",{"_index":3512,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('name",{"_index":928,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["viewchild('slug",{"_index":931,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["viewchild('topbarmenu",{"_index":3511,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('topbarmenubutton",{"_index":3516,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('username",{"_index":1222,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewchild(sidebarcomponent",{"_index":1328,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild(topbarcomponent",{"_index":1330,"title":{},"body":{"components/HomeComponent.html":{}}}],["violates",{"_index":4185,"title":{},"body":{"license.html":{}}}],["violation",{"_index":4242,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":337,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["visible",{"_index":355,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["visible(_val",{"_index":840,"title":{},"body":{"components/ConfigComponent.html":{}}}],["vitals",{"_index":165,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["vitals.component.html",{"_index":3530,"title":{},"body":{"components/VitalsComponent.html":{}}}],["vitals.component.scss",{"_index":3531,"title":{},"body":{"components/VitalsComponent.html":{}}}],["vitalscomponent",{"_index":164,"title":{"components/VitalsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["void",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/EnvironmentsTableComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesTableComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TagsTableComponent.html":{},"components/TeamPickerComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["volume",{"_index":4067,"title":{},"body":{"license.html":{}}}],["vue",{"_index":3589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["w",{"_index":4459,"title":{},"body":{"license.html":{}}}],["waive",{"_index":4020,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4434,"title":{},"body":{"license.html":{}}}],["want",{"_index":3768,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":3911,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3802,"title":{},"body":{"license.html":{}}}],["way",{"_index":3761,"title":{},"body":{"license.html":{}}}],["ways",{"_index":4080,"title":{},"body":{"license.html":{}}}],["web",{"_index":2768,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["webpage",{"_index":771,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["welcome",{"_index":4460,"title":{},"body":{"license.html":{}}}],["well",{"_index":749,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["whatever",{"_index":4282,"title":{},"body":{"license.html":{}}}],["whether",{"_index":299,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["whole",{"_index":3930,"title":{},"body":{"license.html":{}}}],["whose",{"_index":4130,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3926,"title":{},"body":{"license.html":{}}}],["width",{"_index":430,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window",{"_index":429,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["window.innerwidth",{"_index":440,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window.localstorage",{"_index":1570,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["window.sessionstorage",{"_index":2753,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["window?.localstorage",{"_index":1568,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["wipo",{"_index":4010,"title":{},"body":{"license.html":{}}}],["wish",{"_index":3725,"title":{},"body":{"index.html":{},"license.html":{}}}],["within",{"_index":1985,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["without",{"_index":2024,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["work",{"_index":3759,"title":{},"body":{"license.html":{}}}],["work's",{"_index":3949,"title":{},"body":{"license.html":{}}}],["working",{"_index":3927,"title":{},"body":{"license.html":{}}}],["works",{"_index":174,"title":{},"body":{"components/AlertsComponent.html":{},"components/CloseComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/GuidesComponent.html":{},"components/IssuesComponent.html":{},"components/LogsComponent.html":{},"components/MessagesComponent.html":{},"components/NotificationsComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/QueriesComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["worldwide",{"_index":4315,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":2781,"title":{},"body":{"components/SidebarComponent.html":{}}}],["wrench",{"_index":2870,"title":{},"body":{"components/SidebarComponent.html":{}}}],["writing",{"_index":4397,"title":{},"body":{"license.html":{}}}],["written",{"_index":4089,"title":{},"body":{"license.html":{}}}],["x",{"_index":2904,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["years",{"_index":4092,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":4332,"title":{},"body":{"license.html":{}}}],["yyyy",{"_index":2671,"title":{},"body":{"components/ReleasesTableComponent.html":{}}}],["zone.js",{"_index":3570,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccessDeniedComponent.html":{"url":"components/AccessDeniedComponent.html","title":"component - AccessDeniedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessDeniedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/access-denied/access-denied.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-access-denied\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RouterModule\n                            RippleModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./access-denied.component.html\n            \n\n\n\n            \n                styleUrl\n                ./access-denied.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\n\n@Component({\n  selector: 'app-access-denied',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RouterModule,\n    RippleModule,\n    TranslateModule\n  ],\n  templateUrl: './access-denied.component.html',\n  styleUrl: './access-denied.component.scss'\n})\nexport class AccessDeniedComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n            \n          \n          \n            {{'access-denied.access_denied' | translate}}\n          \n          {{'access-denied.insufficient_permission' | translate}}\n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{\\'access-denied.access_denied\\' | translate}}                    {{\\'access-denied.insufficient_permission\\' | translate}}                                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccessDeniedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertsComponent.html":{"url":"components/AlertsComponent.html","title":"component - AlertsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/alerts/alerts.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alerts\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./alerts.component.html\n            \n\n\n\n            \n                styleUrl\n                ./alerts.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-alerts',\n  standalone: true,\n  imports: [],\n  templateUrl: './alerts.component.html',\n  styleUrl: './alerts.component.scss'\n})\nexport class AlertsComponent {\n\n}\n\n    \n\n    \n        alerts works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'alerts works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                replaceThemeLink\n                            \n                            \n                                    Private\n                                restoreScale\n                            \n                            \n                                    Private\n                                restoreTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, layoutService: LayoutService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        replaceThemeLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    replaceThemeLink(href: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        restoreScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        restoreTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Inject, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LayoutService } from './core/services/layout.service';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  constructor(\n    translate: TranslateService,\n    private layoutService: LayoutService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {\n    translate.setDefaultLang('en');\n    translate.addLangs(['en']);\n    translate.use('en');\n  }\n  ngOnInit(): void {\n    this.layoutService.restoreConfig();\n    this.restoreScale();\n  }\n\n  ngAfterViewInit() {\n    this.restoreTheme();\n  }\n\n  private restoreScale() {\n    this.document.documentElement.style.fontSize =\n      this.layoutService.config.scale + 'px';\n  }\n\n  private restoreTheme() {\n    const themeLink = (\n      this.document.getElementById('theme-css')\n    );\n    const newHref = themeLink\n      .getAttribute('href')!\n      .replace('lara-light-blue', this.layoutService.config.theme);\n    this.replaceThemeLink(newHref);\n  }\n\n  private replaceThemeLink(href: string) {\n    const id = 'theme-css';\n    const themeLink = (\n      this.document.getElementById('theme-css')\n    );\n    const cloneLinkElement = themeLink.cloneNode(true);\n\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n\n    themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n    themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppConfig.html":{"url":"interfaces/AppConfig.html","title":"interface - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The above code is defining an interface named AppConfig in TypeScript. This interface has several\nproperties such as inputStyle, colorScheme, theme, ripple, menuMode, and scale. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe LayoutService class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colorScheme\n                                        \n                                \n                                \n                                        \n                                            inputStyle\n                                        \n                                \n                                \n                                        \n                                            menuMode\n                                        \n                                \n                                \n                                        \n                                            ripple\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorScheme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    colorScheme: string; is declaring a property named colorScheme of type string in the\nAppConfig interface. This property represents the color scheme of the layout and can have values\nsuch as 'light' or 'dark'. It is used in various functions of the LayoutService class to\ndetermine the current color scheme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputStyle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    inputStyle: string; is declaring a property named inputStyle of type string in the\nAppConfig interface. This property represents the style of the input elements in the layout and\ncan have values such as 'outlined' or 'filled'. It is used in various functions of the\nLayoutService class to determine the current input style of the layout and apply appropriate\nstyles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuMode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuMode: string; is declaring a property named menuMode of type string in the AppConfig\ninterface. This property represents the mode of the menu and can have values such as 'static',\n'overlay', or 'horizontal'. It is used in various functions of the LayoutService class to\ndetermine the behavior of the menu based on the selected mode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ripple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ripple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ripple: boolean; property in the AppConfig interface represents a configuration option for\nwhether or not to enable ripple effects on UI elements. If ripple is set to true, then UI\nelements such as buttons and links will have a ripple effect when clicked. If ripple is set to\nfalse, then no ripple effect will be applied.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    scale: number; is declaring a property named scale of type number in the AppConfig\ninterface. This property represents the scale of the layout and is used to adjust the size of\nvarious elements in the layout. The default value of scale is set to 14 in the config object\nof the LayoutService class.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    theme: string; is declaring a property named theme of type string in the AppConfig\ninterface. This property represents the theme of the layout and can have values such as\n'lara-light-blue', 'lara-dark-blue', or 'lara-green'. It is used in various functions of the\nLayoutService class to determine the current theme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/app.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authState\n                                        \n                                \n                                \n                                        \n                                            membersState\n                                        \n                                \n                                \n                                        \n                                            organizationState\n                                        \n                                \n                                \n                                        \n                                            platformState\n                                        \n                                \n                                \n                                        \n                                            projectState\n                                        \n                                \n                                \n                                        \n                                            roleState\n                                        \n                                \n                                \n                                        \n                                            singleProjectState\n                                        \n                                \n                                \n                                        \n                                            singleTeamState\n                                        \n                                \n                                \n                                        \n                                            teamState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authState:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        membersState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        membersState:         MembersState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MembersState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationState:         OrganizationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganizationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformState:         PlatformState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectState:         ProjectState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProjectState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleState:         RoleState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleProjectState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleProjectState:         SingleProjectState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SingleProjectState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleTeamState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleTeamState:         SingleTeamState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SingleTeamState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamState:         TeamState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TeamState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthEffects } from './auth/auth.effects';\nimport { AuthState, authReducer } from './auth/auth.reducer';\nimport { MembersEffects } from './members/members.effects';\nimport { MembersState, membersReducer } from './members/members.reducer';\nimport { OrganizationEffects } from './organization/organization.effects';\nimport {\n  OrganizationState,\n  organizationReducer,\n} from './organization/organization.reducer';\nimport { ProjectEffects } from './project/project.effects';\nimport { ProjectState, projectReducer } from './project/project.reducer';\nimport { RoleEffects } from './role/role.effects';\nimport { RoleState, roleReducer } from './role/role.reducer';\nimport { TeamEffects } from './team/team.effects';\nimport { TeamState, teamReducer } from './team/team.reducer';\nimport { PlatformState, platformReducer } from './platform/platform.reducer';\nimport { PlatformEffects } from './platform/platform.effects';\nimport { SingleTeamEffects } from './single-team/single-team.effects';\nimport { SingleTeamState, singleTeamReducer } from './single-team/single-team.reducer';\nimport { SingleProjectState, singleProjectReducer } from './single-project/single-project.reducer';\nimport { SingleProjectEffects } from './single-project/single-project.effects';\n\nexport interface AppState {\n  authState: AuthState;\n  organizationState: OrganizationState;\n  membersState: MembersState;\n  roleState: RoleState;\n  teamState: TeamState;\n  projectState: ProjectState;\n  platformState: PlatformState;\n  singleTeamState: SingleTeamState;\n  singleProjectState: SingleProjectState;\n}\n\nexport const appEfects = [\n  AuthEffects,\n  OrganizationEffects,\n  MembersEffects,\n  RoleEffects,\n  TeamEffects,\n  ProjectEffects,\n  PlatformEffects,\n  SingleTeamEffects,\n  SingleProjectEffects,\n];\n\nexport const appStore = {\n  authState: authReducer,\n  organizationState: organizationReducer,\n  membersState: membersReducer,\n  roleState: roleReducer,\n  teamState: teamReducer,\n  projectState: projectReducer,\n  platformState: platformReducer,\n  singleTeamState: singleTeamReducer,\n  singleProjectState: singleProjectReducer,\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n})\nexport class AuthComponent {}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInvitation$\n                            \n                            \n                                acceptInvitationSuccess$\n                            \n                            \n                                authenticate$\n                            \n                            \n                                authenticationSuccess$\n                            \n                            \n                                forgotPassword$\n                            \n                            \n                                loadCurrentUser$\n                            \n                            \n                                registerNewUser$\n                            \n                            \n                                registerNewUserSuccess$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signOut$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, jwtService: JwtService, invitationService: InvitationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/auth/auth.effects.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitation$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitation),\n      switchMap((request) =>\n        this.invitationService.acceptInvitation(request.invitationHash, request.dto).pipe(\n          map(() => {\n            return acceptInvitationSuccess({\n              username: request.dto.username,\n              password: request.dto.password,\n            });\n          }),\n          catchError((error) => of(acceptInvitationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitationSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:111\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../../services/api/auth.api.service';\nimport { JwtService } from '../../services/token-storage.service';\nimport {\n  acceptInvitation,\n  acceptInvitationFailure,\n  acceptInvitationSuccess,\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  signOut,\n} from './auth.actions';\nimport { InvitationService } from '../../services/api/invitation.api.service';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private invitationService: InvitationService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticate$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  );\n\n  forgotPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  resetPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  signOut$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  registerNewUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  registerNewUserSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n\n  acceptInvitation$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitation),\n      switchMap((request) =>\n        this.invitationService.acceptInvitation(request.invitationHash, request.dto).pipe(\n          map(() => {\n            return acceptInvitationSuccess({\n              username: request.dto.username,\n              password: request.dto.password,\n            });\n          }),\n          catchError((error) => of(acceptInvitationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  acceptInvitationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitationSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/auth.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                me\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/auth.api.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: AuthenticateRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            AuthenticateRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n            \n                \nisUsernameTaken(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(dto: ResetPasswordRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ResetPasswordRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { api } from './api';\nimport { TokenDto } from '../../domain/dto/token.dto';\nimport { Observable } from 'rxjs';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { ResetPasswordRequestDto } from '../../domain/dto/requests/reset-password-request.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  refreshToken(refreshToken: string): Observable {\n    return this.http.post(\n      api.authUrl + '/refreshToken',\n      { refreshToken: refreshToken },\n      api.noAuthOptions\n    );\n  }\n\n  authenticate(request: AuthenticateRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/authenticate',\n      request,\n      api.noAuthOptions\n    );\n  }\n\n  me(): Observable {\n    return this.http.get(api.authUrl + '/me', api.authOptions);\n  }\n\n  isUsernameTaken(username: string): Observable {\n    const params = new HttpParams().set('username', username);\n    return this.http.get(api.authUrl + '/username/taken', {\n      ...api.noAuthOptions,\n      params,\n    });\n  }\n\n  forgotPassword(username: string): Observable {\n    return this.http.post(\n      api.authUrl + '/forgot-password',\n      { username: username },\n      api.noAuthOptions\n    );\n  }\n\n  resetPassword(dto: ResetPasswordRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/reset-password',\n      dto,\n      api.noAuthOptions\n    );\n  }\n\n  register(dto: RegisterRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/register',\n      dto,\n      api.noAuthOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            acceptInvitationError\n                                        \n                                \n                                \n                                        \n                                            credentials\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            forgotPasswordError\n                                        \n                                \n                                \n                                        \n                                            isUsernameAvialable\n                                        \n                                \n                                \n                                        \n                                            registrationError\n                                        \n                                \n                                \n                                        \n                                            resetPasswordError\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            usernameCheckError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acceptInvitationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acceptInvitationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:         AuthenticateRequestDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticateRequestDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forgotPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUsernameAvialable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isUsernameAvialable:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         Token | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Token | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usernameCheckError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usernameCheckError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Token } from '../../domain/models/token.entity';\nimport { User } from '../../domain/models/user.entity';\nimport {\n  acceptInvitation,\n  acceptInvitationFailure,\n  acceptInvitationSuccess,\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  setCurrentUser,\n  setToken,\n  signOut,\n} from './auth.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface AuthState {\n  user: User | null;\n  error: any | null;\n  forgotPasswordError: null | any;\n  resetPasswordError: null | any;\n  registrationError: null | any;\n  acceptInvitationError: null | any;\n  usernameCheckError: null | any;\n  isUsernameAvialable: boolean | null;\n  token: Token | null;\n  credentials: AuthenticateRequestDto | null;\n  status: StateStatus;\n}\n\nexport const initialState: AuthState = {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  acceptInvitationError: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n};\n\nexport const authReducer = createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, { error }) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Reset Password\n  on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, { error }) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Register new user\n  on(registerNewUser, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Register new user success\n  on(registerNewUserSuccess, (state) => ({\n    ...state,\n    registrationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Register new user failure\n  on(registerNewUserFailure, (state, { error }) => ({\n    ...state,\n    registrationError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Accept Invitation\n  on(acceptInvitation, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Accept invitation success\n  on(acceptInvitationSuccess, (state) => ({\n    ...state,\n    acceptInvitationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Accept invitation failure\n  on(acceptInvitationFailure, (state, { error }) => ({\n    ...state,\n    acceptInvitationError: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticateRequestDto.html":{"url":"interfaces/AuthenticateRequestDto.html","title":"interface - AuthenticateRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticateRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/authenticate-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticateRequestDto {\n    username: string,\n    password: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CloseComponent.html":{"url":"components/CloseComponent.html","title":"component - CloseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CloseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/close/close.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-close\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./close.component.html\n            \n\n\n\n            \n                styleUrl\n                ./close.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-close',\n  standalone: true,\n  imports: [],\n  templateUrl: './close.component.html',\n  styleUrl: './close.component.scss'\n})\nexport class CloseComponent {\n\n}\n\n    \n\n    \n        close works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'close works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CloseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigComponent.html":{"url":"components/ConfigComponent.html","title":"component - ConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/config/config.component.ts\n\n\n\n    \n        Description\n    \n    \n        The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            SidebarModule\n                            RadioButtonModule\n                            TranslateModule\n                            InputSwitchModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n\n            \n                styleUrl\n                ./config.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    Public\n                                menuService\n                            \n                            \n                                scales\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyScale\n                            \n                            \n                                changeTheme\n                            \n                            \n                                decrementScale\n                            \n                            \n                                incrementScale\n                            \n                            \n                                onConfigButtonClick\n                            \n                            \n                                replaceThemeLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minimal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    visible\n                                \n                                \n                                    scale\n                                \n                                \n                                    menuMode\n                                \n                                \n                                    inputStyle\n                                \n                                \n                                    ripple\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, menuService: MenuService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes two parameters, a LayoutService and a MenuService.\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n\n                                                        \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        minimal\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/config/config.component.ts:37\n                            \n                        \n                \n                    \n                        @Input() minimal: boolean = false; is a decorator that marks the minimal property as an input\nproperty, which means that it can be passed as a value from a parent component to this component.\nThe minimal property is of type boolean and is initialized to false by default. This\nproperty can be used in the component's template to conditionally render certain elements or apply\ndifferent styles based on its value.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyScale\n                        \n                    \n                \n            \n            \n                \napplyScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:179\n                        \n                    \n\n\n            \n                \n                        This function sets the font size of the HTML document to a specified scale.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeTheme\n                        \n                    \n                \n            \n            \n                \nchangeTheme(theme: string, colorScheme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:121\n                        \n                    \n\n\n            \n                \n                        This function changes the theme and color scheme of a webpage by replacing the theme link and\nupdating the layout service configuration.\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \na string representing the new theme to be applied.\n\n\n                                            \n                                        \n                                        \n                                                colorScheme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe colorScheme parameter is a string that represents the color\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decrementScale\n                        \n                    \n                \n            \n            \n                \ndecrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:163\n                        \n                    \n\n\n            \n                \n                        This function decrements the scale property and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementScale\n                        \n                    \n                \n            \n            \n                \nincrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:171\n                        \n                    \n\n\n            \n                \n                        The function increments the scale property by 1 and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigButtonClick\n                        \n                    \n                \n            \n            \n                \nonConfigButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:109\n                        \n                    \n\n\n            \n                \n                        This function shows the configuration sidebar when the config button is clicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceThemeLink\n                        \n                    \n                \n            \n            \n                \nreplaceThemeLink(href: string, onComplete: Function)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:143\n                        \n                    \n\n\n            \n                \n                        This function replaces the href attribute of a link element with a new value and removes the\noriginal link element once the new one has loaded.\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA string representing the URL of the new theme CSS file to be loaded.\n\n\n                                            \n                                        \n                                        \n                                                onComplete\n                                            \n                                                            Function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nonComplete is a callback function that will be executed once\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:57\n                        \n                    \n\n            \n                \n                    - The layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:58\n                        \n                    \n\n            \n                \n                    - The `menuService` parameter is an instance of the\n`MenuService` class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [12, 13, 14, 15, 16]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                        \n                    \n\n            \n                \n                    scales is an array of numbers that represents the available font sizes that can be applied to\nthe HTML document. The default values are [12, 13, 14, 15, 16]. These values are used in\nconjunction with the incrementScale() and decrementScale() methods to adjust the font size of\nthe document.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n\n                \n                    \n                        getvisible()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:62\n                                \n                            \n\n                \n                    \n                        setvisible(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n\n                \n                    \n                        getscale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:70\n                                \n                            \n\n                \n                    \n                        setscale(_val: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:74\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        menuMode\n                    \n                \n\n                \n                    \n                        getmenuMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:79\n                                \n                            \n\n                \n                    \n                        setmenuMode(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:83\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        inputStyle\n                    \n                \n\n                \n                    \n                        getinputStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:88\n                                \n                            \n\n                \n                    \n                        setinputStyle(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:92\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ripple\n                    \n                \n\n                \n                    \n                        getripple()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:97\n                                \n                            \n\n                \n                    \n                        setripple(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:101\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\n\n/** The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings. */\n@Component({\n  selector: 'app-config',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    SidebarModule,\n    RadioButtonModule,\n    TranslateModule,\n    InputSwitchModule,\n    FormsModule\n  ],\n  styleUrl: './config.component.scss',\n  templateUrl: './config.component.html',\n})\nexport class ConfigComponent {\n  /** `@Input() minimal: boolean = false;` is a decorator that marks the `minimal` property as an input\n  property, which means that it can be passed as a value from a parent component to this component.\n  The `minimal` property is of type `boolean` and is initialized to `false` by default. This\n  property can be used in the component's template to conditionally render certain elements or apply\n  different styles based on its value. */\n  @Input() minimal: boolean = false;\n\n  /** `scales` is an array of numbers that represents the available font sizes that can be applied to\n  the HTML document. The default values are `[12, 13, 14, 15, 16]`. These values are used in\n  conjunction with the `incrementScale()` and `decrementScale()` methods to adjust the font size of\n  the document. */\n  scales: number[] = [12, 13, 14, 15, 16];\n\n  /**\n   * This is a constructor function that takes two parameters, a LayoutService and a MenuService.\n   * @param {LayoutService} layoutService - The layoutService parameter is a dependency injection of\n   * a service that provides functionality related to the layout of the application, such as managing\n   * the theme, language, and other UI-related settings. It is likely used to control the overall\n   * look and feel of the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the\n   * `MenuService` class, which is likely used to manage and manipulate the application's menu or\n   * navigation system. It may contain methods for adding, removing, or updating menu items, as well\n   * as handling user interactions with the menu.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public menuService: MenuService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {}\n\n  get visible(): boolean {\n    return this.layoutService.state.configSidebarVisible;\n  }\n\n  set visible(_val: boolean) {\n    this.layoutService.state.configSidebarVisible = _val;\n  }\n\n  get scale(): number {\n    return this.layoutService.config.scale;\n  }\n\n  set scale(_val: number) {\n    this.layoutService.config.scale = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get menuMode(): string {\n    return this.layoutService.config.menuMode;\n  }\n\n  set menuMode(_val: string) {\n    this.layoutService.config.menuMode = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get inputStyle(): string {\n    return this.layoutService.config.inputStyle;\n  }\n\n  set inputStyle(_val: string) {\n    this.layoutService.config.inputStyle = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get ripple(): boolean {\n    return this.layoutService.config.ripple;\n  }\n\n  set ripple(_val: boolean) {\n    this.layoutService.config.ripple = _val;\n    this.layoutService.saveConfig();\n  }\n\n  /**\n   * This function shows the configuration sidebar when the config button is clicked.\n   */\n  onConfigButtonClick() {\n    this.layoutService.showConfigSidebar();\n  }\n\n  /**\n   * This function changes the theme and color scheme of a webpage by replacing the theme link and\n   * updating the layout service configuration.\n   * @param {string} theme - a string representing the new theme to be applied.\n   * @param {string} colorScheme - The `colorScheme` parameter is a string that represents the color\n   * scheme to be applied to the theme. It is used in conjunction with the `theme` parameter to\n   * update the theme of the application.\n   */\n  changeTheme(theme: string, colorScheme: string) {\n    const themeLink = this.document.getElementById('theme-css');\n    const newHref = themeLink\n      .getAttribute('href')!\n      .replace(this.layoutService.config.theme, theme);\n    this.layoutService.config.colorScheme;\n    this.replaceThemeLink(newHref, () => {\n      this.layoutService.config.theme = theme;\n      this.layoutService.config.colorScheme = colorScheme;\n      this.layoutService.onConfigUpdate();\n    });\n  }\n\n  /**\n   * This function replaces the href attribute of a link element with a new value and removes the\n   * original link element once the new one has loaded.\n   * @param {string} href - A string representing the URL of the new theme CSS file to be loaded.\n   * @param {Function} onComplete - `onComplete` is a callback function that will be executed once\n   * the new theme link has been loaded and applied. It is typically used to perform additional\n   * actions or update the UI after the theme has been changed.\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  replaceThemeLink(href: string, onComplete: Function) {\n    const id = 'theme-css';\n    const themeLink = this.document.getElementById('theme-css');\n    const cloneLinkElement = themeLink.cloneNode(true);\n\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n\n    themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n\n    cloneLinkElement.addEventListener('load', () => {\n      themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n      onComplete();\n    });\n  }\n\n  /**\n   * This function decrements the scale property and applies the new scale value.\n   */\n  decrementScale() {\n    this.scale--;\n    this.applyScale();\n  }\n\n  /**\n   * The function increments the scale property by 1 and applies the new scale value.\n   */\n  incrementScale() {\n    this.scale++;\n    this.applyScale();\n  }\n\n  /**\n   * This function sets the font size of the HTML document to a specified scale.\n   */\n  applyScale() {\n    this.document.documentElement.style.fontSize = this.scale + 'px';\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  {{ \"config.scale\" | translate }}\n  \n    \n    \n      \n    \n    \n  \n\n  \n    {{ \"config.menu_type\" | translate }}\n    \n      \n      {{ \"config.static\" | translate }}\n    \n    \n      \n      {{ \"config.overlay\" | translate }}\n    \n  \n\n  \n    {{ \"config.input_style\" | translate }}\n    \n      \n        \n        {{\n          \"config.outlined\" | translate\n        }}\n      \n      \n        \n        {{\n          \"config.filled\" | translate\n        }}\n      \n    \n\n    {{ \"config.ripple_effect\" | translate }}\n    \n  \n\n  Bootstrap\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design Compact\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Tailwind\n  \n    \n      \n        \n      \n    \n  \n\n  Fluent UI\n  \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2022\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2021\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \"config.scale\" | translate }}                                {{ \"config.menu_type\" | translate }}                {{ \"config.static\" | translate }}                    {{ \"config.overlay\" | translate }}            {{ \"config.input_style\" | translate }}                          {{          \"config.outlined\" | translate        }}                            {{          \"config.filled\" | translate        }}              {{ \"config.ripple_effect\" | translate }}        Bootstrap                                                                                                                      Material Design                                                                                                                      Material Design Compact                                                                                                                      Tailwind                                  Fluent UI                                  PrimeOne Design - 2022                                                                                                                                                                                                                                      PrimeOne Design - 2021                                                                                                                                                                                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateOrganizationComponent.html":{"url":"components/CreateOrganizationComponent.html","title":"component - CreateOrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateOrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/create-organization/create-organization.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-create-organization\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            ToastModule\n                            InputTextModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./create-organization.component.html\n            \n\n\n\n            \n                styleUrl\n                ./create-organization.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganizationForm\n                            \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                    \n                                nameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                organizationSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeSlugAndCheckValidity\n                            \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                createOrganization\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService, store: Store, formBuilder: FormBuilder, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/create-organization/create-organization.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeSlugAndCheckValidity\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeSlugAndCheckValidity(organizationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organizationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganizationForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: ['', [Validators.required]],\n    slug: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        organizationSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { CreateOrganizationRequestDto } from '../../core/domain/dto/requests/create-organization-request.dto';\nimport { OrganizationService } from '../../core/services/api/organization.api.service';\nimport { AppState } from '../../core/state/app.state';\nimport {\n  createOrganization,\n  loadCurrentOrganization,\n} from '../../core/state/organization/organization.actions';\nimport {\n  isLoadingOrganization,\n  selectCurrentOrganization,\n  selectOrganizationError,\n} from '../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-create-organization',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    ToastModule,\n    InputTextModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './create-organization.component.html',\n  styleUrl: './create-organization.component.scss',\n})\nexport class CreateOrganizationComponent\n  implements AfterViewInit, OnInit, OnDestroy\n{\n  @ViewChild('slug') slugInput!: ElementRef;\n  @ViewChild('name') nameInput!: ElementRef;\n\n  constructor(\n    private organizationService: OrganizationService,\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  createOrganizationForm = this.formBuilder.group({\n    name: ['', [Validators.required]],\n    slug: ['', [Validators.required]],\n  });\n\n  isSlugTaken: boolean | null = null;\n  isLoading = this.store.select(isLoadingOrganization);\n\n  private slugCheckSubscription?: Subscription;\n  private organizationSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.slugInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkSlug(data));\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.nameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.changeSlugAndCheckValidity(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentOrganization());\n\n    this.organizationSubscription = this.store\n      .select(selectCurrentOrganization)\n      .subscribe((organization) => {\n        if (organization != null) {\n          this.router.navigate(['/home']);\n          this.errorSubscription?.unsubscribe();\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectOrganizationError)\n      .subscribe((error) => {\n        if (\n          error != null &&\n          error.status !== 0 &&\n          error.status !== 404 &&\n          error.status !== 401\n        ) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('create-organization.error'),\n            detail: this.translateService.instant(\n              'create-organization.error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.slugCheckSubscription?.unsubscribe();\n    this.organizationSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n  }\n\n  createOrganization() {\n    const dto: CreateOrganizationRequestDto = {\n      name: this.createOrganizationForm.get('name')?.value ?? '',\n      slug: this.createOrganizationForm.get('slug')?.value ?? '',\n    };\n    this.store.dispatch(createOrganization(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private changeSlugAndCheckValidity(organizationName: string) {\n    const slug = this.toSlugValue(organizationName);\n    this.createOrganizationForm.get('slug')?.setValue(slug);\n    this.checkSlug(slug);\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.organizationService\n      .isSlugTaken(slug)\n      .subscribe({\n        next: (result) => {\n          this.isSlugTaken = result;\n        },\n        error: () => {\n          this.isSlugTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n        \n          \n            {{ \"create-organization.welcome_message\" | translate }}\n          \n          {{\n            \"create-organization.welcome_description\" | translate\n          }}\n        \n        \n          \n            {{ \"create-organization.name_label\" | translate }}\n            \n              \n              \n            \n            {{ \"create-organization.name_is_required\" | translate }}\n\n            {{ \"create-organization.slug_label\" | translate }}\n            \n              @if (isSlugTaken !== null && !isSlugTaken) {\n                \n              } @else {\n                \n              }\n              \n            \n            {{ \"create-organization.slug_is_required\" | translate }}\n\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{ \"create-organization.welcome_message\" | translate }}                    {{            \"create-organization.welcome_description\" | translate          }}                                      {{ \"create-organization.name_label\" | translate }}                                                                {{ \"create-organization.name_is_required\" | translate }}            {{ \"create-organization.slug_label\" | translate }}                          @if (isSlugTaken !== null && !isSlugTaken) {                              } @else {                              }                                      {{ \"create-organization.slug_is_required\" | translate }}                                          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateOrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateOrganizationRequestDto.html":{"url":"interfaces/CreateOrganizationRequestDto.html","title":"interface - CreateOrganizationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateOrganizationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-organization-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateOrganizationRequestDto {\n  slug: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateProjectDebugFileDto.html":{"url":"interfaces/CreateProjectDebugFileDto.html","title":"interface - CreateProjectDebugFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateProjectDebugFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-project-debug-file.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:     File\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     File\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         DebugFileType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DebugFileType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DebugFileType } from \"../../models/enums/debug-file-type.enum\";\n\nexport interface CreateProjectDebugFileDto {\n    type: DebugFileType;\n    file: File;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateProjectReleaseDto.html":{"url":"interfaces/CreateProjectReleaseDto.html","title":"interface - CreateProjectReleaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateProjectReleaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-project-release.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateProjectReleaseDto {\n    version: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateProjectRequestDto.html":{"url":"interfaces/CreateProjectRequestDto.html","title":"interface - CreateProjectRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateProjectRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-project-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateProjectRequestDto {\n    name: string;\n    platformId: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateTeamRequestDto.html":{"url":"interfaces/CreateTeamRequestDto.html","title":"interface - CreateTeamRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateTeamRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-team-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateTeamRequestDto {\n    slug: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/details/details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-details',\n  standalone: true,\n  imports: [],\n  templateUrl: './details.component.html',\n  styleUrl: './details.component.scss'\n})\nexport class DetailsComponent {\n\n}\n\n    \n\n    \n        details works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'details works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DevicesComponent.html":{"url":"components/DevicesComponent.html","title":"component - DevicesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DevicesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/devices/devices.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-devices\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./devices.component.html\n            \n\n\n\n            \n                styleUrl\n                ./devices.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-devices',\n  standalone: true,\n  imports: [],\n  templateUrl: './devices.component.html',\n  styleUrl: './devices.component.scss'\n})\nexport class DevicesComponent {\n\n}\n\n    \n\n    \n        devices works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'devices works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DevicesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/documentation/documentation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./documentation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-documentation',\n  standalone: true,\n  imports: [],\n  templateUrl: './documentation.component.html',\n  styleUrl: './documentation.component.scss'\n})\nexport class DocumentationComponent {\n\n}\n\n    \n\n    \n        documentation works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'documentation works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EnvironmentsTableComponent.html":{"url":"components/EnvironmentsTableComponent.html","title":"component - EnvironmentsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EnvironmentsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/environments-table/environments-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-environments-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            ToastModule\n                            ConfirmDialogModule\n                            DialogModule\n                            TableModule\n                            InputTextModule\n                            ReactiveFormsModule\n                            FormsModule\n                                AccessDeniedComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./environments-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./environments-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dt\n                            \n                            \n                                environments\n                            \n                            \n                                environmentsForm\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isAddNewDialogVisible\n                            \n                            \n                                isLoadingCreateNew\n                            \n                            \n                                isLoadingEnvironments\n                            \n                            \n                                isLoadingRemoveEnvironments\n                            \n                            \n                                selectedEnvironments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                createNewEnvironment\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                removeEnvironments\n                            \n                            \n                                    Private\n                                resetEnvironmentsForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                showDeleteConfirmation\n                            \n                            \n                                showDeleteSelectionConfirmation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enableAddAction\n                            \n                            \n                                enableEditAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableRemoveAction\n                            \n                            \n                                enableSorting\n                            \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, formBuilder: FormBuilder, confirmationService: ConfirmationService, translateService: TranslateService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:89\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableEditAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableRemoveAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/environments-table/environments-table.component.ts:74\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewEnvironment\n                        \n                    \n                \n            \n            \n                \ncreateNewEnvironment()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:183\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeEnvironments\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeEnvironments(environments: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:226\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                environments\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetEnvironmentsForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetEnvironmentsForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:266\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:178\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteConfirmation(environment: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                environment\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteSelectionConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteSelectionConfirmation(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/environments-table/environments-table.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environments\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectSingleProjectEnvironments)\n    .pipe(\n      map(\n        (environments) =>\n          environments?.map((environment) => ({ environment })) ?? [],\n      ),\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        environmentsForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    environment: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNew\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectAddEnvironments)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingEnvironments\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectEnvironments)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingRemoveEnvironments\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    isLoadingSingleProjectRemoveEnvironments,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedEnvironments\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/environments-table/environments-table.component.ts:102\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport {\n  ReactiveFormsModule,\n  FormsModule,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService, ConfirmationService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { AccessDeniedComponent } from '../access-denied/access-denied.component';\nimport { AppState } from '../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport {\n  isLoadingSingleProjectAddEnvironments,\n  isLoadingSingleProjectEnvironments,\n  isLoadingSingleProjectRemoveEnvironments,\n  selectAddProjectEnvironmentsStatus,\n  selectRemoveProjectEnvironmentsStatus,\n  selectSingleProjectEnvironments,\n} from '../../../core/state/single-project/single-project.selectors';\nimport { filter, map, take } from 'rxjs';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport {\n  addProjectEnvironments,\n  loadProjectEnvironments,\n  removeProjectEnvironments,\n} from '../../../core/state/single-project/single-project.actions';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\n\n@Component({\n  selector: 'app-environments-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    ToastModule,\n    ConfirmDialogModule,\n    DialogModule,\n    TableModule,\n    InputTextModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AccessDeniedComponent,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './environments-table.component.html',\n  styleUrl: './environments-table.component.scss',\n})\nexport class EnvironmentsTableComponent implements OnInit {\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n    private messageService: MessageService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n\n  @Input()\n  project?: Project;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  @Input()\n  enableEditAction: boolean = false;\n\n  @Input()\n  enableRemoveAction: boolean = false;\n\n  environmentsForm = this.formBuilder.group({\n    environment: ['', [Validators.required]],\n  });\n  isAddNewDialogVisible: boolean = false;\n\n  selectedEnvironments: { environment: string }[] = [];\n  environments = this.store\n    .select(selectSingleProjectEnvironments)\n    .pipe(\n      map(\n        (environments) =>\n          environments?.map((environment) => ({ environment })) ?? [],\n      ),\n    );\n  isLoadingEnvironments = this.store.select(isLoadingSingleProjectEnvironments);\n  isLoadingCreateNew = this.store.select(isLoadingSingleProjectAddEnvironments);\n  isLoadingRemoveEnvironments = this.store.select(\n    isLoadingSingleProjectRemoveEnvironments,\n  );\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  );\n\n  ngOnInit(): void {\n    this.store.dispatch(\n      loadProjectEnvironments({ projectId: this.project?.projectId ?? '' }),\n    );\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  showDeleteConfirmation(environment: string, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'environments-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant(\n        'environments-table.delete_confirmation',\n      ),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeEnvironments([environment]);\n      },\n      reject: () => {},\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  showDeleteSelectionConfirmation(event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'environments-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant(\n        'environments-table.delete_confirmation',\n      ),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeEnvironments(\n          this.selectedEnvironments.map((value) => value.environment),\n        );\n      },\n      reject: () => {},\n    });\n  }\n\n  showAddDialog() {\n    this.resetEnvironmentsForm();\n    this.isAddNewDialogVisible = true;\n  }\n\n  createNewEnvironment() {\n    const environments: string[] = [\n      this.environmentsForm.get('environment')?.value ?? '',\n    ];\n    this.store.dispatch(\n      addProjectEnvironments({\n        projectId: this.project?.projectId ?? '',\n        environments: environments,\n      }),\n    );\n    this.store\n      .select(selectAddProjectEnvironmentsStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('environments-table.error'),\n            detail: this.translateService.instant(\n              'environments-table.failed_to_create_environment',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'environments-table.success',\n            ),\n            detail: this.translateService.instant(\n              'environments-table.environment_created',\n            ),\n          });\n          this.isAddNewDialogVisible = !this.isAddNewDialogVisible;\n        }\n      });\n  }\n\n  private removeEnvironments(environments: string[]) {\n    this.store.dispatch(\n      removeProjectEnvironments({\n        projectId: this.project?.projectId ?? '',\n        environments: environments,\n      }),\n    );\n    this.store\n      .select(selectRemoveProjectEnvironmentsStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('environments-table.error'),\n            detail: this.translateService.instant(\n              'environments-table.failed_to_delete_environments',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'environments-table.success',\n            ),\n            detail: this.translateService.instant(\n              'environments-table.removed_environments',\n            ),\n          });\n          this.selectedEnvironments = [];\n        }\n      });\n  }\n\n  private resetEnvironmentsForm() {\n    this.environmentsForm = this.formBuilder.group({\n      environment: ['', [Validators.required]],\n    });\n  }\n}\n\n    \n\n    \n        \n\n@if ((hasReadPermission | async) === false) {\n  \n} @else {\n  \n    \n      \n        \n          \n          \n        \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          \n            {{ \"environments-table.environment\" | translate }}\n            \n            \n          \n        \n        \n          \n            {{ \"environments-table.actions\" | translate }}\n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          {{ environment.environment }}\n        \n        \n            \n          \n      \n    \n\n    \n        \n          {{ \"environments-table.no_environments_found\" | translate }}\n        \n      \n  \n}\n\n\n  \n    \n      \n        {{ \"environments-table.environment_label\" | translate }}\n          \n        {{ \"environments-table.environment_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ((hasReadPermission | async) === false) {  } @else {                                                                                                                                            {{ \"environments-table.environment\" | translate }}                                                                        {{ \"environments-table.actions\" | translate }}                                                                                  {{ environment.environment }}                                                                      {{ \"environments-table.no_environments_found\" | translate }}                }                    {{ \"environments-table.environment_label\" | translate }}                  {{ \"environments-table.environment_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EnvironmentsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileDto.html":{"url":"interfaces/FileDto.html","title":"interface - FileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/file.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentType\n                                        \n                                \n                                \n                                        \n                                            createdTime\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            fileSize\n                                        \n                                \n                                \n                                        \n                                            stream\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stream\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stream:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileDto {\n  fileName: string;\n  url: string;\n  contentType: string;\n  fileSize: number;\n  createdTime: Date;\n  stream: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n  by\n  DRadman\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  by  DRadman'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputTextModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                forgotPasswordForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AppState } from '../../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router, RouterModule } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectForgotPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  forgotPassword,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputTextModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n})\nexport class ForgotPasswordComponent implements AfterViewInit, OnInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService\n  ) {}\n\n  forgotPasswordForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectForgotPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 404) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.user_does_not_exist'\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.error_description'\n              ),\n            });\n          }\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.forgot-password.success'\n            ),\n            detail: this.translateService.instant(\n              'auth.forgot-password.check_your_email'\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  // eslint-disable no-non-null-asserted-optional-chain\n  forgotPassword() {\n    this.store.dispatch(\n      forgotPassword({\n        username: this.forgotPasswordForm.get('username')?.value ?? '',\n      })\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.forgot-password.welcome_message\" | translate }}\n  \n  {{\n    \"auth.forgot-password.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n      \n      } @else if (isUsernameTaken) {\n      \n      } @else {\n      \n      }\n      \n    \n    {{ \"auth.forgot-password.username_is_required\" | translate }}\n    {{ \"auth.forgot-password.username_length\" | translate }}\n\n    \n      {{ \"auth.forgot-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.forgot-password.welcome_message\" | translate }}    {{    \"auth.forgot-password.welcome_description\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {            } @else if (isUsernameTaken) {            } @else {            }              {{ \"auth.forgot-password.username_is_required\" | translate }}    {{ \"auth.forgot-password.username_length\" | translate }}          {{ \"auth.forgot-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForgotPasswordRequestDto.html":{"url":"interfaces/ForgotPasswordRequestDto.html","title":"interface - ForgotPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForgotPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForgotPasswordRequestDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GuidesComponent.html":{"url":"components/GuidesComponent.html","title":"component - GuidesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GuidesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/guides/guides.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-guides\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./guides.component.html\n            \n\n\n\n            \n                styleUrl\n                ./guides.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-guides',\n  standalone: true,\n  imports: [],\n  templateUrl: './guides.component.html',\n  styleUrl: './guides.component.scss'\n})\nexport class GuidesComponent {\n\n}\n\n    \n\n    \n        guides works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'guides works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GuidesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                SidebarComponent\n                                ConfigComponent\n                                FooterComponent\n                            BreadcrumbModule\n                                TopbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                appSidebar\n                            \n                            \n                                    \n                                appTopbar\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Private\n                                    Optional\n                                currentUserErrorSubscription\n                            \n                            \n                                home\n                            \n                            \n                                items\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuOutsideClickListener\n                            \n                            \n                                    Private\n                                    Optional\n                                organizationErrorSubscription\n                            \n                            \n                                    Private\n                                overlayMenuOpenSubscription\n                            \n                            \n                                profileMenuOutsideClickListener\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockBodyScroll\n                            \n                            \n                                    Private\n                                createBreadcrumbs\n                            \n                            \n                                hideMenu\n                            \n                            \n                                hideProfileMenu\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                unblockBodyScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    containerClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, layoutService: LayoutService, renderer: Renderer2, document: Document, translateService: TranslateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockBodyScroll\n                        \n                    \n                \n            \n            \n                \nblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:243\n                        \n                    \n\n\n            \n                \n                        This function adds a class to the body element of a webpage to block scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBreadcrumbs\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBreadcrumbs(route: ActivatedRoute, url: string, breadcrumbs: MenuItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:177\n                        \n                    \n\n\n            \n                \n                        This function creates breadcrumbs for a given route in a TypeScript application.\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRoute\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe current activated route in the Angular application.\n\n\n                                            \n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe current URL being constructed for the breadcrumb trail.\n\n\n                                            \n                                        \n                                        \n                                                breadcrumbs\n                                            \n                                                        MenuItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    \nbreadcrumbs is an array of MenuItem objects that represent\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     MenuItem[]\n\n                        \n                            \n                                an array of MenuItem objects, which represent the breadcrumbs for a given route.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideMenu\n                        \n                    \n                \n            \n            \n                \nhideMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:218\n                        \n                    \n\n\n            \n                \n                        This function hides the menu and resets related layout service states.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideProfileMenu\n                        \n                    \n                \n            \n            \n                \nhideProfileMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:232\n                        \n                    \n\n\n            \n                \n                        This function hides the profile sidebar menu and removes the outside click listener.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unblockBodyScroll\n                        \n                    \n                \n            \n            \n                \nunblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:254\n                        \n                    \n\n\n            \n                \n                        This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appSidebar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SidebarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(SidebarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appTopbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TopbarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(TopbarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        currentUserErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        home\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        organizationErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayMenuOpenSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileMenuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        containerClass\n                    \n                \n\n                \n                    \n                        getcontainerClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/home.component.ts:268\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\nimport { Subscription, filter } from 'rxjs';\nimport { LayoutService } from '../../core/services/layout.service';\nimport { AppState } from '../../core/state/app.state';\nimport { loadCurrentUser } from '../../core/state/auth/auth.actions';\nimport { selectCurrentUser } from '../../core/state/auth/auth.selectors';\nimport { loadCurrentOrganization } from '../../core/state/organization/organization.actions';\nimport { selectOrganizationError } from '../../core/state/organization/organization.selectors';\nimport { ConfigComponent } from './components/config/config.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { TopbarComponent } from './components/topbar/topbar.component';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [\n    CommonModule,\n    SidebarComponent,\n    ConfigComponent,\n    FooterComponent,\n    BreadcrumbModule,\n    TopbarComponent,\n  ],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild(SidebarComponent) appSidebar!: SidebarComponent;\n  @ViewChild(TopbarComponent) appTopbar!: TopbarComponent;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    public layoutService: LayoutService,\n    public renderer: Renderer2,\n    @Inject(DOCUMENT) private document: Document,\n    private translateService: TranslateService,\n    private route: ActivatedRoute,\n  ) {\n    this.overlayMenuOpenSubscription =\n      this.layoutService.overlayOpen$.subscribe(() => {\n        if (!this.menuOutsideClickListener) {\n          this.menuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appSidebar.el.nativeElement.isSameNode(event.target) ||\n                this.appSidebar.el.nativeElement.contains(event.target) ||\n                this.appTopbar.menuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.menuButton.nativeElement.contains(event.target)\n              );\n\n              if (isOutsideClicked) {\n                this.hideMenu();\n              }\n            },\n          );\n        }\n\n        if (!this.profileMenuOutsideClickListener) {\n          this.profileMenuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appTopbar.menu.nativeElement.isSameNode(event.target) ||\n                this.appTopbar.menu.nativeElement.contains(event.target) ||\n                this.appTopbar.topbarMenuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.topbarMenuButton.nativeElement.contains(\n                  event.target,\n                )\n              );\n\n              if (isOutsideClicked) {\n                this.hideProfileMenu();\n              }\n            },\n          );\n        }\n\n        if (this.layoutService.state.staticMenuMobileActive) {\n          this.blockBodyScroll();\n        }\n      });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.hideMenu();\n        this.hideProfileMenu();\n\n        this.translateService.stream('sidenav').subscribe({\n          next: () => {\n            this.items = this.createBreadcrumbs(this.route.root) ?? [];\n          },\n        });\n      });\n  }\n\n  currentUser = this.store.select(selectCurrentUser);\n\n  home!: MenuItem;\n  items!: MenuItem[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  menuOutsideClickListener: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  profileMenuOutsideClickListener: any;\n\n  private currentUserErrorSubscription?: Subscription;\n  private overlayMenuOpenSubscription: Subscription;\n  private organizationErrorSubscription?: Subscription;\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n    this.store.dispatch(loadCurrentOrganization());\n\n    this.home = { icon: 'pi pi-home', routerLink: '/home' };\n  }\n\n  ngAfterViewInit() {\n    this.organizationErrorSubscription = this.store\n      .select(selectOrganizationError)\n      .subscribe((error) => {\n        if (\n          error &&\n          error != null &&\n          error.status !== 0 &&\n          error.status !== 401\n        ) {\n          this.router.navigate(['/create-organization']);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.currentUserErrorSubscription?.unsubscribe();\n    this.organizationErrorSubscription?.unsubscribe();\n\n    if (this.overlayMenuOpenSubscription) {\n      this.overlayMenuOpenSubscription.unsubscribe();\n    }\n\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n    }\n  }\n  /**\n   * This function creates breadcrumbs for a given route in a TypeScript application.\n   * @param {ActivatedRoute} route - The current activated route in the Angular application.\n   * @param {string} [url] - The current URL being constructed for the breadcrumb trail.\n   * @param {MenuItem[]} breadcrumbs - `breadcrumbs` is an array of `MenuItem` objects that represent\n   * the breadcrumb trail for a given route. Each `MenuItem` object has a `label` property that\n   * represents the text to display for the breadcrumb, and a `url` property that represents the URL\n   * for the breadcrumb.\n   * @returns an array of MenuItem objects, which represent the breadcrumbs for a given route.\n   */\n  private createBreadcrumbs(\n    route: ActivatedRoute,\n    url: string = '',\n    breadcrumbs: MenuItem[] = [],\n  ): MenuItem[] {\n    const children: ActivatedRoute[] = route.children;\n\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n\n    for (const child of children) {\n      const routeURL: string = child.snapshot.url\n        .map((segment) => segment.path)\n        .join('/');\n      if (routeURL !== '') {\n        url += `/${routeURL}`;\n      }\n\n      const label = child.snapshot.data['breadcrumb'];\n      if (!(label === null || label === undefined)) {\n        const localizedLabel: string = this.translateService.instant(\n          'sidenav.' + label,\n        );\n        if (breadcrumbs.length == 0) {\n          breadcrumbs.push({ label: localizedLabel, url });\n        } else if (\n          breadcrumbs[breadcrumbs.length - 1].label !== localizedLabel\n        ) {\n          breadcrumbs.push({ label: localizedLabel, routerLink: [url] });\n        }\n      }\n\n      return this.createBreadcrumbs(child, url, breadcrumbs);\n    }\n    return breadcrumbs;\n  }\n\n  /**\n   * This function hides the menu and resets related layout service states.\n   */\n  hideMenu() {\n    this.layoutService.state.overlayMenuActive = false;\n    this.layoutService.state.staticMenuMobileActive = false;\n    this.layoutService.state.menuHoverActive = false;\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n      this.menuOutsideClickListener = null;\n    }\n    this.unblockBodyScroll();\n  }\n\n  /**\n   * This function hides the profile sidebar menu and removes the outside click listener.\n   */\n  hideProfileMenu() {\n    this.layoutService.state.profileSidebarVisible = false;\n    if (this.profileMenuOutsideClickListener) {\n      this.profileMenuOutsideClickListener();\n      this.profileMenuOutsideClickListener = null;\n    }\n  }\n\n  /**\n   * This function adds a class to the body element of a webpage to block scrolling.\n   */\n  blockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.add('blocked-scroll');\n    } else {\n      this.document.body.className += ' blocked-scroll';\n    }\n  }\n\n  /**\n   * This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n   */\n  unblockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.remove('blocked-scroll');\n    } else {\n      this.document.body.className = document.body.className.replace(\n        new RegExp(\n          '(^|\\\\b)' + 'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)',\n          'gi',\n        ),\n        ' ',\n      );\n    }\n  }\n\n  get containerClass() {\n    return {\n      'layout-theme-light': this.layoutService.config.colorScheme === 'light',\n      'layout-theme-dark': this.layoutService.config.colorScheme === 'dark',\n      'layout-overlay': this.layoutService.config.menuMode === 'overlay',\n      'layout-static': this.layoutService.config.menuMode === 'static',\n      'layout-static-inactive':\n        this.layoutService.state.staticMenuDesktopInactive &&\n        this.layoutService.config.menuMode === 'static',\n      'layout-overlay-active': this.layoutService.state.overlayMenuActive,\n      'layout-mobile-active': this.layoutService.state.staticMenuMobileActive,\n      'p-input-filled': this.layoutService.config.inputStyle === 'filled',\n      'p-ripple-disabled': !this.layoutService.config.ripple,\n    };\n  }\n}\n\n    \n\n    \n        \n    \n    \n      \n    \n    \n      \n        \n          \n        \n        \n      \n      \n    \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Invitation.html":{"url":"interfaces/Invitation.html","title":"interface - Invitation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Invitation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/invitation.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            invitationId\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"./user.entity\";\n\nexport interface Invitation {\n    invitationId: string,\n    email: string,\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitationComponent.html":{"url":"components/InvitationComponent.html","title":"component - InvitationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/invitation/invitation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-invitation\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./invitation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./invitation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                invitationHash\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService, invitationService: InvitationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        invitationHash\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/invitation/invitation.component.ts:62\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: [\n      { value: '', disabled: true },\n      [Validators.required, Validators.email],\n    ],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  isLoadingAuthState,\n  selectAcceptInvitationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../core/state/app.state';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport {\n  acceptInvitation,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { InvitationService } from '../../../../core/services/api/invitation.api.service';\n\n@Component({\n  selector: 'app-invitation',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './invitation.component.html',\n  styleUrl: './invitation.component.scss',\n})\nexport class InvitationComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n  @Input()\n  private invitationHash?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n    private invitationService: InvitationService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: [\n      { value: '', disabled: true },\n      [Validators.required, Validators.email],\n    ],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    this.invitationService.getInvitationDetails(this.invitationHash ?? '').subscribe({\n      next: (details) => {\n        this.registerForm.get('email')?.setValue(details.email);\n      },\n      error: () => {\n        this.router.navigate(['/auth'])\n      }\n    })\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAcceptInvitationError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 409) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.invitation.registration_error',\n              ),\n              detail: this.translateService.instant(\n                'auth.invitation.registration_error_username_exists',\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.invitation.registration_error',\n              ),\n              detail: this.translateService.instant(\n                'auth.invitation.registration_error_wrong_hash',\n              ),\n            });\n          }\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(\n      acceptInvitation({ dto: dto, invitationHash: this.invitationHash ?? '' }),\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.invitation.welcome_message\" | translate }}\n  \n  {{\n    \"auth.invitation.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.invitation.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.invitation.username_is_required\" | translate }}\n    {{ \"auth.invitation.username_length\" | translate }}\n\n    {{ \"auth.invitation.password_label\" | translate }}\n    \n    {{ \"auth.invitation.password_length\" | translate }}\n    {{ \"auth.invitation.password_not_strong\" | translate }}\n\n    {{\n      \"auth.invitation.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.invitation.email_is_required\" | translate }}\n\n    {{ \"auth.invitation.first_name_label\" | translate }}\n    \n    {{ \"auth.invitation.first_name_is_required\" | translate }}\n\n    {{ \"auth.invitation.last_name_label\" | translate }}\n    \n    {{ \"auth.invitation.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.invitation.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.invitation.welcome_message\" | translate }}    {{    \"auth.invitation.welcome_description\" | translate  }}      {{ \"auth.invitation.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.invitation.username_is_required\" | translate }}    {{ \"auth.invitation.username_length\" | translate }}    {{ \"auth.invitation.password_label\" | translate }}        {{ \"auth.invitation.password_length\" | translate }}    {{ \"auth.invitation.password_not_strong\" | translate }}    {{      \"auth.invitation.email_label\" | translate    }}                        {{ \"auth.invitation.email_is_required\" | translate }}    {{ \"auth.invitation.first_name_label\" | translate }}        {{ \"auth.invitation.first_name_is_required\" | translate }}    {{ \"auth.invitation.last_name_label\" | translate }}        {{ \"auth.invitation.last_name_is_required\" | translate }}          {{ \"auth.invitation.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationDto.html":{"url":"interfaces/InvitationDto.html","title":"interface - InvitationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvitationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/invitation.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            invitationId\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"../models/user.entity\";\n\nexport interface InvitationDto {\n    invitationId: string,\n    email: string,\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationRequestDto.html":{"url":"interfaces/InvitationRequestDto.html","title":"interface - InvitationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvitationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/invitation-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            roleId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InvitationRequestDto {\n    email: string,\n    roleId: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvitationService.html":{"url":"injectables/InvitationService.html","title":"injectable - InvitationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvitationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/invitation.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInvitation\n                            \n                            \n                                getInvitationDetails\n                            \n                            \n                                inviteMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/invitation.api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitation\n                        \n                    \n                \n            \n            \n                \nacceptInvitation(invitationHash: string, dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                invitationHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInvitationDetails\n                        \n                    \n                \n            \n            \n                \ngetInvitationDetails(invitationHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                invitationHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviteMember\n                        \n                    \n                \n            \n            \n                \ninviteMember(dto: InvitationRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            InvitationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InvitationDto } from '../../domain/dto/invitation.dto';\nimport { InvitationRequestDto } from '../../domain/dto/requests/invitation-request.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InvitationService {\n  constructor(private http: HttpClient) {}\n\n  inviteMember(dto: InvitationRequestDto) {\n    return this.http.post(\n      api.invitationUrl + '/send',\n      dto,\n      api.authOptions,\n    );\n  }\n\n  getInvitationDetails(invitationHash: string): Observable {\n    return this.http.get(\n      api.invitationUrl + '/details/' + invitationHash,\n      api.noAuthOptions,\n    );\n  }\n\n  acceptInvitation(invitationHash: string, dto: RegisterRequestDto) {\n    return this.http.post(\n      api.invitationUrl + '/accept/' + invitationHash,\n      dto,\n      api.noAuthOptions,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssuesComponent.html":{"url":"components/IssuesComponent.html","title":"component - IssuesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssuesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/issues/issues.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issues\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./issues.component.html\n            \n\n\n\n            \n                styleUrl\n                ./issues.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-issues',\n  standalone: true,\n  imports: [],\n  templateUrl: './issues.component.html',\n  styleUrl: './issues.component.scss'\n})\nexport class IssuesComponent {\n\n}\n\n    \n\n    \n        issues works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'issues works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssuesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/token-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getRefreshToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveRefreshToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/token-storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveRefreshToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { LocalStorage } from \"./local-storage.service\";\n\nconst TOKEN_KEY = 'auth-token';\nconst REFRESH_TOKEN_KEY = 'auth-refreshtoken';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class JwtService {\n\n  constructor(private storage: LocalStorage) {}\n\n  public clear(): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n  }\n\n  public saveToken(token: string): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return this.storage.getItem(TOKEN_KEY);\n  }\n\n  public saveRefreshToken(token: string): void {\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n   this.storage.setItem(REFRESH_TOKEN_KEY, token);\n  }\n\n  public getRefreshToken(): string | null {\n    return this.storage.getItem(REFRESH_TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The LayoutService class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Private\n                                configUpdate\n                            \n                            \n                                configUpdate$\n                            \n                            \n                                    Private\n                                overlayOpen\n                            \n                            \n                                overlayOpen$\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isDesktop\n                            \n                            \n                                isMobile\n                            \n                            \n                                isOverlay\n                            \n                            \n                                onConfigUpdate\n                            \n                            \n                                onMenuToggle\n                            \n                            \n                                restoreConfig\n                            \n                            \n                                saveConfig\n                            \n                            \n                                showConfigSidebar\n                            \n                            \n                                showProfileSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/layout.service.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isDesktop\n                        \n                    \n                \n            \n            \n                \nisDesktop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:211\n                        \n                    \n\n\n            \n                \n                        This function checks if the current window width is greater than 991 pixels, indicating if the\nuser is on a desktop device.\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isDesktop() returns a boolean value true if the width of the window is\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n            \n                \nisMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:220\n                        \n                    \n\n\n            \n                \n                        The function checks if the device is not a desktop and returns a boolean value.\nwill return true if the device is not a desktop and false if it is a desktop.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The isMobile() function is returning the opposite of the isDesktop() function. It\nwill return true if the device is not a desktop and false if it is a desktop.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOverlay\n                        \n                    \n                \n            \n            \n                \nisOverlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:199\n                        \n                    \n\n\n            \n                \n                        This function checks if the menu mode is set to 'overlay'.\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isOverlay() is returning a boolean value that indicates whether the\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigUpdate\n                        \n                    \n                \n            \n            \n                \nonConfigUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:227\n                        \n                    \n\n\n            \n                \n                        The function updates the configuration and emits the updated configuration through a subject.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuToggle\n                        \n                    \n                \n            \n            \n                \nonMenuToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:156\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a menu based on the device type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreConfig\n                        \n                    \n                \n            \n            \n                \nrestoreConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:232\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveConfig\n                        \n                    \n                \n            \n            \n                \nsaveConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:240\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfigSidebar\n                        \n                    \n                \n            \n            \n                \nshowConfigSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:190\n                        \n                    \n\n\n            \n                \n                        This function sets the state of the configSidebarVisible property to true.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showProfileSidebar\n                        \n                    \n                \n            \n            \n                \nshowProfileSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:180\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\nvisible.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:100\n                        \n                    \n\n            \n                \n                    The config property is initializing an object of type AppConfig with default values for\nvarious configuration options. These options include ripple, inputStyle, menuMode,\ncolorScheme, theme, and scale. The = operator is assigning this object to the config\nproperty of the LayoutService class. This object represents the default configuration for the\nlayout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:130\n                        \n                    \n\n            \n                \n                    private configUpdate = new Subject(); is creating a new instance of the Subject\nclass from the rxjs library and assigning it to the configUpdate property of the\nLayoutService class. This Subject instance is used to emit events when the configuration is\nupdated. Other parts of the application can subscribe to these events using the configUpdate$\nobservable created from this Subject. The AppConfig type parameter in Subject\nindicates that the Subject can emit values of type AppConfig.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configUpdate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configUpdate.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:145\n                        \n                    \n\n            \n                \n                    configUpdate$ is creating an observable from the configUpdate subject. This allows other parts\nof the application to subscribe to changes in the configUpdate subject and react accordingly.\nThe $ at the end of the variable name is a convention in RxJS to indicate that the variable is\nan observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:139\n                        \n                    \n\n            \n                \n                    private overlayOpen = new Subject(); is creating a new instance of the Subject class from\nthe rxjs library and assigning it to the overlayOpen property of the LayoutService class.\nThis Subject instance is used to emit events when the overlay menu is opened or closed. Other\nparts of the application can subscribe to these events using the overlayOpen$ observable created\nfrom this Subject. The any type parameter in Subject indicates that the Subject can\nemit values of any type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlayOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.overlayOpen.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:151\n                        \n                    \n\n            \n                \n                    overlayOpen$ is creating an observable from the overlayOpen subject. This allows other parts\nof the application to subscribe to changes in the overlayOpen subject and react accordingly. The\n$ at the end of the variable name is a convention in RxJS to indicate that the variable is an\nobservable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutState\n\n                    \n                \n                \n                    \n                        Default value : {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:115\n                        \n                    \n\n            \n                \n                    state: LayoutState is declaring a property named state of type LayoutState. LayoutState is\nan interface that defines the shape of an object with boolean properties\nstaticMenuDesktopInactive, overlayMenuActive, profileSidebarVisible, configSidebarVisible,\nstaticMenuMobileActive, and menuHoverActive. The = operator is initializing the state\nproperty with an object that has all of these boolean properties set to false. This object\nrepresents the initial state of the layout.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutState.html":{"url":"interfaces/LayoutState.html","title":"interface - LayoutState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LayoutState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The interface LayoutState is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as staticMenuDesktopInactive,\noverlayMenuActive, profileSidebarVisible, configSidebarVisible, staticMenuMobileActive, and\nmenuHoverActive. These properties are used in various functions of the LayoutService class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            menuHoverActive\n                                        \n                                \n                                \n                                        \n                                            overlayMenuActive\n                                        \n                                \n                                \n                                        \n                                            profileSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            staticMenuDesktopInactive\n                                        \n                                \n                                \n                                        \n                                            staticMenuMobileActive\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    configSidebarVisible: boolean; is declaring a boolean property named configSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the configuration\nsidebar is currently visible or not. It is used in the showConfigSidebar() function to set the\nstate of the configSidebarVisible property to true when the configuration sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuHoverActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuHoverActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuHoverActive: boolean; is declaring a boolean property named menuHoverActive in the\nLayoutState interface. This property represents the state of whether the user is currently\nhovering over the menu.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayMenuActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overlayMenuActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    overlayMenuActive: boolean; is declaring a boolean property named overlayMenuActive in the\nLayoutState interface. This property represents the state of whether the overlay menu is\ncurrently active or not. It is used in the onMenuToggle() function to toggle the visibility of\nthe overlay menu and set the state of the overlayMenuActive property to true when the overlay\nmenu is shown. It is also used in the showProfileSidebar() function to close the overlay menu\nwhen the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    profileSidebarVisible: boolean; is declaring a boolean property named profileSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the profile sidebar is\ncurrently visible or not. It is used in the showProfileSidebar() function to toggle the\nvisibility of the profile sidebar and set the state of the profileSidebarVisible property to\ntrue when the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuDesktopInactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuDesktopInactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuDesktopInactive: boolean; is declaring a boolean property named\nstaticMenuDesktopInactive in the LayoutState interface. This property represents the state of\nwhether the static menu is currently inactive on a desktop device. It is used in the\nonMenuToggle() function to toggle the visibility of the static menu and set the state of the\nstaticMenuDesktopInactive property to true when the static menu is hidden.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuMobileActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuMobileActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuMobileActive: boolean; is declaring a boolean property named staticMenuMobileActive\nin the LayoutState interface. This property represents the state of whether the static menu is\ncurrently active on a mobile device.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorage.html":{"url":"injectables/LocalStorage.html","title":"injectable - LocalStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/local-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.localStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                getApplicationName\n                            \n                            \n                                isRegistrationEnabled\n                            \n                            \n                                login\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApplicationName\n                        \n                    \n                \n            \n            \n                \ngetApplicationName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRegistrationEnabled\n                        \n                    \n                \n            \n            \n                \nisRegistrationEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  authenticate,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectAuthorizationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  loginForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAuthorizationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.login.authorization_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.login.wrong_username_or_password',\n            ),\n          });\n        }\n      });\n  }\n\n  login() {\n    this.store.dispatch(\n      authenticate({\n        username: this.loginForm.get('username')?.value ?? '',\n        password: this.loginForm.get('password')?.value ?? '',\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  getApplicationName() {\n    return environment.appName;\n  }\n\n  isRegistrationEnabled() {\n    return environment.enableRegistration;\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},\n  \n  {{\n    \"auth.login.sign_in_to_continue\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n        \n        } @else if (isUsernameTaken) {\n        \n        } @else {\n        \n        }\n      \n    \n    {{ \"auth.login.username_is_required\" | translate }}\n    {{ \"auth.login.username_length\" | translate }}\n\n    {{ \"auth.login.password_label\" | translate }}\n    \n    {{ \"auth.login.password_is_required\" | translate }}\n    {{ \"auth.login.password_length\" | translate }}\n\n    \n      {{ \"auth.login.forgot_password\" | translate }}\n      {{ \"auth.login.register\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},    {{    \"auth.login.sign_in_to_continue\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {                } @else if (isUsernameTaken) {                } @else {                }              {{ \"auth.login.username_is_required\" | translate }}    {{ \"auth.login.username_length\" | translate }}    {{ \"auth.login.password_label\" | translate }}        {{ \"auth.login.password_is_required\" | translate }}    {{ \"auth.login.password_length\" | translate }}          {{ \"auth.login.forgot_password\" | translate }}      {{ \"auth.login.register\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogsComponent.html":{"url":"components/LogsComponent.html","title":"component - LogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/logs/logs.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logs\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./logs.component.html\n            \n\n\n\n            \n                styleUrl\n                ./logs.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-logs',\n  standalone: true,\n  imports: [],\n  templateUrl: './logs.component.html',\n  styleUrl: './logs.component.scss'\n})\nexport class LogsComponent {\n\n}\n\n    \n\n    \n        logs works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logs works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberPickerComponent.html":{"url":"components/MemberPickerComponent.html","title":"component - MemberPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/member-picker/member-picker.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-picker\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            TranslateModule\n                            DialogModule\n                            PickListModule\n                            AvatarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./member-picker.component.html\n            \n\n\n\n            \n                styleUrl\n                ./member-picker.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableMembers\n                            \n                            \n                                isLoadingMembers\n                            \n                            \n                                isPickerDialogVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserInitials\n                            \n                            \n                                onMoveAllToSource\n                            \n                            \n                                onMoveAllToTarget\n                            \n                            \n                                onMoveToSource\n                            \n                            \n                                onMoveToTarget\n                            \n                            \n                                showPickerDialog\n                            \n                            \n                                stringToColour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onMembersPicked\n                            \n                            \n                                onMembersRemoved\n                            \n                            \n                                selectedMembers\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/member-picker/member-picker.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onMembersPicked\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/member-picker/member-picker.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMembersRemoved\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/member-picker/member-picker.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedMembers\n                    \n                \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/member-picker/member-picker.component.ts:47\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitials\n                        \n                    \n                \n            \n            \n                \ngetUserInitials(member: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToSource\n                        \n                    \n                \n            \n            \n                \nonMoveAllToSource(event: PickListMoveAllToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveAllToTarget(event: PickListMoveAllToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToSource\n                        \n                    \n                \n            \n            \n                \nonMoveToSource(event: PickListMoveToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveToTarget(event: PickListMoveToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPickerDialog\n                        \n                    \n                \n            \n            \n                \nshowPickerDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/member-picker/member-picker.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingActiveMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/member-picker/member-picker.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPickerDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/member-picker/member-picker.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport {\n  PickListModule,\n  PickListMoveAllToSourceEvent,\n  PickListMoveAllToTargetEvent,\n  PickListMoveToSourceEvent,\n  PickListMoveToTargetEvent,\n} from 'primeng/picklist';\nimport { RippleModule } from 'primeng/ripple';\nimport { filter, take } from 'rxjs';\nimport { User } from '../../../core/domain/models/user.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport { loadActiveMembers } from '../../../core/state/members/members.actions';\nimport {\n  isLoadingActiveMembers,\n  selectActiveMembers,\n} from '../../../core/state/members/members.selectors';\n\n@Component({\n  selector: 'app-member-picker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    TranslateModule,\n    DialogModule,\n    PickListModule,\n    AvatarModule,\n  ],\n  templateUrl: './member-picker.component.html',\n  styleUrl: './member-picker.component.scss',\n})\nexport class MemberPickerComponent {\n  constructor(private store: Store) {}\n  isLoadingMembers = this.store.select(isLoadingActiveMembers);\n  availableMembers: User[] = [];\n  isPickerDialogVisible = false;\n\n  @Input()\n  selectedMembers: User[] = [];\n\n  @Input()\n  onMembersPicked?: (member: User[]) => void;\n\n  @Input()\n  onMembersRemoved?: (member: User[]) => void;\n\n  getUserInitials(member: User): string | undefined {\n    if (member.lastName || member.firstName) {\n      return member.firstName?.charAt(0) + member.lastName?.charAt(0);\n    } else {\n      return member.email.charAt(0);\n    }\n  }\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n\n  showPickerDialog() {\n    this.store.dispatch(loadActiveMembers());\n    this.store\n      .select(selectActiveMembers)\n      .pipe(\n        filter((members) => members !== undefined && members !== null),\n        take(1) // unsubscribe after one emitted value\n      )\n      .subscribe((members) => {\n        // Filter out members that are also present in selectedMembers\n        this.availableMembers = members?.filter(\n          (member) => !this.selectedMembers.some((selected) => selected.userId === member.userId)\n        ) ?? [];\n\n        this.isPickerDialogVisible = true;\n      });\n  }\n\n  onMoveToSource(event: PickListMoveToSourceEvent) {\n    if (this.onMembersRemoved) {\n      this.onMembersRemoved(event.items);\n    }\n  }\n\n  onMoveToTarget(event: PickListMoveToTargetEvent) {\n    if (this.onMembersPicked) {\n      this.onMembersPicked(event.items);\n    }\n  }\n\n  onMoveAllToSource(event: PickListMoveAllToSourceEvent) {\n    if (this.onMembersRemoved) {\n      this.onMembersRemoved(event.items);\n    }\n  }\n\n  onMoveAllToTarget(event: PickListMoveAllToTargetEvent) {\n    if (this.onMembersPicked) {\n      this.onMembersPicked(event.items);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        @if (!user.pictureUrl || user.pictureUrl === null) {\n          \n        } @else {\n          \n        }\n        \n          {{ user.firstName }} {{ user.lastName }}\n          \n            {{ user.email }}\n          \n        \n      \n    \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (!user.pictureUrl || user.pictureUrl === null) {                  } @else {                  }                  {{ user.firstName }} {{ user.lastName }}                      {{ user.email }}                                      '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MemberPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MembersComponent.html":{"url":"components/MembersComponent.html","title":"component - MembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/members/members.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-members\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ToastModule\n                                MembersTableComponent\n                                AccessDeniedComponent\n                            TranslateModule\n                            PanelModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./members.component.html\n            \n\n\n\n            \n                styleUrl\n                ./members.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMembers\n                            \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                invitedMembers\n                            \n                            \n                                isLoadingMembers\n                            \n                            \n                                owner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/members/members.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/members/members.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOrganizationMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invitedMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectInvitedMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOwnerAsArray)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { PanelModule } from 'primeng/panel';\nimport { ToastModule } from 'primeng/toast';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { loadOrganizationMembers } from '../../../core/state/members/members.actions';\nimport {\n  isLoadingMembers,\n  selectOrganizationMembers,\n  selectInvitedMembers,\n  selectOwnerAsArray,\n} from '../../../core/state/members/members.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { MembersTableComponent } from '../../../shared/components/members-table/members-table.component';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'app-members',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ToastModule,\n    MembersTableComponent,\n    AccessDeniedComponent,\n    TranslateModule,\n    PanelModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './members.component.html',\n  styleUrl: './members.component.scss',\n})\nexport class MembersComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.DELETE),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.CREATE),\n  );\n  isLoadingMembers = this.store.select(isLoadingMembers);\n  activeMembers = this.store\n    .select(selectOrganizationMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  invitedMembers = this.store\n    .select(selectInvitedMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  owner = this.store\n    .select(selectOwnerAsArray)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit() {\n    this.store.dispatch(loadOrganizationMembers());\n  }\n}\n\n    \n\n    \n        \n@if (hasReadPermission | async) {\n   -->\n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n   -->\n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {   -->                                             -->} @else {  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MembersDto.html":{"url":"interfaces/MembersDto.html","title":"interface - MembersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MembersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/members.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            invitations\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        invitations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitations:     InvitationDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InvitationDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         UserDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     UserDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InvitationDto } from \"./invitation.dto\";\nimport { UserDto } from \"./user.dto\";\n\nexport interface MembersDto {\n    users: UserDto[];\n    invitations: InvitationDto[];\n    owner: UserDto;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MembersEffects.html":{"url":"injectables/MembersEffects.html","title":"injectable - MembersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MembersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/members/members.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inviteMember$\n                            \n                            \n                                loadActiveMembers$\n                            \n                            \n                                loadOrganizationMembers$\n                            \n                            \n                                removeMember$\n                            \n                            \n                                removeMemberSuccess$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(membersService: MembersService, invitationService: InvitationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/members/members.effects.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        membersService\n                                                  \n                                                        \n                                                                        MembersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        inviteMember$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(inviteMember),\n      switchMap((request) =>\n        this.invitationService.inviteMember(request).pipe(\n          map((invitation) => inviteMemberSuccess(invitation)),\n          catchError((error) => of(inviteMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadActiveMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadActiveMembers),\n      switchMap(() =>\n        this.membersService.getActiveMembers().pipe(\n          map((members) => loadActiveMembersSuccess({members: members})),\n          catchError((error) => of(loadActiveMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadOrganizationMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationMembers),\n      switchMap(() =>\n        this.membersService.getMembers().pipe(\n          map((members) => loadOrganizationMembersSuccess(members)),\n          catchError((error) => of(loadOrganizationMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMember),\n      switchMap((request) =>\n        this.membersService.removeMember(request.memberId).pipe(\n          map(() => removeMemberSuccess()),\n          catchError((error) => of(removeMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMemberSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMemberSuccess),\n      switchMap(\n        () => of(loadOrganizationMembers()), // Dispatch loadOrganizationMembers action after successful removal\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:77\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport {\n  inviteMember,\n  inviteMemberFailure,\n  inviteMemberSuccess,\n  loadActiveMembers,\n  loadActiveMembersFailure,\n  loadActiveMembersSuccess,\n  loadOrganizationMembers,\n  loadOrganizationMembersFailure,\n  loadOrganizationMembersSuccess,\n  removeMember,\n  removeMemberFailure,\n  removeMemberSuccess,\n} from './members.actions';\nimport { MembersService } from '../../services/api/members.api.service';\nimport { Injectable } from '@angular/core';\nimport { InvitationService } from '../../services/api/invitation.api.service';\n\n@Injectable()\nexport class MembersEffects {\n  constructor(\n    private membersService: MembersService,\n    private invitationService: InvitationService,\n    private actions$: Actions,\n  ) {}\n\n  loadOrganizationMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationMembers),\n      switchMap(() =>\n        this.membersService.getMembers().pipe(\n          map((members) => loadOrganizationMembersSuccess(members)),\n          catchError((error) => of(loadOrganizationMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadActiveMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadActiveMembers),\n      switchMap(() =>\n        this.membersService.getActiveMembers().pipe(\n          map((members) => loadActiveMembersSuccess({members: members})),\n          catchError((error) => of(loadActiveMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  inviteMember$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(inviteMember),\n      switchMap((request) =>\n        this.invitationService.inviteMember(request).pipe(\n          map((invitation) => inviteMemberSuccess(invitation)),\n          catchError((error) => of(inviteMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeMember$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMember),\n      switchMap((request) =>\n        this.membersService.removeMember(request.memberId).pipe(\n          map(() => removeMemberSuccess()),\n          catchError((error) => of(removeMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeMemberSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMemberSuccess),\n      switchMap(\n        () => of(loadOrganizationMembers()), // Dispatch loadOrganizationMembers action after successful removal\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MembersService.html":{"url":"injectables/MembersService.html","title":"injectable - MembersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MembersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/members.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActiveMembers\n                            \n                            \n                                getMembers\n                            \n                            \n                                removeMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/members.api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveMembers\n                        \n                    \n                \n            \n            \n                \ngetActiveMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMembers\n                        \n                    \n                \n            \n            \n                \ngetMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(memberId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MembersDto } from '../../domain/dto/members.dto';\nimport { api } from './api';\nimport { UserDto } from '../../domain/dto/user.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersService {\n  constructor(private http: HttpClient) {}\n\n  getMembers(): Observable {\n    return this.http.get(api.membersUrl, api.authOptions);\n  }\n\n  getActiveMembers(): Observable {\n    return this.http.get(api.membersUrl + '/active', api.authOptions);\n  }\n\n\n  removeMember(memberId: string) {\n    return this.http.delete(api.membersUrl + '/' + memberId, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MembersState.html":{"url":"interfaces/MembersState.html","title":"interface - MembersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MembersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/members/members.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeMembers\n                                        \n                                \n                                \n                                        \n                                            activeMembersError\n                                        \n                                \n                                \n                                        \n                                            activeMembersStatus\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            invitationStatus\n                                        \n                                \n                                \n                                        \n                                            invitedMember\n                                        \n                                \n                                \n                                        \n                                            inviteMemberError\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            removeMemberError\n                                        \n                                \n                                \n                                        \n                                            removeMemberStatus\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeMembers:         User[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        activeMembersError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeMembersError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        activeMembersStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeMembersStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitedMember\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitedMember:         Invitation | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invitation | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteMemberError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inviteMemberError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         MembersDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MembersDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMemberError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMemberError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMemberStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMemberStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { MembersDto } from '../../domain/dto/members.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Invitation } from '../../domain/models/invitation.entity';\nimport {\n  inviteMember,\n  inviteMemberFailure,\n  inviteMemberSuccess,\n  loadActiveMembers,\n  loadActiveMembersFailure,\n  loadActiveMembersSuccess,\n  loadOrganizationMembers,\n  loadOrganizationMembersFailure,\n  loadOrganizationMembersSuccess,\n  removeMember,\n  removeMemberFailure,\n  removeMemberSuccess,\n} from './members.actions';\nimport { User } from '../../domain/models/user.entity';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface MembersState {\n  members: MembersDto | null;\n  activeMembers: User[] | null;\n  error: any | null;\n  inviteMemberError: any | null;\n  activeMembersError: any | null;\n  removeMemberError: any | null;\n  invitedMember: Invitation | null;\n  status: StateStatus;\n  invitationStatus: StateStatus;\n  removeMemberStatus: StateStatus;\n  activeMembersStatus: StateStatus;\n}\n\nexport const initialState: MembersState = {\n  members: null,\n  activeMembers: null,\n  error: undefined,\n  inviteMemberError: null,\n  invitedMember: null,\n  removeMemberError: null,\n  activeMembersError: null,\n  status: StateStatus.PENDING,\n  invitationStatus: StateStatus.PENDING,\n  removeMemberStatus: StateStatus.PENDING,\n  activeMembersStatus: StateStatus.PENDING,\n};\n\nexport const membersReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization members\n  on(loadOrganizationMembers, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadOrganizationMembersSuccess, (state, members) => ({\n    ...state,\n    members: members,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationMembersFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  on(inviteMember, (state) => ({\n    ...state,\n    inviteMemberError: null,\n    invitedMember: null,\n    invitationStatus: StateStatus.LOADING,\n  })),\n\n  on(inviteMemberSuccess, (state, invitedMember) => ({\n    ...state,\n    invitedMember: invitedMember,\n    members: {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n      owner: state.members?.owner!,\n      invitations: [...(state.members?.invitations || []), invitedMember],\n      users: state.members?.users || [],\n    },\n    inviteMemberError: null,\n    invitationStatus: StateStatus.SUCCESS,\n  })),\n\n  on(inviteMemberFailure, (state, { error }) => ({\n    ...state,\n    inviteMemberError: error,\n    invitationStatus: StateStatus.ERROR,\n  })),\n\n  on(removeMember, (state) => ({\n    ...state,\n    removeMemberError: null,\n    removeMemberStatus: StateStatus.LOADING,\n  })),\n\n  on(removeMemberSuccess, (state) => ({\n    ...state,\n    removeMemberError: null,\n    removeMemberStatus: StateStatus.SUCCESS,\n  })),\n\n  on(removeMemberFailure, (state, { error }) => ({\n    ...state,\n    removeMemberError: error,\n    removeMemberStatus: StateStatus.ERROR,\n  })),\n\n  on(loadActiveMembers, (state) => ({\n    ...state,\n    activeMembersError: null,\n    activeMembersStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadActiveMembersSuccess, (state, { members }) => ({\n    ...state,\n    activeMembers: members,\n    activeMembersError: null,\n    activeMembersStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadActiveMembersFailure, (state, { error }) => ({\n    ...state,\n    activeMembersError: error,\n    activeMembersStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MembersTableComponent.html":{"url":"components/MembersTableComponent.html","title":"component - MembersTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MembersTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/members-table/members-table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-members-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TableModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            InputTextModule\n                            AvatarModule\n                            DialogModule\n                            DropdownModule\n                            FormsModule\n                            ReactiveFormsModule\n                            ToastModule\n                            ConfirmDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./members-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./members-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dt\n                            \n                            \n                                inviteNewUserForm\n                            \n                            \n                                isInviteDialogVisible\n                            \n                            \n                                isLoadingRemoveMembers\n                            \n                            \n                                isLoadingSendInvitation\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                getUserInitials\n                            \n                            \n                                removeMember\n                            \n                            \n                                    Private\n                                resetInviteForm\n                            \n                            \n                                sendInvite\n                            \n                            \n                                showInviteDialog\n                            \n                            \n                                showRemoveMemberConfirmation\n                            \n                            \n                                stringToColour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enableInviteAction\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableRemoveAction\n                            \n                            \n                                enableSorting\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, formBuilder: FormBuilder, messageService: MessageService, confirmationService: ConfirmationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     User[] | InvitationDto[]\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:78\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:84\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableInviteAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:90\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:87\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableRemoveAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:93\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:75\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitials\n                        \n                    \n                \n            \n            \n                \ngetUserInitials(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:222\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetInviteForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetInviteForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendInvite\n                        \n                    \n                \n            \n            \n                \nsendInvite()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInviteDialog\n                        \n                    \n                \n            \n            \n                \nshowInviteDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRemoveMemberConfirmation\n                        \n                    \n                \n            \n            \n                \nshowRemoveMemberConfirmation(member: any, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:230\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviteNewUserForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    role: [undefined as Role | undefined, [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInviteDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingRemoveMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingRemoveMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingSendInvitation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSendInvitation)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectRoles)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { filter, take } from 'rxjs';\nimport { InvitationDto } from '../../../core/domain/dto/invitation.dto';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Role, User } from '../../../core/domain/models/user.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport {\n  inviteMember,\n  removeMember,\n} from '../../../core/state/members/members.actions';\nimport {\n  isLoadingRemoveMembers,\n  isLoadingSendInvitation,\n  selectInvitationSendStatus,\n  selectRemoveMemberStatus,\n} from '../../../core/state/members/members.selectors';\nimport { loadRoles } from '../../../core/state/role/role.actions';\nimport { selectRoles } from '../../../core/state/role/role.selectors';\n\n@Component({\n  selector: 'app-members-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TableModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    InputTextModule,\n    AvatarModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ToastModule,\n    ConfirmDialogModule,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './members-table.component.html',\n  styleUrl: './members-table.component.scss',\n})\nexport class MembersTableComponent {\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n  @Input()\n  data?: User[] | InvitationDto[] = undefined;\n\n  @Input()\n  isLoading: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableInviteAction: boolean = false;\n\n  @Input()\n  enableRemoveAction: boolean = false;\n\n  roles = this.store.select(selectRoles);\n  inviteNewUserForm = this.formBuilder.group({\n    role: [undefined as Role | undefined, [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n  });\n  isInviteDialogVisible: boolean = false;\n\n  isLoadingSendInvitation = this.store.select(isLoadingSendInvitation);\n  isLoadingRemoveMembers = this.store.select(isLoadingRemoveMembers);\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  showInviteDialog() {\n    this.resetInviteForm();\n    this.store.dispatch(loadRoles());\n    this.isInviteDialogVisible = true;\n  }\n\n  sendInvite() {\n    this.store\n      .select(selectInvitationSendStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('members-table.error'),\n            detail: this.translateService.instant(\n              'members-table.failed_to_send_invite',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('members-table.success'),\n            detail: this.translateService.instant('members-table.invite_sent'),\n          });\n          this.isInviteDialogVisible = !this.isInviteDialogVisible;\n        }\n      });\n\n    const dto = {\n      email: this.inviteNewUserForm.get('email')?.value ?? '',\n      roleId: this.inviteNewUserForm.get('role')?.value?.roleId ?? '',\n    };\n    this.store.dispatch(inviteMember(dto));\n  }\n\n  private resetInviteForm() {\n    this.inviteNewUserForm = this.formBuilder.group({\n      role: [undefined as Role | undefined, [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  showRemoveMemberConfirmation(member: any, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'members-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant(\n        'members-table.delete_confirmation',\n      ),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeMember(member);\n      },\n      reject: () => {},\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  removeMember(member: any) {\n    this.store\n      .select(selectRemoveMemberStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('members-table.error'),\n            detail: this.translateService.instant(\n              'members-table.failed_to_remove_member',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('members-table.success'),\n            detail: this.translateService.instant(\n              'members-table.removed_memeber',\n            ),\n          });\n        }\n      });\n\n    let memberId = '';\n    if (member.userId) {\n      memberId = member.userId;\n    } else if (member.invitationId) {\n      memberId = member.invitationId;\n    }\n    this.store.dispatch(removeMember({ memberId: memberId }));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getUserInitials(member: any): string | undefined {\n    if (member.lastName || member.firstName) {\n      return member.firstName?.charAt(0) + member.lastName?.charAt(0);\n    } else {\n      return member.email.charAt(0);\n    }\n  }\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n        \n      \n      \n    \n  \n  \n    \n      \n        \n          {{ \"members-table.first_name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.last_name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.email\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.role\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.avatar\" | translate }}\n        \n      \n      \n        \n          {{ \"members-table.actions\" | translate }}\n        \n      \n    \n  \n  \n    \n      \n        {{ member?.firstName }}\n      \n      \n        {{ member?.lastName }}\n      \n      \n        {{ member.email }}\n      \n      \n        {{ member.role.name }}\n      \n      \n        @if (!member.pictureUrl || member.pictureUrl === null) {\n          \n        } @else {\n          \n        }\n      \n      \n        \n      \n    \n  \n  \n    \n      {{ \"members-table.no_members_found\" | translate }}\n    \n  \n\n\n\n  \n    \n      \n        {{ \"members-table.email_label\" | translate }}\n        \n          \n          \n        \n        {{ \"members-table.email_is_required\" | translate }}\n        {{ \"members-table.invalid_email\" | translate }}\n\n        {{ \"members-table.role_label\" | translate }}\n        \n        {{ \"members-table.role_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ \"members-table.first_name\" | translate }}                                                          {{ \"members-table.last_name\" | translate }}                                                          {{ \"members-table.email\" | translate }}                                                          {{ \"members-table.role\" | translate }}                                                          {{ \"members-table.avatar\" | translate }}                                      {{ \"members-table.actions\" | translate }}                                        {{ member?.firstName }}                    {{ member?.lastName }}                    {{ member.email }}                    {{ member.role.name }}                    @if (!member.pictureUrl || member.pictureUrl === null) {                  } @else {                  }                                            {{ \"members-table.no_members_found\" | translate }}                          {{ \"members-table.email_label\" | translate }}                                            {{ \"members-table.email_is_required\" | translate }}        {{ \"members-table.invalid_email\" | translate }}        {{ \"members-table.role_label\" | translate }}                {{ \"members-table.role_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MembersTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/memory-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/memory-storage.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/memory-storage.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n//TODO: Implement better server storage alongside server temp memory storage\n@Injectable()\nexport class MemoryStorage implements Storage {\n  private data: { [key: string]: string } = {};\n\n  get length(): number {\n    return Object.keys(this.data).length;\n  }\n\n  clear(): void {\n    this.data = {};\n  }\n\n  getItem(key: string): string | null {\n    return key in this.data ? this.data[key] : null;\n  }\n\n  key(index: number): string | null {\n    const keys = Object.keys(this.data);\n\n    return index >= 0 && keys.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuChangeEvent.html":{"url":"interfaces/MenuChangeEvent.html","title":"interface - MenuChangeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuChangeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/menu-change-event.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeEvent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuChangeEvent {\n  key: string;\n  routeEvent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/menu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuSource\n                            \n                            \n                                menuSource$\n                            \n                            \n                                    Private\n                                resetSource\n                            \n                            \n                                resetSource$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMenuStateChange\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuStateChange\n                        \n                    \n                \n            \n            \n                \nonMenuStateChange(event: MenuChangeEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:40\n                        \n                    \n\n\n            \n                \n                        The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            MenuChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMenuChangeEvent is a custom event type that is triggered when\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:47\n                        \n                    \n\n\n            \n                \n                        The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:16\n                        \n                    \n\n            \n                \n                    private menuSource = new Subject(); is creating a new instance of the\nSubject class and assigning it to the menuSource variable. This Subject will be used to\nemit MenuChangeEvent objects when the onMenuStateChange() function is called in the\nMenuService. Other components or services can subscribe to the menuSource$ observable to\nreceive notifications when the onMenuStateChange() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.menuSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:27\n                        \n                    \n\n            \n                \n                    menuSource$ is creating an observable from the menuSource subject. This allows other\ncomponents or services to subscribe to the menuSource$ observable and receive notifications\nwhen the onMenuStateChange() function is called in the MenuService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:22\n                        \n                    \n\n            \n                \n                    private resetSource = new Subject(); is creating a new instance of the Subject class and\nassigning it to the resetSource variable. This Subject will be used to emit a boolean value\nof true when the reset() function is called in the MenuService. Other components or\nservices can subscribe to the resetSource$ observable to receive notifications when the\nreset() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.resetSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:31\n                        \n                    \n\n            \n                \n                    resetSource$ is creating an observable from the resetSource subject. This allows other\ncomponents or services to subscribe to the resetSource$ observable and receive notifications\nwhen the reset() function is called in the MenuService.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MenuChangeEvent } from '../domain/models/menu-change-event.model';\n\n/** The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuService {\n  /** `private menuSource = new Subject();` is creating a new instance of the\n    `Subject` class and assigning it to the `menuSource` variable. This `Subject` will be used to\n    emit `MenuChangeEvent` objects when the `onMenuStateChange()` function is called in the\n    `MenuService`. Other components or services can subscribe to the `menuSource$` observable to\n    receive notifications when the `onMenuStateChange()` function is called. */\n  private menuSource = new Subject();\n  /** `private resetSource = new Subject();` is creating a new instance of the `Subject` class and\n    assigning it to the `resetSource` variable. This `Subject` will be used to emit a boolean value\n    of `true` when the `reset()` function is called in the `MenuService`. Other components or\n    services can subscribe to the `resetSource$` observable to receive notifications when the\n    `reset()` function is called. */\n  private resetSource = new Subject();\n\n  /** `menuSource$` is creating an observable from the `menuSource` subject. This allows other\n    components or services to subscribe to the `menuSource$` observable and receive notifications\n    when the `onMenuStateChange()` function is called in the `MenuService`. */\n  menuSource$ = this.menuSource.asObservable();\n  /** `resetSource$` is creating an observable from the `resetSource` subject. This allows other\n    components or services to subscribe to the `resetSource$` observable and receive notifications\n    when the `reset()` function is called in the `MenuService`. */\n  resetSource$ = this.resetSource.asObservable();\n\n  /**\n   * The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\n   * @param {MenuChangeEvent} event - MenuChangeEvent is a custom event type that is triggered when\n   * the state of a menu changes. It contains information about the menu that triggered the event,\n   * such as its current state (open or closed) and any additional data that may be relevant to the\n   * event. In this code snippet, the event is being\n   */\n  onMenuStateChange(event: MenuChangeEvent) {\n    this.menuSource.next(event);\n  }\n\n  /**\n   * The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n   */\n  reset() {\n    this.resetSource.next(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuitemComponent.html":{"url":"components/MenuitemComponent.html","title":"component - MenuitemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuitemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/menuitem/menuitem.component.ts\n\n\n\n    \n        Description\n    \n    \n        The MenuitemComponent class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [app-menuitem]\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            TranslateModule\n                            CommonModule\n                            RippleModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./menuitem.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menuitem.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                key\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuResetSubscription\n                            \n                            \n                                menuSourceSubscription\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateActiveStateFromRoute\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                item\n                            \n                            \n                                parentKey\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.active-menuitem\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    submenuAnimation\n                                \n                                \n                                    activeClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, cd: ChangeDetectorRef, router: Router, menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                            \n                        \n\n                \n                    \n                            This is a constructor function that subscribes to menu and router events to update the active\nstate of a menu item based on the current route.\nused to manage the layout of the application.\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\nAngular. It is used to handle navigation and routing within the application.\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe \"cd\" parameter is an instance of the ChangeDetectorRef class,\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe router parameter is an instance of the Router service provided by\nAngular. It is used to handle navigation and routing within the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the MenuService\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:69\n                            \n                        \n                \n                    \n                        @Input() index!: number; is defining an input property called index of type number. The !\nsymbol after the index variable indicates that it is non-null and initialized in the constructor\nor ngOnInit method. This input property is used to pass the index of the current menu item to the\nMenuitemComponent class. The index is used to construct the unique identifier of the menu item\nand to determine the order of the menu items in the menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:62\n                            \n                        \n                \n                    \n                        @Input() item: any; is defining an input property called item of type any. This input\nproperty is used to pass a menu item object to the MenuitemComponent class. The item object\ncontains information about the menu item, such as its label, icon, command, and sub-items. By\ndefining this input property, the MenuitemComponent class can receive the item object from its\nparent component and use it to render the menu item in the application menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parentKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:83\n                            \n                        \n                \n                    \n                        @Input() parentKey!: string; is declaring an input property called parentKey of type string.\nThis input property is used to pass the unique identifier of the parent menu item to the child\nmenu items. If a menu item has a parent, its key property is set to a value that includes the\nparent key and the index of the item, separated by a hyphen. This allows the MenuitemComponent\nclass to uniquely identify each menu item in the application menu. The parentKey input property\nis used to pass the parent key to the child menu items so that they can construct their own unique\nidentifiers based on the parent key and their own index.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:74\n                            \n                        \n                \n                    \n                        The @Input() @HostBinding('class.layout-root-menuitem') root!: boolean; decorator is defining an\ninput property called root of type boolean and also binding the class.layout-root-menuitem\nCSS class to the host element of the component.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.active-menuitem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemClick\n                        \n                    \n                \n            \n            \n                \nitemClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:209\n                        \n                    \n\n\n            \n                \n                        This function handles the click event on a menu item, executing its command and toggling its\nactive state if it has sub-items.\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event parameter is an object that represents the event that triggered\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                If the item is disabled, the function will return without executing any further code. If\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:241\n                        \n                    \n\n\n            \n                \n                        The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:171\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets the key and updates the active state from the route if the item has a\nrouterLink.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateActiveStateFromRoute\n                        \n                    \n                \n            \n            \n                \nupdateActiveStateFromRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:185\n                        \n                    \n\n\n            \n                \n                        This function updates the active state of a menu item based on the current route in a TypeScript\napplication.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:89\n                        \n                    \n\n            \n                \n                    active = false; is initializing the active property of the MenuitemComponent class to\nfalse. This property is used to track whether or not a menu item is currently active (i.e.\nselected or expanded). By default, when a new instance of the MenuitemComponent class is\ncreated, no menu item is active, so the active property is set to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                        \n                    \n\n            \n                \n                    key: string = \"\"; is declaring a property called key with an initial value of an empty string.\nThis property is used to uniquely identify each menu item in the application menu. It is set to a\nvalue that includes the parent key and the index of the item, separated by a hyphen, if the item\nhas a parent. Otherwise, it is set to the index of the item as a string. This property is used to\nupdate the active state of a menu item based on the current route and to toggle the active state\nof a menu item if it has sub-items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:129\n                        \n                    \n\n            \n                \n                    - An instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuResetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:103\n                        \n                    \n\n            \n                \n                    menuResetSubscription: Subscription; is declaring a property called menuResetSubscription of\ntype Subscription. This property is used to store a subscription to the resetSource$\nobservable of the MenuService class. This subscription is used to reset the active state of a\nmenu item when the menu is closed or reset. The unsubscribe() method is called on this\nsubscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSourceSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:96\n                        \n                    \n\n            \n                \n                    menuSourceSubscription: Subscription; is declaring a property called menuSourceSubscription of\ntype Subscription. This property is used to store a subscription to the menuSource$ observable\nof the MenuService class. This subscription is used to update the active state of a menu item\nbased on events emitted by the menuSource$ observable. The unsubscribe() method is called on\nthis subscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:131\n                        \n                    \n\n            \n                \n                    - The `router` parameter is an instance of the `Router` service provided by\nAngular. It is used to handle navigation and routing within the application.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        submenuAnimation\n                    \n                \n\n                \n                    \n                        getsubmenuAnimation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:229\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        activeClass\n                    \n                \n\n                \n                    \n                        getactiveClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RippleModule } from 'primeng/ripple';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\n\n/** The `MenuitemComponent` class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route. */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[app-menuitem]',\n  templateUrl: './menuitem.component.html',\n  styleUrls: ['./menuitem.component.scss'],\n  standalone: true,\n  imports: [TranslateModule, CommonModule, RippleModule, RouterModule],\n  animations: [\n    trigger('children', [\n      state(\n        'collapsed',\n        style({\n          height: '0',\n        }),\n      ),\n      state(\n        'expanded',\n        style({\n          height: '*',\n        }),\n      ),\n      transition(\n        'collapsed  expanded',\n        animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'),\n      ),\n    ]),\n  ],\n})\nexport class MenuitemComponent implements OnInit, OnDestroy {\n  /** `@Input() item: any;` is defining an input property called `item` of type `any`. This input\n  property is used to pass a menu item object to the `MenuitemComponent` class. The `item` object\n  contains information about the menu item, such as its label, icon, command, and sub-items. By\n  defining this input property, the `MenuitemComponent` class can receive the `item` object from its\n  parent component and use it to render the menu item in the application menu. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Input() item: any;\n\n  /** `@Input() index!: number;` is defining an input property called `index` of type `number`. The `!`\n  symbol after the `index` variable indicates that it is non-null and initialized in the constructor\n  or ngOnInit method. This input property is used to pass the index of the current menu item to the\n  `MenuitemComponent` class. The index is used to construct the unique identifier of the menu item\n  and to determine the order of the menu items in the menu. */\n  @Input() index!: number;\n\n  /** The `@Input() @HostBinding('class.layout-root-menuitem') root!: boolean;` decorator is defining an\n  input property called `root` of type `boolean` and also binding the `class.layout-root-menuitem`\n  CSS class to the host element of the component. */\n  @Input() @HostBinding('class.layout-root-menuitem') root!: boolean;\n\n  /** `@Input() parentKey!: string;` is declaring an input property called `parentKey` of type `string`.\n  This input property is used to pass the unique identifier of the parent menu item to the child\n  menu items. If a menu item has a parent, its `key` property is set to a value that includes the\n  parent key and the index of the item, separated by a hyphen. This allows the `MenuitemComponent`\n  class to uniquely identify each menu item in the application menu. The `parentKey` input property\n  is used to pass the parent key to the child menu items so that they can construct their own unique\n  identifiers based on the parent key and their own index. */\n  @Input() parentKey!: string;\n\n  /** `active = false;` is initializing the `active` property of the `MenuitemComponent` class to\n  `false`. This property is used to track whether or not a menu item is currently active (i.e.\n  selected or expanded). By default, when a new instance of the `MenuitemComponent` class is\n  created, no menu item is active, so the `active` property is set to `false`. */\n  active = false;\n\n  /** `menuSourceSubscription: Subscription;` is declaring a property called `menuSourceSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `menuSource$` observable\n  of the `MenuService` class. This subscription is used to update the active state of a menu item\n  based on events emitted by the `menuSource$` observable. The `unsubscribe()` method is called on\n  this subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuSourceSubscription: Subscription;\n\n  /** `menuResetSubscription: Subscription;` is declaring a property called `menuResetSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `resetSource$`\n  observable of the `MenuService` class. This subscription is used to reset the active state of a\n  menu item when the menu is closed or reset. The `unsubscribe()` method is called on this\n  subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuResetSubscription: Subscription;\n\n  /** `key: string = \"\";` is declaring a property called `key` with an initial value of an empty string.\n  This property is used to uniquely identify each menu item in the application menu. It is set to a\n  value that includes the parent key and the index of the item, separated by a hyphen, if the item\n  has a parent. Otherwise, it is set to the index of the item as a string. This property is used to\n  update the active state of a menu item based on the current route and to toggle the active state\n  of a menu item if it has sub-items. */\n  key: string = '';\n\n  /**\n   * This is a constructor function that subscribes to menu and router events to update the active\n   * state of a menu item based on the current route.\n   * @param {LayoutService} layoutService - An instance of the LayoutService class, which is likely\n   * used to manage the layout of the application.\n   * @param {ChangeDetectorRef} cd - The \"cd\" parameter is an instance of the ChangeDetectorRef class,\n   * which is used to manually trigger change detection in Angular. It is typically used when making\n   * changes to the component's state that may not be detected by Angular's default change detection\n   * mechanism.\n   * @param {Router} router - The `router` parameter is an instance of the `Router` service provided by\n   * Angular. It is used to handle navigation and routing within the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the `MenuService`\n   * class, which is used to manage the application menu. It is injected into the constructor using\n   * Angular's dependency injection mechanism.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    private cd: ChangeDetectorRef,\n    public router: Router,\n    private menuService: MenuService,\n  ) {\n    this.menuSourceSubscription = this.menuService.menuSource$.subscribe(\n      (value) => {\n        Promise.resolve(null).then(() => {\n          if (value.routeEvent) {\n            this.active =\n              value.key === this.key || value.key.startsWith(this.key + '-')\n                ? true\n                : false;\n          } else {\n            if (\n              value.key !== this.key &&\n              !value.key.startsWith(this.key + '-')\n            ) {\n              this.active = false;\n            }\n          }\n        });\n      },\n    );\n\n    this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\n      this.active = false;\n    });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        if (this.item.routerLink) {\n          this.updateActiveStateFromRoute();\n        }\n      });\n  }\n\n  /**\n   * The ngOnInit function sets the key and updates the active state from the route if the item has a\n   * routerLink.\n   */\n  ngOnInit() {\n    this.key = this.parentKey\n      ? this.parentKey + '-' + this.index\n      : String(this.index);\n\n    if (this.item.routerLink) {\n      this.updateActiveStateFromRoute();\n    }\n  }\n\n  /**\n   * This function updates the active state of a menu item based on the current route in a TypeScript\n   * application.\n   */\n  updateActiveStateFromRoute() {\n    const activeRoute = this.router.isActive(this.item.routerLink[0], {\n      paths: 'exact',\n      queryParams: 'ignored',\n      matrixParams: 'ignored',\n      fragment: 'ignored',\n    });\n\n    if (activeRoute) {\n      this.menuService.onMenuStateChange({ key: this.key, routeEvent: true });\n    }\n  }\n\n  /**\n   * This function handles the click event on a menu item, executing its command and toggling its\n   * active state if it has sub-items.\n   * @param {Event} event - The event parameter is an object that represents the event that triggered\n   * the itemClick function. It contains information such as the type of event (e.g. click, hover), the\n   * target element that triggered the event, and any additional data related to the event.\n   * @returns If the item is disabled, the function will return without executing any further code. If\n   * the item is not disabled, the function will execute the command associated with the item (if there\n   * is one), toggle the active state if the item has sub-items, and call the `onMenuStateChange`\n   * method of the `menuService`. However, the function does not explicitly return any value.\n   */\n  itemClick(event: Event) {\n    // avoid processing disabled items\n    if (this.item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    // execute command\n    if (this.item.command) {\n      this.item.command({ originalEvent: event, item: this.item });\n    }\n\n    // toggle active state\n    if (this.item.items) {\n      this.active = !this.active;\n    }\n\n    this.menuService.onMenuStateChange({ key: this.key });\n  }\n\n  get submenuAnimation() {\n    return this.root ? 'expanded' : this.active ? 'expanded' : 'collapsed';\n  }\n\n  @HostBinding('class.active-menuitem')\n  get activeClass() {\n    return this.active && !this.root;\n  }\n\n  /**\n   * The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n   */\n  ngOnDestroy() {\n    if (this.menuSourceSubscription) {\n      this.menuSourceSubscription.unsubscribe();\n    }\n\n    if (this.menuResetSubscription) {\n      this.menuResetSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ item.label | translate }}\n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menuitem.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ item.label | translate }}            {{ item.label | translate }}                {{ item.label | translate }}                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuitemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessagesComponent.html":{"url":"components/MessagesComponent.html","title":"component - MessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/messages/messages.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-messages\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./messages.component.html\n            \n\n\n\n            \n                styleUrl\n                ./messages.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  standalone: true,\n  imports: [],\n  templateUrl: './messages.component.html',\n  styleUrl: './messages.component.scss'\n})\nexport class MessagesComponent {\n\n}\n\n    \n\n    \n        messages works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'messages works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            RouterModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\n\n@Component({\n  selector: 'app-not-found',\n  standalone: true,\n  imports: [CommonModule, ButtonModule, RippleModule, RouterModule, TranslateModule],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss'\n})\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        404\n        \n          {{ \"not-found.not_found\" | translate }}\n        \n        \n          {{ \"not-found.not_available\" | translate }}\n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        404                  {{ \"not-found.not_found\" | translate }}                          {{ \"not-found.not_available\" | translate }}                            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/notifications/notifications.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notifications.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notifications',\n  standalone: true,\n  imports: [],\n  templateUrl: './notifications.component.html',\n  styleUrl: './notifications.component.scss'\n})\nexport class NotificationsComponent {\n\n}\n\n    \n\n    \n        notifications works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'notifications works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Organization.html":{"url":"interfaces/Organization.html","title":"interface - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/organization.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organizationId\n                                        \n                                \n                                \n                                        \n                                            pictureUrl\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Organization {\n  organizationId: string;\n  pictureUrl: string;\n  slug: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/organization/organization.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-organization\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            PanelModule\n                            TranslateModule\n                            DividerModule\n                            BadgeModule\n                            InputTextModule\n                            ButtonModule\n                            RippleModule\n                            InputNumberModule\n                            FormsModule\n                            AvatarModule\n                            FileUploadModule\n                            ToastModule\n                            ProgressSpinnerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n\n            \n                styleUrl\n                ./organization.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                archivePeriod\n                            \n                            \n                                cleanupPeriod\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasUpdatePermission\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                isUploadInProgress\n                            \n                            \n                                organization\n                            \n                            \n                                    \n                                primeFileUpload\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                deleteOrganization\n                            \n                            \n                                getOrganizationInitials\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                stringToColour\n                            \n                            \n                                toSlugValue\n                            \n                            \n                                updateOrganizationNameAndSlug\n                            \n                            \n                                uploadNewAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, organizationService: OrganizationService, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/organization/organization.component.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOrganization\n                        \n                    \n                \n            \n            \n                \ndeleteOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganizationInitials\n                        \n                    \n                \n            \n            \n                \ngetOrganizationInitials(organization: Organization | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organization\n                                            \n                                                            Organization | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrganizationNameAndSlug\n                        \n                    \n                \n            \n            \n                \nupdateOrganizationNameAndSlug(name: string, slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadNewAvatar\n                        \n                    \n                \n            \n            \n                \nuploadNewAvatar($event: FileUploadHandlerEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        FileUploadHandlerEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        archivePeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cleanupPeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 90\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUpdatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.UPDATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUploadInProgress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isUpdateOrganizationPictureLoading)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        primeFileUpload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileUpload\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('fileUpload')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { DividerModule } from 'primeng/divider';\nimport {\n  FileUpload,\n  FileUploadHandlerEvent,\n  FileUploadModule\n} from 'primeng/fileupload';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PanelModule } from 'primeng/panel';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Organization } from '../../../core/domain/models/organization.entity';\nimport { OrganizationService } from '../../../core/services/api/organization.api.service';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { updateOrganizationPicture } from '../../../core/state/organization/organization.actions';\nimport {\n  isUpdateOrganizationPictureLoading,\n  selectCurrentOrganization,\n  selectUpdateOrganizationPictureStatus,\n} from '../../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-organization',\n  standalone: true,\n  imports: [\n    CommonModule,\n    PanelModule,\n    TranslateModule,\n    DividerModule,\n    BadgeModule,\n    InputTextModule,\n    ButtonModule,\n    RippleModule,\n    InputNumberModule,\n    FormsModule,\n    AvatarModule,\n    FileUploadModule,\n    ToastModule,\n    ProgressSpinnerModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './organization.component.html',\n  styleUrl: './organization.component.scss',\n})\nexport class OrganizationComponent implements OnDestroy, AfterViewInit {\n  @ViewChild('slug') slugInput!: ElementRef;\n  @ViewChild('fileUpload') primeFileUpload!: FileUpload;\n\n  constructor(\n    private store: Store,\n    private organizationService: OrganizationService,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  organization = this.store.select(selectCurrentOrganization);\n  hasUpdatePermission = this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.UPDATE),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.DELETE),\n  );\n  isSlugTaken: boolean | null = null;\n  archivePeriod: number = 30;\n  cleanupPeriod: number = 90;\n  isUploadInProgress = this.store.select(isUpdateOrganizationPictureLoading);\n\n  private slugCheckSubscription?: Subscription;\n\n  ngAfterViewInit() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.slugInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkSlug(data));\n  }\n\n  ngOnDestroy(): void {\n    this.slugCheckSubscription?.unsubscribe();\n  }\n\n  deleteOrganization() {\n    throw new Error('Method not implemented.');\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  getOrganizationInitials(organization: Organization | null): string {\n    if (organization == null) {\n      return 'NA';\n    } else {\n      let result = '';\n      organization.slug.split('-').forEach((value) => {\n        result += value.charAt(0);\n      });\n      return result;\n    }\n  }\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n\n  uploadNewAvatar($event: FileUploadHandlerEvent) {\n    if ($event.files.length > 0) {\n      const file = $event.files[0];\n      this.primeFileUpload.uploading = true;\n      this.primeFileUpload.progress = 0;\n      this.store.dispatch(updateOrganizationPicture({ file: file }));\n      this.store\n        .select(selectUpdateOrganizationPictureStatus)\n        .pipe(\n          filter(\n            (status) =>\n              status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n          ),\n          take(1), // unsubscribe after one emitted value\n        )\n        .subscribe((status) => {\n          if (status && status == StateStatus.ERROR) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant('organization.error'),\n              detail: this.translateService.instant(\n                'organization.failed_to_upload_picture',\n              ),\n            });\n          } else {\n            this.primeFileUpload.clear();\n          }\n          this.primeFileUpload.uploading = false;\n          this.primeFileUpload.progress = 100;\n        });\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateOrganizationNameAndSlug(name: string, slug: string) {\n    throw new Error('Method not implemented.');\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.organizationService\n      .isSlugTaken(slug)\n      .subscribe({\n        next: (result) => {\n          this.isSlugTaken = result;\n        },\n        error: () => {\n          this.isSlugTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n      \n        {{ \"organization.id\" | translate }}\n      \n      {{ \"organization.id_description\" | translate }}\n    \n    \n      \n    \n  \n  \n  \n    \n      \n        {{ \"organization.slug\" | translate }}\n      \n      {{ \"organization.slug_description\" | translate }}\n    \n    \n      \n        @if (!isSlugTaken) {\n          \n        } @else {\n          \n        }\n        \n      \n    \n  \n  \n  \n    \n      \n        {{ \"organization.name\" | translate }}\n      \n      {{ \"organization.name_description\" | translate }}\n    \n    \n      \n    \n  \n  \n  \n    \n      {{ \"organization.avatar\" | translate }}\n    \n    \n      @if (\n        !(organization | async)?.pictureUrl ||\n        (organization | async)?.pictureUrl === null\n      ) {\n        \n      } @else {\n        \n      }\n\n      \n      \n    \n  \n\n\n\n  \n    \n      \n        {{ \"organization.archive_period\" | translate }}\n      \n      {{ \"organization.archive_period_description\" | translate }}\n    \n    \n      \n      \n    \n  \n  \n  \n    \n      \n        {{ \"organization.cleanup_period\" | translate }}\n      \n      {{ \"organization.cleanup_period_description\" | translate }}\n    \n    \n      \n      \n    \n  \n\n\n\n  \n    \n      \n        {{ \"organization.delete\" | translate }}\n      \n      {{ \"organization.delete_description\" | translate }}\n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ \"organization.id\" | translate }}            {{ \"organization.id_description\" | translate }}                                          {{ \"organization.slug\" | translate }}            {{ \"organization.slug_description\" | translate }}                      @if (!isSlugTaken) {                  } @else {                  }                                          {{ \"organization.name\" | translate }}            {{ \"organization.name_description\" | translate }}                                  {{ \"organization.avatar\" | translate }}              @if (        !(organization | async)?.pictureUrl ||        (organization | async)?.pictureUrl === null      ) {              } @else {              }                                      {{ \"organization.archive_period\" | translate }}            {{ \"organization.archive_period_description\" | translate }}                                                {{ \"organization.cleanup_period\" | translate }}            {{ \"organization.cleanup_period_description\" | translate }}                                              {{ \"organization.delete\" | translate }}            {{ \"organization.delete_description\" | translate }}                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationDto.html":{"url":"interfaces/OrganizationDto.html","title":"interface - OrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/organization.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organizationId\n                                        \n                                \n                                \n                                        \n                                            pictureUrl\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrganizationDto {\n  organizationId: string;\n  pictureUrl: string;\n  slug: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationEffects.html":{"url":"injectables/OrganizationEffects.html","title":"injectable - OrganizationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/organization/organization.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewOrganization$\n                            \n                            \n                                loadCurrentOrganization$\n                            \n                            \n                                updateOrganizationPicture$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/organization/organization.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewOrganization$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createOrganization),\n      switchMap((request) =>\n        this.organizationService.createOrganization(request).pipe(\n          map((organization) => createOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentOrganization$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentOrganization),\n      switchMap(() =>\n        this.organizationService.getOrganization().pipe(\n          map((organization) => loadCurrentOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrganizationPicture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateOrganizationPicture),\n      switchMap((request) =>\n        this.organizationService.updateOrganizationPicture(request.file).pipe(\n          map((result) => updateOrganizationPictureSuccess(result)),\n          catchError((error) => of(updateOrganizationPictureFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:38\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { OrganizationService } from \"../../services/api/organization.api.service\";\nimport { createOrganization, createOrganizationSuccess, loadCurrentOrganization, loadCurrentOrganizationFailure, loadCurrentOrganizationSuccess, updateOrganizationPicture, updateOrganizationPictureFailure, updateOrganizationPictureSuccess } from \"./organization.actions\";\nimport { catchError, map, of, switchMap } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class OrganizationEffects {\n  constructor(\n    private organizationService: OrganizationService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentOrganization$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentOrganization),\n      switchMap(() =>\n        this.organizationService.getOrganization().pipe(\n          map((organization) => loadCurrentOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createNewOrganization$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createOrganization),\n      switchMap((request) =>\n        this.organizationService.createOrganization(request).pipe(\n          map((organization) => createOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  updateOrganizationPicture$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateOrganizationPicture),\n      switchMap((request) =>\n        this.organizationService.updateOrganizationPicture(request.file).pipe(\n          map((result) => updateOrganizationPictureSuccess(result)),\n          catchError((error) => of(updateOrganizationPictureFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/organization.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganization\n                            \n                            \n                                getOrganization\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                updateOrganizationPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/organization.api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization(dto: CreateOrganizationRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateOrganizationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganization\n                        \n                    \n                \n            \n            \n                \ngetOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n            \n                \nisSlugTaken(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrganizationPicture\n                        \n                    \n                \n            \n            \n                \nupdateOrganizationPicture(picture: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CreateOrganizationRequestDto } from '../../domain/dto/requests/create-organization-request.dto';\nimport { OrganizationDto } from '../../domain/dto/organization.dto';\nimport { api } from './api';\nimport { FileDto } from '../../domain/dto/file.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationService {\n  constructor(private http: HttpClient) {}\n\n  createOrganization(\n    dto: CreateOrganizationRequestDto,\n  ): Observable {\n    return this.http.post(\n      api.organizationUrl,\n      dto,\n      api.authOptions,\n    );\n  }\n\n  getOrganization(): Observable {\n    return this.http.get(api.organizationUrl, api.authOptions);\n  }\n\n  isSlugTaken(slug: string): Observable {\n    return this.http.get(\n      api.organizationUrl + '/slug/taken?slug=' + slug,\n      api.authOptions,\n    );\n  }\n\n  updateOrganizationPicture(picture: File): Observable {\n    const data = new FormData();\n    data.append('picture', picture);\n    return this.http.patch(\n      api.organizationUrl + '/update-picture',\n      data,\n      api.authOptionsAutoContentType,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationState.html":{"url":"interfaces/OrganizationState.html","title":"interface - OrganizationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganizationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/organization/organization.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            organization\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            updatePictureError\n                                        \n                                \n                                \n                                        \n                                            updatePictureStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organization:         Organization | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Organization | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatePictureError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatePictureError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatePictureStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatePictureStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Organization } from '../../domain/models/organization.entity';\nimport {\n  createOrganization,\n  createOrganizationFailure,\n  createOrganizationSuccess,\n  loadCurrentOrganization,\n  loadCurrentOrganizationFailure,\n  loadCurrentOrganizationSuccess,\n  updateOrganizationPicture,\n  updateOrganizationPictureFailure,\n  updateOrganizationPictureSuccess,\n} from './organization.actions';\n\nexport interface OrganizationState {\n  organization: Organization | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updatePictureError: any | null;\n  status: StateStatus;\n  updatePictureStatus: StateStatus;\n}\n\nexport const initialState: OrganizationState = {\n  organization: null,\n  error: undefined,\n  status: StateStatus.PENDING,\n  updatePictureError: undefined,\n  updatePictureStatus: StateStatus.PENDING\n};\n\nexport const organizationReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization\n  on(loadCurrentOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadCurrentOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadCurrentOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle create new organization\n  on(createOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle create new organization success\n  on(createOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new organization failure\n  on(createOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle update organization picture\n  on(updateOrganizationPicture, (state) => ({\n    ...state,\n    updatePictureError: null,\n    updatePictureStatus: StateStatus.LOADING,\n  })),\n\n  //Handle update organization picture success\n  on(updateOrganizationPictureSuccess, (state, fileDto) => ({\n    ...state,\n    organization: {...state.organization!, pictureUrl: fileDto.url},\n    updatePictureError: null,\n    updatePictureStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handleupdate organization picture failure\n  on(updateOrganizationPictureFailure, (state, { error }) => ({\n    ...state,\n    updatePictureError: error,\n    updatePictureStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Platform.html":{"url":"interfaces/Platform.html","title":"interface - Platform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Platform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/platform.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            iconUrl\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         PlatformType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformType } from \"./enums/platform-type.enum\";\n\nexport interface Platform {\n    platformId: string;\n    type: PlatformType;\n    version: string;\n    iconUrl: string | null;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlatformDto.html":{"url":"interfaces/PlatformDto.html","title":"interface - PlatformDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlatformDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/platform.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            iconUrl\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         PlatformType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformType } from \"../models/enums/platform-type.enum\";\n\nexport interface PlatformDto {\n  platformId: string;\n  type: PlatformType;\n  version: string;\n  iconUrl: string | null;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformEffects.html":{"url":"injectables/PlatformEffects.html","title":"injectable - PlatformEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlatformEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/platform/platform.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformService: PlatformService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/platform/platform.effects.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformService\n                                                  \n                                                        \n                                                                        PlatformService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadPlatforms$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadPlatforms),\n      switchMap(() =>\n        this.platformService.getPlatforms().pipe(\n          map((result) => loadPlatformsSuccess({ platforms: result })),\n          catchError((error) => of(loadPlatformsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/platform/platform.effects.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport { PlatformService } from '../../services/api/platform.api.service';\nimport {\n  loadPlatforms,\n  loadPlatformsFailure,\n  loadPlatformsSuccess,\n} from './platform.actions';\n\n@Injectable()\nexport class PlatformEffects {\n  constructor(\n    private platformService: PlatformService,\n    private actions$: Actions,\n  ) {}\n\n  loadPlatforms$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadPlatforms),\n      switchMap(() =>\n        this.platformService.getPlatforms().pipe(\n          map((result) => loadPlatformsSuccess({ platforms: result })),\n          catchError((error) => of(loadPlatformsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformService.html":{"url":"injectables/PlatformService.html","title":"injectable - PlatformService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlatformService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/platform.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlatforms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/platform.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlatforms\n                        \n                    \n                \n            \n            \n                \ngetPlatforms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/platform.api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PlatformDto } from '../../domain/dto/platform.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlatformService {\n  constructor(private http: HttpClient) {}\n\n  getPlatforms(): Observable {\n    return this.http.get(api.platformUrl, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlatformState.html":{"url":"interfaces/PlatformState.html","title":"interface - PlatformState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlatformState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/platform/platform.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            platforms\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platforms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platforms:         Platform[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Platform[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Platform } from '../../domain/models/platform.entity';\nimport {\n  loadPlatforms,\n  loadPlatformsFailure,\n  loadPlatformsSuccess,\n} from './platform.actions';\n\nexport interface PlatformState {\n  platforms: Platform[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  status: StateStatus;\n}\n\nexport const initialState: PlatformState = {\n  platforms: null,\n  error: undefined,\n  status: StateStatus.PENDING,\n};\n\nexport const platformReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization members\n  on(loadPlatforms, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadPlatformsSuccess, (state, params) => ({\n    ...state,\n    platforms: params.platforms,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadPlatformsFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/project.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         Platform\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Platform\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Platform } from \"./platform.entity\"\n\nexport interface Project {\n    projectId: string,\n    name: string,\n    platform: Platform\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectDebugFile.html":{"url":"interfaces/ProjectDebugFile.html","title":"interface - ProjectDebugFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectDebugFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/project-debug-file.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            debugFileId\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            fileUrl\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugFileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugFileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         DebugFileType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DebugFileType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DebugFileType } from \"./enums/debug-file-type.enum\";\n\nexport interface ProjectDebugFile {\n  debugFileId: string;\n  type: DebugFileType;\n  fileUrl: string;\n  file: string;\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectDebugFileDto.html":{"url":"interfaces/ProjectDebugFileDto.html","title":"interface - ProjectDebugFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectDebugFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-debug-file.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            debugFileId\n                                        \n                                \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            fileUrl\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debugFileId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debugFileId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         DebugFileType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DebugFileType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DebugFileType } from \"../models/enums/debug-file-type.enum\";\n\nexport interface ProjectDebugFileDto {\n    debugFileId: string;\n    type: DebugFileType;\n    fileUrl: string;\n    file: string;\n    createdAt: Date;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectDetailsComponent.html":{"url":"components/ProjectDetailsComponent.html","title":"component - ProjectDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/project-details/project-details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-details\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./project-details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-project-details',\n  standalone: true,\n  imports: [],\n  templateUrl: './project-details.component.html',\n  styleUrl: './project-details.component.scss'\n})\nexport class ProjectDetailsComponent {\n\n}\n\n    \n\n    \n        project-details works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'project-details works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectDto.html":{"url":"interfaces/ProjectDto.html","title":"interface - ProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         PlatformDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformDto } from \"./platform.dto\";\n\nexport interface ProjectDto {\n    projectId: string,\n    name: string,\n    platform: PlatformDto\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectEffects.html":{"url":"injectables/ProjectEffects.html","title":"injectable - ProjectEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/project/project.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createProject$\n                            \n                            \n                                loadAllProjects$\n                            \n                            \n                                loadMyProjects$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/project/project.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createProject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createProject),\n      switchMap((request) =>\n        this.projectService.createProject(request).pipe(\n          map((project) => createProjectSuccess(project)),\n          catchError((error) => of(createProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAllProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadAllProjects),\n      switchMap(() =>\n        this.projectService.getAllProjects().pipe(\n          map((projects) => loadAllProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadAllProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMyProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyProjects),\n      switchMap((request) =>\n        this.projectService.getMyProjects(request.teamIds).pipe(\n          map((projects) => loadMyProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadMyProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { ProjectService } from \"../../services/api/project.api.service\";\nimport { createProject, createProjectFailure, createProjectSuccess, loadAllProjects, loadAllProjectsFailure, loadAllProjectsSuccess, loadMyProjects, loadMyProjectsFailure, loadMyProjectsSuccess } from \"./project.actions\";\nimport { Injectable } from \"@angular/core\";\nimport { switchMap, map, catchError, of } from \"rxjs\";\n\n@Injectable()\nexport class ProjectEffects {\n  constructor(\n    private projectService: ProjectService,\n    private actions$: Actions,\n  ) {}\n\n  loadAllProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadAllProjects),\n      switchMap(() =>\n        this.projectService.getAllProjects().pipe(\n          map((projects) => loadAllProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadAllProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadMyProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyProjects),\n      switchMap((request) =>\n        this.projectService.getMyProjects(request.teamIds).pipe(\n          map((projects) => loadMyProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadMyProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n\n  createProject$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createProject),\n      switchMap((request) =>\n        this.projectService.createProject(request).pipe(\n          map((project) => createProjectSuccess(project)),\n          catchError((error) => of(createProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectHourByHourStatDto.html":{"url":"interfaces/ProjectHourByHourStatDto.html","title":"interface - ProjectHourByHourStatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectHourByHourStatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-hour-by-hour-stat.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            crashFreeGain\n                                        \n                                \n                                \n                                        \n                                            crashFreePercentage\n                                        \n                                \n                                \n                                        \n                                            endInterval\n                                        \n                                \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numberOfCrashFreeSessions\n                                        \n                                \n                                \n                                        \n                                            numberOfSessions\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            startInterval\n                                        \n                                \n                                \n                                        \n                                            transactions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        crashFreeGain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFreeGain:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crashFreePercentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFreePercentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endInterval\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endInterval:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfCrashFreeSessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfCrashFreeSessions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfSessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfSessions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startInterval\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startInterval:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transactions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectHourByHourStatDto {\n  id: string;\n  name: string;\n  projectId: string;\n  startInterval: Date;\n  endInterval: Date;\n  numberOfSessions: number;\n  numberOfCrashFreeSessions: number;\n  crashFreePercentage: number;\n  crashFreeGain: number;\n  errors: number;\n  transactions: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectPickerComponent.html":{"url":"components/ProjectPickerComponent.html","title":"component - ProjectPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/project-picker/project-picker.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-picker\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            TranslateModule\n                            DialogModule\n                            PickListModule\n                            AvatarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./project-picker.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-picker.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableProjects\n                            \n                            \n                                isLoadingProjects\n                            \n                            \n                                isPickerDialogVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMoveAllToSource\n                            \n                            \n                                onMoveAllToTarget\n                            \n                            \n                                onMoveToSource\n                            \n                            \n                                onMoveToTarget\n                            \n                            \n                                showPickerDialog\n                            \n                            \n                                stringToColour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onProjectsPicked\n                            \n                            \n                                onProjectsRemoved\n                            \n                            \n                                selectedProjects\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/project-picker/project-picker.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onProjectsPicked\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/project-picker/project-picker.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onProjectsRemoved\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/project-picker/project-picker.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedProjects\n                    \n                \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/project-picker/project-picker.component.ts:47\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToSource\n                        \n                    \n                \n            \n            \n                \nonMoveAllToSource(event: PickListMoveAllToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveAllToTarget(event: PickListMoveAllToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToSource\n                        \n                    \n                \n            \n            \n                \nonMoveToSource(event: PickListMoveToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveToTarget(event: PickListMoveToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPickerDialog\n                        \n                    \n                \n            \n            \n                \nshowPickerDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableProjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/project-picker/project-picker.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAllProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/project-picker/project-picker.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPickerDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/project-picker/project-picker.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport {\n  PickListModule,\n  PickListMoveAllToSourceEvent,\n  PickListMoveAllToTargetEvent,\n  PickListMoveToSourceEvent,\n  PickListMoveToTargetEvent,\n} from 'primeng/picklist';\nimport { RippleModule } from 'primeng/ripple';\nimport { filter, take } from 'rxjs';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport { loadAllProjects } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingAllProjects,\n  selectAllProjects,\n} from '../../../core/state/project/project.selectors';\n\n@Component({\n  selector: 'app-project-picker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    TranslateModule,\n    DialogModule,\n    PickListModule,\n    AvatarModule,\n  ],\n  templateUrl: './project-picker.component.html',\n  styleUrl: './project-picker.component.scss',\n})\nexport class ProjectPickerComponent {\n  constructor(private store: Store) {}\n  isLoadingProjects = this.store.select(isLoadingAllProjects);\n  availableProjects: Project[] = [];\n  isPickerDialogVisible = false;\n\n  @Input()\n  selectedProjects: Project[] = [];\n\n  @Input()\n  onProjectsPicked?: (projects: Project[]) => void;\n\n  @Input()\n  onProjectsRemoved?: (projects: Project[]) => void;\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n\n  showPickerDialog() {\n    this.store.dispatch(loadAllProjects());\n    this.store\n      .select(selectAllProjects)\n      .pipe(\n        filter((projects) => projects !== undefined && projects !== null),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((projects) => {\n        // Filter out members that are also present in selectedProjects\n        this.availableProjects =\n          projects?.filter(\n            (project) =>\n              !this.selectedProjects.some(\n                (selected) => selected.projectId === project.projectId,\n              ),\n          ) ?? [];\n\n        this.isPickerDialogVisible = true;\n      });\n  }\n\n  onMoveToSource(event: PickListMoveToSourceEvent) {\n    if (this.onProjectsRemoved) {\n      this.onProjectsRemoved(event.items);\n    }\n  }\n\n  onMoveToTarget(event: PickListMoveToTargetEvent) {\n    if (this.onProjectsPicked) {\n      this.onProjectsPicked(event.items);\n    }\n  }\n\n  onMoveAllToSource(event: PickListMoveAllToSourceEvent) {\n    if (this.onProjectsRemoved) {\n      this.onProjectsRemoved(event.items);\n    }\n  }\n\n  onMoveAllToTarget(event: PickListMoveAllToTargetEvent) {\n    if (this.onProjectsPicked) {\n      this.onProjectsPicked(event.items);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n        \n          {{ project.name }}\n          \n            {{ project.platform.type | titlecase }} {{project.platform.version}}\n          \n        \n      \n    \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ project.name }}                      {{ project.platform.type | titlecase }} {{project.platform.version}}                                      '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectRelease.html":{"url":"interfaces/ProjectRelease.html","title":"interface - ProjectRelease","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectRelease\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/project-release.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            releaseId\n                                        \n                                \n                                \n                                        \n                                            releaseTimestamp\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        releaseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseTimestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseTimestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectRelease {\n  releaseId: string;\n  version: string;\n  releaseTimestamp: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectReleaseDto.html":{"url":"interfaces/ProjectReleaseDto.html","title":"interface - ProjectReleaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectReleaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-release.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            releaseId\n                                        \n                                \n                                \n                                        \n                                            releaseTimestamp\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        releaseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseTimestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseTimestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectReleaseDto {\n  releaseId: string;\n  version: string;\n  releaseTimestamp: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectSecurityClientDto.html":{"url":"interfaces/ProjectSecurityClientDto.html","title":"interface - ProjectSecurityClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectSecurityClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-security-client.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allowedDomains\n                                        \n                                \n                                \n                                        \n                                            securityHeader\n                                        \n                                \n                                \n                                        \n                                            securityToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowedDomains\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowedDomains:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        securityHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        securityHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        securityToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        securityToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectSecurityClientDto {\n  securityToken: string;\n  securityHeader: string;\n  allowedDomains: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectStatDto.html":{"url":"interfaces/ProjectStatDto.html","title":"interface - ProjectStatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectStatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-stat.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            crashFreePercentage\n                                        \n                                \n                                \n                                        \n                                            crashFreePercentageGain\n                                        \n                                \n                                \n                                        \n                                            hourByHour\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            releases\n                                        \n                                \n                                \n                                        \n                                            totalCrashFreeSessions\n                                        \n                                \n                                \n                                        \n                                            totalErrors\n                                        \n                                \n                                \n                                        \n                                            totalSessions\n                                        \n                                \n                                \n                                        \n                                            totalTransactions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        crashFreePercentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFreePercentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crashFreePercentageGain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFreePercentageGain:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hourByHour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hourByHour:     ProjectHourByHourStatDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectHourByHourStatDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         PlatformDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releases\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releases:     ProjectReleaseDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectReleaseDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCrashFreeSessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCrashFreeSessions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalErrors:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalSessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalSessions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalTransactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalTransactions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformDto } from './platform.dto';\nimport { ProjectHourByHourStatDto } from './project-hour-by-hour-stat.dto';\nimport { ProjectReleaseDto } from './project-release.dto';\n\nexport interface ProjectStatDto {\n  projectId: string;\n  name: string;\n  platform: PlatformDto;\n  releases: ProjectReleaseDto[];\n  hourByHour: ProjectHourByHourStatDto[];\n  totalSessions: number;\n  totalCrashFreeSessions: number;\n  crashFreePercentage: number;\n  crashFreePercentageGain: number;\n  totalErrors: number;\n  totalTransactions: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectState.html":{"url":"interfaces/ProjectState.html","title":"interface - ProjectState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/project/project.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allProjects\n                                        \n                                \n                                \n                                        \n                                            allProjectsError\n                                        \n                                \n                                \n                                        \n                                            allProjectsStatus\n                                        \n                                \n                                \n                                        \n                                            createProjectError\n                                        \n                                \n                                \n                                        \n                                            createProjectStatus\n                                        \n                                \n                                \n                                        \n                                            myProjects\n                                        \n                                \n                                \n                                        \n                                            myProjectsError\n                                        \n                                \n                                \n                                        \n                                            myProjectsStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allProjects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjects:         Project[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Project[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createProjectError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createProjectError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createProjectStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createProjectStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myProjects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myProjects:         Project[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Project[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Project } from '../../domain/models/project.entity';\nimport { createProject, createProjectFailure, createProjectSuccess, loadAllProjects, loadAllProjectsFailure, loadAllProjectsSuccess, loadMyProjects, loadMyProjectsFailure, loadMyProjectsSuccess } from './project.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface ProjectState {\n  allProjects: Project[] | null;\n  myProjects: Project[] | null;\n  allProjectsError: any | null;\n  createProjectError: any | null;\n  myProjectsError: any | null;\n  allProjectsStatus: StateStatus;\n  createProjectStatus: StateStatus;\n  myProjectsStatus: StateStatus\n}\n\nexport const initialState: ProjectState = {\n  allProjects: null,\n  myProjects: null,\n  allProjectsError: undefined,\n  allProjectsStatus: StateStatus.PENDING,\n  createProjectError: undefined,\n  createProjectStatus: StateStatus.PENDING,\n  myProjectsError: undefined,\n  myProjectsStatus: StateStatus.PENDING,\n};\n\nexport const projectReducer = createReducer(\n  initialState,\n\n  //Handle loading all projects\n  on(loadAllProjects, (state) => ({\n    ...state,\n    allProjectsError: null,\n    allProjectsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadAllProjectsSuccess, (state, {projects}) => ({\n    ...state,\n    allProjects: projects,\n    allProjectsError: null,\n    allProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadAllProjectsFailure, (state, { error }) => ({\n    ...state,\n    allProjectsError: error,\n    allProjectsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle loading my projects\n  on(loadMyProjects, (state) => ({\n    ...state,\n    myProjectsError: null,\n    myProjectsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadMyProjectsSuccess, (state, {projects}) => ({\n    ...state,\n    myProjects: projects,\n    myProjectsError: null,\n    myProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadMyProjectsFailure, (state, { error }) => ({\n    ...state,\n    myProjectsError: error,\n    myProjectsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle create new team\n  on(createProject, (state) => ({\n    ...state,\n    createProjectError: null,\n    createProjectStatus: StateStatus.LOADING,\n  })),\n\n  //Handle create new team success\n  on(createProjectSuccess, (state, project) => ({\n    ...state,\n    allProjects: [...(state.allProjects || []), project],\n    createProjectError: null,\n    createProjectStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new team failure\n  on(createProjectFailure, (state, { error }) => ({\n    ...state,\n    createProjectError: error,\n    createProjectStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent.html":{"url":"components/ProjectsComponent.html","title":"component - ProjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/projects/projects.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            FilterService\n                \n            \n\n\n            \n                selector\n                app-projects\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TranslateModule\n                            MultiSelectModule\n                            InputTextModule\n                            FormsModule\n                            ReactiveFormsModule\n                            ProgressSpinnerModule\n                            ButtonModule\n                            RippleModule\n                                SingleProjectCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredProjects\n                            \n                            \n                                filterValue\n                            \n                            \n                                isLoadingMyProjects\n                            \n                            \n                                isLoadingMyTeams\n                            \n                            \n                                myProjects\n                            \n                            \n                                myTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterMyTeams\n                            \n                            \n                                filterProjects\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/projects/projects.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                    FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterMyTeams\n                        \n                    \n                \n            \n            \n                \nfilterMyTeams($event: MultiSelectChangeEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/projects.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        MultiSelectChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterProjects\n                        \n                    \n                \n            \n            \n                \nfilterProjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/projects.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/projects.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.myProjects.pipe(\n    map((value) =>\n      value.filter((project) =>\n        this.filterValue == '' ? true : project.name.includes(this.filterValue),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMyProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMyTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FilterService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { MultiSelectChangeEvent, MultiSelectModule } from 'primeng/multiselect';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { RippleModule } from 'primeng/ripple';\nimport { map } from 'rxjs';\nimport { Team } from '../../core/domain/models/team.entity';\nimport { AppState } from '../../core/state/app.state';\nimport { loadMyProjects } from '../../core/state/project/project.actions';\nimport {\n  isLoadingMyProjects,\n  selectMyProjects,\n} from '../../core/state/project/project.selectors';\nimport { loadMyTeams } from '../../core/state/team/team.actions';\nimport {\n  isLoadingMyTeams,\n  selectMyTeams,\n} from '../../core/state/team/team.selectors';\nimport { SingleProjectCardComponent } from './components/single-project-card/single-project-card.component';\n\n@Component({\n  selector: 'app-projects',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    MultiSelectModule,\n    InputTextModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    ButtonModule,\n    RippleModule,\n    SingleProjectCardComponent,\n  ],\n  providers: [FilterService],\n  templateUrl: './projects.component.html',\n  styleUrl: './projects.component.scss',\n})\nexport class ProjectsComponent implements OnInit {\n  constructor(\n    private store: Store,\n    private filterService: FilterService,\n  ) {}\n\n  myTeams = this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n  isLoadingMyTeams = this.store.select(isLoadingMyTeams);\n\n  filterValue: string = '';\n\n  myProjects = this.store\n    .select(selectMyProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  filteredProjects = this.myProjects.pipe(\n    map((value) =>\n      value.filter((project) =>\n        this.filterValue == '' ? true : project.name.includes(this.filterValue),\n      ),\n    ),\n  );\n\n  isLoadingMyProjects = this.store.select(isLoadingMyProjects);\n\n  ngOnInit(): void {\n    this.store.dispatch(loadMyTeams());\n    this.store.dispatch(loadMyProjects({}));\n  }\n\n  filterMyTeams($event: MultiSelectChangeEvent) {\n    let teams: Team[] | undefined = $event.value ?? undefined;\n    if (teams?.length === 0) {\n      teams = undefined;\n    }\n\n    if (teams) {\n      this.store.dispatch(\n        loadMyProjects({ teamIds: teams.map((team) => team.teamId) }),\n      );\n    } else {\n      this.store.dispatch(loadMyTeams());\n    }\n  }\n\n  filterProjects() {\n    this.filteredProjects = this.myProjects.pipe(\n      map((value) =>\n        value.filter((project) =>\n          this.filterValue == '' ? true : project.name.includes(this.filterValue),\n        ),\n      ),\n    );\n  }\n}\n\n    \n\n    \n        {{ \"projects.projects\" | translate }}\n\n  \n  \n    \n    \n  \n\n\n@if ((isLoadingMyProjects | async) === true) {\n  \n    \n  \n} @else {\n  \n    @for (project of filteredProjects | async; track $index) {\n      \n    }\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \"projects.projects\" | translate }}              @if ((isLoadingMyProjects | async) === true) {        } @else {      @for (project of filteredProjects | async; track $index) {          }  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent-1.html":{"url":"components/ProjectsComponent-1.html","title":"component - ProjectsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/projects/projects.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects-settings\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AccessDeniedComponent\n                            PanelModule\n                            TranslateModule\n                                ProjectsTableComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isLoadingAllProjects\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/projects/projects.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/projects/projects.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingAllProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAllProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectAllProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PanelModule } from 'primeng/panel';\nimport { map } from 'rxjs';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { loadAllProjects } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingAllProjects,\n  selectAllProjects,\n} from '../../../core/state/project/project.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { ProjectsTableComponent } from '../../../shared/components/projects-table/projects-table.component';\n\n@Component({\n  selector: 'app-projects-settings',\n  standalone: true,\n  imports: [\n    CommonModule,\n    AccessDeniedComponent,\n    PanelModule,\n    TranslateModule,\n    ProjectsTableComponent,\n  ],\n  templateUrl: './projects.component.html',\n  styleUrl: './projects.component.scss',\n})\nexport class ProjectsComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.CREATE),\n  );\n\n  isLoadingAllProjects = this.store.select(isLoadingAllProjects);\n  projects = this.store\n    .select(selectAllProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit(): void {\n    this.store.dispatch(loadAllProjects());\n  }\n}\n\n    \n\n    \n        @if (hasReadPermission | async) {\n    \n      \n    \n  } @else {\n    \n  }\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {                } @else {      }  '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsTableComponent.html":{"url":"components/ProjectsTableComponent.html","title":"component - ProjectsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/projects-table/projects-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-projects-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ToastModule\n                            ConfirmDialogModule\n                            TableModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            InputTextModule\n                            AvatarModule\n                            DialogModule\n                            DropdownModule\n                            FormsModule\n                            ReactiveFormsModule\n                            CalendarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewProjectForm\n                            \n                            \n                                    \n                                dt\n                            \n                            \n                                isAddNewProjectDialogVisible\n                            \n                            \n                                isLoadingCreateNewProject\n                            \n                            \n                                isNameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                nameCheckSubscription\n                            \n                            \n                                    \n                                nameInput\n                            \n                            \n                                platforms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                    Private\n                                checkName\n                            \n                            \n                                createNewProject\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                openSingleProject\n                            \n                            \n                                    Private\n                                resetProjectsForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                enableAddAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableSorting\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, messageService: MessageService, translateService: TranslateService, projectService: ProjectService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:75\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:87\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:107\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:101\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:104\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:98\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:92\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkName\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewProject\n                        \n                    \n                \n            \n            \n                \ncreateNewProject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSingleProject\n                        \n                    \n                \n            \n            \n                \nopenSingleProject(event: MouseEvent, project: Project)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:197\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                project\n                                            \n                                                            Project\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetProjectsForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetProjectsForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:185\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewProjectForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: ['', [Validators.required]],\n    platform: [undefined as Platform | undefined, [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewProjectDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNewProject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingCreateProject)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:115\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        nameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platforms\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectPlatforms)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:116\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { CalendarModule } from 'primeng/calendar';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Platform } from '../../../core/domain/models/platform.entity';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport { ProjectService } from '../../../core/services/api/project.api.service';\nimport { AppState } from '../../../core/state/app.state';\nimport { loadPlatforms } from '../../../core/state/platform/platform.actions';\nimport { selectPlatforms } from '../../../core/state/platform/platform.selectors';\nimport { createProject } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingCreateProject,\n  selectCreateProjectStatus,\n} from '../../../core/state/project/project.selectors';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-projects-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ToastModule,\n    ConfirmDialogModule,\n    TableModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    InputTextModule,\n    AvatarModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CalendarModule,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './projects-table.component.html',\n  styleUrl: './projects-table.component.scss',\n})\nexport class ProjectsTableComponent implements AfterViewInit, OnDestroy {\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private projectService: ProjectService,\n    private router: Router,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n  @Input()\n  data?: Project[] = undefined;\n\n  @ViewChild('name') nameInput!: ElementRef;\n\n  @Input()\n  isLoading: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  createNewProjectForm = this.formBuilder.group({\n    name: ['', [Validators.required]],\n    platform: [undefined as Platform | undefined, [Validators.required]],\n  });\n  isAddNewProjectDialogVisible: boolean = false;\n  isNameTaken: boolean | null = null;\n  isLoadingCreateNewProject = this.store.select(isLoadingCreateProject);\n  platforms = this.store.select(selectPlatforms);\n\n  private nameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.nameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkName(data));\n  }\n\n  ngOnDestroy() {\n    this.nameCheckSubscription?.unsubscribe();\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  showAddDialog() {\n    this.resetProjectsForm();\n    this.store.dispatch(loadPlatforms());\n    this.isAddNewProjectDialogVisible = true;\n  }\n\n  createNewProject() {\n    this.store\n      .select(selectCreateProjectStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('projects-table.error'),\n            detail: this.translateService.instant(\n              'projects-table.failed_to_create_project',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('projects-table.success'),\n            detail: this.translateService.instant(\n              'projects-table.project_created',\n            ),\n          });\n          this.isAddNewProjectDialogVisible =\n            !this.isAddNewProjectDialogVisible;\n        }\n      });\n\n    const dto = {\n      name: this.createNewProjectForm.get('name')?.value ?? '',\n      platformId:\n        this.createNewProjectForm.get('platform')?.value?.platformId ?? '',\n    };\n    this.store.dispatch(createProject(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private resetProjectsForm() {\n    this.createNewProjectForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      platform: [undefined as Platform | undefined, [Validators.required]],\n    });\n  }\n\n  openSingleProject(event: MouseEvent, project: Project) {\n    const isDeleteButtonClicked = (event.target as HTMLElement).closest(\n      '.p-button',\n    );\n\n    if (!isDeleteButtonClicked) {\n      this.router.navigate([`/home/settings/projects/${project.projectId}`]);\n    }\n  }\n\n  private checkName(name: string) {\n    this.nameCheckSubscription?.unsubscribe();\n    this.nameCheckSubscription = this.projectService\n      .isNameTaken(name)\n      .subscribe({\n        next: (result) => {\n          this.isNameTaken = result;\n        },\n        error: () => {\n          this.isNameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n        \n      \n      \n    \n  \n  \n    \n      \n        \n          {{ \"projects-table.name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"projects-table.platform\" | translate }}\n          \n          \n        \n      \n    \n  \n  \n    \n      \n        {{ project?.name }}\n      \n      \n        \n          \n          {{ project?.platform?.type | titlecase }}\n          {{ project?.platform?.version }}\n        \n      \n    \n  \n  \n    \n      {{ \"projects-table.no_projects_found\" | translate }}\n    \n  \n\n\n\n  \n    \n      \n        {{ \"projects-table.name_label\" | translate }}\n        \n          @if (isNameTaken !== null && !isNameTaken) {\n            \n          } @else {\n            \n          }\n          \n        \n        {{ \"projects-table.name_is_required\" | translate }}\n\n        {{ \"projects-table.platform_label\" | translate }}\n        \n          \n            \n              \n              {{ platform.type | titlecase }} {{ platform.version }}\n            \n          \n          \n            \n              \n              {{ platform.type | titlecase }} {{ platform.version }}\n            \n          \n        \n        {{ \"projects-table.platform_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ \"projects-table.name\" | translate }}                                                          {{ \"projects-table.platform\" | translate }}                                                            {{ project?.name }}                                        {{ project?.platform?.type | titlecase }}          {{ project?.platform?.version }}                                {{ \"projects-table.no_projects_found\" | translate }}                          {{ \"projects-table.name_label\" | translate }}                  @if (isNameTaken !== null && !isNameTaken) {                      } @else {                      }                          {{ \"projects-table.name_is_required\" | translate }}        {{ \"projects-table.platform_label\" | translate }}                                                          {{ platform.type | titlecase }} {{ platform.version }}                                                                        {{ platform.type | titlecase }} {{ platform.version }}                                      {{ \"projects-table.platform_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueriesComponent.html":{"url":"components/QueriesComponent.html","title":"component - QueriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QueriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/queries/queries.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-queries\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./queries.component.html\n            \n\n\n\n            \n                styleUrl\n                ./queries.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-queries',\n  standalone: true,\n  imports: [],\n  templateUrl: './queries.component.html',\n  styleUrl: './queries.component.scss'\n})\nexport class QueriesComponent {\n\n}\n\n    \n\n    \n        queries works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'queries works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QueriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-register\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  registerNewUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectCurrentUser,\n  selectRegistrationError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss',\n})\nexport class RegisterComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    if (!environment.enableRegistration) {\n      this.router.navigate(['/auth/login']);\n    }\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectRegistrationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.register.registration_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.register.registration_error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(registerNewUser(dto));\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.register.welcome_message\" | translate }}\n  \n  {{\n    \"auth.register.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.register.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.register.username_is_required\" | translate }}\n    {{ \"auth.register.username_length\" | translate }}\n\n    {{ \"auth.register.password_label\" | translate }}\n    \n    {{ \"auth.register.password_length\" | translate }}\n    {{ \"auth.register.password_not_strong\" | translate }}\n\n    {{\n      \"auth.register.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.register.email_is_required\" | translate }}\n\n    {{ \"auth.register.first_name_label\" | translate }}\n    \n    {{ \"auth.register.first_name_is_required\" | translate }}\n\n    {{ \"auth.register.last_name_label\" | translate }}\n    \n    {{ \"auth.register.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.register.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.register.welcome_message\" | translate }}    {{    \"auth.register.welcome_description\" | translate  }}      {{ \"auth.register.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.register.username_is_required\" | translate }}    {{ \"auth.register.username_length\" | translate }}    {{ \"auth.register.password_label\" | translate }}        {{ \"auth.register.password_length\" | translate }}    {{ \"auth.register.password_not_strong\" | translate }}    {{      \"auth.register.email_label\" | translate    }}                        {{ \"auth.register.email_is_required\" | translate }}    {{ \"auth.register.first_name_label\" | translate }}        {{ \"auth.register.first_name_is_required\" | translate }}    {{ \"auth.register.last_name_label\" | translate }}        {{ \"auth.register.last_name_is_required\" | translate }}          {{ \"auth.register.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequestDto.html":{"url":"interfaces/RegisterRequestDto.html","title":"interface - RegisterRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/register-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterRequestDto {\n  username: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReleasesComponent.html":{"url":"components/ReleasesComponent.html","title":"component - ReleasesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReleasesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/releases/releases.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-releases\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./releases.component.html\n            \n\n\n\n            \n                styleUrl\n                ./releases.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-releases',\n  standalone: true,\n  imports: [],\n  templateUrl: './releases.component.html',\n  styleUrl: './releases.component.scss'\n})\nexport class ReleasesComponent {\n\n}\n\n    \n\n    \n        releases works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'releases works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReleasesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReleasesTableComponent.html":{"url":"components/ReleasesTableComponent.html","title":"component - ReleasesTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReleasesTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/releases-table/releases-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-releases-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            ToastModule\n                            ConfirmDialogModule\n                            DialogModule\n                            TableModule\n                            InputTextModule\n                            ReactiveFormsModule\n                            FormsModule\n                                AccessDeniedComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./releases-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./releases-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createReleaseForm\n                            \n                            \n                                    \n                                dt\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isAddNewDialogVisible\n                            \n                            \n                                isLoadingCreateNew\n                            \n                            \n                                isLoadingReleases\n                            \n                            \n                                isLoadingRemoveReleases\n                            \n                            \n                                releases\n                            \n                            \n                                selectedReleases\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                createNewRelease\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                removeReleases\n                            \n                            \n                                    Private\n                                resetReleasesForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                showDeleteConfirmation\n                            \n                            \n                                showDeleteSelectionConfirmation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enableAddAction\n                            \n                            \n                                enableEditAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableRemoveAction\n                            \n                            \n                                enableSorting\n                            \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, formBuilder: FormBuilder, confirmationService: ConfirmationService, translateService: TranslateService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:75\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableEditAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:78\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:69\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableRemoveAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/releases-table/releases-table.component.ts:60\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewRelease\n                        \n                    \n                \n            \n            \n                \ncreateNewRelease()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeReleases\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeReleases(ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:193\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetReleasesForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetReleasesForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:229\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteConfirmation(releaseId: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                releaseId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteSelectionConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteSelectionConfirmation(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/releases-table/releases-table.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createReleaseForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    version: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNew\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectAddRelease)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingReleases\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectReleases)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingRemoveReleases\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectRemoveReleases)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        releases\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectSingleProjectReleases)\n    .pipe(map((releases) => [...releases ?? []]))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedReleases\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ProjectRelease[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/releases-table/releases-table.component.ts:88\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, Validators, FormBuilder } from '@angular/forms';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService, ConfirmationService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { AccessDeniedComponent } from '../access-denied/access-denied.component';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../core/state/app.state';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport { ProjectRelease } from '../../../core/domain/models/project-release.entity';\nimport { isLoadingSingleProjectAddRelease, isLoadingSingleProjectReleases, isLoadingSingleProjectRemoveReleases, selectAddProjectReleaseStatus, selectRemoveProjectReleasesStatus, selectSingleProjectReleases } from '../../../core/state/single-project/single-project.selectors';\nimport { filter, map, take } from 'rxjs';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { addProjectRelease, loadProjectReleases, removeProjectReleases } from '../../../core/state/single-project/single-project.actions';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { CreateProjectReleaseDto } from '../../../core/domain/dto/requests/create-project-release.dto';\n\n@Component({\n  selector: 'app-releases-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    ToastModule,\n    ConfirmDialogModule,\n    DialogModule,\n    TableModule,\n    InputTextModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AccessDeniedComponent,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './releases-table.component.html',\n  styleUrl: './releases-table.component.scss',\n})\nexport class ReleasesTableComponent implements OnInit {\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n    private messageService: MessageService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n\n  @Input()\n  project?: Project;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  @Input()\n  enableEditAction: boolean = false;\n\n  @Input()\n  enableRemoveAction: boolean = false;\n\n  createReleaseForm = this.formBuilder.group({\n    version: ['', [Validators.required]],\n  });\n  isAddNewDialogVisible: boolean = false;\n\n  selectedReleases: ProjectRelease[] = [];\n  releases = this.store\n    .select(selectSingleProjectReleases)\n    .pipe(map((releases) => [...releases ?? []]));\n  isLoadingReleases = this.store.select(isLoadingSingleProjectReleases);\n  isLoadingCreateNew = this.store.select(isLoadingSingleProjectAddRelease);\n  isLoadingRemoveReleases = this.store.select(isLoadingSingleProjectRemoveReleases);\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  );\n\n  ngOnInit(): void {\n    this.store.dispatch(\n      loadProjectReleases({ projectId: this.project?.projectId ?? '' }),\n    );\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  showDeleteConfirmation(releaseId: string, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'releases-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('releases-table.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeReleases([releaseId]);\n      },\n      reject: () => {},\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  showDeleteSelectionConfirmation(event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'releases-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('releases-table.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeReleases(this.selectedReleases.map((value) => value.releaseId));\n      },\n      reject: () => {},\n    });\n  }\n\n  showAddDialog() {\n    this.resetReleasesForm();\n    this.isAddNewDialogVisible = true;\n  }\n\n  createNewRelease() {\n    const dto: CreateProjectReleaseDto = { version: this.createReleaseForm.get('version')?.value ?? ''};\n    this.store.dispatch(\n      addProjectRelease({\n        projectId: this.project?.projectId ?? '',\n        dto: dto,\n      }),\n    );\n    this.store\n      .select(selectAddProjectReleaseStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('releases-table.error'),\n            detail: this.translateService.instant(\n              'releases-table.failed_to_create_release',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('releases-table.success'),\n            detail: this.translateService.instant('releases-table.release_created'),\n          });\n          this.isAddNewDialogVisible = !this.isAddNewDialogVisible;\n        }\n      });\n  }\n\n  private removeReleases(ids: string[]) {\n    this.store.dispatch(\n      removeProjectReleases({\n        projectId: this.project?.projectId ?? '',\n        ids: ids,\n      }),\n    );\n    this.store\n      .select(selectRemoveProjectReleasesStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('releases-table.error'),\n            detail: this.translateService.instant(\n              'releases-table.failed_to_delete_releases',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('releases-table.success'),\n            detail: this.translateService.instant('releases-table.removed_releases'),\n          });\n          this.selectedReleases = [];\n        }\n      });\n  }\n\n  private resetReleasesForm() {\n    this.createReleaseForm = this.formBuilder.group({\n      version: ['', [Validators.required]],\n    });\n  }\n}\n\n    \n\n    \n        \n\n@if ((hasReadPermission | async) === false) {\n  \n} @else {\n  \n    \n      \n        \n          \n          \n        \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          \n            {{ \"releases-table.id\" | translate }}\n            \n            \n          \n        \n        \n          \n            {{ \"releases-table.version\" | translate }}\n            \n            \n          \n        \n        \n          \n            {{ \"releases-table.created_at\" | translate }}\n            \n            \n          \n        \n        \n          \n            {{ \"releases-table.actions\" | translate }}\n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          {{ release.releaseId }}\n        \n        \n          {{ release.version }}\n        \n        \n          {{ release.releaseTimestamp | date: 'MMM d, yyyy - h:mm:ss a'}} (UTC)\n        \n        \n          \n        \n      \n    \n\n    \n      \n        \n          {{ \"releases-table.no_releases_found\" | translate }}\n        \n      \n    \n  \n}\n\n\n  \n    \n      \n        {{ \"releases-table.version_label\" | translate }}\n        \n        {{ \"releases-table.version_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ((hasReadPermission | async) === false) {  } @else {                                                                                                                                            {{ \"releases-table.id\" | translate }}                                                                        {{ \"releases-table.version\" | translate }}                                                                        {{ \"releases-table.created_at\" | translate }}                                                                        {{ \"releases-table.actions\" | translate }}                                                                                  {{ release.releaseId }}                          {{ release.version }}                          {{ release.releaseTimestamp | date: \\'MMM d, yyyy - h:mm:ss a\\'}} (UTC)                                                                        {{ \"releases-table.no_releases_found\" | translate }}                    }                    {{ \"releases-table.version_label\" | translate }}                {{ \"releases-table.version_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReleasesTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReplaysComponent.html":{"url":"components/ReplaysComponent.html","title":"component - ReplaysComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReplaysComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/replays/replays.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-replays\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./replays.component.html\n            \n\n\n\n            \n                styleUrl\n                ./replays.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-replays',\n  standalone: true,\n  imports: [],\n  templateUrl: './replays.component.html',\n  styleUrl: './replays.component.scss'\n})\nexport class ReplaysComponent {\n\n}\n\n    \n\n    \n        replays works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'replays works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReplaysComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                secret\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        secret\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { Subscription } from 'rxjs';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  resetPassword,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectResetPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss',\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input()\n  private secret?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  resetPasswordForm = this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectResetPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('auth.reset-password.error'),\n            detail: this.translateService.instant(\n              'auth.reset-password.wrong_hash',\n            ),\n          });\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.reset-password.success',\n            ),\n            detail: this.translateService.instant(\n              'auth.reset-password.success_message',\n            ),\n          });\n          this.router.navigate(['/auth']);\n        }\n      });\n  }\n\n  resetPassword() {\n    if (this.secret) {\n      const newPassword = this.resetPasswordForm.get('password')?.value ?? '';\n      this.store.dispatch(\n        resetPassword({ newPassword: newPassword, hash: this.secret }),\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.reset-password.welcome_message\" | translate }}\n  \n\n\n  \n    {{ \"auth.reset-password.new_password_label\" | translate }}\n    \n    {{ \"auth.reset-password.password_is_required\" | translate }}\n    {{ \"auth.reset-password.password_length\" | translate }}\n    {{ \"auth.reset-password.password_not_strong\" | translate }}\n\n    \n      {{ \"auth.reset-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.reset-password.welcome_message\" | translate }}        {{ \"auth.reset-password.new_password_label\" | translate }}        {{ \"auth.reset-password.password_is_required\" | translate }}    {{ \"auth.reset-password.password_length\" | translate }}    {{ \"auth.reset-password.password_not_strong\" | translate }}          {{ \"auth.reset-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordRequestDto.html":{"url":"interfaces/ResetPasswordRequestDto.html","title":"interface - ResetPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/reset-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPasswordRequestDto {\n    newPassword: string,\n    hash: string, \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourcesComponent.html":{"url":"components/ResourcesComponent.html","title":"component - ResourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResourcesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/resources/resources.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resources\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./resources.component.html\n            \n\n\n\n            \n                styleUrl\n                ./resources.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-resources',\n  standalone: true,\n  imports: [],\n  templateUrl: './resources.component.html',\n  styleUrl: './resources.component.scss'\n})\nexport class ResourcesComponent {\n\n}\n\n    \n\n    \n        resources works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'resources works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Role.html":{"url":"interfaces/Role.html","title":"interface - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            internal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roleId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        internal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        internal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     [literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [literal type]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: Role;\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n\n  export interface Role {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleEffects.html":{"url":"injectables/RoleEffects.html","title":"injectable - RoleEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/role/role.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadRoles$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/role/role.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadRoles$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRoles),\n      switchMap(() =>\n        this.roleService.getRoles().pipe(\n          map((result) => loadRolesSuccess({ roles: result })),\n          catchError((error) => of(loadRolesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/role/role.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport { RoleService } from '../../services/api/role.api.service';\nimport { loadRoles, loadRolesFailure, loadRolesSuccess } from './role.actions';\n\n@Injectable()\nexport class RoleEffects {\n  constructor(\n    private roleService: RoleService,\n    private actions$: Actions,\n  ) {}\n\n  loadRoles$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRoles),\n      switchMap(() =>\n        this.roleService.getRoles().pipe(\n          map((result) => loadRolesSuccess({ roles: result })),\n          catchError((error) => of(loadRolesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/role.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/role.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRoles\n                        \n                    \n                \n            \n            \n                \ngetRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/role.api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Role } from '../../domain/models/user.entity';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoleService {\n  constructor(private http: HttpClient) {}\n\n  getRoles(): Observable {\n    return this.http.get(api.roleUrl, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleState.html":{"url":"interfaces/RoleState.html","title":"interface - RoleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/role/role.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Role } from '../../domain/models/user.entity';\nimport { loadRoles, loadRolesFailure, loadRolesSuccess } from './role.actions';\n\nexport interface RoleState {\n  roles: Role[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  status: StateStatus;\n}\n\nexport const initialState: RoleState = {\n    roles: null,\n    error: undefined,\n    status: StateStatus.PENDING\n}\n\nexport const roleReducer = createReducer(\n    initialState,\n\n    //Handle loading current organization members\n  on(loadRoles, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadRolesSuccess, (state, params) => ({\n    ...state,\n    roles: params.roles,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadRolesFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n)\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScreenLoadsComponent.html":{"url":"components/ScreenLoadsComponent.html","title":"component - ScreenLoadsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScreenLoadsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/screen-loads/screen-loads.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screen-loads\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./screen-loads.component.html\n            \n\n\n\n            \n                styleUrl\n                ./screen-loads.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-screen-loads',\n  standalone: true,\n  imports: [],\n  templateUrl: './screen-loads.component.html',\n  styleUrl: './screen-loads.component.scss'\n})\nexport class ScreenLoadsComponent {\n\n}\n\n    \n\n    \n        screen-loads works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'screen-loads works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScreenLoadsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SdksComponent.html":{"url":"components/SdksComponent.html","title":"component - SdksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SdksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/sdks/sdks.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sdks\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./sdks.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sdks.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sdks',\n  standalone: true,\n  imports: [],\n  templateUrl: './sdks.component.html',\n  styleUrl: './sdks.component.scss'\n})\nexport class SdksComponent {\n\n}\n\n    \n\n    \n        sdks works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sdks works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SdksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SecurityComponent.html":{"url":"components/SecurityComponent.html","title":"component - SecurityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SecurityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/security/security.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-security\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./security.component.html\n            \n\n\n\n            \n                styleUrl\n                ./security.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-security',\n  standalone: true,\n  imports: [],\n  templateUrl: './security.component.html',\n  styleUrl: './security.component.scss'\n})\nexport class SecurityComponent {\n\n}\n\n    \n\n    \n        security works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'security works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SecurityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionStorage.html":{"url":"injectables/SessionStorage.html","title":"injectable - SessionStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/session-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/session-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.sessionStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionsComponent.html":{"url":"components/SessionsComponent.html","title":"component - SessionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/sessions/sessions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sessions\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./sessions.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sessions.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sessions',\n  standalone: true,\n  imports: [],\n  templateUrl: './sessions.component.html',\n  styleUrl: './sessions.component.scss'\n})\nexport class SessionsComponent {\n\n}\n\n    \n\n    \n        sessions works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sessions works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SessionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  standalone: true,\n  imports: [],\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss'\n})\nexport class SettingsComponent {\n\n}\n\n    \n\n    \n        settings works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'settings works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                MenuitemComponent\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setupSideNavItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, el: ElementRef, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes in several services as parameters.\nsuch as managing the layout of a web page or application.\na native element inside a View. It is used to access the properties and methods of the native\nelement.\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\nUserStorageService class, which is likely used to manage user data and authentication. It is\ninjected into the constructor using Angular's dependency injection system.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIt is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n\n\n                                                        \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nel is an instance of the ElementRef class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe translateService parameter is an instance of\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:44\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets up the side navigation based on the user's role.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupSideNavItems\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupSideNavItems(sidenav: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sidenav\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:37\n                        \n                    \n\n            \n                \n                    - `el` is an instance of the `ElementRef` class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:36\n                        \n                    \n\n            \n                \n                    - It is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                        \n                    \n\n            \n                \n                    model: MenuItem[] = []; is declaring a property called model of type MenuItem[] (an array of\nMenuItem objects) and initializing it to an empty array. This property is likely used to store\nthe items that will be displayed in the side navigation menu.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuitemComponent } from '../menuitem/menuitem.component';\n\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule, MenuitemComponent],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  /** `model: MenuItem[] = [];` is declaring a property called `model` of type `MenuItem[]` (an array of\n  `MenuItem` objects) and initializing it to an empty array. This property is likely used to store\n  the items that will be displayed in the side navigation menu. */\n  model: MenuItem[] = [];\n  /**\n   * This is a constructor function that takes in several services as parameters.\n   * @param {LayoutService} layoutService - It is a service that provides layout-related functionality,\n   * such as managing the layout of a web page or application.\n   * @param {ElementRef} el - `el` is an instance of the `ElementRef` class, which is a wrapper around\n   * a native element inside a View. It is used to access the properties and methods of the native\n   * element.\n   * @param {TranslateService} translateService - The `translateService` parameter is an instance of\n   * the `TranslateService` class, which is used for internationalization and localization of the\n   * application. It provides methods for translating text strings into different languages based on\n   * the user's language preference.\n   * @param {UserStorageService} userService - The `userService` parameter is an instance of the\n   * `UserStorageService` class, which is likely used to manage user data and authentication. It is\n   * injected into the constructor using Angular's dependency injection system.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public el: ElementRef,\n    private translateService: TranslateService,\n  ) {}\n\n  /**\n   * The ngOnInit function sets up the side navigation based on the user's role.\n   */\n  ngOnInit() {\n    this.translateService.stream('sidenav').subscribe({\n      next: (sidenav) => {\n        this.model = [];\n        this.setupSideNavItems(sidenav);\n      },\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private setupSideNavItems(sidenav: any) {\n    this.model.push({\n      label: sidenav.General,\n      items: [\n        // {\n        //   label: sidenav.Home,\n        //   icon: 'pi pi-fw pi-home',\n        //   routerLink: ['/home'],\n        // },\n        {\n          label: sidenav.Projects,\n          icon: 'pi pi-fw pi-code',\n          routerLink: ['/home/projects'],\n        },\n        {\n          label: sidenav.Logs,\n          icon: 'pi pi-fw pi-list',\n          routerLink: ['/home/logs'],\n        },\n        {\n          label: sidenav.Issues,\n          icon: 'pi pi-fw pi-inbox',\n          routerLink: ['/home/issues'],\n        },\n        {\n          label: sidenav.Messages,\n          icon: 'pi pi-fw pi-envelope',\n          routerLink: ['/home/messages'],\n        },\n        {\n          label: sidenav.Devices,\n          icon: 'pi pi-fw pi-mobile',\n          routerLink: ['/home/devices'],\n        },\n        {\n          label: sidenav.Sessions,\n          icon: 'pi pi-fw pi-clock',\n          routerLink: ['/home/sessions'],\n        },\n        {\n          label: sidenav.Performance,\n          icon: 'pi pi-fw pi-chart-line',\n          routerLink: ['/home/performance'],\n          expanded: true,\n          items: [\n            {\n              label: sidenav.Queries,\n              icon: 'pi pi-fw pi-database',\n              routerLink: ['/home/queries'],\n            },\n            {\n              label: sidenav.Vitals,\n              icon: 'pi pi-fw pi-heart',\n              routerLink: ['/home/vitals'],\n            },\n            {\n              label: sidenav.Screen_Loads,\n              icon: 'pi pi-fw pi-stopwatch',\n              routerLink: ['/home/screen-loads'],\n            },\n            {\n              label: sidenav.Resources,\n              icon: 'pi pi-fw pi-server',\n              routerLink: ['/home/resources'],\n            },\n          ],\n        },\n        {\n          label: sidenav.Replays,\n          icon: 'pi pi-fw pi-play',\n          routerLink: ['/home/replays'],\n        },\n        {\n          label: sidenav.Releases,\n          icon: 'pi pi-fw pi-box',\n          routerLink: ['/home/releases'],\n        },\n        {\n          label: sidenav.Stats,\n          icon: 'pi pi-fw pi-chart-bar',\n          routerLink: ['/home/stats'],\n        },\n      ],\n    });\n    this.model.push({\n      label: sidenav.Settings,\n      routerLink: ['/home/settings'],\n      items: [\n        {\n          label: sidenav.Settings_Account,\n          icon: 'pi pi-fw pi-user',\n          expanded: false,\n          routerLink: ['/home/settings/account'],\n          items: [\n            {\n              label: sidenav.Settings_Account_Details,\n              routerLink: ['/home/settings/account/details'],\n              icon: 'pi pi-fw pi-list'\n            },\n            {\n              label: sidenav.Settings_Account_Security,\n              routerLink: ['/home/settings/account/security'],\n              icon: 'pi pi-fw pi-shield'\n            },\n            {\n              label: sidenav.Settings_Account_Notifications,\n              routerLink: ['/home/settings/account/notifications'],\n              icon: 'pi pi-fw pi-envelope'\n            },\n            {\n              label: sidenav.Settings_Account_Close,\n              routerLink: ['/home/settings/account/close'],\n              icon: 'pi pi-fw pi-exclamation-circle'\n            }\n          ]\n        },\n        {\n          label: sidenav.Settings_Organization,\n          icon: 'pi pi-fw pi-building',\n          routerLink: ['/home/settings/organization']\n        },\n        {\n          label: sidenav.Settings_Projects,\n          icon: 'pi pi-fw pi-box',\n          routerLink: ['/home/settings/projects']\n        },\n        {\n          label: sidenav.Settings_Teams,\n          icon: 'pi pi-fw pi-sitemap',\n          routerLink: ['/home/settings/teams']\n        },\n        {\n          label: sidenav.Settings_Members,\n          icon: 'pi pi-fw pi-users',\n          routerLink: ['/home/settings/members']\n        },\n        {\n          label: sidenav.Settings_Alerts,\n          icon: 'pi pi-fw pi-bell',\n          routerLink: ['/home/settings/alerts']\n        }\n      ]\n    })\n    this.model.push({\n      label: sidenav.Help,\n      items: [\n        {\n          label: sidenav.Help_Documentation,\n          icon: 'pi pi-fw pi-book',\n          routerLink: ['/home/help/documentation']\n        },\n        {\n          label: sidenav.Help_SDKS,\n          icon: 'pi pi-fw pi-wrench',\n          routerLink: ['/home/help/sdks']\n        },\n        {\n          label: sidenav.Help_Guides,\n          icon: 'pi pi-fw pi-question-circle',\n          routerLink: ['/home/help/guides']\n        },\n        {\n          label: sidenav.Help_Support,\n          icon: 'pi pi-fw pi-ticket',\n          routerLink: ['/home/help/support']\n        },\n      ]\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SingleProjectCardComponent.html":{"url":"components/SingleProjectCardComponent.html","title":"component - SingleProjectCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SingleProjectCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/projects/components/single-project-card/single-project-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                \n            \n\n\n            \n                selector\n                app-single-project-card\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            TranslateModule\n                            CommonModule\n                            ButtonModule\n                            ChartModule\n                            RippleModule\n                            CardModule\n                            AvatarModule\n                            SkeletonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./single-project-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./single-project-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chartData\n                            \n                            \n                                chartOptions\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Optional\n                                projectStat\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getChartLabel\n                            \n                            \n                                navigateToProjectSettings\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Private\n                                setupChartData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, datePipe: DatePipe, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datePipe\n                                                  \n                                                        \n                                                                    DatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getChartLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChartLabel(startDate: Date, endDate: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToProjectSettings\n                        \n                    \n                \n            \n            \n                \nnavigateToProjectSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupChartData(result: ProjectStatDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                result\n                                            \n                                                            ProjectStatDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chartData\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    scales: {\n      x: {\n        display: false,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        projectStat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectStatDto\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule, DatePipe } from '@angular/common';\nimport { AfterViewInit, Component, Input } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { CardModule } from 'primeng/card';\nimport { ChartModule } from 'primeng/chart';\nimport { RippleModule } from 'primeng/ripple';\nimport { SkeletonModule } from 'primeng/skeleton';\nimport { Project } from '../../../../core/domain/models/project.entity';\nimport { ProjectService } from '../../../../core/services/api/project.api.service';\nimport { ProjectStatDto } from '../../../../core/domain/dto/project-stat.dto';\nimport { Router, RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-single-project-card',\n  standalone: true,\n  imports: [\n    TranslateModule,\n    CommonModule,\n    ButtonModule,\n    ChartModule,\n    RippleModule,\n    CardModule,\n    AvatarModule,\n    SkeletonModule,\n    RouterModule,\n  ],\n  providers: [DatePipe],\n  templateUrl: './single-project-card.component.html',\n  styleUrl: './single-project-card.component.scss',\n})\nexport class SingleProjectCardComponent implements AfterViewInit {\n  @Input()\n  project?: Project;\n\n  projectStat?: ProjectStatDto;\n\n  chartData?: unknown;\n  chartOptions = {\n    scales: {\n      x: {\n        display: false,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  isLoading: boolean = true;\n\n  constructor(\n    private projectService: ProjectService,\n    private datePipe: DatePipe,\n    private router: Router,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.projectService\n      .getProjectStats(this.project?.projectId ?? '')\n      .subscribe({\n        next: (result) => {\n          this.isLoading = false;\n          this.projectStat = result;\n          this.setupChartData(result);\n        },\n        error: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  private setupChartData(result: ProjectStatDto) {\n    this.chartData = {\n      labels: result.hourByHour.map((hourlyStat) =>\n        this.getChartLabel(hourlyStat.startInterval, hourlyStat.endInterval),\n      ),\n      datasets: [\n        {\n          type: 'bar',\n          label: 'Transactions',\n          data: result.hourByHour.map((hourlyStat) => hourlyStat.transactions),\n        },\n        {\n          type: 'bar',\n          label: 'Errors',\n          data: result.hourByHour.map((hourlyStat) => hourlyStat.errors),\n        },\n        {\n          type: 'bar',\n          label: 'Crash Free Sessions',\n          data: result.hourByHour.map(\n            (hourlyStat) => hourlyStat.numberOfCrashFreeSessions,\n          ),\n        },\n        {\n          type: 'bar',\n          label: 'Sessions',\n          data: result.hourByHour.map(\n            (hourlyStat) => hourlyStat.numberOfSessions,\n          ),\n        },\n      ],\n    };\n  }\n\n  private getChartLabel(startDate: Date, endDate: Date): string {\n    let result = '';\n    result += this.datePipe.transform(startDate, 'MMM d h:mm a');\n    result += ' - ';\n    result += this.datePipe.transform(endDate, 'h:mm a');\n    result += ' (UTC)';\n    return result;\n  }\n\n  navigateToProjectSettings() {\n    this.router.navigate(['/home/settings/projects/' + this.project?.projectId])\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        {{ project?.name }}\n        \n        @if (isLoading) {\n          \n        } @else {\n          \n            {{ \"projects.transactions\" | translate }}\n              {{ projectStat?.totalTransactions }} |\n              {{ \"projects.errors\" | translate }}\n              {{ projectStat?.totalErrors }} |\n              {{ \"projects.sessions\" | translate }}\n              {{ projectStat?.totalSessions }}\n            \n          \n        }\n      \n      \n    \n  \n  @if (isLoading) {\n    \n  } @else {\n    \n  }\n  \n    \n      \n        {{ \"projects.crash_free_sessions\" | translate }}\n      \n      @if (isLoading) {\n        \n      } @else {\n        \n          {{ projectStat?.crashFreePercentage | number: \".1-3\" }}%\n        \n        @if (projectStat?.crashFreePercentageGain === 0) {\n          \n            \n            \n              {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%\n            \n          \n        } @else if (projectStat?.crashFreePercentageGain ?? 0 > 0) {\n          \n            \n            \n              {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%\n            \n          \n        } @else if (projectStat?.crashFreePercentageGain ?? 0 \n            \n            \n              {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%\n            \n          \n        }\n      }\n    \n    \n      \n        {{ \"projects.latest_deploys\" | translate }}\n      \n      @if (isLoading) {\n        \n      } @else {\n        @if (!projectStat?.releases || projectStat?.releases?.length === 0) {\n          -\n        } @else {\n          @for (\n            release of projectStat?.releases?.slice(0, 3);\n            track $index\n          ) {\n            \n              {{ release.version }} -\n              {{ release.releaseTimestamp | date: \"MMM d h:mm a\" }}\n            \n          }\n        }\n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ project?.name }}                @if (isLoading) {                  } @else {                      {{ \"projects.transactions\" | translate }}              {{ projectStat?.totalTransactions }} |              {{ \"projects.errors\" | translate }}              {{ projectStat?.totalErrors }} |              {{ \"projects.sessions\" | translate }}              {{ projectStat?.totalSessions }}                              }                    @if (isLoading) {      } @else {      }                    {{ \"projects.crash_free_sessions\" | translate }}            @if (isLoading) {              } @else {                  {{ projectStat?.crashFreePercentage | number: \".1-3\" }}%                @if (projectStat?.crashFreePercentageGain === 0) {                                                {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%                              } @else if (projectStat?.crashFreePercentageGain ?? 0 > 0) {                                                {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%                              } @else if (projectStat?.crashFreePercentageGain ?? 0                                       {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%                              }      }                      {{ \"projects.latest_deploys\" | translate }}            @if (isLoading) {              } @else {        @if (!projectStat?.releases || projectStat?.releases?.length === 0) {          -        } @else {          @for (            release of projectStat?.releases?.slice(0, 3);            track $index          ) {                          {{ release.version }} -              {{ release.releaseTimestamp | date: \"MMM d h:mm a\" }}                      }        }      }      '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SingleProjectCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SingleProjectEffects.html":{"url":"injectables/SingleProjectEffects.html","title":"injectable - SingleProjectEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SingleProjectEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/single-project/single-project.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addProjectDebugFile$\n                            \n                            \n                                addProjectEnvironments$\n                            \n                            \n                                addProjectRelease$\n                            \n                            \n                                addProjectTags$\n                            \n                            \n                                addProjectTeams$\n                            \n                            \n                                loadProjectById$\n                            \n                            \n                                loadProjectDebugFiles$\n                            \n                            \n                                loadProjectEnvironments$\n                            \n                            \n                                loadProjectReleases$\n                            \n                            \n                                loadProjectTags$\n                            \n                            \n                                loadProjectTeams$\n                            \n                            \n                                removeProjectDebugFiles$\n                            \n                            \n                                removeProjectEnvironments$\n                            \n                            \n                                removeProjectReleases$\n                            \n                            \n                                removeProjectTags$\n                            \n                            \n                                removeProjectTeams$\n                            \n                            \n                                updateProject$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addProjectDebugFile$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectDebugFile),\n      switchMap((args) =>\n        this.projectService.addProjectDebugFile(args.projectId, args.dto).pipe(\n          map((files) => addProjectDebugFileSuccess({ debugFiles: files })),\n          catchError((error) => of(addProjectDebugFileFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:206\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addProjectEnvironments$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectEnvironments),\n      switchMap((args) =>\n        this.projectService.addProjectEnvironments(args.projectId, args.environments).pipe(\n          map((environments) => addProjectEnvironmentsSuccess({ environments: environments })),\n          catchError((error) => of(addProjectEnvironmentsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:158\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addProjectRelease$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectRelease),\n      switchMap((args) =>\n        this.projectService.addProjectRelease(args.projectId, args.dto).pipe(\n          map((releases) => addProjectReleaseSuccess({ releases: releases })),\n          catchError((error) => of(addProjectReleaseFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addProjectTags$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectTags),\n      switchMap((args) =>\n        this.projectService.addProjectTags(args.projectId, args.tags).pipe(\n          map((tags) => addProjectTagsSuccess({ tags: tags })),\n          catchError((error) => of(addProjectTagsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addProjectTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectTeams),\n      switchMap((args) =>\n        this.projectService.addProjectTeams(args.projectId, args.ids).pipe(\n          map((teams) => addProjectTeamsSuccess({ teams: teams })),\n          catchError((error) => of(addProjectTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProjectById$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectById),\n      switchMap((args) =>\n        this.projectService.getProjectById(args.projectId).pipe(\n          map((project) => loadProjectByIdSuccess({ project: project })),\n          catchError((error) => of(loadProjectByIdFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProjectDebugFiles$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectDebugFiles),\n      switchMap((args) =>\n        this.projectService.getProjectDebugFiles(args.projectId).pipe(\n          map((files) => loadProjectDebugFilesSuccess({ debugFiles: files })),\n          catchError((error) => of(loadProjectDebugFilesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProjectEnvironments$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectEnvironments),\n      switchMap((args) =>\n        this.projectService.getProjectEnvironments(args.projectId).pipe(\n          map((environments) => loadProjectEnvironmentsSuccess({ environments: environments })),\n          catchError((error) => of(loadProjectEnvironmentsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProjectReleases$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectReleases),\n      switchMap((args) =>\n        this.projectService.getProjectReleases(args.projectId).pipe(\n          map((releases) => loadProjectReleasesSuccess({ releases: releases })),\n          catchError((error) => of(loadProjectReleasesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProjectTags$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectTags),\n      switchMap((args) =>\n        this.projectService.getProjectTags(args.projectId).pipe(\n          map((tags) => loadProjectTagsSuccess({ tags: tags })),\n          catchError((error) => of(loadProjectTagsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadProjectTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectTeams),\n      switchMap((args) =>\n        this.projectService.getProjectTeams(args.projectId).pipe(\n          map((teams) => loadProjectTeamsSuccess({ teams: teams })),\n          catchError((error) => of(loadProjectTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProjectDebugFiles$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectDebugFiles),\n      switchMap((args) =>\n        this.projectService.removeProjectDebugFiles(args.projectId, args.ids).pipe(\n          map((files) => removeProjectDebugFilesSuccess({ debugFiles: files })),\n          catchError((error) => of(removeProjectDebugFilesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:194\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProjectEnvironments$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectEnvironments),\n      switchMap((args) =>\n        this.projectService.removeProjectEnvironments(args.projectId, args.environments).pipe(\n          map((environments) => removeProjectEnvironmentsSuccess({ environments: environments })),\n          catchError((error) => of(removeProjectEnvironmentsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProjectReleases$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectReleases),\n      switchMap((args) =>\n        this.projectService.removeProjectReleases(args.projectId, args.ids).pipe(\n          map((releases) => removeProjectReleasesSuccess({ releases: releases })),\n          catchError((error) => of(removeProjectReleasesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:170\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProjectTags$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectTags),\n      switchMap((args) =>\n        this.projectService.removeProjectTags(args.projectId, args.tags).pipe(\n          map((tags) => removeProjectTagsSuccess({ tags: tags })),\n          catchError((error) => of(removeProjectTagsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeProjectTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectTeams),\n      switchMap((args) =>\n        this.projectService.removeProjectTeams(args.projectId, args.ids).pipe(\n          map((teams) => removeProjectTeamsSuccess({ teams: teams })),\n          catchError((error) => of(removeProjectTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateProject),\n      switchMap((args) =>\n        this.projectService.updateProject(args.projectId, args.dto).pipe(\n          map((project) => updateProjectSucess({ project: project })),\n          catchError((error) => of(updateProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-project/single-project.effects.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { ProjectService } from \"../../services/api/project.api.service\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { addProjectDebugFile, addProjectDebugFileFailure, addProjectDebugFileSuccess, addProjectEnvironments, addProjectEnvironmentsFailure, addProjectEnvironmentsSuccess, addProjectRelease, addProjectReleaseFailure, addProjectReleaseSuccess, addProjectTags, addProjectTagsFailure, addProjectTagsSuccess, addProjectTeams, addProjectTeamsFailure, addProjectTeamsSuccess, loadProjectById, loadProjectByIdFailure, loadProjectByIdSuccess, loadProjectDebugFiles, loadProjectDebugFilesFailure, loadProjectDebugFilesSuccess, loadProjectEnvironments, loadProjectEnvironmentsFailure, loadProjectEnvironmentsSuccess, loadProjectReleases, loadProjectReleasesFailure, loadProjectReleasesSuccess, loadProjectTags, loadProjectTagsFailure, loadProjectTagsSuccess, loadProjectTeams, loadProjectTeamsFailure, loadProjectTeamsSuccess, removeProjectDebugFiles, removeProjectDebugFilesFailure, removeProjectDebugFilesSuccess, removeProjectEnvironments, removeProjectEnvironmentsFailure, removeProjectEnvironmentsSuccess, removeProjectReleases, removeProjectReleasesFailure, removeProjectReleasesSuccess, removeProjectTags, removeProjectTagsFailure, removeProjectTagsSuccess, removeProjectTeams, removeProjectTeamsFailure, removeProjectTeamsSuccess, updateProject, updateProjectFailure, updateProjectSucess } from \"./single-project.actions\";\nimport { catchError, map, of, switchMap } from \"rxjs\";\n\n@Injectable()\nexport class SingleProjectEffects {\n  constructor(\n    private projectService: ProjectService,\n    private actions$: Actions,\n  ) {}\n\n  loadProjectById$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectById),\n      switchMap((args) =>\n        this.projectService.getProjectById(args.projectId).pipe(\n          map((project) => loadProjectByIdSuccess({ project: project })),\n          catchError((error) => of(loadProjectByIdFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  updateProject$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateProject),\n      switchMap((args) =>\n        this.projectService.updateProject(args.projectId, args.dto).pipe(\n          map((project) => updateProjectSucess({ project: project })),\n          catchError((error) => of(updateProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadProjectTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectTeams),\n      switchMap((args) =>\n        this.projectService.getProjectTeams(args.projectId).pipe(\n          map((teams) => loadProjectTeamsSuccess({ teams: teams })),\n          catchError((error) => of(loadProjectTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadProjectTags$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectTags),\n      switchMap((args) =>\n        this.projectService.getProjectTags(args.projectId).pipe(\n          map((tags) => loadProjectTagsSuccess({ tags: tags })),\n          catchError((error) => of(loadProjectTagsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadProjectEnvironments$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectEnvironments),\n      switchMap((args) =>\n        this.projectService.getProjectEnvironments(args.projectId).pipe(\n          map((environments) => loadProjectEnvironmentsSuccess({ environments: environments })),\n          catchError((error) => of(loadProjectEnvironmentsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadProjectDebugFiles$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectDebugFiles),\n      switchMap((args) =>\n        this.projectService.getProjectDebugFiles(args.projectId).pipe(\n          map((files) => loadProjectDebugFilesSuccess({ debugFiles: files })),\n          catchError((error) => of(loadProjectDebugFilesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadProjectReleases$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadProjectReleases),\n      switchMap((args) =>\n        this.projectService.getProjectReleases(args.projectId).pipe(\n          map((releases) => loadProjectReleasesSuccess({ releases: releases })),\n          catchError((error) => of(loadProjectReleasesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addProjectTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectTeams),\n      switchMap((args) =>\n        this.projectService.addProjectTeams(args.projectId, args.ids).pipe(\n          map((teams) => addProjectTeamsSuccess({ teams: teams })),\n          catchError((error) => of(addProjectTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeProjectTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectTeams),\n      switchMap((args) =>\n        this.projectService.removeProjectTeams(args.projectId, args.ids).pipe(\n          map((teams) => removeProjectTeamsSuccess({ teams: teams })),\n          catchError((error) => of(removeProjectTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeProjectTags$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectTags),\n      switchMap((args) =>\n        this.projectService.removeProjectTags(args.projectId, args.tags).pipe(\n          map((tags) => removeProjectTagsSuccess({ tags: tags })),\n          catchError((error) => of(removeProjectTagsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addProjectTags$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectTags),\n      switchMap((args) =>\n        this.projectService.addProjectTags(args.projectId, args.tags).pipe(\n          map((tags) => addProjectTagsSuccess({ tags: tags })),\n          catchError((error) => of(addProjectTagsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeProjectEnvironments$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectEnvironments),\n      switchMap((args) =>\n        this.projectService.removeProjectEnvironments(args.projectId, args.environments).pipe(\n          map((environments) => removeProjectEnvironmentsSuccess({ environments: environments })),\n          catchError((error) => of(removeProjectEnvironmentsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addProjectEnvironments$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectEnvironments),\n      switchMap((args) =>\n        this.projectService.addProjectEnvironments(args.projectId, args.environments).pipe(\n          map((environments) => addProjectEnvironmentsSuccess({ environments: environments })),\n          catchError((error) => of(addProjectEnvironmentsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeProjectReleases$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectReleases),\n      switchMap((args) =>\n        this.projectService.removeProjectReleases(args.projectId, args.ids).pipe(\n          map((releases) => removeProjectReleasesSuccess({ releases: releases })),\n          catchError((error) => of(removeProjectReleasesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addProjectRelease$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectRelease),\n      switchMap((args) =>\n        this.projectService.addProjectRelease(args.projectId, args.dto).pipe(\n          map((releases) => addProjectReleaseSuccess({ releases: releases })),\n          catchError((error) => of(addProjectReleaseFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeProjectDebugFiles$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeProjectDebugFiles),\n      switchMap((args) =>\n        this.projectService.removeProjectDebugFiles(args.projectId, args.ids).pipe(\n          map((files) => removeProjectDebugFilesSuccess({ debugFiles: files })),\n          catchError((error) => of(removeProjectDebugFilesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addProjectDebugFile$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addProjectDebugFile),\n      switchMap((args) =>\n        this.projectService.addProjectDebugFile(args.projectId, args.dto).pipe(\n          map((files) => addProjectDebugFileSuccess({ debugFiles: files })),\n          catchError((error) => of(addProjectDebugFileFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SingleTeamComponent.html":{"url":"components/SingleTeamComponent.html","title":"component - SingleTeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SingleTeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/teams/components/single-team/single-team.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewChecked\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-single-team\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TabViewModule\n                            PanelModule\n                                AccessDeniedComponent\n                            ToastModule\n                            TranslateModule\n                                MembersTableComponent\n                                ProjectsTableComponent\n                            ButtonModule\n                            RippleModule\n                            ConfirmDialogModule\n                                NotFoundComponent\n                            InputTextModule\n                            DividerModule\n                            BadgeModule\n                                MemberPickerComponent\n                                ProjectPickerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./single-team.component.html\n            \n\n\n\n            \n                styleUrl\n                ./single-team.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                hasUpdatePermission\n                            \n                            \n                                isLoadingMembers\n                            \n                            \n                                isLoadingProjects\n                            \n                            \n                                isLoadingUpdateTeam\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                members\n                            \n                            \n                                onAddMembers\n                            \n                            \n                                onAddProjects\n                            \n                            \n                                onRemoveMembers\n                            \n                            \n                                onRemoveProjects\n                            \n                            \n                                projects\n                            \n                            \n                                registerOnce\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                            \n                                team\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                    Private\n                                deleteTeam\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showDeleteTeamConfirmation\n                            \n                            \n                                toSlugValue\n                            \n                            \n                                updateTeamSlug\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                teamId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, confirmationService: ConfirmationService, messageService: MessageService, teamService: TeamService, router: Router, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:100\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        teamId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:98\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deleteTeam\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTeam()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:185\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteTeamConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteTeamConfirmation(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTeamSlug\n                        \n                    \n                \n            \n            \n                \nupdateTeamSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:214\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUpdatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingTeamMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingTeamProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingUpdateTeam\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingUpdateTeam)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectSingleTeamMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:240\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:258\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:249\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:267\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectSingleTeamProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnce\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        team\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectSingleTeam)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:123\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewChecked,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DividerModule } from 'primeng/divider';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PanelModule } from 'primeng/panel';\nimport { RippleModule } from 'primeng/ripple';\nimport { TabViewModule } from 'primeng/tabview';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { Permission } from '../../../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../../../core/domain/models/enums/resource-type.enum';\nimport { StateStatus } from '../../../../../core/domain/models/enums/state-status.enum';\nimport { Project } from '../../../../../core/domain/models/project.entity';\nimport { User } from '../../../../../core/domain/models/user.entity';\nimport { TeamService } from '../../../../../core/services/api/team.api.service';\nimport { AppState } from '../../../../../core/state/app.state';\nimport { selectHasPermission } from '../../../../../core/state/auth/auth.selectors';\nimport {\n  addTeamMembers,\n  addTeamProjects,\n  loadTeamById,\n  loadTeamMembers,\n  loadTeamProjects,\n  removeTeamMembers,\n  removeTeamProjects,\n  resetSingleTeamState,\n  updateTeam,\n} from '../../../../../core/state/single-team/single-team.actions';\nimport {\n  isLoadingTeamMembers,\n  isLoadingTeamProjects,\n  isLoadingUpdateTeam,\n  selectSingleTeam,\n  selectSingleTeamMembers,\n  selectSingleTeamProjects,\n  selectUpdateTeamStatus,\n} from '../../../../../core/state/single-team/single-team.selectors';\nimport { AccessDeniedComponent } from '../../../../../shared/components/access-denied/access-denied.component';\nimport { MemberPickerComponent } from '../../../../../shared/components/member-picker/member-picker.component';\nimport { MembersTableComponent } from '../../../../../shared/components/members-table/members-table.component';\nimport { NotFoundComponent } from '../../../../../shared/components/not-found/not-found.component';\nimport { ProjectPickerComponent } from '../../../../../shared/components/project-picker/project-picker.component';\nimport { ProjectsTableComponent } from '../../../../../shared/components/projects-table/projects-table.component';\n\n@Component({\n  selector: 'app-single-team',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TabViewModule,\n    PanelModule,\n    AccessDeniedComponent,\n    ToastModule,\n    TranslateModule,\n    MembersTableComponent,\n    ProjectsTableComponent,\n    ButtonModule,\n    RippleModule,\n    ConfirmDialogModule,\n    NotFoundComponent,\n    InputTextModule,\n    DividerModule,\n    BadgeModule,\n    MemberPickerComponent,\n    ProjectPickerComponent,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './single-team.component.html',\n  styleUrl: './single-team.component.scss',\n})\nexport class SingleTeamComponent\n  implements OnInit, OnDestroy, AfterViewChecked\n{\n  @Input()\n  private teamId?: string;\n\n  @ViewChild('slug') slugInput!: ElementRef;\n  constructor(\n    private store: Store,\n    private confirmationService: ConfirmationService,\n    private messageService: MessageService,\n    private teamService: TeamService,\n    private router: Router,\n    private translateService: TranslateService,\n  ) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  );\n  hasUpdatePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  );\n  isLoadingMembers = this.store.select(isLoadingTeamMembers);\n  isLoadingProjects = this.store.select(isLoadingTeamProjects);\n  isLoadingUpdateTeam = this.store.select(isLoadingUpdateTeam);\n  isSlugTaken: boolean | null = null;\n  team = this.store.select(selectSingleTeam);\n  members = this.store\n    .select(selectSingleTeamMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  projects = this.store\n    .select(selectSingleTeamProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n  registerOnce: boolean = false;\n\n  private slugCheckSubscription?: Subscription;\n\n  ngOnInit(): void {\n    this.store.dispatch(loadTeamById({ teamId: this.teamId ?? '' }));\n    this.store.dispatch(loadTeamMembers({ teamId: this.teamId ?? '' }));\n    this.store.dispatch(loadTeamProjects({ teamId: this.teamId ?? '' }));\n  }\n\n  ngAfterViewChecked() {\n    if (!this.registerOnce && this.slugInput) {\n      this.registerOnce = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      fromEvent(this.slugInput.nativeElement, 'input')\n        .pipe(\n          map((event: Event) => (event.target as HTMLInputElement).value),\n          debounceTime(500),\n          distinctUntilChanged(),\n        )\n        .subscribe((data) => this.checkSlug(data));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.slugCheckSubscription?.unsubscribe();\n    this.store.dispatch(resetSingleTeamState());\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  showDeleteTeamConfirmation(event: any) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'single-team.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('single-team.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.deleteTeam();\n      },\n      reject: () => {},\n    });\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private deleteTeam() {\n    this.teamService.deleteTeam(this.teamId ?? '').subscribe({\n      next: () => {\n        this.router.navigate(['/home/settings/teams']);\n      },\n      error: () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: this.translateService.instant('single-team.error'),\n          detail: this.translateService.instant(\n            'single-team.failed_to_delete_team',\n          ),\n        });\n      },\n    });\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.teamService.isSlugTaken(slug).subscribe({\n      next: (result) => {\n        this.isSlugTaken = result;\n      },\n      error: () => {\n        this.isSlugTaken = null;\n      },\n    });\n  }\n\n  updateTeamSlug(slug: string) {\n    this.store.dispatch(\n      updateTeam({ teamId: this.teamId ?? '', dto: { slug: slug } }),\n    );\n    this.store\n      .select(selectUpdateTeamStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('single-team.error'),\n            detail: this.translateService.instant(\n              'single-team.failed_to_update_team',\n            ),\n          });\n        }\n      });\n  }\n\n  onAddMembers = (members: User[]) => {\n    this.store.dispatch(\n      addTeamMembers({\n        teamId: this.teamId ?? '',\n        ids: members.map((member) => member.userId),\n      }),\n    );\n  };\n\n  onRemoveMembers = (members: User[]) => {\n    this.store.dispatch(\n      removeTeamMembers({\n        teamId: this.teamId ?? '',\n        ids: members.map((member) => member.userId),\n      }),\n    );\n  };\n\n  onAddProjects = (projects: Project[]) => {\n    this.store.dispatch(\n      addTeamProjects({\n        teamId: this.teamId ?? '',\n        ids: projects.map((project) => project.projectId),\n      }),\n    );\n  };\n\n  onRemoveProjects = (projects: Project[]) => {\n    this.store.dispatch(\n      removeTeamProjects({\n        teamId: this.teamId ?? '',\n        ids: projects.map((project) => project.projectId),\n      }),\n    );\n  };\n}\n\n    \n\n    \n        \n\n@if ((team | async) === null || (team | async) === undefined) {\n  \n} @else {\n  #{{ (team | async)?.slug }}\n  @if ((hasReadPermission | async) === false) {\n    \n  } @else {\n    \n      \n        \n          \n        \n        \n      \n      \n        \n          \n        \n        \n      \n      \n        \n          \n            \n          \n          \n            \n              \n                {{ \"single-team.id\" | translate }}\n              \n              {{ \"single-team.id_description\" | translate }}\n            \n            \n              \n            \n          \n          \n          \n            \n              \n                {{ \"single-team.slug\" | translate }}\n              \n              {{ \"single-team.slug_description\" | translate }}\n            \n            \n              \n                @if (!isSlugTaken) {\n                  \n                } @else {\n                  \n                }\n                \n              \n            \n          \n        \n        \n          \n            \n              \n                {{ \"single-team.delete\" | translate }}\n              \n              {{ \"single-team.delete_description\" | translate }}\n            \n            \n              \n            \n          \n        \n      \n    \n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ((team | async) === null || (team | async) === undefined) {  } @else {  #{{ (team | async)?.slug }}  @if ((hasReadPermission | async) === false) {      } @else {                                                                                                                                                                                                  {{ \"single-team.id\" | translate }}                            {{ \"single-team.id_description\" | translate }}                                                                                                                          {{ \"single-team.slug\" | translate }}                            {{ \"single-team.slug_description\" | translate }}                                                      @if (!isSlugTaken) {                                  } @else {                                  }                                                                                                                        {{ \"single-team.delete\" | translate }}                            {{ \"single-team.delete_description\" | translate }}                                                                                }}'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SingleTeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SingleTeamEffects.html":{"url":"injectables/SingleTeamEffects.html","title":"injectable - SingleTeamEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SingleTeamEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/single-team/single-team.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addTeamMembers$\n                            \n                            \n                                addTeamProjects$\n                            \n                            \n                                loadTeamById$\n                            \n                            \n                                loadTeamMembers$\n                            \n                            \n                                loadTeamProjects$\n                            \n                            \n                                removeTeamMembers$\n                            \n                            \n                                removeTeamProjectss$\n                            \n                            \n                                updateTeam$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addTeamMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addTeamMembers),\n      switchMap((args) =>\n        this.teamService.addTeamMembers(args.teamId, args.ids).pipe(\n          map((members) => addTeamMembersSuccess({ members: members })),\n          catchError((error) => of(addTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTeamProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addTeamProjects),\n      switchMap((args) =>\n        this.teamService.addTeamProjects(args.teamId, args.ids).pipe(\n          map((projects) => addTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(addTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTeamById$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamById),\n      switchMap((args) =>\n        this.teamService.getTeamById(args.teamId).pipe(\n          map((team) => loadTeamByIdSuccess({ team: team })),\n          catchError((error) => of(loadTeamByIdFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTeamMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamMembers),\n      switchMap((args) =>\n        this.teamService.getTeamMembers(args.teamId).pipe(\n          map((members) => loadTeamMembersSuccess({ members: members })),\n          catchError((error) => of(loadTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTeamProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamProjects),\n      switchMap((args) =>\n        this.teamService.getTeamProjects(args.teamId).pipe(\n          map((projects) => loadTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(loadTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTeamMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeTeamMembers),\n      switchMap((args) =>\n        this.teamService.removeTeamMembers(args.teamId, args.ids).pipe(\n          map((members) => removeTeamMembersSuccess({ members: members })),\n          catchError((error) => of(removeTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTeamProjectss$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeTeamProjects),\n      switchMap((args) =>\n        this.teamService.removeTeamProjects(args.teamId, args.ids).pipe(\n          map((projects) => removeTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(removeTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateTeam),\n      switchMap((args) =>\n        this.teamService.updateTeam(args.teamId, args.dto).pipe(\n          map((team) => updateTeamSuccess({ team: team })),\n          catchError((error) => of(updateTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:75\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TeamService } from '../../services/api/team.api.service';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  addTeamMembers,\n  addTeamMembersFailure,\n  addTeamMembersSuccess,\n  addTeamProjects,\n  addTeamProjectsFailure,\n  addTeamProjectsSuccess,\n  loadTeamById,\n  loadTeamByIdFailure,\n  loadTeamByIdSuccess,\n  loadTeamMembers,\n  loadTeamMembersFailure,\n  loadTeamMembersSuccess,\n  loadTeamProjects,\n  loadTeamProjectsFailure,\n  loadTeamProjectsSuccess,\n  removeTeamMembers,\n  removeTeamMembersFailure,\n  removeTeamMembersSuccess,\n  removeTeamProjects,\n  removeTeamProjectsFailure,\n  removeTeamProjectsSuccess,\n  updateTeam,\n  updateTeamFailure,\n  updateTeamSuccess,\n} from './single-team.actions';\nimport { catchError, map, of, switchMap } from 'rxjs';\n\n@Injectable()\nexport class SingleTeamEffects {\n  constructor(\n    private teamService: TeamService,\n    private actions$: Actions,\n  ) {}\n\n  loadTeamById$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamById),\n      switchMap((args) =>\n        this.teamService.getTeamById(args.teamId).pipe(\n          map((team) => loadTeamByIdSuccess({ team: team })),\n          catchError((error) => of(loadTeamByIdFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadTeamMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamMembers),\n      switchMap((args) =>\n        this.teamService.getTeamMembers(args.teamId).pipe(\n          map((members) => loadTeamMembersSuccess({ members: members })),\n          catchError((error) => of(loadTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadTeamProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamProjects),\n      switchMap((args) =>\n        this.teamService.getTeamProjects(args.teamId).pipe(\n          map((projects) => loadTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(loadTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  updateTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateTeam),\n      switchMap((args) =>\n        this.teamService.updateTeam(args.teamId, args.dto).pipe(\n          map((team) => updateTeamSuccess({ team: team })),\n          catchError((error) => of(updateTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addTeamMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addTeamMembers),\n      switchMap((args) =>\n        this.teamService.addTeamMembers(args.teamId, args.ids).pipe(\n          map((members) => addTeamMembersSuccess({ members: members })),\n          catchError((error) => of(addTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeTeamMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeTeamMembers),\n      switchMap((args) =>\n        this.teamService.removeTeamMembers(args.teamId, args.ids).pipe(\n          map((members) => removeTeamMembersSuccess({ members: members })),\n          catchError((error) => of(removeTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addTeamProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addTeamProjects),\n      switchMap((args) =>\n        this.teamService.addTeamProjects(args.teamId, args.ids).pipe(\n          map((projects) => addTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(addTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeTeamProjectss$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeTeamProjects),\n      switchMap((args) =>\n        this.teamService.removeTeamProjects(args.teamId, args.ids).pipe(\n          map((projects) => removeTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(removeTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SingleTeamState.html":{"url":"interfaces/SingleTeamState.html","title":"interface - SingleTeamState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SingleTeamState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/single-team/single-team.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            addMembersError\n                                        \n                                \n                                \n                                        \n                                            addMembersStatus\n                                        \n                                \n                                \n                                        \n                                            addProjectsError\n                                        \n                                \n                                \n                                        \n                                            addProjectsStatus\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            membersError\n                                        \n                                \n                                \n                                        \n                                            membersStatus\n                                        \n                                \n                                \n                                        \n                                            projects\n                                        \n                                \n                                \n                                        \n                                            projectsError\n                                        \n                                \n                                \n                                        \n                                            projectsStatus\n                                        \n                                \n                                \n                                        \n                                            removeMembersError\n                                        \n                                \n                                \n                                        \n                                            removeMembersStatus\n                                        \n                                \n                                \n                                        \n                                            removeProjectsError\n                                        \n                                \n                                \n                                        \n                                            removeProjectsStatus\n                                        \n                                \n                                \n                                        \n                                            singleTeam\n                                        \n                                \n                                \n                                        \n                                            singleTeamError\n                                        \n                                \n                                \n                                        \n                                            singleTeamStatus\n                                        \n                                \n                                \n                                        \n                                            updateTeamError\n                                        \n                                \n                                \n                                        \n                                            updateTeamStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addMembersError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addMembersError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addMembersStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addMembersStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         User[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        membersError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        membersError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        membersStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        membersStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projects:         Project[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Project[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMembersError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMembersError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMembersStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMembersStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleTeam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleTeam:         Team | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Team } from '../../domain/models/team.entity';\nimport {\n    addTeamMembers,\n  addTeamMembersFailure,\n  addTeamMembersSuccess,\n  addTeamProjects,\n  addTeamProjectsFailure,\n  addTeamProjectsSuccess,\n  loadTeamById,\n  loadTeamByIdFailure,\n  loadTeamByIdSuccess,\n  loadTeamMembers,\n  loadTeamMembersFailure,\n  loadTeamMembersSuccess,\n  loadTeamProjects,\n  loadTeamProjectsFailure,\n  loadTeamProjectsSuccess,\n  removeTeamMembers,\n  removeTeamMembersFailure,\n  removeTeamMembersSuccess,\n  removeTeamProjects,\n  removeTeamProjectsFailure,\n  removeTeamProjectsSuccess,\n  resetSingleTeamState,\n  updateTeam,\n  updateTeamFailure,\n  updateTeamSuccess,\n} from './single-team.actions';\nimport { User } from '../../domain/models/user.entity';\nimport { Project } from '../../domain/models/project.entity';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface SingleTeamState {\n  singleTeam: Team | null;\n  members: User[] | null;\n  projects: Project[] | null;\n  singleTeamError: any | null;\n  membersError: any | null;\n  updateTeamError: any | null;\n  projectsError: any | null;\n  addMembersError: any | null;\n  removeMembersError: any | null;\n  addProjectsError: any | null;\n  removeProjectsError: any | null;\n  singleTeamStatus: StateStatus;\n  membersStatus: StateStatus;\n  projectsStatus: StateStatus;\n  updateTeamStatus: StateStatus;\n  addMembersStatus: StateStatus;\n  removeMembersStatus: StateStatus;\n  addProjectsStatus: StateStatus;\n  removeProjectsStatus: StateStatus;\n}\n\nexport const initialState: SingleTeamState = {\n    singleTeam: null,\n    singleTeamError: undefined,\n    updateTeamError: undefined,\n    singleTeamStatus: StateStatus.PENDING,\n    updateTeamStatus: StateStatus.PENDING,\n    members: null,\n    membersError: undefined,\n    membersStatus: StateStatus.PENDING,\n    projects: null,\n    projectsError: undefined,\n    projectsStatus: StateStatus.PENDING,\n    addMembersError: undefined,\n    removeMembersError: undefined,\n    addProjectsError: undefined,\n    removeProjectsError: undefined,\n    addMembersStatus: StateStatus.PENDING,\n    removeMembersStatus: StateStatus.PENDING,\n    addProjectsStatus: StateStatus.PENDING,\n    removeProjectsStatus: StateStatus.PENDING\n};\n\nexport const singleTeamReducer = createReducer(\n  initialState,\n\n  on(resetSingleTeamState, () => (initialState)),\n\n  on(loadTeamById, (state) => ({\n    ...state,\n    singleTeamError: null,\n    singleTeamStatus: StateStatus.LOADING,\n  })),\n\n  on(loadTeamByIdSuccess, (state, { team }) => ({\n    ...state,\n    singleTeam: team,\n    singleTeamError: null,\n    singleTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  on(loadTeamByIdFailure, (state, { error }) => ({\n    ...state,\n    singleTeamError: error,\n    singleTeamStatus: StateStatus.ERROR,\n  })),\n\n  on(loadTeamMembers, (state) => ({\n    ...state,\n    membersError: null,\n    membersStatus: StateStatus.LOADING,\n  })),\n\n  on(loadTeamMembersSuccess, (state, { members }) => ({\n    ...state,\n    members: members,\n    membersError: null,\n    membersStatus: StateStatus.SUCCESS,\n  })),\n\n  on(loadTeamMembersFailure, (state, { error }) => ({\n    ...state,\n    membersError: error,\n    membersStatus: StateStatus.ERROR,\n  })),\n  \n  on(loadTeamProjects, (state) => ({\n    ...state,\n    projectsError: null,\n    projectsStatus: StateStatus.LOADING,\n  })),\n\n  on(loadTeamProjectsSuccess, (state, { projects }) => ({\n    ...state,\n    projects: projects,\n    projectsError: null,\n    projectsStatus: StateStatus.SUCCESS,\n  })),\n\n  on(loadTeamProjectsFailure, (state, { error }) => ({\n    ...state,\n    projectsError: error,\n    projectsStatus: StateStatus.ERROR,\n  })),\n\n  on(updateTeam, (state) => ({\n    ...state,\n    updateTeamError: null,\n    updateTeamStatus: StateStatus.LOADING,\n  })),\n\n  on(updateTeamSuccess, (state, { team }) => ({\n    ...state,\n    singleTeam: team,\n    updateTeamError: null,\n    updateTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  on(updateTeamFailure, (state, { error }) => ({\n    ...state,\n    updateTeamError: error,\n    updateTeamStatus: StateStatus.ERROR,\n  })),\n\n  on(addTeamMembers, (state) => ({\n    ...state,\n    addMembersError: null,\n    addMembersStatus: StateStatus.LOADING,\n  })),\n\n  on(addTeamMembersSuccess, (state, { members }) => ({\n    ...state,\n    members: members,\n    addMembersError: null,\n    addMembersStatus: StateStatus.SUCCESS,\n  })),\n\n  on(addTeamMembersFailure, (state, { error }) => ({\n    ...state,\n    addMembersError: error,\n    addMembersStatus: StateStatus.ERROR,\n  })),\n\n  on(removeTeamMembers, (state) => ({\n    ...state,\n    removeMembersError: null,\n    removeMembersStatus: StateStatus.LOADING,\n  })),\n\n  on(removeTeamMembersSuccess, (state, { members }) => ({\n    ...state,\n    members: members,\n    removeMembersError: null,\n    removeMembersStatus: StateStatus.SUCCESS,\n  })),\n\n  on(removeTeamMembersFailure, (state, { error }) => ({\n    ...state,\n    removeMembersError: error,\n    removeMembersStatus: StateStatus.ERROR,\n  })),\n\n\n  on(addTeamProjects, (state) => ({\n    ...state,\n    addProjectsError: null,\n    addProjectsStatus: StateStatus.LOADING,\n  })),\n\n  on(addTeamProjectsSuccess, (state, { projects }) => ({\n    ...state,\n    projects: projects,\n    addProjectsError: null,\n    addProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  on(addTeamProjectsFailure, (state, { error }) => ({\n    ...state,\n    addProjectsError: error,\n    addProjectsStatus: StateStatus.ERROR,\n  })),\n\n  on(removeTeamProjects, (state) => ({\n    ...state,\n    removeProjectsError: null,\n    removeProjectsStatus: StateStatus.LOADING,\n  })),\n\n  on(removeTeamProjectsSuccess, (state, { projects }) => ({\n    ...state,\n    projects: projects,\n    removeProjectsError: null,\n    removeProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  on(removeTeamProjectsFailure, (state, { error }) => ({\n    ...state,\n    removeProjectsError: error,\n    removeProjectsStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponent.html":{"url":"components/StatsComponent.html","title":"component - StatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/stats/stats.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n            \n                styleUrl\n                ./stats.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-stats',\n  standalone: true,\n  imports: [],\n  templateUrl: './stats.component.html',\n  styleUrl: './stats.component.scss'\n})\nexport class StatsComponent {\n\n}\n\n    \n\n    \n        stats works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'stats works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SupportComponent.html":{"url":"components/SupportComponent.html","title":"component - SupportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SupportComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/support/support.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-support\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./support.component.html\n            \n\n\n\n            \n                styleUrl\n                ./support.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-support',\n  standalone: true,\n  imports: [],\n  templateUrl: './support.component.html',\n  styleUrl: './support.component.scss'\n})\nexport class SupportComponent {\n\n}\n\n    \n\n    \n        support works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'support works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SupportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TagsTableComponent.html":{"url":"components/TagsTableComponent.html","title":"component - TagsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TagsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/tags-table/tags-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-tags-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            ToastModule\n                            ConfirmDialogModule\n                            DialogModule\n                            TableModule\n                            InputTextModule\n                            ReactiveFormsModule\n                            FormsModule\n                                AccessDeniedComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tags-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./tags-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dt\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isAddNewDialogVisible\n                            \n                            \n                                isLoadingCreateNew\n                            \n                            \n                                isLoadingRemoveTags\n                            \n                            \n                                isLoadingTags\n                            \n                            \n                                selectedTags\n                            \n                            \n                                tags\n                            \n                            \n                                tagsForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                createNewTag\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                removeTags\n                            \n                            \n                                    Private\n                                resetTagsForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                showDeleteConfirmation\n                            \n                            \n                                showDeleteSelectionConfirmation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                enableAddAction\n                            \n                            \n                                enableEditAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableRemoveAction\n                            \n                            \n                                enableSorting\n                            \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, formBuilder: FormBuilder, confirmationService: ConfirmationService, translateService: TranslateService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:89\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableEditAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:92\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:83\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:80\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:77\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableRemoveAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:95\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:86\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/tags-table/tags-table.component.ts:74\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTag\n                        \n                    \n                \n            \n            \n                \ncreateNewTag()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:170\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        removeTags\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeTags(tags: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tags\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetTagsForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetTagsForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:243\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteConfirmation(tag: string, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tag\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteSelectionConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteSelectionConfirmation(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/tags-table/tags-table.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNew\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectAddTags)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingRemoveTags\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectRemoveTags)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:108\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingTags\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSingleProjectTags)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectSingleProjectTags)\n    .pipe(map((tags) => tags?.map((tag) => ({ tag })) ?? []))\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tagsForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    tag: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/tags-table/tags-table.component.ts:97\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../core/state/app.state';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport {\n  addProjectTags,\n  loadProjectTags,\n  removeProjectTags,\n} from '../../../core/state/single-project/single-project.actions';\nimport {\n  isLoadingSingleProjectAddTags,\n  isLoadingSingleProjectRemoveTags,\n  isLoadingSingleProjectTags,\n  selectAddProjectTagsStatus,\n  selectRemoveProjectTagsStatus,\n  selectSingleProjectTags,\n} from '../../../core/state/single-project/single-project.selectors';\nimport { filter, map, take } from 'rxjs';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { ToastModule } from 'primeng/toast';\nimport { AccessDeniedComponent } from '../access-denied/access-denied.component';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { Table, TableModule } from 'primeng/table';\nimport { InputTextModule } from 'primeng/inputtext';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\n\n@Component({\n  selector: 'app-tags-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    ToastModule,\n    ConfirmDialogModule,\n    DialogModule,\n    TableModule,\n    InputTextModule,\n    ReactiveFormsModule,\n    FormsModule,\n    AccessDeniedComponent,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './tags-table.component.html',\n  styleUrl: './tags-table.component.scss',\n})\nexport class TagsTableComponent implements OnInit {\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n    private messageService: MessageService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n\n  @Input()\n  project?: Project;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  @Input()\n  enableEditAction: boolean = false;\n\n  @Input()\n  enableRemoveAction: boolean = false;\n\n  tagsForm = this.formBuilder.group({\n    tag: ['', [Validators.required]],\n  });\n  isAddNewDialogVisible: boolean = false;\n\n  selectedTags: { tag: string }[] = [];\n  tags = this.store\n    .select(selectSingleProjectTags)\n    .pipe(map((tags) => tags?.map((tag) => ({ tag })) ?? []));\n  isLoadingTags = this.store.select(isLoadingSingleProjectTags);\n  isLoadingCreateNew = this.store.select(isLoadingSingleProjectAddTags);\n  isLoadingRemoveTags = this.store.select(isLoadingSingleProjectRemoveTags);\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  );\n\n  ngOnInit(): void {\n    this.store.dispatch(\n      loadProjectTags({ projectId: this.project?.projectId ?? '' }),\n    );\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  showDeleteConfirmation(tag: string, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'tags-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('tags-table.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeTags([tag]);\n      },\n      reject: () => {},\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  showDeleteSelectionConfirmation(event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'tags-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('tags-table.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeTags(this.selectedTags.map((value) => value.tag));\n      },\n      reject: () => {},\n    });\n  }\n\n  showAddDialog() {\n    this.resetTagsForm();\n    this.isAddNewDialogVisible = true;\n  }\n\n  createNewTag() {\n    const tags: string[] = [this.tagsForm.get('tag')?.value ?? ''];\n    this.store.dispatch(\n      addProjectTags({\n        projectId: this.project?.projectId ?? '',\n        tags: tags,\n      }),\n    );\n    this.store\n      .select(selectAddProjectTagsStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('tags-table.error'),\n            detail: this.translateService.instant(\n              'tags-table.failed_to_create_tag',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('tags-table.success'),\n            detail: this.translateService.instant('tags-table.tag_created'),\n          });\n          this.isAddNewDialogVisible = !this.isAddNewDialogVisible;\n        }\n      });\n  }\n\n  private removeTags(tags: string[]) {\n    this.store.dispatch(\n      removeProjectTags({\n        projectId: this.project?.projectId ?? '',\n        tags: tags,\n      }),\n    );\n    this.store\n      .select(selectRemoveProjectTagsStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('tags-table.error'),\n            detail: this.translateService.instant(\n              'tags-table.failed_to_delete_tags',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('tags-table.success'),\n            detail: this.translateService.instant('tags-table.removed_tags'),\n          });\n          this.selectedTags = [];\n        }\n      });\n  }\n\n  private resetTagsForm() {\n    this.tagsForm = this.formBuilder.group({\n      tag: ['', [Validators.required]],\n    });\n  }\n}\n\n    \n\n    \n        \n\n@if ((hasReadPermission | async) === false) {\n  \n} @else {\n  \n    \n      \n        \n          \n          \n        \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          \n            {{ \"tags-table.tag\" | translate }}\n            \n            \n          \n        \n        \n          \n            {{ \"tags-table.actions\" | translate }}\n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n          {{ tag.tag }}\n        \n        \n            \n          \n      \n    \n\n    \n        \n          {{ \"tags-table.no_tags_found\" | translate }}\n        \n      \n  \n}\n\n\n  \n    \n      \n        {{ \"tags-table.tag_label\" | translate }}\n          \n        {{ \"tags-table.tag_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ((hasReadPermission | async) === false) {  } @else {                                                                                                                                            {{ \"tags-table.tag\" | translate }}                                                                        {{ \"tags-table.actions\" | translate }}                                                                                  {{ tag.tag }}                                                                      {{ \"tags-table.no_tags_found\" | translate }}                }                    {{ \"tags-table.tag_label\" | translate }}                  {{ \"tags-table.tag_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TagsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Team.html":{"url":"interfaces/Team.html","title":"interface - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/team.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            teamId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Team {\n    teamId: string;\n    slug: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamDto.html":{"url":"interfaces/TeamDto.html","title":"interface - TeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/team.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            teamId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TeamDto {\n  teamId: string;\n  slug: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamEffects.html":{"url":"injectables/TeamEffects.html","title":"injectable - TeamEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/team/team.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createTeam$\n                            \n                            \n                                deleteTeam$\n                            \n                            \n                                loadMyTeams$\n                            \n                            \n                                loadOrganizationTeams$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/team/team.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createTeam),\n      switchMap((request) =>\n        this.teamService.createNewTeam(request).pipe(\n          map((team) => createTeamSuccess(team)),\n          catchError((error) => of(createTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(deleteTeam),\n      switchMap((request) =>\n        this.teamService.deleteTeam(request.teamId).pipe(\n          map(() => deleteTeamSuccess({teamId: request.teamId})),\n          catchError((error) => of(deleteTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMyTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyTeams),\n      switchMap(() =>\n        this.teamService.getMyTeams().pipe(\n          map((teams) => loadMyTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadMyTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadOrganizationTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationTeams),\n      switchMap(() =>\n        this.teamService.getOrganizationTeams().pipe(\n          map((teams) => loadOrganizationTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadOrganizationTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { switchMap, map, catchError, of } from \"rxjs\";\nimport { TeamService } from \"../../services/api/team.api.service\";\nimport { createTeam, createTeamFailure, createTeamSuccess, deleteTeam, deleteTeamFailure, deleteTeamSuccess, loadMyTeams, loadMyTeamsFailure, loadMyTeamsSuccess, loadOrganizationTeams, loadOrganizationTeamsFailure, loadOrganizationTeamsSuccess } from \"./team.actions\";\n\n@Injectable()\nexport class TeamEffects {\n  constructor(\n    private teamService: TeamService,\n    private actions$: Actions,\n  ) {}\n\n  loadOrganizationTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationTeams),\n      switchMap(() =>\n        this.teamService.getOrganizationTeams().pipe(\n          map((teams) => loadOrganizationTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadOrganizationTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadMyTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyTeams),\n      switchMap(() =>\n        this.teamService.getMyTeams().pipe(\n          map((teams) => loadMyTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadMyTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createTeam),\n      switchMap((request) =>\n        this.teamService.createNewTeam(request).pipe(\n          map((team) => createTeamSuccess(team)),\n          catchError((error) => of(createTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  deleteTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(deleteTeam),\n      switchMap((request) =>\n        this.teamService.deleteTeam(request.teamId).pipe(\n          map(() => deleteTeamSuccess({teamId: request.teamId})),\n          catchError((error) => of(deleteTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamPickerComponent.html":{"url":"components/TeamPickerComponent.html","title":"component - TeamPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/team-picker/team-picker.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team-picker\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            TranslateModule\n                            DialogModule\n                            PickListModule\n                            AvatarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./team-picker.component.html\n            \n\n\n\n            \n                styleUrl\n                ./team-picker.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avaialbleTeams\n                            \n                            \n                                isLoadingTeams\n                            \n                            \n                                isPickerDialogVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMoveAllToSource\n                            \n                            \n                                onMoveAllToTarget\n                            \n                            \n                                onMoveToSource\n                            \n                            \n                                onMoveToTarget\n                            \n                            \n                                showPickerDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onTeamsPicked\n                            \n                            \n                                onTeamsRemoved\n                            \n                            \n                                selectedTeams\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/team-picker/team-picker.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onTeamsPicked\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/team-picker/team-picker.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTeamsRemoved\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/team-picker/team-picker.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedTeams\n                    \n                \n                \n                    \n                        Type :         Team[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/team-picker/team-picker.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToSource\n                        \n                    \n                \n            \n            \n                \nonMoveAllToSource(event: PickListMoveAllToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-picker/team-picker.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveAllToTarget(event: PickListMoveAllToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-picker/team-picker.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToSource\n                        \n                    \n                \n            \n            \n                \nonMoveToSource(event: PickListMoveToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-picker/team-picker.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveToTarget(event: PickListMoveToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-picker/team-picker.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPickerDialog\n                        \n                    \n                \n            \n            \n                \nshowPickerDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/team-picker/team-picker.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avaialbleTeams\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Team[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-picker/team-picker.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganizationTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-picker/team-picker.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPickerDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/team-picker/team-picker.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { PickListModule, PickListMoveAllToSourceEvent, PickListMoveAllToTargetEvent, PickListMoveToSourceEvent, PickListMoveToTargetEvent } from 'primeng/picklist';\nimport { RippleModule } from 'primeng/ripple';\nimport { Team } from '../../../core/domain/models/team.entity';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../core/state/app.state';\nimport { isLoadingOrganizationTeams, selectOrganizationTeams } from '../../../core/state/team/team.selectors';\nimport { loadOrganizationTeams } from '../../../core/state/team/team.actions';\nimport { filter, take } from 'rxjs';\n\n@Component({\n  selector: 'app-team-picker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    TranslateModule,\n    DialogModule,\n    PickListModule,\n    AvatarModule,\n  ],\n  templateUrl: './team-picker.component.html',\n  styleUrl: './team-picker.component.scss'\n})\nexport class TeamPickerComponent {\n\n  constructor(private store: Store) {}\n  isLoadingTeams = this.store.select(isLoadingOrganizationTeams);\n  avaialbleTeams: Team[] = [];\n  isPickerDialogVisible = false;\n\n  @Input()\n  selectedTeams: Team[] = [];\n\n  @Input()\n  onTeamsPicked?: (teams: Team[]) => void;\n\n  @Input()\n  onTeamsRemoved?: (teams: Team[]) => void;\n\n  showPickerDialog() {\n    this.store.dispatch(loadOrganizationTeams());\n    this.store\n      .select(selectOrganizationTeams)\n      .pipe(\n        filter((teams) => teams !== undefined && teams !== null),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((teams) => {\n        // Filter out members that are also present in selectedProjects\n        this.avaialbleTeams =\n          teams?.filter(\n            (team) =>\n              !this.selectedTeams.some(\n                (selected) => selected.teamId === team.teamId,\n              ),\n          ) ?? [];\n\n        this.isPickerDialogVisible = true;\n      });\n  }\n\n  onMoveToSource(event: PickListMoveToSourceEvent) {\n    if (this.onTeamsRemoved) {\n      this.onTeamsRemoved(event.items);\n    }\n  }\n\n  onMoveToTarget(event: PickListMoveToTargetEvent) {\n    if (this.onTeamsPicked) {\n      this.onTeamsPicked(event.items);\n    }\n  }\n\n  onMoveAllToSource(event: PickListMoveAllToSourceEvent) {\n    if (this.onTeamsRemoved) {\n      this.onTeamsRemoved(event.items);\n    }\n  }\n\n  onMoveAllToTarget(event: PickListMoveAllToTargetEvent) {\n    if (this.onTeamsPicked) {\n      this.onTeamsPicked(event.items);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          {{ team.slug }}\n        \n      \n    \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ team.slug }}                            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/team.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeamMembers\n                            \n                            \n                                addTeamProjects\n                            \n                            \n                                createNewTeam\n                            \n                            \n                                deleteTeam\n                            \n                            \n                                getMyTeams\n                            \n                            \n                                getOrganizationTeams\n                            \n                            \n                                getTeamById\n                            \n                            \n                                getTeamMembers\n                            \n                            \n                                getTeamProjects\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                removeTeamMembers\n                            \n                            \n                                removeTeamProjects\n                            \n                            \n                                updateTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/team.api.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTeamMembers\n                        \n                    \n                \n            \n            \n                \naddTeamMembers(teamId: string, ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTeamProjects\n                        \n                    \n                \n            \n            \n                \naddTeamProjects(teamId: string, ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTeam\n                        \n                    \n                \n            \n            \n                \ncreateNewTeam(dto: CreateTeamRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateTeamRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTeam\n                        \n                    \n                \n            \n            \n                \ndeleteTeam(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMyTeams\n                        \n                    \n                \n            \n            \n                \ngetMyTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganizationTeams\n                        \n                    \n                \n            \n            \n                \ngetOrganizationTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeamById\n                        \n                    \n                \n            \n            \n                \ngetTeamById(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeamMembers\n                        \n                    \n                \n            \n            \n                \ngetTeamMembers(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeamProjects\n                        \n                    \n                \n            \n            \n                \ngetTeamProjects(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n            \n                \nisSlugTaken(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTeamMembers\n                        \n                    \n                \n            \n            \n                \nremoveTeamMembers(teamId: string, ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTeamProjects\n                        \n                    \n                \n            \n            \n                \nremoveTeamProjects(teamId: string, ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTeam\n                        \n                    \n                \n            \n            \n                \nupdateTeam(teamId: string, dto: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProjectDto } from '../../domain/dto/project.dto';\nimport { CreateTeamRequestDto } from '../../domain/dto/requests/create-team-request.dto';\nimport { TeamDto } from '../../domain/dto/team.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { Project } from '../../domain/models/project.entity';\nimport { User } from '../../domain/models/user.entity';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TeamService {\n  constructor(private http: HttpClient) {}\n\n  getOrganizationTeams(): Observable {\n    return this.http.get(api.teamUrl, api.authOptions);\n  }\n\n  getMyTeams(): Observable {\n    return this.http.get(api.teamUrl + '/my', api.authOptions);\n  }\n\n  getTeamById(teamId: string): Observable {\n    return this.http.get(api.teamUrl + '/' + teamId, api.authOptions);\n  }\n\n  getTeamMembers(teamId: string): Observable {\n    return this.http.get(\n      api.teamUrl + `/${teamId}/members`,\n      api.authOptions,\n    );\n  }\n\n  getTeamProjects(teamId: string): Observable {\n    return this.http.get(\n      api.teamUrl + `/${teamId}/projects`,\n      api.authOptions,\n    );\n  }\n\n  isSlugTaken(slug: string): Observable {\n    return this.http.get(\n      api.teamUrl + '/slug/taken?slug=' + slug,\n      api.authOptions,\n    );\n  }\n\n  createNewTeam(dto: CreateTeamRequestDto): Observable {\n    return this.http.post(api.teamUrl, dto, api.authOptions);\n  }\n\n  deleteTeam(teamId: string) {\n    return this.http.delete(api.teamUrl + '/' + teamId, api.authOptions);\n  }\n\n  updateTeam(teamId: string, dto: { slug: string }): Observable {\n    return this.http.patch(\n      api.teamUrl + '/' + teamId,\n      dto,\n      api.authOptions,\n    );\n  }\n\n  addTeamMembers(teamId: string, ids: string[]): Observable {\n    return this.http.put(\n      api.teamUrl + `/${teamId}/members`,\n      undefined,\n      {\n        ...api.authOptions,\n        params: { ids: ids },\n      },\n    );\n  }\n\n  removeTeamMembers(teamId: string, ids: string[]): Observable {\n    return this.http.delete(api.teamUrl + `/${teamId}/members`, {\n      ...api.authOptions,\n      params: { ids: ids },\n    });\n  }\n\n  addTeamProjects(teamId: string, ids: string[]): Observable {\n    return this.http.put(\n      api.teamUrl + `/${teamId}/projects`,\n      undefined,\n      {\n        ...api.authOptions,\n        params: { ids: ids },\n      },\n    );\n  }\n\n  removeTeamProjects(teamId: string, ids: string[]): Observable {\n    return this.http.delete(api.teamUrl + `/${teamId}/projects`, {\n      ...api.authOptions,\n      params: { ids: ids },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamState.html":{"url":"interfaces/TeamState.html","title":"interface - TeamState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/team/team.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createOrganizationTeamError\n                                        \n                                \n                                \n                                        \n                                            createOrganizationTeamStatus\n                                        \n                                \n                                \n                                        \n                                            deleteTeamError\n                                        \n                                \n                                \n                                        \n                                            deleteTeamStatus\n                                        \n                                \n                                \n                                        \n                                            myTeams\n                                        \n                                \n                                \n                                        \n                                            myTeamsError\n                                        \n                                \n                                \n                                        \n                                            myTeamsStatus\n                                        \n                                \n                                \n                                        \n                                            organizationTeams\n                                        \n                                \n                                \n                                        \n                                            organizationTeamsError\n                                        \n                                \n                                \n                                        \n                                            organizationTeamsStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createOrganizationTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createOrganizationTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createOrganizationTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createOrganizationTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeams:         Team[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeamsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeamsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeamsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeamsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeams:         Team[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeamsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeamsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeamsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeamsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Team } from '../../domain/models/team.entity';\nimport {\n  createTeam,\n  createTeamFailure,\n  createTeamSuccess,\n  deleteTeam,\n  deleteTeamFailure,\n  deleteTeamSuccess,\n  loadMyTeams,\n  loadMyTeamsSuccess,\n  loadOrganizationTeams,\n  loadOrganizationTeamsFailure,\n  loadOrganizationTeamsSuccess,\n} from './team.actions';\n\nexport interface TeamState {\n  organizationTeams: Team[] | null;\n  myTeams: Team[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  organizationTeamsError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  myTeamsError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createOrganizationTeamError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  deleteTeamError: any | null;\n  organizationTeamsStatus: StateStatus;\n  myTeamsStatus: StateStatus;\n  createOrganizationTeamStatus: StateStatus;\n  deleteTeamStatus: StateStatus;\n}\n\nexport const initialState: TeamState = {\n  organizationTeams: null,\n  organizationTeamsError: undefined,\n  organizationTeamsStatus: StateStatus.PENDING,\n  myTeams: null,\n  myTeamsError: undefined,\n  myTeamsStatus: StateStatus.PENDING,\n  createOrganizationTeamError: undefined,\n  createOrganizationTeamStatus: StateStatus.PENDING,\n  deleteTeamError: undefined,\n  deleteTeamStatus: StateStatus.PENDING,\n};\n\nexport const teamReducer = createReducer(\n  initialState,\n\n  //Handle loading organization teams\n  on(loadOrganizationTeams, (state) => ({\n    ...state,\n    organizationTeamsError: null,\n    organizationTeamsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadOrganizationTeamsSuccess, (state, { teams }) => ({\n    ...state,\n    organizationTeams: teams,\n    organizationTeamsError: null,\n    organizationTeamsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationTeamsFailure, (state, { error }) => ({\n    ...state,\n    organizationTeamsError: error,\n    organizationTeamsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle loading current user teams\n  on(loadMyTeams, (state) => ({\n    ...state,\n    myTeamsError: null,\n    myTeamsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadMyTeamsSuccess, (state, { teams }) => ({\n    ...state,\n    myTeams: teams,\n    myTeamsError: null,\n    myTeamsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationTeamsFailure, (state, { error }) => ({\n    ...state,\n    myTeamsError: error,\n    myTeamsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle create new team\n  on(createTeam, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle create new team success\n  on(createTeamSuccess, (state, team) => ({\n    ...state,\n    organizationTeams: [...(state.organizationTeams || []), team],\n    createOrganizationTeamError: null,\n    createOrganizationTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new team failure\n  on(createTeamFailure, (state, { error }) => ({\n    ...state,\n    createOrganizationTeamError: error,\n    createOrganizationTeamStatus: StateStatus.ERROR,\n  })),\n\n  on(deleteTeam, (state) => ({\n    ...state,\n    deleteTeamError: null,\n    deleteTeamStatus: StateStatus.LOADING,\n  })),\n\n  on(deleteTeamSuccess, (state, { teamId }) => ({\n    ...state,\n    organizationTeams:\n      state.organizationTeams?.filter((team) => team.teamId !== teamId) ?? null,\n    deleteTeamError: null,\n    deleteTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  on(deleteTeamFailure, (state, { error }) => ({\n    ...state,\n    deleteTeamError: error,\n    deleteTeamStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/teams/teams.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AccessDeniedComponent\n                            PanelModule\n                                TeamsTableComponent\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n            \n                styleUrl\n                ./teams.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isLoadingMyTeams\n                            \n                            \n                                isLoadingOrganizationTeams\n                            \n                            \n                                myTeams\n                            \n                            \n                                organizationTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/teams/teams.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/teams.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMyTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingOrganizationTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganizationTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organizationTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOrganizationTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { PanelModule } from 'primeng/panel';\nimport { TeamsTableComponent } from '../../../shared/components/teams-table/teams-table.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  isLoadingMyTeams,\n  isLoadingOrganizationTeams,\n  selectMyTeams,\n  selectOrganizationTeams,\n} from '../../../core/state/team/team.selectors';\nimport {\n  loadMyTeams,\n  loadOrganizationTeams,\n} from '../../../core/state/team/team.actions';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'app-teams',\n  standalone: true,\n  templateUrl: './teams.component.html',\n  styleUrl: './teams.component.scss',\n  imports: [\n    CommonModule,\n    AccessDeniedComponent,\n    PanelModule,\n    TeamsTableComponent,\n    TranslateModule,\n  ],\n})\nexport class TeamsComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.CREATE),\n  );\n\n  isLoadingOrganizationTeams = this.store.select(isLoadingOrganizationTeams);\n  isLoadingMyTeams = this.store.select(isLoadingMyTeams);\n  organizationTeams = this.store\n    .select(selectOrganizationTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n  myTeams = this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit(): void {\n    this.store.dispatch(loadOrganizationTeams());\n    this.store.dispatch(loadMyTeams());\n  }\n}\n\n    \n\n    \n        @if (hasReadPermission | async) {\n  \n    \n  \n\n  \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {                } @else {  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/token.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n    accessToken: string;\n    refreshToken: string;\n    expiresIn: 0;\n    refreshExpiresIn: 0;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenDto.html":{"url":"interfaces/TokenDto.html","title":"interface - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenDto {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: 0;\n  refreshExpiresIn: 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/topbar/topbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            DropdownModule\n                            AvatarModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./topbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                languages\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    \n                                menu\n                            \n                            \n                                    \n                                menuButton\n                            \n                            \n                                organization\n                            \n                            \n                                selectedLanguage\n                            \n                            \n                                    \n                                topbarMenuButton\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getAppName\n                            \n                            \n                                goToProfilePage\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, router: Router, store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(language: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToProfilePage\n                        \n                    \n                \n            \n            \n                \ngoToProfilePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [{ flag: 'gb', label: 'English', value: 'en' }]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('menubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        topbarMenuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { RippleModule } from 'primeng/ripple';\nimport { environment } from '../../../../../environments/environment';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport { signOut } from '../../../../core/state/auth/auth.actions';\nimport { selectCurrentUser } from '../../../../core/state/auth/auth.selectors';\nimport { selectCurrentOrganization } from '../../../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-topbar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    DropdownModule,\n    AvatarModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    FormsModule,\n  ],\n  templateUrl: './topbar.component.html',\n  styleUrl: './topbar.component.scss',\n})\nexport class TopbarComponent {\n  @ViewChild('menubutton') menuButton!: ElementRef;\n  @ViewChild('topbarmenubutton') topbarMenuButton!: ElementRef;\n  @ViewChild('topbarmenu') menu!: ElementRef;\n\n  constructor(\n    public layoutService: LayoutService,\n    private router: Router,\n    private store: Store,\n    private translateService: TranslateService,\n  ) {\n    this.selectedLanguage = this.languages[0];\n  }\n\n  items: MenuItem[] = [];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  languages: any[] = [{ flag: 'gb', label: 'English', value: 'en' }];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  selectedLanguage: any;\n\n  organization = this.store.select(selectCurrentOrganization);\n  user = this.store.select(selectCurrentUser);\n\n  logout() {\n    this.store.dispatch(signOut());\n    this.router.navigate(['/auth']);\n  }\n\n  goToProfilePage() {\n    this.router.navigate(['/home/settings/account']);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  changeLanguage(language: any) {\n    this.translateService.use(language.value);\n  }\n\n  getAppName() {\n    return environment.appName;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ getAppName() }}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n      \n        \n          \n            \n            {{ selectedLanguage.label }}\n          \n        \n        \n          \n            \n            {{ language.label }}\n          \n        \n      \n      \n        \n        Logout\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ getAppName() }}                                                                        {{ selectedLanguage.label }}                                                            {{ language.label }}                                              Logout            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: Role;\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n\n  export interface Role {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from '../models/enums/permission.enum';\nimport { ResourceType } from '../models/enums/resource-type.enum';\n\nexport interface UserDto {\n  userId: string;\n  username: string;\n  lastLoginTime: Date;\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileIconUrl: string | null;\n  role: {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n  activated: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VitalsComponent.html":{"url":"components/VitalsComponent.html","title":"component - VitalsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VitalsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/vitals/vitals.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-vitals\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./vitals.component.html\n            \n\n\n\n            \n                styleUrl\n                ./vitals.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-vitals',\n  standalone: true,\n  imports: [],\n  templateUrl: './vitals.component.html',\n  styleUrl: './vitals.component.scss'\n})\nexport class VitalsComponent {\n\n}\n\n    \n\n    \n        vitals works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'vitals works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DebugFilesTableComponent', 'selector': 'app-debug-files-table'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'EnvironmentsTableComponent', 'selector': 'app-environments-table'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReleasesTableComponent', 'selector': 'app-releases-table'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleProjectComponent', 'selector': 'app-single-project'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TagsTableComponent', 'selector': 'app-tags-table'},{'name': 'TeamPickerComponent', 'selector': 'app-team-picker'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VitalsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            - : ^0.0.1\n        \n            @angular/animations : ^17.2.3\n        \n            @angular/cdk : ^17.2.1\n        \n            @angular/common : ^17.2.3\n        \n            @angular/compiler : ^17.2.3\n        \n            @angular/core : ^17.2.3\n        \n            @angular/forms : ^17.2.3\n        \n            @angular/platform-browser : ^17.2.3\n        \n            @angular/platform-browser-dynamic : ^17.2.3\n        \n            @angular/platform-server : ^17.2.3\n        \n            @angular/router : ^17.2.3\n        \n            @angular/ssr : ^17.2.2\n        \n            @ngrx/effects : ^17.1.1\n        \n            @ngrx/store : ^17.1.1\n        \n            @ngrx/store-devtools : ^17.1.1\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @vercel/analytics : ^1.2.2\n        \n            @vercel/speed-insights : ^1.0.9\n        \n            chart.js : ^4.4.2\n        \n            express : ^4.19.2\n        \n            file-saver : ^2.0.5\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^17.12.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DebugFileType   (src/.../debug-file-type.enum.ts)\n                        \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            PlatformType   (src/.../platform-type.enum.ts)\n                        \n                        \n                            ResourceType   (src/.../resource-type.enum.ts)\n                        \n                        \n                            StateStatus   (src/.../state-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/domain/models/enums/debug-file-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DebugFileType\n                    \n                \n                        \n                            \n                                 UNKNOWN\n                            \n                        \n                        \n                            \n                                Value : UNKNOWN\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : CREATE\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                Value : READ\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/platform-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PlatformType\n                    \n                \n                        \n                            \n                                 ANDROID\n                            \n                        \n                        \n                            \n                                Value : ANDROID\n                            \n                        \n                        \n                            \n                                 WEB\n                            \n                        \n                        \n                            \n                                Value : WEB\n                            \n                        \n                        \n                            \n                                 IOS\n                            \n                        \n                        \n                            \n                                Value : IOS\n                            \n                        \n                        \n                            \n                                 SERVER\n                            \n                        \n                        \n                            \n                                Value : SERVER\n                            \n                        \n                        \n                            \n                                 NODE\n                            \n                        \n                        \n                            \n                                Value : NODE\n                            \n                        \n                        \n                            \n                                 REACT\n                            \n                        \n                        \n                            \n                                Value : REACT\n                            \n                        \n                        \n                            \n                                 ANGULAR\n                            \n                        \n                        \n                            \n                                Value : ANGULAR\n                            \n                        \n                        \n                            \n                                 VUE\n                            \n                        \n                        \n                            \n                                Value : VUE\n                            \n                        \n                        \n                            \n                                 SVELTE\n                            \n                        \n                        \n                            \n                                Value : SVELTE\n                            \n                        \n                        \n                            \n                                 SPRING\n                            \n                        \n                        \n                            \n                                Value : SPRING\n                            \n                        \n                        \n                            \n                                 GO\n                            \n                        \n                        \n                            \n                                Value : GO\n                            \n                        \n                        \n                            \n                                 JAVA\n                            \n                        \n                        \n                            \n                                Value : JAVA\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n                        \n                            \n                                 CPP\n                            \n                        \n                        \n                            \n                                Value : CPP\n                            \n                        \n                        \n                            \n                                 JS\n                            \n                        \n                        \n                            \n                                Value : JS\n                            \n                        \n                        \n                            \n                                 PYTHON\n                            \n                        \n                        \n                            \n                                Value : PYTHON\n                            \n                        \n                        \n                            \n                                 RUST\n                            \n                        \n                        \n                            \n                                Value : RUST\n                            \n                        \n                        \n                            \n                                 RUBY\n                            \n                        \n                        \n                            \n                                Value : RUBY\n                            \n                        \n                        \n                            \n                                 LARAVEL\n                            \n                        \n                        \n                            \n                                Value : LARAVEL\n                            \n                        \n                        \n                            \n                                 PHP\n                            \n                        \n                        \n                            \n                                Value : PHP\n                            \n                        \n                        \n                            \n                                 EXPRESS\n                            \n                        \n                        \n                            \n                                Value : EXPRESS\n                            \n                        \n                        \n                            \n                                 NEST\n                            \n                        \n                        \n                            \n                                Value : NEST\n                            \n                        \n                        \n                            \n                                 CS\n                            \n                        \n                        \n                            \n                                Value : CS\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/resource-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 COMMENT\n                            \n                        \n                        \n                            \n                                Value : COMMENT\n                            \n                        \n                        \n                            \n                                 DEBUG_FILE\n                            \n                        \n                        \n                            \n                                Value : DEBUG_FILE\n                            \n                        \n                        \n                            \n                                 DEVICE_STATE\n                            \n                        \n                        \n                            \n                                Value : DEVICE_STATE\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : ISSUE\n                            \n                        \n                        \n                            \n                                 LOG_ENTRY\n                            \n                        \n                        \n                            \n                                Value : LOG_ENTRY\n                            \n                        \n                        \n                            \n                                 LOG_SESSION\n                            \n                        \n                        \n                            \n                                Value : LOG_SESSION\n                            \n                        \n                        \n                            \n                                 LOG_SOURCE\n                            \n                        \n                        \n                            \n                                Value : LOG_SOURCE\n                            \n                        \n                        \n                            \n                                 ORGANIZATION\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION\n                            \n                        \n                        \n                            \n                                 PLATFORM\n                            \n                        \n                        \n                            \n                                Value : PLATFORM\n                            \n                        \n                        \n                            \n                                 PROJECT\n                            \n                        \n                        \n                            \n                                Value : PROJECT\n                            \n                        \n                        \n                            \n                                 PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                Value : PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                Value : ROLE\n                            \n                        \n                        \n                            \n                                 TEAM\n                            \n                        \n                        \n                            \n                                Value : TEAM\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 PERMISSION\n                            \n                        \n                        \n                            \n                                Value : PERMISSION\n                            \n                        \n                        \n                            \n                                 INVITATION\n                            \n                        \n                        \n                            \n                                Value : INVITATION\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/state-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StateStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : loading\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToDate   (src/.../date.interceptor.ts)\n                        \n                        \n                            hasPermission   (src/.../auth.selectors.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            isIso8601   (src/.../date.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/interceptors/date.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToDate\n                        \n                    \n                \n            \n            \n                \nconvertToDate(body: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isIso8601\n                        \n                    \n                \n            \n            \n                \nisIso8601(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/state/auth/auth.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hasPermission\n                        \n                    \n                \n            \n            \n                \nhasPermission(user: User, permissionType: ResourceType, permissionValue: Permission)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                permissionType\n                                            \n                                                            ResourceType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                permissionValue\n                                            \n                                                            Permission\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\nLogHub - Remote Centralized Logging Solution (CMS)\nThis project is a Angular CMS application that provides an UI for LogHub (remote centralized logging solution). It allows you to collect and manage logs from distributed applications in a centralized location, enhancing troubleshooting and monitoring capabilities.\nThis project was generated with Angular CLI version 17.1.3.\nThis project utilizes next features of angular:\n\nAngular 17\nSSR (Server Side Rendering)\nStandalone Components\nRouter (For url routing)\nHTTP Client (For api calls)\nNGRX (For state management)\nPrimeNG (For UI Components)\n\nTechnologies Used\n\n\n\n\n\n\n\n\n\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nBuild Docker Image\nYou can deploy the application using Docker. First, build your own image:\nExample :docker build -t your-domain/your-image-name:your-version .Here is the full example:\nExample :docker build -t dradman/loghub-cms:1 .\nThen you can run your own image with command:\nExample :docker run -p 80:4000 your-full-image-name Here is the full example:\nExample :docker run -p 80:4000 dradman/loghub-cms:1 . Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nDeploying with Docker\nYou can deploy the application using Docker. First, pull the latest Docker image from the GitHub Container Registry:\nExample :docker pull ghcr.io/dradman/loghub-cms:latestThen, run the Docker container:\nExample :docker run -p 80:4000 ghcr.io/dradman/loghub-cms:latestImportant: Make sure that all environment variables are set correctly.\nDocker-Compose\nYou can also run application using docker compose. See an example here\nEnvironment Variables\nImportant: Due to angular & general limitation since application is served to local browser you can't use standard .env to update environment varaibles.\nIf you wish to change any of the variables you will have to build your own version of application where will change these files\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    57 Components\n                \n            \n        \n        \n            \n                \n                    \n                    23 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    47 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
