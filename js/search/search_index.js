var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.435,1,1.099]],["body/components/AppComponent.html",[0,0.776,1,2.043,2,1.704,3,0.367,4,0.29,5,1.665,6,1.665,7,1.665,8,0.29,9,3.997,10,1.665,11,2.548,12,2.548,13,2.471,14,1.923,15,1.51,16,2.045,17,5.312,18,2.045,19,5.776,20,2.317,21,5.776,22,1.474,23,4.703,24,3.195,25,1.156,26,4.703,27,1.229,28,0.024,29,0.905,30,0.328,31,1.156,32,2.83,33,0.84,34,0.841,35,2.012,36,1.887,37,1.887,38,0.367,39,0.841,40,3.532,41,4.703,42,4.703,43,4.703,44,1.665,45,2.045,46,2.045,47,1.665,48,2.308,49,1.665,50,1.665,51,1.474,52,1.665,53,1.474,54,1.665,55,1.474,56,1.665,57,1.474,58,1.387,59,2.045,60,1.474,61,1.665,62,1.474,63,1.665,64,1.474,65,1.665,66,1.474,67,1.665,68,1.474,69,1.665,70,1.474,71,1.306,72,1.474,73,1.665,74,1.474,75,1.665,76,1.665,77,1.665,78,0.019,79,0.019]],["title/interfaces/AppConfig.html",[80,0.435,81,1.995]],["body/interfaces/AppConfig.html",[3,0.157,4,0.124,8,0.124,13,0.861,15,1.538,28,0.024,29,0.459,30,0.467,33,0.426,34,0.36,38,0.248,39,1.178,78,0.01,79,0.01,80,0.841,81,3.747,82,0.631,83,1.362,84,2.183,85,3.282,86,2.068,87,2.658,88,4.915,89,1.577,90,2.658,91,0.673,92,3.032,93,4.13,94,4.13,95,3.953,96,4.071,97,4.19,98,4.33,99,1.96,100,4.803,101,4.242,102,3.016,103,3.555,104,3.06,105,3.77,106,2.782,107,3.983,108,2.883,109,3.452,110,3.781,111,3.177,112,2.948,113,2.233,114,3.488,115,2.426,116,3.824,117,0.157,118,1.142,119,3.987,120,3.016,121,3.016,122,3.413,123,3.486,124,3.016,125,3.016,126,1.906,127,3.781,128,2.948,129,2.147,130,3.331,131,2.76,132,3.649,133,4.062,134,2.382,135,2.382,136,2.068,137,2.147,138,2.422,139,2.147,140,3.552,141,2.147,142,2.382,143,2.753,144,2.989,145,2.382,146,2.382,147,3.016,148,2.147,149,2.989,150,1.96,151,2.306,152,2.147,153,2.147,154,1.43,155,1.192,156,2.658,157,3.066,158,3.028,159,4.047,160,3.64,161,2.382,162,0.78,163,4.071,164,1.716,165,3.77,166,2.382,167,2.994,168,1.511,169,4.047,170,4.047,171,4.047,172,4.194,173,3.867,174,3.867,175,3.282,176,4.047,177,1.511,178,1.511,179,1.362,180,1.362,181,3.486,182,1.362,183,3.867,184,4.194,185,2.948,186,2.925,187,1.511,188,1.96,189,3.345,190,2.948,191,1.511,192,2.758,193,3.269,194,2.426,195,2.382,196,2.147,197,0.881,198,1.511,199,1.511,200,2.382,201,1.06,202,2.382,203,2.996,204,1.96,205,1.511,206,0.986,207,1.244,208,1.511,209,1.145,210,0.986,211,1.96,212,1.362,213,2.382,214,2.658,215,1.362,216,1.164,217,4.194,218,1.614,219,3.016,220,2.347,221,2.147,222,3.016,223,2.382,224,3.016,225,2.183,226,2.037,227,1.671,228,2.713,229,2.147,230,1.804,231,2.658,232,4.194,233,1.511,234,1.244,235,0.712,236,0.712,237,0.67,238,0.712,239,0.758,240,0.758,241,1.804,242,1.804,243,2.382,244,2.382,245,1.96,246,2.535,247,2.382,248,2.147,249,1.511,250,1.511,251,2.382,252,1.511,253,2.948,254,2.948,255,2.382,256,2.382,257,2.948,258,1.511,259,2.948,260,1.145,261,1.511,262,2.948,263,1.346,264,2.382,265,2.382,266,1.511,267,1.511,268,1.314,269,1.511,270,2.147,271,2.382,272,2.382,273,2.948,274,2.382,275,2.658,276,2.948,277,2.382,278,1.511,279,1.244,280,1.511,281,1.511,282,2.382,283,1.511,284,1.244,285,1.511,286,1.511]],["title/interfaces/AppState.html",[80,0.435,287,1.501]],["body/interfaces/AppState.html",[3,0.419,4,0.33,8,0.33,28,0.024,30,0.374,33,0.839,38,0.516,78,0.021,79,0.021,80,0.665,82,1.679,91,0.714,117,0.419,287,2.672,288,4.024,289,4.429,290,3.859,291,5.359,292,4.228,293,5.359,294,2.211,295,4.024,296,4.024]],["title/components/AuthComponent.html",[0,0.435,51,1.099]],["body/components/AuthComponent.html",[0,0.787,1,1.521,2,1.737,3,0.379,4,0.299,5,1.718,6,1.718,7,1.718,8,0.299,10,1.718,11,2.556,12,2.556,14,1.96,15,1.539,16,2.084,17,5.386,18,2.084,20,2.362,28,0.024,29,0.853,33,0.791,34,0.868,35,2.077,38,0.379,39,0.868,44,1.718,45,2.084,46,2.084,47,1.718,48,2.333,49,1.718,50,1.718,51,2.065,52,1.718,53,1.521,54,1.718,55,1.521,56,1.718,57,1.521,58,1.432,59,2.084,60,1.521,61,1.718,62,1.521,63,1.718,64,1.521,65,1.718,66,1.521,67,1.718,68,1.521,69,1.718,70,1.521,71,1.348,72,1.521,73,1.718,74,1.521,75,1.718,76,1.718,77,1.718,78,0.019,79,0.019,297,4.124,298,4.421,299,5.888,300,5.888]],["title/injectables/AuthEffects.html",[162,0.862,290,2.167]],["body/injectables/AuthEffects.html",[3,0.263,4,0.207,8,0.207,22,1.456,25,1.62,27,0.881,28,0.024,29,0.488,30,0.235,31,0.829,33,0.835,34,0.603,38,0.263,39,0.603,78,0.015,79,0.015,91,0.531,117,0.263,149,2.277,154,1.915,155,1.596,162,1.143,164,1.193,216,1.39,268,1.915,290,2.872,301,1.541,302,2.864,303,3.537,304,3.882,305,3.262,306,2.622,307,3.544,308,4.21,309,3.262,310,3.544,311,3.371,312,3.047,313,3.938,314,4.785,315,3.371,316,6.982,317,6.953,318,4.648,319,6.669,320,3.146,321,2.622,322,5.734,323,1.909,324,5.734,325,3.146,326,4.648,327,4.648,328,4.648,329,4.648,330,5.772,331,5.734,332,3.106,333,3.371,334,4.648,335,6.015,336,5.734,337,5.734,338,5.734,339,3.371,340,4.648,341,4.648,342,4.314,343,3.601,344,4.648,345,3.371,346,4.648,347,4.648,348,3.371,349,4.648,350,4.648,351,4.648,352,3.371,353,4.648,354,4.648,355,3.371,356,4.648,357,4.648,358,3.601,359,4.648,360,3.371,361,4.648,362,5.32,363,4.648,364,4.648,365,3.371,366,3.371,367,2.864,368,3.371,369,3.371,370,3.371,371,2.282,372,2.282,373,2.282,374,2.282,375,2.282,376,2.282,377,2.282,378,2.864]],["title/injectables/AuthService.html",[162,0.862,312,1.718]],["body/injectables/AuthService.html",[3,0.32,4,0.252,8,0.252,13,1.752,22,1.283,25,1.667,27,1.749,28,0.024,29,0.969,30,0.467,31,1.645,33,0.92,34,0.732,38,0.32,39,0.732,40,3.075,58,1.208,71,1.137,78,0.017,79,0.017,117,0.32,118,1.144,162,1.301,164,1.45,206,2.007,218,1.283,228,3.736,263,1.749,268,1.974,294,1.45,301,1.873,303,3.337,305,3.011,309,3.011,312,2.594,321,2.936,323,1.953,379,3.48,380,1.47,381,3.584,382,4.064,383,3.971,384,4.095,385,4.656,386,4.095,387,3.975,388,5.293,389,3.832,390,4.095,391,4.498,392,5.293,393,4.095,394,3.584,395,4.095,396,4.095,397,5.293,398,4.095,399,5.293,400,3.832,401,4.095,402,5.269,403,5.293,404,4.198,405,4.095,406,4.095,407,4.095,408,3.584,409,2.772,410,4.095,411,3.48,412,4.404,413,2.772,414,4.095,415,4.095,416,4.095,417,6.42,418,6.42,419,6.576,420,5.293,421,4.095,422,5.293,423,4.095,424,4.095]],["title/interfaces/AuthState.html",[80,0.435,289,2.167]],["body/interfaces/AuthState.html",[3,0.261,4,0.205,8,0.205,28,0.024,30,0.464,33,0.833,38,0.413,58,1.561,71,1.47,78,0.015,79,0.015,80,0.414,82,1.046,89,1.182,91,0.528,108,2.798,117,0.261,138,1.873,144,2.262,167,3.301,197,1.971,218,1.658,235,1.182,236,1.182,239,1.257,240,1.257,289,3.271,292,2.26,294,1.634,303,2.626,304,2.26,305,1.899,306,1.526,307,2.063,308,2.26,309,1.899,310,2.853,323,2.064,332,3.231,343,2.26,358,2.26,372,2.26,373,2.26,374,2.26,375,2.26,376,2.26,377,2.26,378,2.837,383,3.583,389,3.529,411,2.837,412,2.506,425,2.506,426,5.588,427,5.401,428,5.094,429,5.401,430,5.401,431,5.318,432,3.967,433,5.094,434,2.426,435,4.852,436,3.923,437,1.636,438,3.338,439,3.338,440,3.338,441,3.338,442,2.506,443,2.506,444,3.974,445,2.837,446,5.256,447,2.506,448,2.837,449,5.094,450,2.837,451,2.837,452,3.466,453,3.704,454,2.837,455,5.094,456,4.501,457,2.837,458,5.401,459,3.923,460,2.837,461,2.837,462,2.837,463,2.837,464,2.837,465,2.837,466,2.837,467,2.837,468,2.837,469,2.837,470,2.837,471,2.837,472,2.837,473,2.837]],["title/interfaces/AuthenticateRequestDto.html",[80,0.435,389,2.167]],["body/interfaces/AuthenticateRequestDto.html",[3,0.426,4,0.336,8,0.336,28,0.023,30,0.44,38,0.426,78,0.021,79,0.021,80,0.678,82,1.71,91,0.722,117,0.426,118,1.177,321,3.131,323,2.28,389,3.901,474,4.638,475,3.373]],["title/components/ConfigComponent.html",[0,0.435,53,1.099]],["body/components/ConfigComponent.html",[0,0.661,1,0.61,2,0.911,3,0.152,4,0.12,5,1.36,6,0.689,7,0.689,8,0.236,10,0.689,11,2.227,12,2.227,14,1.029,15,0.808,16,1.094,18,1.094,20,1.239,22,1.371,25,1.62,27,1.523,28,0.024,29,0.844,30,0.434,31,1.357,32,3.113,33,0.798,34,0.348,36,0.781,37,0.781,38,0.152,39,1.016,44,0.689,45,1.797,46,1.797,47,0.689,48,1.548,49,0.689,50,0.689,51,0.61,52,0.689,53,1.591,54,0.689,55,0.61,56,0.689,57,0.61,58,0.574,59,1.094,60,0.61,61,0.689,62,0.61,63,0.689,64,0.61,65,0.689,66,0.61,67,0.689,68,0.61,69,0.689,70,0.61,71,0.541,72,0.61,73,0.689,74,0.61,75,0.689,76,0.689,77,0.689,78,0.01,79,0.01,84,2.143,89,1.36,91,0.353,92,2.143,93,2.601,94,3.602,95,4.247,96,2.374,97,2.601,98,4.157,101,3.437,103,2.908,104,2.955,106,2.719,109,1.909,111,1.758,114,2.964,116,2.488,117,0.152,118,1.126,120,2.961,121,3.229,122,2.488,126,2.172,127,2.092,131,2.661,136,1.628,138,2.202,143,3.514,144,2.337,148,2.092,149,2.488,150,3.6,151,2.172,152,2.092,153,2.961,154,1.498,155,1.487,156,2.961,157,2.488,186,2.996,193,1.758,194,2.374,197,1.214,201,2.674,216,0.509,218,1.971,220,2.024,225,2.913,230,3.382,235,0.689,236,0.689,237,0.648,238,0.689,242,1.758,260,1.758,263,1.554,268,1.407,294,1.689,314,2.885,380,1.533,476,1.654,477,3.812,478,3.6,479,5.077,480,5.077,481,1.757,482,2.185,483,2.885,484,3.842,485,3.842,486,2.024,487,3.842,488,2.185,489,3.09,490,3.09,491,2.674,492,4.073,493,4.77,494,4.374,495,3.09,496,5.077,497,5.077,498,4.374,499,3.09,500,2.32,501,5.686,502,1.758,503,1.318,504,4.61,505,3.09,506,2.626,507,2.32,508,3.137,509,3.717,510,2.961,511,3.717,512,4.374,513,4.374,514,4.374,515,2.961,516,4.374,517,3.284,518,3.284,519,3.717,520,4.374,521,4.374,522,4.314,523,2.703,524,3.717,525,4.374,526,4.374,527,2.885,528,2.885,529,1.947,530,2.626,531,2.626,532,2.626,533,3.09,534,2.626,535,2.626,536,2.626,537,3.09,538,2.32,539,2.626,540,2.32,541,1.947,542,5.077,543,2.626,544,1.754,545,3.09,546,1.947,547,2.626,548,3.09,549,4.832,550,4.77,551,3.437,552,4.374,553,1.947,554,3.09,555,3.717,556,1.947,557,3.09,558,2.32,559,1.947,560,3.09,561,3.09,562,3.09,563,5.321,564,1.947,565,3.09,566,4.77,567,3.09,568,2.626,569,2.626,570,4.374,571,2.32,572,5.321,573,3.265,574,3.842,575,2.601,576,3.265,577,2.092,578,4.054,579,3.09,580,3.09,581,1.947,582,1.947,583,4.374,584,3.284,585,3.717,586,3.717,587,2.32,588,3.09,589,2.626,590,3.09,591,1.947,592,1.947,593,1.947,594,1.947,595,5.826,596,1.947,597,1.947,598,1.947,599,1.947,600,1.947,601,1.947,602,1.947,603,1.947,604,1.947,605,1.947,606,1.947,607,1.947,608,1.947,609,1.947,610,1.947,611,1.947,612,0.733,613,1.203,614,1.108,615,1.947,616,1.462,617,1.947,618,1.947,619,1.203,620,1.654,621,1.026,622,3.137,623,1.654,624,3.09,625,1.947,626,3.09,627,1.947,628,2.626,629,1.947,630,2.626,631,1.947,632,2.626,633,1.947,634,1.947,635,3.842,636,3.09,637,1.947,638,1.947,639,1.947,640,2.626,641,1.947,642,1.947,643,1.947,644,1.947,645,1.947,646,3.842,647,1.947,648,1.947,649,1.947,650,3.09,651,1.947,652,1.947,653,1.947,654,1.947,655,1.947,656,3.842,657,3.09,658,1.947,659,1.947,660,3.09,661,3.09,662,3.09,663,3.09,664,3.09,665,3.09,666,3.09,667,3.09,668,2.32,669,3.717,670,5.521,671,3.09,672,3.09,673,3.09,674,4.374,675,3.09,676,3.09]],["title/components/FooterComponent.html",[0,0.435,55,1.099]],["body/components/FooterComponent.html",[0,0.789,1,1.53,2,1.743,3,0.381,4,0.3,5,1.728,6,1.728,7,1.728,8,0.3,10,1.728,11,2.558,12,2.558,14,1.967,15,1.544,16,1.728,18,2.092,20,2.37,28,0.024,29,0.856,33,0.656,34,0.873,38,0.381,39,0.873,44,1.728,45,2.092,46,2.092,47,1.728,48,2.337,49,1.728,50,1.728,51,1.53,52,1.728,53,1.53,54,1.728,55,2.069,56,1.728,57,1.53,58,1.44,59,2.092,60,1.53,61,1.728,62,1.53,63,1.728,64,1.53,65,1.728,66,1.53,67,1.728,68,1.53,69,1.728,70,1.53,71,1.356,72,1.53,73,1.728,74,1.53,75,1.728,76,1.728,77,1.728,78,0.019,79,0.019,677,4.149,678,5.909,679,5.909,680,5.909,681,5.909]],["title/components/ForgotPasswordComponent.html",[0,0.435,57,1.099]],["body/components/ForgotPasswordComponent.html",[0,0.592,1,0.866,2,1.19,3,0.216,4,0.17,5,0.978,6,0.978,7,0.978,8,0.17,10,0.978,11,2.378,12,2.378,14,1.344,15,1.055,16,1.428,18,1.428,20,1.619,22,1.264,24,2.947,25,1.64,27,1.055,28,0.024,29,0.759,30,0.43,31,1.592,32,3.209,33,0.902,34,0.494,35,1.182,36,1.108,37,1.108,38,0.216,39,0.494,44,0.978,45,1.428,46,1.428,47,0.978,48,1.856,49,0.978,50,0.978,51,0.866,52,0.978,53,0.866,54,0.978,55,0.866,56,0.978,57,1.643,58,1.774,59,1.428,60,0.866,61,0.978,62,0.866,63,0.978,64,0.866,65,0.978,66,0.866,67,0.978,68,0.866,69,0.978,70,0.866,71,0.767,72,0.866,73,0.978,74,0.866,75,0.978,76,0.978,77,0.978,78,0.013,79,0.013,89,0.978,91,0.461,117,0.216,118,0.796,126,1.182,138,1.428,154,1.406,155,1.172,164,0.978,197,0.767,216,1.808,226,1.263,235,1.428,236,1.428,237,1.344,238,0.978,239,1.04,240,1.04,263,1.457,287,1.182,305,3.313,306,1.263,312,2.947,320,1.87,321,2.398,323,1.344,325,1.87,332,2.398,342,1.87,380,1.12,381,3.775,394,1.87,434,2.156,437,1.353,453,1.707,481,2.18,482,2.712,486,2.511,488,2.712,544,1.718,612,1.04,614,1.571,621,1.455,682,5.708,683,5.708,684,2.074,685,1.619,686,3.58,687,2.511,688,2.712,689,2.494,690,4.257,691,3.227,692,3.58,693,2.946,694,3.227,695,3.429,696,3.429,697,3.227,698,4.767,699,3.227,700,4.051,701,3.58,702,3.58,703,3.227,704,3.03,705,3.937,706,2.982,707,2.762,708,1.87,709,3.943,710,2.75,711,2.75,712,4.035,713,3.03,714,2.762,715,2.762,716,2.762,717,2.762,718,2.762,719,3.577,720,2.347,721,2.732,722,2.732,723,3.03,724,2.762,725,2.732,726,2.762,727,2.347,728,2.347,729,2.762,730,2.946,731,1.707,732,3.03,733,2.347,734,1.707,735,1.87,736,1.571,737,1.455,738,1.571,739,3.227,740,1.353,741,2.074,742,1.571,743,2.074,744,3.03,745,2.074,746,1.571,747,1.87,748,2.074,749,2.074,750,2.074,751,2.074,752,1.455,753,1.87,754,2.074,755,2.074,756,2.074,757,2.074,758,1.707,759,1.87,760,2.946,761,1.87,762,1.87,763,1.87,764,1.87,765,2.762,766,1.707,767,2.347,768,2.762,769,3.227,770,3.227,771,3.227,772,3.599,773,6.761,774,3.429,775,2.946,776,2.762,777,2.762,778,2.347,779,2.347,780,2.347,781,2.347,782,2.762,783,1.87,784,1.87,785,2.347,786,3.03,787,2.074,788,2.762,789,2.762,790,2.074,791,2.762,792,2.074,793,2.732,794,3.03,795,3.429,796,4.035,797,3.429,798,3.429,799,4.035,800,4.035,801,3.429]],["title/interfaces/ForgotPasswordRequestDto.html",[80,0.435,802,2.633]],["body/interfaces/ForgotPasswordRequestDto.html",[3,0.431,4,0.34,8,0.34,28,0.023,30,0.385,38,0.431,78,0.021,79,0.021,80,0.685,82,1.729,91,0.726,117,0.431,118,1.117,323,1.837,475,3.409,802,4.769,803,4.688,804,4.246]],["title/components/HomeComponent.html",[0,0.435,60,1.099]],["body/components/HomeComponent.html",[0,0.525,1,0.709,2,1.025,3,0.177,4,0.139,5,0.801,6,0.801,7,0.801,8,0.139,10,0.801,11,2.296,12,2.296,14,1.157,15,0.908,16,1.23,18,1.23,20,1.394,22,1.089,24,2.758,25,1.65,27,0.908,28,0.024,29,0.687,30,0.438,31,1.167,33,0.878,34,0.405,35,0.969,36,0.908,37,0.908,38,0.177,39,0.915,44,0.801,45,1.23,46,1.914,47,0.801,48,1.68,49,0.801,50,0.801,51,0.709,52,0.801,53,1.488,54,0.801,55,1.488,56,0.801,57,0.709,58,0.668,59,1.23,60,1.488,61,0.801,62,0.709,63,0.801,64,0.709,65,0.801,66,0.709,67,0.801,68,0.709,69,0.801,70,0.709,71,0.629,72,1.694,73,0.801,74,1.694,75,0.801,76,0.801,77,0.801,78,0.011,79,0.011,84,1.109,89,1.68,91,0.397,95,2.148,96,1.399,99,2.934,103,3.138,106,2.602,108,2.326,113,2.407,114,2.649,116,3.075,117,0.177,118,0.903,123,2.353,124,2.353,126,0.969,129,2.353,131,2.031,132,3.214,133,2.865,149,2.326,154,1.025,155,0.855,158,2.229,164,0.801,182,1.533,186,2.781,188,2.148,192,1.977,193,1.977,196,1.533,216,1.679,218,0.709,225,2.326,226,1.035,235,1.23,236,1.23,237,1.409,238,1.23,239,1.309,240,1.309,263,1.518,268,1.4,287,0.969,294,1.993,306,1.035,332,1.59,380,0.965,434,1.581,437,1.109,478,2.148,481,1.935,491,2.848,502,1.977,504,4.227,508,2.148,523,2.615,544,1.714,547,2.954,568,4.034,577,4.428,587,3.564,612,0.853,613,1.399,619,1.399,622,2.615,623,1.924,628,3.596,630,1.924,632,1.924,640,2.954,685,1.394,687,2.229,688,2.407,706,2.7,707,2.501,710,2.472,711,2.574,719,2.913,731,2.148,734,1.399,736,1.288,737,1.193,740,1.109,742,1.288,746,1.288,752,2.229,753,2.865,758,1.399,760,1.399,766,1.399,772,1.399,805,1.924,806,4.594,807,4.231,808,3.476,809,3.476,810,4.231,811,4.231,812,4.231,813,4.231,814,4.231,815,4.231,816,4.231,817,5.121,818,4.747,819,4.231,820,4.747,821,4.747,822,4.747,823,4.231,824,2.264,825,5.121,826,5.512,827,5.957,828,3.476,829,2.264,830,3.476,831,4.594,832,3.476,833,4.747,834,2.264,835,6.356,836,4.491,837,2.264,838,3.476,839,4.783,840,6.186,841,5.121,842,4.033,843,3.596,844,3.596,845,2.61,846,2.61,847,2.61,848,3.476,849,3.564,850,2.264,851,4.747,852,3.476,853,2.954,854,2.264,855,2.954,856,4.034,857,3.476,858,2.264,859,2.264,860,2.264,861,4.747,862,5.121,863,3.476,864,3.476,865,2.264,866,3.476,867,2.954,868,2.264,869,2.264,870,2.264,871,2.264,872,2.264,873,2.264,874,2.264,875,2.264,876,2.264,877,2.264,878,2.264,879,2.954,880,2.264,881,1.924,882,1.7,883,2.264,884,2.264,885,2.264,886,2.264,887,3.476,888,2.264,889,5.629,890,3.476,891,3.476,892,4.747,893,2.264,894,2.264,895,2.264,896,2.264,897,3.476,898,5.121,899,2.264,900,2.264,901,2.264,902,2.264,903,3.476,904,4.231,905,2.264,906,1.924,907,1.924,908,1.7,909,1.924,910,2.264,911,2.264,912,2.264,913,2.264,914,1.7,915,2.264,916,1.7,917,2.954,918,1.7,919,2.264,920,2.264,921,2.264,922,3.476,923,2.264,924,2.264,925,1.831,926,1.924,927,4.231,928,2.264,929,2.264,930,2.264,931,3.476,932,2.264,933,2.264,934,4.747,935,1.924,936,2.264,937,3.476,938,2.264,939,2.264,940,2.264,941,3.476,942,2.264,943,2.264,944,2.264,945,3.476,946,2.264,947,3.476,948,2.264,949,2.264,950,2.264,951,2.954,952,2.264,953,2.264,954,2.264,955,2.954,956,1.924]],["title/components/InvitationComponent.html",[0,0.435,62,1.099]],["body/components/InvitationComponent.html",[0,0.789,1,1.528,2,1.742,3,0.381,4,0.3,5,1.726,6,1.726,7,1.726,8,0.3,10,1.726,11,2.558,12,2.558,14,1.966,15,1.543,16,1.726,18,2.09,20,2.368,28,0.024,29,0.855,33,0.655,34,0.872,38,0.381,39,0.872,44,1.726,45,2.09,46,2.09,47,1.726,48,2.337,49,1.726,50,1.726,51,1.528,52,1.726,53,1.528,54,1.726,55,1.528,56,1.726,57,1.528,58,1.438,59,2.09,60,1.528,61,1.726,62,2.068,63,1.726,64,1.528,65,1.726,66,1.528,67,1.726,68,1.528,69,1.726,70,1.528,71,1.354,72,1.528,73,1.726,74,1.528,75,1.726,76,1.726,77,1.726,78,0.019,79,0.019,957,4.144,958,5.609,959,5.905,960,5.905,961,5.018]],["title/injectables/JwtService.html",[162,0.862,313,2.167]],["body/injectables/JwtService.html",[3,0.359,4,0.283,8,0.283,13,1.965,22,1.439,25,1.665,27,1.617,28,0.024,29,0.896,30,0.431,31,1.521,33,0.764,34,0.821,38,0.359,39,0.821,40,3.449,78,0.019,79,0.019,117,0.359,118,1.176,162,1.4,206,2.251,209,2.613,210,2.789,263,1.737,268,1.679,294,2.015,298,4.274,301,2.1,313,3.518,371,3.11,380,1.581,382,2.839,432,3.781,434,2.153,491,3.783,544,1.998,962,5.155,963,2.613,964,3.996,965,6.466,966,6.466,967,5.692,968,5.692,969,4.593,970,4.377,971,4.593,972,4.593,973,4.593,974,3.449,975,5.692,976,3.449,977,5.692,978,4.593,979,3.449,980,3.449,981,5.692,982,5.692,983,4.593,984,4.593,985,4.593,986,4.593]],["title/injectables/LayoutService.html",[106,1.501,162,0.862]],["body/injectables/LayoutService.html",[3,0.142,4,0.112,8,0.112,13,0.775,15,1.576,25,1.483,28,0.024,29,0.608,30,0.454,33,0.392,34,0.324,38,0.228,39,1.157,78,0.01,79,0.01,80,0.798,81,3.56,83,1.226,84,1.794,85,2.479,86,1.537,87,1.975,88,4.592,89,1.486,90,1.975,91,0.652,92,2.533,93,3.641,94,3.641,95,3.522,96,3.667,97,3.943,98,3.858,99,1.119,100,4.279,101,4.278,102,3.115,103,3.358,104,2.915,105,3.324,106,2.704,107,3.115,108,2.533,109,2.594,110,2.842,111,2.388,112,2.19,113,1.659,114,3.454,115,1.803,116,3.655,117,0.142,118,1.034,119,3.727,120,1.975,121,1.975,122,3.242,123,3.329,124,1.975,125,1.975,126,1.248,127,2.842,128,2.749,129,1.226,130,3.522,131,2.749,132,3.5,133,4.191,134,1.36,135,1.36,136,1.929,137,1.226,138,2.425,139,1.226,140,3.431,141,1.226,142,1.36,143,1.803,144,2.854,145,1.36,146,1.36,147,1.975,148,1.226,149,3.227,150,1.119,151,1.567,152,1.226,153,1.226,154,1.779,155,1.483,156,2.479,157,3.376,158,3.221,159,3.455,160,3.152,161,1.36,162,0.717,163,4.281,164,1.965,165,3.867,166,2.749,167,3.066,168,1.36,169,4.169,170,4.169,171,4.169,172,4.374,173,4.038,174,4.038,175,3.329,176,4.279,177,1.36,178,1.36,179,1.226,180,1.226,181,3.329,182,1.226,183,4.592,184,4.745,185,3.692,186,3.066,187,1.36,188,1.803,189,3.152,190,3.692,191,1.36,192,2.797,193,3.376,194,2.594,195,3.455,196,2.842,197,1.017,198,1.36,199,1.36,200,3.152,201,1.537,202,3.152,203,3.522,204,2.594,205,2.19,206,0.888,207,1.119,208,1.36,209,1.031,210,0.888,211,2.594,212,1.975,213,3.152,214,3.329,215,1.975,216,1.489,217,4.786,218,1.86,219,3.641,220,2.833,221,2.842,222,3.641,223,3.152,224,3.641,225,2.635,226,2.459,227,2.211,228,3.126,229,2.842,230,2.388,231,3.329,232,4.786,233,2.19,234,1.803,235,0.641,236,0.641,237,0.603,238,0.641,239,0.682,240,0.682,241,2.388,242,2.388,243,3.152,244,3.152,245,2.594,246,3.059,247,3.152,248,2.842,249,2.19,250,2.19,251,3.152,252,1.36,253,2.749,254,2.749,255,2.19,256,2.19,257,2.749,258,2.19,259,2.749,260,1.659,261,1.36,262,3.692,263,1.651,264,3.692,265,3.152,266,2.749,267,2.749,268,1.45,269,1.36,270,2.842,271,3.152,272,3.455,273,3.692,274,3.455,275,3.641,276,4.038,277,3.692,278,2.749,279,2.263,280,2.749,281,1.36,282,3.692,283,2.19,284,1.803,285,3.152,286,1.36,301,0.828,380,0.81,544,1.238,987,1.811,988,1.811,989,1.811,990,1.811,991,1.811,992,1.811,993,1.811,994,1.811,995,1.811,996,1.811,997,1.811,998,1.811,999,1.811]],["title/interfaces/LayoutState.html",[80,0.435,165,2.167]],["body/interfaces/LayoutState.html",[3,0.159,4,0.125,8,0.125,13,0.869,15,1.621,28,0.024,29,0.463,30,0.454,33,0.429,34,0.363,38,0.25,39,1.135,78,0.01,79,0.01,80,0.839,81,3.479,82,0.637,83,1.375,84,2.194,85,3.032,86,2.081,87,2.674,88,4.923,89,1.398,90,2.674,91,0.675,92,2.746,93,3.5,94,3.5,95,3.463,96,3.646,97,3.662,98,3.793,99,1.255,100,4.43,101,4.199,102,2.674,103,3.404,104,3.064,105,3.463,106,2.654,107,3.297,108,2.65,109,2.768,110,3.032,111,2.548,112,2.966,113,2.247,114,3.504,115,2.441,116,3.844,117,0.159,118,1.036,119,4.024,120,2.163,121,2.163,122,3.077,123,3.032,124,2.163,125,2.163,126,1.367,127,3.032,128,2.399,129,1.375,130,3.009,131,2.88,132,3.994,133,4.251,134,1.525,135,1.525,136,1.683,137,1.375,138,2.516,139,1.375,140,3.88,141,1.375,142,1.525,143,1.975,144,3.039,145,1.525,146,1.525,147,2.163,148,1.375,149,2.947,150,1.255,151,1.69,152,1.375,153,1.375,154,1.321,155,1.101,156,2.163,157,2.941,158,3.037,159,3.363,160,2.966,161,1.525,162,0.786,163,4.077,164,1.724,165,4.077,166,2.966,167,3.149,168,2.399,169,4.715,170,4.715,171,4.715,172,4.766,173,4.592,174,4.592,175,3.902,176,4.517,177,2.399,178,2.399,179,2.163,180,2.163,181,4.14,182,2.163,183,4.062,184,4.43,185,3.656,186,3.034,187,2.399,188,2.768,189,4.207,190,3.656,191,2.399,192,3.279,193,3.611,194,3.009,195,2.966,196,2.674,197,1.097,198,2.399,199,2.399,200,2.399,201,1.07,202,2.399,203,3.009,204,1.975,205,1.525,206,0.995,207,1.255,208,1.525,209,1.156,210,0.995,211,1.975,212,1.375,213,2.399,214,2.674,215,1.375,216,1.17,217,4.207,218,1.62,219,3.032,220,2.359,221,2.163,222,3.032,223,2.399,224,3.032,225,2.194,226,2.048,227,1.683,228,2.724,229,2.163,230,1.818,231,2.674,232,4.207,233,1.525,234,1.255,235,0.719,236,0.719,237,0.676,238,0.719,239,0.765,240,0.765,241,1.818,242,1.818,243,2.399,244,2.399,245,1.975,246,2.548,247,2.399,248,2.163,249,1.525,250,1.525,251,2.399,252,1.525,253,2.966,254,2.966,255,2.399,256,2.399,257,2.966,258,1.525,259,2.966,260,1.156,261,1.525,262,2.966,263,1.351,264,2.399,265,2.399,266,1.525,267,1.525,268,1.321,269,1.525,270,2.163,271,2.399,272,2.399,273,2.966,274,2.399,275,2.674,276,2.966,277,2.399,278,1.525,279,1.255,280,1.525,281,1.525,282,2.399,283,1.525,284,1.255,285,1.525,286,1.525]],["title/injectables/LocalStorage.html",[162,0.862,970,2.374]],["body/injectables/LocalStorage.html",[3,0.342,4,0.269,8,0.269,13,1.871,22,1.896,25,1.69,27,1.66,28,0.024,29,0.92,30,0.457,31,1.562,33,0.812,34,0.782,38,0.342,39,0.782,78,0.018,79,0.018,91,0.631,117,0.431,118,1.196,151,2.719,155,1.562,162,1.357,206,2.143,210,3.278,216,1.581,218,1.371,263,1.712,268,1.784,294,1.548,301,2,371,2.961,380,1.533,434,2.116,502,3.14,544,1.973,612,1.647,613,2.703,685,1.754,963,2.488,964,3.926,970,3.737,974,3.284,976,3.284,1000,5.893,1001,5.141,1002,4.145,1003,3.727,1004,4.145,1005,4.145,1006,4.542,1007,4.691,1008,4.145,1009,4.145,1010,3.717,1011,4.145,1012,3.717,1013,4.145,1014,3.717,1015,3.284,1016,3.284,1017,3.717,1018,3.412,1019,2.961,1020,3.717,1021,3.717,1022,3.717,1023,3.717,1024,3.717,1025,4.691,1026,4.374,1027,3.717,1028,3.717,1029,3.717,1030,3.717,1031,3.717,1032,3.717]],["title/components/LoginComponent.html",[0,0.435,64,1.099]],["body/components/LoginComponent.html",[0,0.597,1,0.879,2,1.204,3,0.219,4,0.173,5,0.993,6,0.993,7,0.993,8,0.173,10,0.993,11,2.384,12,2.384,14,1.359,15,1.067,16,1.445,18,1.445,20,1.637,22,1.279,24,2.961,25,1.656,27,1.067,28,0.024,29,0.765,30,0.421,31,1.522,32,3.384,33,0.92,34,0.502,35,1.2,36,1.125,37,1.125,38,0.219,39,0.502,44,0.993,45,1.445,46,1.445,47,0.993,48,1.87,49,0.993,50,0.993,51,0.879,52,0.993,53,0.879,54,0.993,55,0.879,56,0.993,57,0.879,58,0.828,59,1.445,60,0.879,61,0.993,62,0.879,63,0.993,64,1.655,65,0.993,66,0.879,67,0.993,68,0.879,69,0.993,70,0.879,71,0.779,72,0.879,73,0.993,74,0.879,75,0.993,76,0.993,77,0.993,78,0.013,79,0.013,89,0.993,91,0.467,117,0.219,118,0.803,126,1.2,138,1.445,154,1.419,155,1.183,164,0.993,197,0.779,216,1.79,226,1.283,235,0.993,236,0.993,237,1.359,238,0.993,239,1.057,240,1.057,263,1.579,268,1.204,287,1.2,303,2.322,306,1.283,312,2.961,320,1.899,321,2.415,323,1.602,325,1.899,332,2.2,342,1.899,380,1.133,381,3.799,394,1.899,434,2.102,437,1.375,481,2.2,482,2.736,486,2.534,488,2.736,544,1.727,612,1.057,614,1.596,621,1.478,685,1.637,686,3.612,687,2.534,688,2.736,689,2.522,690,4.274,691,3.256,692,3.612,693,2.972,694,3.256,697,3.256,699,3.256,701,3.612,702,3.612,703,3.256,704,3.064,705,3.966,706,3.004,707,2.782,708,1.899,709,3.964,710,2.764,711,2.764,713,3.064,719,3.438,721,2.763,722,3.575,723,3.064,725,2.763,730,2.972,731,1.734,732,3.064,734,1.734,735,1.899,736,1.596,737,1.478,738,1.596,740,1.375,742,1.596,743,2.107,744,3.064,745,2.107,746,1.596,747,1.899,748,2.107,749,2.107,750,2.107,751,2.107,752,1.478,753,1.899,754,2.107,755,2.107,756,2.107,757,2.107,758,1.734,759,1.899,760,2.522,761,1.899,762,1.899,763,1.899,764,1.899,766,1.734,769,1.899,770,1.899,771,1.899,772,2.522,775,1.734,783,1.899,784,1.899,786,3.064,790,2.107,792,2.107,793,2.763,794,3.064,797,3.468,798,3.468,1033,2.384,1034,4.976,1035,4.087,1036,3.612,1037,4.081,1038,4.081,1039,4.81,1040,5.856,1041,5.281,1042,4.081,1043,2.805,1044,2.805,1045,2.805,1046,2.805,1047,2.805,1048,2.805,1049,2.805,1050,2.805,1051,2.805,1052,2.805,1053,3.064,1054,2.805,1055,2.805,1056,2.805,1057,2.384,1058,2.107,1059,1.596,1060,2.107,1061,2.107,1062,2.805,1063,2.805,1064,2.805,1065,2.805,1066,2.805,1067,2.384,1068,2.107,1069,4.081,1070,4.081,1071,4.081,1072,4.081,1073,4.081,1074,4.081,1075,4.081,1076,4.081,1077,4.081]],["title/injectables/MemoryStorage.html",[162,0.862,1018,2.167]],["body/injectables/MemoryStorage.html",[3,0.351,4,0.277,8,0.277,25,1.68,27,1.677,28,0.024,29,0.929,30,0.47,31,1.578,33,0.604,34,0.804,38,0.351,39,0.804,78,0.018,79,0.018,91,0.642,117,0.479,118,1.197,151,2.746,154,1.327,155,1.507,162,1.381,207,2.78,210,3.002,216,1.601,263,1.726,268,1.807,294,1.592,301,2.057,380,1.56,434,2.2,502,3.196,544,1.893,685,1.804,925,2.369,963,2.559,964,3.966,1002,4.219,1003,3.888,1004,4.219,1005,4.219,1006,4.601,1008,4.219,1009,4.219,1011,3.377,1013,3.377,1015,3.377,1016,3.377,1018,3.472,1019,3.045,1078,5.872,1079,3.787,1080,4.498,1081,4.498,1082,4.498,1083,4.498,1084,3.377,1085,4.498,1086,4.498,1087,3.822,1088,4.498,1089,3.804,1090,4.498,1091,4.498,1092,4.498,1093,5.618,1094,4.498,1095,3.822,1096,4.498,1097,4.498]],["title/interfaces/MenuChangeEvent.html",[80,0.435,1098,2.374]],["body/interfaces/MenuChangeEvent.html",[3,0.425,4,0.335,8,0.335,28,0.023,30,0.439,31,1.548,38,0.425,78,0.021,79,0.021,80,0.675,82,1.704,91,0.72,117,0.425,118,1.11,138,2.353,1003,3.891,1098,4.263,1099,4.62,1100,3.093,1101,4.62,1102,5.812]],["title/injectables/MenuService.html",[162,0.862,492,2.167]],["body/injectables/MenuService.html",[2,1.925,3,0.269,4,0.212,8,0.212,13,1.474,15,1.512,25,1.539,27,0.9,28,0.024,29,0.499,30,0.375,31,0.847,33,0.722,34,0.616,38,0.269,39,1.146,71,1.893,78,0.015,79,0.015,84,2.311,86,2.834,91,0.539,92,2.636,104,2.646,108,2.636,117,0.269,131,2.792,138,2.048,154,1.707,155,1.605,162,1.16,163,4.4,164,1.219,167,2.984,186,3.188,201,2.485,203,2.915,204,2.915,206,1.688,214,3.917,216,1.75,218,2.136,219,4.418,220,3.048,222,3.917,226,2.984,228,3.591,234,3.325,241,3.292,242,3.448,246,3.292,263,1.233,301,1.575,380,1.31,477,3.542,478,2.915,492,4.213,544,1.391,575,3.642,622,2.128,752,3.616,847,4.04,849,3.542,1079,3.325,1098,4.578,1100,1.959,1103,2.927,1104,4.717,1105,4.717,1106,5.786,1107,6.007,1108,6.007,1109,5.691,1110,4.717,1111,3.444,1112,5.786,1113,4.04,1114,4.04,1115,5.151,1116,5.38,1117,4.572,1118,5.38,1119,3.444,1120,4.674,1121,3.444,1122,5.546,1123,4.9,1124,6.526,1125,4.717,1126,3.444,1127,3.444,1128,4.717,1129,3.444,1130,3.444,1131,3.444,1132,3.444,1133,3.444]],["title/components/MenuitemComponent.html",[0,0.435,66,1.099]],["body/components/MenuitemComponent.html",[0,0.606,1,0.496,2,0.77,3,0.124,4,0.097,5,0.56,6,0.56,7,0.56,8,0.097,10,0.56,11,2.148,12,2.121,13,2.442,14,0.87,15,1.012,16,0.924,18,0.924,22,1.658,25,1.524,27,0.682,28,0.024,29,0.561,30,0.458,31,0.642,32,2.261,33,0.732,34,0.283,35,0.677,36,0.634,37,0.634,38,0.124,39,1.185,44,0.56,45,0.924,46,1.728,47,0.56,48,1.371,49,0.56,50,0.56,51,0.496,52,0.56,53,0.496,54,0.56,55,0.496,56,0.56,57,0.496,58,0.467,59,0.924,60,0.496,61,0.56,62,0.496,63,0.56,64,0.496,65,0.56,66,1.942,67,0.56,68,0.496,69,0.56,70,0.496,71,1.19,72,0.496,73,0.56,74,0.496,75,0.56,76,0.56,77,0.56,78,0.009,79,0.009,84,1.634,86,1.376,87,3.455,89,1.181,91,0.299,92,2.392,103,2.04,104,3.149,106,2.528,107,1.768,108,2.67,111,0.9,113,2.203,114,3.354,116,1.486,117,0.5,118,0.987,119,3.154,125,2.258,126,2.858,131,3.011,136,3.007,137,1.768,138,1.728,140,1.614,144,2.5,149,2.738,151,1.974,154,1.44,155,1.403,158,2.688,164,0.56,167,3.02,175,3.124,180,1.768,181,1.768,186,2.906,188,4.179,203,2.851,211,1.614,215,1.768,216,0.682,218,0.818,220,3.007,225,3.113,226,0.723,227,1.757,228,2.431,229,1.768,230,3.009,231,1.768,234,1.614,235,0.924,236,0.924,237,0.87,238,0.924,239,0.596,240,0.596,241,1.486,242,1.897,246,1.486,260,1.486,263,1.12,268,1.505,279,1.614,284,2.393,294,0.56,380,0.725,434,0.87,446,3.464,478,2.061,481,1.525,483,2.504,486,1.757,491,2.431,492,3.897,500,1.961,502,1.486,503,1.071,507,1.961,508,2.061,515,3.305,517,2.907,522,2.219,523,3.75,527,2.504,528,2.504,530,2.219,534,5.157,535,2.219,536,2.834,538,2.907,544,1.142,551,3.124,558,1.188,571,2.504,573,2.834,575,2.258,578,2.219,612,0.596,616,1.188,619,0.978,620,1.344,622,2.648,685,1.048,687,1.757,688,1.897,693,2.061,706,3.1,707,2.688,710,1.771,711,2.884,719,3.704,752,3.392,787,1.961,826,4.631,836,3.689,842,1.768,846,4.092,856,3.642,879,2.219,881,1.344,906,1.344,907,1.344,908,1.188,916,1.961,918,1.961,925,1.376,926,3.29,956,3.921,1003,3.615,1019,2.621,1079,2.061,1100,2.625,1102,1.344,1107,3.29,1108,2.219,1109,2.834,1113,3.218,1114,3.218,1115,3.642,1120,4.196,1123,1.961,1134,1.344,1135,6.041,1136,2.611,1137,2.219,1138,3.335,1139,2.611,1140,4.881,1141,4.881,1142,4.285,1143,3.872,1144,5.29,1145,2.611,1146,2.611,1147,3.335,1148,3.335,1149,4.614,1150,4.881,1151,2.611,1152,2.611,1153,3.335,1154,3.872,1155,4.614,1156,2.834,1157,3.335,1158,3.921,1159,4.614,1160,3.29,1161,3.29,1162,2.834,1163,2.834,1164,1.582,1165,2.611,1166,5.814,1167,4.337,1168,3.872,1169,4.614,1170,3.29,1171,2.219,1172,1.582,1173,4.337,1174,5.29,1175,1.961,1176,1.582,1177,3.29,1178,3.872,1179,3.872,1180,3.872,1181,3.872,1182,2.611,1183,1.582,1184,3.335,1185,2.611,1186,2.611,1187,2.219,1188,2.611,1189,2.611,1190,1.582,1191,2.611,1192,3.29,1193,2.611,1194,3.335,1195,3.335,1196,3.335,1197,2.907,1198,2.834,1199,3.335,1200,2.834,1201,2.219,1202,2.219,1203,1.582,1204,2.611,1205,2.611,1206,2.611,1207,1.582,1208,1.582,1209,1.582,1210,2.611,1211,4.614,1212,2.219,1213,1.582,1214,1.582,1215,3.872,1216,3.29,1217,3.872,1218,1.582,1219,2.611,1220,1.582,1221,1.582,1222,1.582,1223,1.582,1224,1.582,1225,2.611,1226,1.344,1227,1.582,1228,1.582,1229,1.582,1230,1.582,1231,1.582,1232,3.335,1233,2.611,1234,1.582,1235,1.582,1236,1.582,1237,1.582,1238,2.611,1239,1.582,1240,1.582,1241,1.582,1242,4.881,1243,2.611,1244,4.285,1245,2.611,1246,2.611,1247,1.582,1248,2.611,1249,2.611,1250,2.611,1251,1.582,1252,1.582,1253,2.611,1254,1.582,1255,1.582,1256,1.344,1257,1.582,1258,3.335,1259,1.582,1260,1.582,1261,2.611,1262,1.344,1263,1.582,1264,1.582,1265,1.582,1266,2.611,1267,1.582,1268,1.582,1269,1.582,1270,2.611,1271,1.582,1272,1.582,1273,1.582,1274,4.614]],["title/components/RegisterComponent.html",[0,0.435,68,1.099]],["body/components/RegisterComponent.html",[0,0.579,1,0.833,2,1.157,3,0.208,4,0.164,5,0.941,6,0.941,7,0.941,8,0.164,10,0.941,11,2.363,12,2.363,14,1.306,15,1.025,16,1.388,18,1.388,20,1.573,22,1.229,24,2.911,25,1.614,27,1.025,28,0.024,29,0.745,30,0.414,31,1.499,32,3.457,33,0.921,34,0.475,35,1.137,36,1.066,37,1.066,38,0.208,39,0.475,44,0.941,45,1.388,46,1.388,47,0.941,48,1.822,49,0.941,50,0.941,51,0.833,52,0.941,53,0.833,54,0.941,55,0.833,56,0.941,57,0.833,58,0.784,59,1.388,60,0.833,61,0.941,62,0.833,63,0.941,64,0.833,65,0.941,66,0.833,67,0.941,68,1.613,69,0.941,70,0.833,71,0.738,72,0.833,73,0.941,74,0.833,75,0.941,76,0.941,77,0.941,78,0.013,79,0.013,89,0.941,91,0.448,117,0.208,118,0.778,126,1.137,138,1.388,154,1.375,155,1.146,164,0.941,197,0.738,216,1.776,226,1.215,235,0.941,236,0.941,237,1.306,238,0.941,239,1.001,240,1.001,263,1.434,287,1.137,294,0.941,306,1.215,307,1.642,312,2.911,320,1.799,321,2.353,323,1.552,325,1.799,332,2.131,342,1.799,380,1.089,381,4.022,383,3.889,394,1.799,400,2.423,402,2.258,412,1.995,434,2.073,437,1.302,481,2.131,482,2.651,486,2.455,488,2.651,544,1.694,612,1.001,614,1.511,621,1.4,685,1.573,686,3.5,687,2.455,688,2.651,689,2.423,690,4.215,691,3.155,692,3.5,693,2.88,694,3.155,697,3.155,699,3.155,701,3.5,702,3.5,703,3.155,704,2.945,705,3.864,706,2.927,707,2.711,708,1.799,709,3.889,710,2.717,711,2.717,713,2.945,719,3.38,721,2.655,722,4.287,723,2.945,725,2.655,730,2.88,731,1.642,732,2.945,734,1.642,735,1.799,736,1.511,737,1.4,738,1.511,740,1.302,742,1.511,743,1.995,744,2.945,745,1.995,746,1.511,747,1.799,748,1.995,749,1.995,750,1.995,751,1.995,752,1.4,753,1.799,754,1.995,755,1.995,756,1.995,757,1.995,758,1.642,759,1.799,760,2.423,761,1.799,762,1.799,763,1.799,764,1.799,766,1.642,769,1.799,770,1.799,771,1.799,772,2.423,775,1.642,783,1.799,784,1.799,786,2.945,792,1.995,793,2.655,794,2.945,804,2.88,1035,3.961,1036,3.5,1053,2.945,1057,2.258,1058,1.995,1059,1.511,1060,1.995,1068,1.995,1275,2.258,1276,3.921,1277,3.921,1278,4.661,1279,3.921,1280,2.657,1281,2.657,1282,2.657,1283,2.657,1284,2.657,1285,2.657,1286,2.657,1287,2.657,1288,3.333,1289,3.921,1290,3.155,1291,3.155,1292,2.657,1293,2.657,1294,2.657,1295,2.657,1296,1.995,1297,1.799,1298,2.258,1299,2.657,1300,2.657,1301,2.657,1302,2.657,1303,2.657,1304,2.657,1305,2.657,1306,2.657,1307,2.657,1308,2.657,1309,3.921,1310,3.921,1311,3.921,1312,3.921,1313,3.921,1314,3.921,1315,3.921,1316,3.921,1317,3.921,1318,3.921,1319,3.921,1320,3.921,1321,3.921,1322,3.921,1323,3.921]],["title/interfaces/RegisterRequestDto.html",[80,0.435,400,2.167]],["body/interfaces/RegisterRequestDto.html",[3,0.412,4,0.324,8,0.324,28,0.023,30,0.481,38,0.412,78,0.02,79,0.02,80,0.654,82,1.651,91,0.707,117,0.412,118,1.216,321,3.097,323,2.255,400,3.822,475,3.257,804,4.185,1290,4.584,1291,4.584,1324,4.478]],["title/components/ResetPasswordComponent.html",[0,0.435,70,1.099]],["body/components/ResetPasswordComponent.html",[0,0.632,1,0.974,2,1.296,3,0.243,4,0.191,5,1.1,6,1.1,7,1.1,8,0.191,10,1.1,11,2.422,12,2.422,14,1.463,15,1.148,16,1.555,18,1.555,20,1.762,22,1.376,24,3.053,25,1.613,27,0.812,28,0.024,29,0.738,30,0.407,31,1.532,32,3.282,33,0.919,34,0.556,35,1.33,36,1.247,37,1.247,38,0.243,39,0.556,44,1.1,45,1.555,46,1.555,47,1.1,48,1.959,49,1.1,50,1.1,51,0.974,52,1.1,53,0.974,54,1.1,55,0.974,56,1.1,57,0.974,58,0.917,59,1.555,60,0.974,61,1.1,62,0.974,63,1.1,64,0.974,65,1.1,66,0.974,67,1.1,68,0.974,69,1.1,70,1.735,71,1.73,72,0.974,73,1.1,74,0.974,75,1.1,76,1.1,77,1.1,78,0.014,79,0.014,91,0.502,117,0.243,118,0.733,126,1.879,154,1.296,155,1.08,164,1.1,197,0.863,216,1.788,263,1.331,287,1.33,294,1.1,306,1.422,309,3.448,323,1.843,332,2.009,380,1.22,434,1.696,437,1.523,453,1.921,481,2.329,482,2.898,486,2.683,488,2.898,500,3.298,544,1.503,612,1.171,614,1.768,621,1.638,684,2.334,685,1.762,687,2.683,688,2.898,689,2.714,690,4.381,691,3.448,693,3.148,694,3.448,695,3.733,696,3.733,697,3.448,699,3.448,700,4.329,703,3.448,706,3.149,707,2.916,708,2.104,709,4.103,710,2.849,711,2.849,719,3.544,720,2.642,721,2.974,722,2.974,725,2.974,727,2.642,728,2.642,733,2.642,735,2.104,736,1.768,737,1.638,738,1.768,739,3.448,740,1.523,742,1.768,746,1.768,747,2.104,758,1.921,759,2.104,760,3.148,761,2.104,762,2.104,763,2.104,764,2.104,766,1.921,769,2.974,770,2.974,771,2.974,772,3.148,774,2.642,775,2.714,778,2.642,779,2.642,780,2.642,781,2.642,783,2.104,784,2.104,785,2.642,790,2.334,795,3.733,801,3.733,914,2.334,1036,3.825,1053,3.298,1058,2.334,1288,3.733,1297,2.104,1298,2.642,1325,5.638,1326,5.638,1327,5.093,1328,5.093,1329,4.392,1330,3.108,1331,3.108,1332,3.108,1333,3.108,1334,2.334,1335,3.108,1336,3.108,1337,6.841,1338,3.108,1339,3.108,1340,4.392,1341,4.329,1342,3.108,1343,2.642,1344,4.392,1345,4.392,1346,4.392,1347,4.392]],["title/interfaces/ResetPasswordRequestDto.html",[80,0.435,404,2.374]],["body/interfaces/ResetPasswordRequestDto.html",[3,0.426,4,0.336,8,0.336,28,0.023,30,0.44,38,0.426,78,0.021,79,0.021,80,0.677,82,1.708,91,0.721,117,0.426,118,1.176,323,1.815,404,4.27,475,3.369,1341,5.817,1343,5.817,1348,4.632]],["title/injectables/SessionStorage.html",[162,0.862,1349,2.633]],["body/injectables/SessionStorage.html",[3,0.342,4,0.269,8,0.269,13,1.871,22,1.896,25,1.69,27,1.66,28,0.024,29,0.92,30,0.457,31,1.562,33,0.812,34,0.782,38,0.342,39,0.782,78,0.018,79,0.018,91,0.631,117,0.431,118,1.196,151,2.719,155,1.562,162,1.357,206,2.143,210,3.278,216,1.581,218,1.371,263,1.712,268,1.784,294,1.548,301,2,371,2.961,380,1.533,434,2.116,502,3.14,544,1.973,612,1.647,613,2.703,685,1.754,963,2.488,964,3.926,974,3.284,976,3.284,1001,5.141,1002,4.145,1003,3.727,1004,4.145,1005,4.145,1006,4.542,1007,4.691,1008,4.145,1009,4.145,1010,3.717,1011,4.145,1012,3.717,1013,4.145,1014,3.717,1015,3.284,1016,3.284,1017,3.717,1018,3.412,1019,2.961,1020,3.717,1021,3.717,1022,3.717,1023,3.717,1024,3.717,1025,4.691,1027,3.717,1028,3.717,1029,3.717,1030,3.717,1031,3.717,1032,3.717,1349,4.145,1350,5.893,1351,4.374]],["title/components/SidebarComponent.html",[0,0.435,72,1.099]],["body/components/SidebarComponent.html",[0,0.635,1,0.981,2,1.302,3,0.244,4,0.193,5,1.108,6,1.108,7,1.108,8,0.193,10,1.108,11,2.424,12,2.424,14,1.47,15,1.153,16,1.562,18,1.562,22,1.904,24,3.335,25,1.494,27,1.451,28,0.024,29,0.804,30,0.435,31,1.085,33,0.816,34,0.559,36,1.255,37,1.255,38,0.244,39,1.159,44,1.108,45,1.562,46,2.325,47,1.108,48,1.965,49,1.108,50,1.108,51,0.981,52,1.108,53,0.981,54,1.108,55,0.981,56,1.108,57,0.981,58,0.923,59,1.562,60,0.981,61,1.108,62,0.981,63,1.108,64,0.981,65,1.108,66,1.74,67,1.108,68,0.981,69,1.108,70,0.981,71,0.869,72,1.74,73,1.108,74,0.981,75,1.108,76,1.108,77,1.108,78,0.014,79,0.014,84,1.534,89,1.108,90,2.988,91,0.695,92,2.721,103,3.288,104,3.038,106,2.842,111,1.78,114,2.721,117,0.244,119,2.727,131,1.888,136,3.084,154,0.923,155,0.77,186,2.539,193,2.511,197,1.226,201,3.2,211,2.727,216,1.451,220,3.2,225,3.059,227,2.325,230,2.908,235,1.108,236,1.108,237,1.47,238,1.108,239,1.179,240,1.179,260,2.511,263,1.153,380,1.8,452,3.314,477,3.839,478,3.159,481,2.338,491,3.2,503,2.119,506,3.751,508,3.159,509,4.718,510,3.461,515,2.988,517,4.169,518,3.314,523,3.159,527,3.314,528,3.314,540,3.839,544,1.302,587,4.169,612,1.179,619,1.934,622,3.431,685,1.77,687,2.693,707,3.2,710,2.018,730,4.005,737,1.649,806,3.751,836,4.388,842,2.988,843,4.345,849,3.314,909,2.66,916,2.35,917,4.345,918,2.35,935,3.751,1079,2.727,1120,2.988,1122,3.751,1137,3.751,1158,3.751,1162,3.751,1212,3.751,1352,2.66,1353,5.112,1354,4.413,1355,6.481,1356,5.305,1357,4.413,1358,4.413,1359,5.552,1360,4.718,1361,6.374,1362,4.718,1363,4.718,1364,4.718,1365,5.112,1366,5.112,1367,5.112,1368,5.112,1369,4.345,1370,5.854,1371,5.112,1372,5.112,1373,5.112,1374,5.112,1375,3.13,1376,4.413,1377,4.718,1378,2.988,1379,4.413,1380,3.13,1381,3.13,1382,3.13,1383,3.751,1384,3.13,1385,4.413,1386,3.13,1387,3.13,1388,3.13,1389,3.13,1390,3.13,1391,3.13]],["title/interfaces/Token.html",[80,0.435,432,1.995]],["body/interfaces/Token.html",[3,0.421,4,0.332,8,0.332,28,0.023,30,0.437,38,0.421,78,0.021,79,0.021,80,0.67,82,1.69,91,0.717,117,0.421,118,1.174,382,4.216,432,3.566,925,3.302,1392,4.584,1393,5.123,1394,5.798,1395,5.798]],["title/interfaces/TokenDto.html",[80,0.435,409,2.374]],["body/interfaces/TokenDto.html",[3,0.421,4,0.332,8,0.332,28,0.023,30,0.437,38,0.421,78,0.021,79,0.021,80,0.67,82,1.69,91,0.717,117,0.421,118,1.174,382,4.216,409,4.244,925,3.302,1393,5.123,1394,5.798,1395,5.798,1396,4.584]],["title/components/TopbarComponent.html",[0,0.435,74,1.099]],["body/components/TopbarComponent.html",[0,0.669,1,1.081,2,1.393,3,0.269,4,0.212,5,1.221,6,1.221,7,1.221,8,0.212,10,1.221,11,2.457,12,2.457,14,1.572,15,1.234,16,1.672,18,1.672,20,1.894,22,1.48,24,3.142,25,1.688,27,1.234,28,0.024,29,0.838,30,0.462,31,1.161,32,2.314,33,0.936,34,0.617,35,1.476,36,1.384,37,1.384,38,0.269,39,0.617,44,1.221,45,1.672,46,1.672,47,1.221,48,2.05,49,1.221,50,1.221,51,1.081,52,1.221,53,1.081,54,1.221,55,1.081,56,1.221,57,1.081,58,1.018,59,1.672,60,1.081,61,1.221,62,1.081,63,1.221,64,1.081,65,1.221,66,1.081,67,1.221,68,1.081,69,1.221,70,1.081,71,0.958,72,1.081,73,1.221,74,1.815,75,1.906,76,1.221,77,1.221,78,0.016,79,0.016,89,1.906,91,0.54,106,2.834,117,0.269,131,2.304,154,1.588,155,1.491,192,3.063,197,1.495,216,1.407,235,1.906,236,1.906,237,1.793,238,1.906,239,2.028,240,2.028,263,1.513,268,1.018,287,1.476,310,2.132,380,1.311,437,1.69,481,2.462,482,3.063,483,4.043,486,2.837,488,3.063,491,2.837,503,2.335,510,2.335,523,3.328,544,1.588,612,1.299,614,1.963,616,2.59,619,2.132,621,1.817,710,2.932,711,2.932,730,3.962,731,3.328,734,2.132,736,1.963,737,1.817,740,1.69,742,1.963,746,1.963,836,3.645,842,3.197,867,4.013,914,2.59,1059,1.963,1060,2.59,1067,2.932,1369,4.576,1397,2.932,1398,5.384,1399,5.384,1400,4.722,1401,4.722,1402,5.384,1403,5.384,1404,5.384,1405,4.722,1406,6.262,1407,5.79,1408,6.262,1409,4.722,1410,4.722,1411,3.45,1412,3.45,1413,3.45,1414,3.45,1415,3.45,1416,4.722,1417,4.722,1418,4.722,1419,4.013,1420,3.45,1421,3.45,1422,4.722,1423,4.722,1424,3.45,1425,3.45,1426,4.722,1427,3.45,1428,3.45,1429,3.45,1430,3.45,1431,3.45,1432,3.45,1433,3.45,1434,3.45,1435,3.45,1436,4.722,1437,4.722]],["title/interfaces/User.html",[80,0.435,197,0.974]],["body/interfaces/User.html",[3,0.37,4,0.292,8,0.292,28,0.024,29,0.686,30,0.501,33,0.779,38,0.37,78,0.019,79,0.019,80,0.588,82,1.484,91,0.663,117,0.37,118,1.214,122,2.694,138,2.313,197,1.611,321,2.989,434,2.088,804,4.039,845,4.907,1084,4.356,1290,4.424,1291,4.424,1378,4.424,1438,4.025,1439,5.554,1440,5.554,1441,5.554,1442,5.554,1443,5.554,1444,5.278,1445,3.927,1446,4.736,1447,4.356,1448,4.736,1449,4.025,1450,4.025,1451,3.556,1452,4.025]],["title/interfaces/UserDto.html",[80,0.435,413,2.374]],["body/interfaces/UserDto.html",[3,0.37,4,0.292,8,0.292,28,0.024,29,0.686,30,0.501,33,0.779,38,0.37,78,0.019,79,0.019,80,0.588,82,1.484,91,0.663,117,0.37,118,1.214,122,2.694,138,2.313,321,2.989,413,3.927,434,2.088,804,4.039,845,4.907,1084,4.356,1290,4.424,1291,4.424,1378,4.424,1439,5.554,1440,5.554,1441,5.554,1442,5.554,1443,5.554,1444,5.278,1445,3.927,1447,4.356,1449,4.025,1450,4.025,1451,3.556,1452,4.025,1453,4.025,1454,4.736,1455,4.736]],["title/coverage.html",[1456,3.586]],["body/coverage.html",[0,0.847,1,1.035,8,0.203,9,2.807,28,0.024,30,0.23,51,1.035,53,1.035,55,1.035,57,1.035,60,1.035,62,1.035,64,1.035,66,1.035,68,1.035,70,1.035,72,1.035,74,1.035,78,0.015,79,0.015,80,0.847,81,2.607,83,3.563,106,1.413,157,1.879,162,1.588,165,2.041,186,1.51,197,0.917,218,1.035,246,4.147,287,1.413,288,3.952,289,2.041,290,2.041,292,2.236,295,2.48,296,2.48,297,2.807,302,2.807,303,2.607,304,2.236,305,1.879,306,1.51,307,2.041,308,2.236,309,1.879,310,2.041,312,1.619,313,2.041,323,1.526,343,2.236,358,2.236,372,2.236,373,2.236,374,2.236,375,2.236,376,2.236,377,2.236,379,2.807,389,2.041,400,2.041,404,2.236,408,2.236,409,2.236,413,2.236,425,3.952,432,1.879,442,2.48,443,2.48,444,2.48,474,2.807,475,3.513,476,2.807,492,2.041,668,2.48,677,2.807,682,2.807,683,2.807,684,3.441,738,1.879,739,2.236,740,1.619,741,2.48,802,2.48,803,2.807,805,2.807,882,2.48,925,3.876,957,2.807,962,3.952,963,3.515,970,2.236,979,2.48,980,2.48,1000,2.807,1018,2.041,1033,2.807,1059,2.994,1061,2.48,1078,2.807,1098,2.236,1099,2.807,1100,1.879,1101,2.807,1103,2.807,1134,2.807,1170,2.807,1275,2.807,1296,2.48,1297,2.236,1324,2.807,1325,2.807,1326,2.807,1334,2.48,1348,2.807,1349,2.48,1350,2.807,1352,2.807,1392,2.807,1396,2.807,1397,2.807,1438,2.807,1453,2.807,1456,2.48,1457,3.303,1458,3.303,1459,5.263,1460,3.895,1461,7.305,1462,2.807,1463,3.441,1464,2.48,1465,5.263,1466,3.303,1467,4.583,1468,4.583,1469,2.807,1470,2.807,1471,3.895,1472,2.807,1473,2.807,1474,3.895,1475,3.303,1476,5.971,1477,3.303,1478,5.263,1479,4.583,1480,4.583,1481,5.941,1482,3.303,1483,4.583,1484,5.575,1485,2.807,1486,4.472,1487,2.807,1488,2.807,1489,3.303,1490,3.303,1491,4.583,1492,3.303,1493,3.303,1494,3.303,1495,3.303,1496,3.303,1497,2.807,1498,3.303,1499,2.807,1500,2.807,1501,2.807,1502,2.807,1503,3.303,1504,3.303]],["title/dependencies.html",[1505,2.203,1506,3.582]],["body/dependencies.html",[28,0.024,34,0.914,35,2.187,36,2.437,37,2.051,78,0.02,79,0.02,164,1.81,367,4.345,437,2.977,612,1.925,621,2.693,1089,3.461,1226,4.345,1506,4.345,1507,5.112,1508,7.204,1509,5.112,1510,6.481,1511,4.561,1512,5.112,1513,5.112,1514,4.345,1515,5.112,1516,5.112,1517,5.112,1518,4.345,1519,5.112,1520,5.112,1521,5.112,1522,5.112,1523,5.112,1524,5.112,1525,4.345,1526,5.112,1527,5.112,1528,5.112,1529,5.112,1530,5.112,1531,4.345,1532,5.112,1533,5.112,1534,5.112,1535,5.112,1536,5.112,1537,5.112]],["title/miscellaneous/enumerations.html",[1538,1.669,1539,3.582]],["body/miscellaneous/enumerations.html",[28,0.023,78,0.02,79,0.02,117,0.414,155,1.668,197,1.473,332,2.839,435,5.275,447,4.661,453,3.836,551,3.59,958,4.507,1378,3.59,1445,4.455,1447,4.661,1538,3.017,1539,4.507,1540,5.303,1541,5.303,1542,6.207,1543,5.303,1544,6.207,1545,5.303,1546,5.303,1547,4.507,1548,5.303,1549,5.303,1550,5.303,1551,5.303,1552,5.303,1553,5.303,1554,5.303,1555,5.303,1556,5.303,1557,4.507,1558,4.507,1559,4.507,1560,5.303,1561,5.303,1562,5.303,1563,6.207]],["title/miscellaneous/functions.html",[105,2.605,1538,1.669]],["body/miscellaneous/functions.html",[27,1.459,28,0.022,29,0.809,30,0.389,31,1.373,78,0.021,79,0.021,105,3.451,117,0.436,385,4.802,387,4.193,1463,4.193,1464,4.802,1538,3.177,1564,4.745,1565,5.584]],["title/index.html",[117,0.229,1566,2.493,1567,2.493]],["body/index.html",[0,0.736,2,1.584,4,0.258,14,1.394,28,0.021,29,0.777,78,0.018,79,0.018,86,2.206,104,1.915,143,3.318,144,2.052,167,1.915,201,2.206,209,2.382,218,1.312,225,3.296,227,3.122,237,1.394,241,2.382,245,4.088,387,3.144,408,2.834,515,2.834,551,2.834,577,2.834,685,1.679,711,1.915,846,4.854,955,5.037,1059,3.372,1089,4.013,1100,3.372,1160,3.558,1173,4.563,1175,4.451,1197,4.032,1377,3.558,1505,3.144,1511,3.144,1514,3.558,1531,3.558,1558,3.558,1559,5.313,1568,4.563,1569,5.369,1570,5.927,1571,5.369,1572,5.369,1573,5.369,1574,3.558,1575,4.187,1576,3.558,1577,3.558,1578,4.187,1579,4.187,1580,4.187,1581,4.187,1582,5.369,1583,4.187,1584,4.187,1585,4.451,1586,4.187,1587,4.187,1588,4.187,1589,4.187,1590,4.187,1591,4.187,1592,4.187,1593,4.187,1594,4.187,1595,4.187,1596,3.144,1597,5.934,1598,6.615,1599,4.187,1600,4.187,1601,4.187,1602,4.187,1603,3.558,1604,4.187,1605,4.563,1606,4.187,1607,5.037,1608,4.187,1609,6.881,1610,4.187,1611,4.187,1612,4.187,1613,4.187,1614,7.084,1615,6.615,1616,5.369,1617,5.037,1618,5.847,1619,5.369,1620,4.187,1621,4.187,1622,5.927,1623,5.037,1624,5.369,1625,5.369,1626,5.927,1627,4.563,1628,5.369,1629,6.252,1630,4.187,1631,5.369,1632,4.187,1633,4.187,1634,4.187,1635,3.558,1636,3.558,1637,4.187,1638,4.187,1639,5.369,1640,4.187,1641,4.187,1642,5.369,1643,4.187,1644,5.369,1645,4.187,1646,4.187,1647,3.558,1648,3.558,1649,4.451,1650,4.187,1651,5.369,1652,3.558,1653,4.187,1654,4.187,1655,3.558,1656,3.558,1657,4.187,1658,4.187,1659,3.558,1660,4.187,1661,4.187,1662,3.558]],["title/license.html",[1566,2.493,1567,2.493,1663,2.493]],["body/license.html",[0,0.432,4,0.405,8,0.119,25,0.273,28,0.014,30,0.135,33,0.149,39,0.198,78,0.008,79,0.006,80,0.51,82,0.804,85,1.737,86,3.372,92,2.879,99,0.685,102,0.751,104,2.314,109,3.278,110,2.948,113,2.703,114,0.543,115,2.151,130,1.194,131,0.474,136,2.013,139,1.737,140,2.151,141,0.751,147,0.751,150,0.685,151,0.826,158,3.095,163,0.685,167,0.507,179,1.737,194,0.685,197,1.502,204,1.897,209,1.099,210,0.543,212,2.587,216,0.29,218,1.287,221,1.737,224,2.587,227,1.617,237,0.369,238,0.392,245,0.685,248,0.751,268,0.327,270,0.751,275,0.751,279,2.362,284,0.685,314,0.833,323,0.369,380,0.308,431,0.833,456,0.833,491,3.205,504,1.927,507,0.833,508,1.194,510,1.308,511,3.247,518,2.614,519,0.942,524,0.942,531,0.942,532,4.82,538,0.833,539,2.609,540,2.305,543,1.641,544,0.327,549,0.942,555,1.641,558,2.614,569,1.641,571,2.869,575,3.591,576,0.942,584,0.833,585,1.641,586,1.641,589,3.88,669,4.409,752,0.584,775,0.685,787,3.429,793,0.751,831,0.942,839,2.181,844,1.641,847,1.45,853,0.942,855,0.942,951,3.247,961,4.299,964,0.685,1003,0.631,1079,1.586,1087,0.942,1089,2.356,1095,0.942,1100,1.98,1113,1.45,1114,3.269,1117,1.641,1120,1.737,1123,3.269,1135,0.942,1156,3.7,1161,1.641,1163,4.409,1167,0.942,1171,1.641,1175,4.533,1177,2.609,1192,0.942,1197,0.833,1198,0.942,1200,1.641,1201,3.492,1202,3.7,1216,1.641,1256,0.942,1262,0.942,1356,0.942,1362,0.942,1363,0.942,1364,3.247,1383,0.942,1444,0.833,1445,3.217,1451,3.568,1456,1.45,1525,1.641,1547,0.942,1557,1.641,1574,0.942,1576,0.942,1577,0.942,1585,4.568,1596,0.833,1597,3.7,1603,2.609,1605,2.609,1607,0.942,1617,1.641,1618,4.508,1623,0.942,1627,2.181,1635,2.958,1636,2.609,1647,4.508,1648,2.181,1652,2.181,1655,5.087,1656,1.641,1659,2.181,1662,1.641,1663,6.02,1664,5.745,1665,3.481,1666,1.109,1667,1.109,1668,2.566,1669,6.279,1670,4.354,1671,5.812,1672,6.169,1673,3.821,1674,1.109,1675,1.109,1676,1.931,1677,3.481,1678,6.084,1679,3.481,1680,2.566,1681,5.305,1682,1.109,1683,2.566,1684,1.109,1685,1.109,1686,1.931,1687,3.821,1688,1.109,1689,3.821,1690,1.109,1691,1.109,1692,4.354,1693,1.931,1694,1.109,1695,1.109,1696,1.109,1697,5.305,1698,6.682,1699,2.566,1700,4.566,1701,7.056,1702,1.931,1703,4.109,1704,4.109,1705,3.821,1706,1.109,1707,1.109,1708,3.07,1709,4.354,1710,2.566,1711,1.109,1712,1.931,1713,1.109,1714,2.566,1715,5.745,1716,3.07,1717,1.109,1718,1.109,1719,1.931,1720,3.07,1721,1.931,1722,5.059,1723,1.931,1724,1.931,1725,3.07,1726,4.109,1727,3.481,1728,1.109,1729,4.354,1730,3.821,1731,6.343,1732,2.566,1733,4.109,1734,1.109,1735,1.109,1736,3.481,1737,4.354,1738,1.931,1739,4.914,1740,3.481,1741,1.931,1742,1.109,1743,1.109,1744,5.41,1745,1.931,1746,1.109,1747,1.109,1748,5.188,1749,1.931,1750,2.566,1751,1.109,1752,1.109,1753,1.931,1754,1.109,1755,1.109,1756,3.07,1757,1.109,1758,1.109,1759,1.109,1760,1.109,1761,1.109,1762,1.931,1763,1.109,1764,1.109,1765,1.109,1766,1.931,1767,1.109,1768,2.566,1769,1.931,1770,1.109,1771,1.109,1772,1.931,1773,1.931,1774,5.305,1775,1.109,1776,1.931,1777,1.931,1778,1.109,1779,1.109,1780,1.931,1781,2.566,1782,1.931,1783,2.566,1784,1.931,1785,1.109,1786,1.109,1787,3.821,1788,1.109,1789,1.109,1790,3.481,1791,1.109,1792,3.07,1793,1.109,1794,1.931,1795,2.566,1796,1.109,1797,1.109,1798,5.305,1799,3.07,1800,3.481,1801,3.821,1802,2.566,1803,1.109,1804,2.566,1805,1.931,1806,1.109,1807,1.109,1808,1.109,1809,2.566,1810,6.618,1811,1.109,1812,1.109,1813,1.931,1814,1.931,1815,1.109,1816,4.751,1817,1.109,1818,3.07,1819,2.566,1820,1.931,1821,6.563,1822,2.566,1823,4.566,1824,3.07,1825,1.931,1826,1.109,1827,1.931,1828,2.566,1829,4.566,1830,4.751,1831,3.07,1832,1.931,1833,1.931,1834,3.07,1835,1.109,1836,2.566,1837,6.128,1838,1.931,1839,1.109,1840,4.354,1841,1.109,1842,2.566,1843,4.354,1844,1.109,1845,5.41,1846,3.07,1847,1.931,1848,4.914,1849,3.821,1850,1.109,1851,1.109,1852,1.109,1853,4.354,1854,1.109,1855,1.931,1856,1.109,1857,1.931,1858,2.566,1859,2.566,1860,1.109,1861,1.109,1862,1.109,1863,4.914,1864,2.566,1865,1.109,1866,1.109,1867,1.109,1868,1.931,1869,4.751,1870,1.109,1871,1.109,1872,1.109,1873,2.566,1874,2.566,1875,2.566,1876,2.566,1877,1.109,1878,1.109,1879,3.481,1880,1.109,1881,1.931,1882,0.942,1883,2.566,1884,1.109,1885,2.566,1886,1.109,1887,1.109,1888,1.109,1889,1.931,1890,1.109,1891,5.986,1892,4.354,1893,1.109,1894,1.931,1895,1.109,1896,1.109,1897,1.931,1898,1.931,1899,1.109,1900,1.109,1901,1.109,1902,1.931,1903,2.566,1904,3.481,1905,1.109,1906,1.931,1907,1.109,1908,1.109,1909,1.109,1910,1.109,1911,4.109,1912,3.07,1913,1.109,1914,3.481,1915,1.109,1916,1.109,1917,1.109,1918,2.566,1919,0.942,1920,1.109,1921,1.109,1922,1.109,1923,2.566,1924,2.566,1925,1.109,1926,1.109,1927,1.931,1928,1.931,1929,1.931,1930,1.109,1931,1.931,1932,1.109,1933,1.109,1934,1.109,1935,1.109,1936,1.109,1937,2.566,1938,1.109,1939,1.109,1940,5.41,1941,2.566,1942,1.109,1943,1.109,1944,1.109,1945,3.481,1946,3.481,1947,1.109,1948,1.109,1949,2.566,1950,1.109,1951,1.109,1952,3.07,1953,1.109,1954,1.931,1955,1.109,1956,1.109,1957,1.109,1958,1.109,1959,1.109,1960,1.109,1961,1.931,1962,1.931,1963,1.109,1964,2.566,1965,1.109,1966,1.109,1967,1.931,1968,1.109,1969,1.109,1970,1.109,1971,1.109,1972,1.931,1973,1.931,1974,1.931,1975,1.931,1976,4.566,1977,1.931,1978,3.821,1979,1.109,1980,1.109,1981,1.931,1982,2.566,1983,3.07,1984,3.07,1985,2.566,1986,3.07,1987,2.566,1988,1.109,1989,3.481,1990,3.481,1991,2.566,1992,2.566,1993,1.109,1994,1.931,1995,3.481,1996,1.931,1997,3.07,1998,3.07,1999,1.931,2000,2.566,2001,3.481,2002,1.109,2003,1.109,2004,1.109,2005,2.566,2006,2.566,2007,1.931,2008,1.109,2009,1.109,2010,1.109,2011,1.109,2012,1.931,2013,1.109,2014,1.109,2015,2.566,2016,1.109,2017,1.109,2018,1.931,2019,2.566,2020,1.109,2021,1.931,2022,1.109,2023,2.566,2024,1.109,2025,1.109,2026,1.109,2027,1.931,2028,1.931,2029,3.821,2030,5.875,2031,2.566,2032,1.931,2033,1.931,2034,1.931,2035,1.931,2036,3.07,2037,3.07,2038,1.931,2039,1.109,2040,1.109,2041,1.109,2042,1.109,2043,4.109,2044,3.821,2045,1.931,2046,1.109,2047,1.109,2048,1.109,2049,1.109,2050,1.931,2051,1.109,2052,1.931,2053,1.109,2054,3.481,2055,1.109,2056,4.914,2057,1.109,2058,1.109,2059,1.109,2060,1.109,2061,1.931,2062,1.109,2063,1.109,2064,1.109,2065,1.931,2066,2.566,2067,3.481,2068,1.931,2069,3.07,2070,1.931,2071,1.109,2072,1.109,2073,1.109,2074,1.109,2075,1.109,2076,1.931,2077,1.109,2078,1.109,2079,3.07,2080,1.109,2081,1.931,2082,1.931,2083,1.109,2084,1.109,2085,2.566,2086,1.109,2087,1.109,2088,1.109,2089,1.109,2090,1.109,2091,1.931,2092,1.109,2093,1.109,2094,1.109,2095,1.109,2096,1.109,2097,2.566,2098,1.109,2099,1.109,2100,1.109,2101,1.109,2102,1.109,2103,3.481,2104,1.109,2105,3.07,2106,1.109,2107,0.942,2108,3.07,2109,1.109,2110,1.109,2111,1.109,2112,1.109,2113,1.109,2114,1.931,2115,4.109,2116,2.566,2117,1.109,2118,3.07,2119,1.109,2120,1.109,2121,2.566,2122,1.109,2123,1.109,2124,2.566,2125,1.109,2126,1.931,2127,1.109,2128,1.109,2129,1.109,2130,1.109,2131,1.109,2132,1.109,2133,1.109,2134,1.109,2135,1.109,2136,1.931,2137,1.109,2138,1.109,2139,1.109,2140,1.931,2141,1.931,2142,1.109,2143,1.109,2144,2.566,2145,1.109,2146,1.931,2147,1.109,2148,1.931,2149,1.109,2150,1.931,2151,1.109,2152,2.566,2153,4.109,2154,1.109,2155,1.109,2156,1.931,2157,1.109,2158,1.109,2159,1.109,2160,1.109,2161,1.109,2162,1.931,2163,3.07,2164,1.109,2165,3.481,2166,1.109,2167,1.109,2168,1.109,2169,1.109,2170,1.109,2171,1.931,2172,1.931,2173,1.931,2174,2.566,2175,1.109,2176,1.931,2177,1.109,2178,2.566,2179,1.109,2180,1.931,2181,1.109,2182,1.931,2183,1.931,2184,1.109,2185,1.109,2186,1.931,2187,5.986,2188,1.931,2189,1.109,2190,3.481,2191,4.751,2192,2.566,2193,1.109,2194,1.109,2195,1.109,2196,3.07,2197,1.109,2198,1.109,2199,2.566,2200,1.109,2201,1.931,2202,1.109,2203,1.109,2204,1.109,2205,3.07,2206,1.109,2207,1.109,2208,1.109,2209,1.109,2210,1.109,2211,3.07,2212,1.931,2213,1.109,2214,1.109,2215,2.566,2216,1.109,2217,1.931,2218,2.566,2219,1.931,2220,1.109,2221,1.109,2222,1.109,2223,1.931,2224,2.566,2225,1.109,2226,1.109,2227,1.931,2228,1.109,2229,1.109,2230,1.109,2231,1.109,2232,1.109,2233,1.109,2234,2.566,2235,1.931,2236,1.109,2237,1.109,2238,3.07,2239,1.109,2240,2.566,2241,1.109,2242,1.109,2243,1.109,2244,1.931,2245,1.109,2246,1.109,2247,1.109,2248,2.566,2249,1.931,2250,1.931,2251,1.109,2252,4.109,2253,1.931,2254,2.566,2255,3.07,2256,1.109,2257,1.109,2258,1.109,2259,1.931,2260,1.109,2261,2.566,2262,1.109,2263,1.931,2264,1.109,2265,1.109,2266,1.109,2267,1.109,2268,2.566,2269,1.109,2270,2.566,2271,1.931,2272,1.109,2273,1.931,2274,1.109,2275,1.109,2276,1.931,2277,1.931,2278,1.109,2279,1.109,2280,1.931,2281,1.109,2282,1.109,2283,1.109,2284,1.109,2285,1.109,2286,2.566,2287,1.109,2288,1.109,2289,1.109,2290,1.109,2291,1.109,2292,3.07,2293,1.931,2294,2.566,2295,1.109,2296,1.109,2297,1.109,2298,1.109,2299,1.109,2300,1.931,2301,1.109,2302,1.109,2303,1.109,2304,1.109,2305,1.109,2306,1.109,2307,1.109,2308,1.109,2309,1.109,2310,1.109,2311,1.109,2312,1.109,2313,1.109,2314,1.109,2315,3.07,2316,1.109,2317,1.931,2318,1.109,2319,1.109,2320,1.109,2321,1.109,2322,1.109,2323,1.109,2324,1.109,2325,1.109,2326,1.109,2327,2.566,2328,1.109,2329,1.109,2330,1.109,2331,1.931,2332,1.109,2333,1.109,2334,1.109,2335,1.109,2336,1.109,2337,1.109,2338,1.931,2339,1.931,2340,3.481,2341,2.566,2342,1.109,2343,1.931,2344,1.109,2345,1.109,2346,1.109,2347,1.109,2348,2.566,2349,1.931,2350,1.109,2351,1.931,2352,1.931,2353,1.931,2354,1.109,2355,1.109,2356,1.109,2357,1.109,2358,1.109,2359,1.109,2360,1.931,2361,1.109,2362,1.109,2363,1.109,2364,1.109,2365,2.566,2366,1.109,2367,1.109,2368,1.109,2369,0.942,2370,1.109,2371,1.109,2372,1.109,2373,1.109,2374,1.109,2375,1.109,2376,1.109,2377,1.931,2378,1.109,2379,1.109,2380,1.109,2381,1.109,2382,1.109,2383,1.109,2384,1.109,2385,1.109,2386,1.109,2387,1.109,2388,1.109,2389,1.109,2390,1.109,2391,1.109,2392,1.109,2393,1.109,2394,1.109,2395,1.109,2396,2.566,2397,1.931,2398,1.109,2399,1.109,2400,1.109,2401,1.109,2402,1.109,2403,1.109,2404,1.931,2405,1.931,2406,1.109,2407,1.109,2408,1.109,2409,1.109,2410,1.109,2411,1.109,2412,1.109,2413,1.109,2414,1.931,2415,1.109,2416,1.109,2417,1.109,2418,1.109,2419,1.109,2420,1.109,2421,1.109,2422,1.109,2423,1.109,2424,0.942,2425,1.109,2426,1.109,2427,1.109,2428,1.109,2429,1.109,2430,1.109,2431,1.109,2432,1.109,2433,1.109,2434,1.109]],["title/modules.html",[2435,4.058]],["body/modules.html",[28,0.021,78,0.021,79,0.021,2435,4.844]],["title/overview.html",[2436,4.058]],["body/overview.html",[2,1.668,28,0.021,78,0.021,79,0.021,82,1.771,301,2.585,584,4.836,2436,4.804,2437,4.804]],["title/properties.html",[91,0.482,1505,2.203]],["body/properties.html",[28,0.022,78,0.021,79,0.021,91,0.649,1585,4.262,2438,5.676]],["title/miscellaneous/variables.html",[1538,1.669,1649,3.165]],["body/miscellaneous/variables.html",[15,1.418,28,0.024,30,0.451,58,1.53,71,1.44,78,0.011,79,0.011,81,1.828,89,1.73,108,2.541,115,1.986,117,0.16,118,0.537,130,1.265,144,2.203,149,2.203,151,0.876,154,2.092,155,1.743,157,2.258,158,2.574,167,3.223,192,1.164,197,1.863,207,1.265,218,1.92,228,1.693,235,1.73,236,1.73,237,1.87,238,1.73,239,1.84,240,1.84,268,1.833,287,0.876,288,1.537,289,3.654,290,1.265,292,2.687,294,1.836,295,2.413,296,2.413,298,4.6,303,2.951,304,2.176,305,2.258,306,1.47,307,1.986,308,2.176,309,2.258,310,2.453,312,1.003,313,1.265,323,2.04,330,2.731,332,3.002,343,2.176,358,2.176,372,2.176,373,2.176,374,2.176,375,2.176,376,2.176,377,2.176,382,1.265,383,3.672,385,1.537,391,1.739,408,4.148,425,1.537,426,4.153,427,3.373,428,1.739,429,3.373,430,3.373,431,4.896,432,3.363,433,1.739,434,2.243,436,1.739,442,2.413,443,2.413,444,3.376,445,1.739,446,4.896,447,1.537,448,1.739,449,4.408,450,1.739,451,1.739,452,3.376,453,3.654,454,1.739,455,4.408,456,4.439,457,1.739,458,4.91,459,2.731,460,1.739,461,1.739,462,1.739,463,1.739,464,1.739,465,1.739,466,1.739,467,1.739,468,1.739,469,1.739,470,1.739,471,1.739,472,1.739,473,1.739,577,1.386,613,1.265,668,2.413,689,2.453,710,0.936,711,0.936,738,1.828,739,2.176,740,1.575,741,2.413,767,1.739,882,2.413,908,1.537,925,1.078,962,1.537,963,2.258,979,2.413,980,2.413,1034,3.821,1059,2.951,1061,2.413,1068,1.537,1187,1.739,1296,2.413,1297,2.176,1334,2.413,1360,4.774,1393,2.98,1419,1.739,1460,1.739,1462,3.373,1463,1.537,1464,1.537,1469,1.739,1470,2.731,1471,1.739,1472,2.731,1473,3.373,1474,1.739,1481,1.739,1484,1.739,1485,5.024,1486,1.739,1487,2.731,1488,2.731,1497,1.739,1499,1.739,1500,1.739,1501,1.739,1502,1.739,1511,2.413,1518,1.739,1538,1.164,1564,1.739,1568,3.373,1596,1.537,1649,1.537,1882,2.731,1919,2.731,2107,1.739,2369,1.739,2424,1.739,2437,1.739,2439,3.214,2440,3.214,2441,6.52,2442,3.214,2443,3.214,2444,2.047,2445,3.214,2446,2.047,2447,2.047,2448,2.047,2449,5.778,2450,3.969,2451,3.214,2452,2.047,2453,6.027,2454,2.047,2455,2.047,2456,2.047,2457,2.047,2458,2.047,2459,2.047,2460,2.047,2461,2.047,2462,2.047,2463,2.047,2464,2.047,2465,2.047,2466,2.047,2467,2.047,2468,2.047,2469,2.047,2470,2.047,2471,2.047,2472,2.047,2473,2.047,2474,2.047,2475,4.497,2476,3.214,2477,3.214,2478,3.214,2479,3.214,2480,3.214,2481,3.214,2482,2.047,2483,2.047,2484,3.214,2485,2.047,2486,2.047,2487,2.047,2488,2.047,2489,2.047,2490,2.047,2491,2.047,2492,2.047,2493,2.047,2494,3.214,2495,3.214,2496,4.497,2497,2.047,2498,2.047,2499,2.047,2500,2.047,2501,2.047,2502,2.047,2503,2.047,2504,2.047,2505,2.047,2506,2.047,2507,2.047,2508,6.472,2509,6.289,2510,3.969,2511,2.047,2512,3.214,2513,3.214,2514,3.214,2515,2.047,2516,2.047,2517,2.047,2518,2.047,2519,2.047,2520,3.214,2521,2.047,2522,3.214,2523,2.047,2524,2.047,2525,2.047,2526,2.047,2527,2.047,2528,2.047,2529,2.047,2530,3.214,2531,2.047,2532,2.047,2533,2.047,2534,2.047,2535,2.047,2536,2.047,2537,2.047,2538,2.047,2539,2.047,2540,2.047,2541,2.047,2542,2.047,2543,2.047,2544,3.214,2545,2.047,2546,2.047,2547,2.047,2548,2.047,2549,2.047,2550,2.047,2551,3.969,2552,3.214,2553,3.969,2554,3.969,2555,2.047,2556,2.047,2557,2.047,2558,2.047,2559,2.047,2560,2.047,2561,5.618,2562,4.497,2563,2.047,2564,2.047,2565,2.047,2566,3.969,2567,3.214,2568,2.047,2569,2.047,2570,2.047,2571,2.047,2572,2.047,2573,2.047,2574,2.047,2575,2.047,2576,2.047,2577,2.047,2578,2.047,2579,2.047]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":925,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":2438,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["0.07",{"_index":1237,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["0.14.3",{"_index":1537,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1482,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1483,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1491,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1489,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1490,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1465,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1466,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1480,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1479,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1475,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":558,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["1.0.9",{"_index":1524,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1941,"title":{},"body":{"license.html":{}}}],["100",{"_index":1476,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1954,"title":{},"body":{"license.html":{}}}],["12",{"_index":583,"title":{},"body":{"components/ConfigComponent.html":{}}}],["12/12",{"_index":1492,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":584,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{},"overview.html":{}}}],["14",{"_index":156,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["14/14",{"_index":1477,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":585,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["15.0.0",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":586,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["16/17",{"_index":1494,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1588,"title":{},"body":{"index.html":{}}}],["17.1.0",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["17.1.3",{"_index":1514,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["17.6.0",{"_index":1532,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":1960,"title":{},"body":{"license.html":{}}}],["1].label",{"_index":939,"title":{},"body":{"components/HomeComponent.html":{}}}],["2",{"_index":1736,"title":{},"body":{"license.html":{}}}],["2.3.0",{"_index":1535,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1958,"title":{},"body":{"license.html":{}}}],["2007",{"_index":1668,"title":{},"body":{"license.html":{}}}],["2021",{"_index":676,"title":{},"body":{"components/ConfigComponent.html":{}}}],["2022",{"_index":675,"title":{},"body":{"components/ConfigComponent.html":{}}}],["25",{"_index":1497,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["28",{"_index":2311,"title":{},"body":{"license.html":{}}}],["29",{"_index":1666,"title":{},"body":{"license.html":{}}}],["3",{"_index":1665,"title":{},"body":{"license.html":{}}}],["3.3.1",{"_index":1528,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2207,"title":{},"body":{"license.html":{}}}],["4",{"_index":1992,"title":{},"body":{"license.html":{}}}],["4.18.2",{"_index":1526,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":768,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["5",{"_index":2024,"title":{},"body":{"license.html":{}}}],["5/20",{"_index":1498,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1496,"title":{},"body":{"coverage.html":{}}}],["6.0.1",{"_index":1530,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2200,"title":{},"body":{"license.html":{}}}],["6b",{"_index":2051,"title":{},"body":{"license.html":{}}}],["6d",{"_index":2074,"title":{},"body":{"license.html":{}}}],["7",{"_index":1987,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":1533,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1478,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":1495,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2437,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["80:4000",{"_index":1626,"title":{},"body":{"index.html":{}}}],["94",{"_index":1493,"title":{},"body":{"coverage.html":{}}}],["991",{"_index":273,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["9])(?=.*[a",{"_index":2572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":2571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_next",{"_index":2576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_state",{"_index":2578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_val",{"_index":595,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ability",{"_index":2123,"title":{},"body":{"license.html":{}}}],["above",{"_index":85,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["absence",{"_index":1988,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":2386,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":2413,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":1765,"title":{},"body":{"license.html":{}}}],["accept",{"_index":2212,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":2211,"title":{},"body":{"license.html":{}}}],["access",{"_index":1364,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["accessible",{"_index":2279,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":502,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["accesstoken",{"_index":1393,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"miscellaneous/variables.html":{}}}],["accompanied",{"_index":2031,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":2390,"title":{},"body":{"license.html":{}}}],["accord",{"_index":1986,"title":{},"body":{"license.html":{}}}],["according",{"_index":2381,"title":{},"body":{"license.html":{}}}],["accordingly",{"_index":244,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["achieve",{"_index":2395,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1921,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":2259,"title":{},"body":{"license.html":{}}}],["action",{"_index":450,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":314,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"license.html":{}}}],["activated",{"_index":845,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["activatedroute",{"_index":827,"title":{},"body":{"components/HomeComponent.html":{}}}],["activatedroutesnapshot",{"_index":2577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":188,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["activeclass",{"_index":1148,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activeroute",{"_index":1253,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activities",{"_index":1836,"title":{},"body":{"license.html":{}}}],["activity",{"_index":2307,"title":{},"body":{"license.html":{}}}],["actual",{"_index":2284,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["actually",{"_index":2096,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":1815,"title":{},"body":{"license.html":{}}}],["add",{"_index":1636,"title":{},"body":{"index.html":{},"license.html":{}}}],["added",{"_index":1985,"title":{},"body":{"license.html":{}}}],["adding",{"_index":520,"title":{},"body":{"components/ConfigComponent.html":{}}}],["additional",{"_index":575,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["address",{"_index":2335,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":1812,"title":{},"body":{"license.html":{}}}],["adds",{"_index":830,"title":{},"body":{"components/HomeComponent.html":{}}}],["adjust",{"_index":152,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["adopted",{"_index":1957,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":2130,"title":{},"body":{"license.html":{}}}],["advised",{"_index":2378,"title":{},"body":{"license.html":{}}}],["affects",{"_index":2131,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2327,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":2239,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1916,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":686,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["against",{"_index":1975,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":2015,"title":{},"body":{"license.html":{}}}],["agree",{"_index":2323,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":2364,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2270,"title":{},"body":{"license.html":{}}}],["aim",{"_index":1761,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":2247,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1788,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":1683,"title":{},"body":{"license.html":{}}}],["allows",{"_index":241,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["along",{"_index":1990,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1090,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["already",{"_index":2258,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":2047,"title":{},"body":{"license.html":{}}}],["although",{"_index":1757,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":2213,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1740,"title":{},"body":{"license.html":{}}}],["angular",{"_index":846,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["angular's",{"_index":1158,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["angular/animations",{"_index":1226,"title":{},"body":{"components/MenuitemComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":612,"title":{},"body":{"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular/compiler",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":621,"title":{},"body":{"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":1224,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animate('400ms",{"_index":1234,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animations",{"_index":1230,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["anti",{"_index":1944,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":1998,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1824,"title":{},"body":{"license.html":{}}}],["api",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.authoptions",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.authurl",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.noauthoptions",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiurl",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":81,"title":{"interfaces/AppConfig.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appefects",{"_index":295,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicable",{"_index":1829,"title":{},"body":{"license.html":{}}}],["application",{"_index":225,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["application's",{"_index":479,"title":{},"body":{"components/ConfigComponent.html":{}}}],["application/json",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":1577,"title":{},"body":{"index.html":{},"license.html":{}}}],["applied",{"_index":150,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applies",{"_index":555,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["apply",{"_index":109,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applyscale",{"_index":494,"title":{},"body":{"components/ConfigComponent.html":{}}}],["appname",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appropriate",{"_index":110,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["appropriately",{"_index":1980,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":2385,"title":{},"body":{"license.html":{}}}],["appsidebar",{"_index":810,"title":{},"body":{"components/HomeComponent.html":{}}}],["appstate",{"_index":287,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appstore",{"_index":296,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apptopbar",{"_index":811,"title":{},"body":{"components/HomeComponent.html":{}}}],["area",{"_index":1767,"title":{},"body":{"license.html":{}}}],["arise",{"_index":1775,"title":{},"body":{"license.html":{}}}],["arising",{"_index":2368,"title":{},"body":{"license.html":{}}}],["around",{"_index":1374,"title":{},"body":{"components/SidebarComponent.html":{}}}],["arrange",{"_index":2280,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":2294,"title":{},"body":{"license.html":{}}}],["array",{"_index":587,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["article",{"_index":1953,"title":{},"body":{"license.html":{}}}],["artifacts",{"_index":1610,"title":{},"body":{"index.html":{}}}],["asking",{"_index":1718,"title":{},"body":{"license.html":{}}}],["assert",{"_index":1735,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":788,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["assets",{"_index":2229,"title":{},"body":{"license.html":{}}}],["assigning",{"_index":214,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["associated",{"_index":1198,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["assume",{"_index":2359,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":2389,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":2173,"title":{},"body":{"license.html":{}}}],["assures",{"_index":1796,"title":{},"body":{"license.html":{}}}],["attach",{"_index":2397,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2185,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":567,"title":{},"body":{"components/ConfigComponent.html":{}}}],["attributed",{"_index":1751,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":2157,"title":{},"body":{"license.html":{}}}],["auth",{"_index":298,"title":{},"body":{"components/AuthComponent.html":{},"injectables/JwtService.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["auth.actions",{"_index":378,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["auth.component.html",{"_index":299,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":300,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.forgot",{"_index":773,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["auth.login.authorization_error",{"_index":1063,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.forgot_password",{"_index":1076,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_is_required",{"_index":1074,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_label",{"_index":1073,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_length",{"_index":1075,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.register",{"_index":1077,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.sign_in_to_continue",{"_index":1070,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_is_required",{"_index":1071,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_label",{"_index":797,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["auth.login.username_length",{"_index":1072,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.welcome_message",{"_index":1069,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.wrong_username_or_password",{"_index":1064,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.register.back_to_login",{"_index":1323,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_is_required",{"_index":1318,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_label",{"_index":1317,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_is_required",{"_index":1320,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_label",{"_index":1319,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_is_required",{"_index":1322,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_label",{"_index":1321,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_label",{"_index":1314,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_length",{"_index":1315,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_not_strong",{"_index":1316,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error",{"_index":1301,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error_description",{"_index":1302,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_is_required",{"_index":1312,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_label",{"_index":1311,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_length",{"_index":1313,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_description",{"_index":1310,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_message",{"_index":1309,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.reset",{"_index":1337,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["auth/auth.effects",{"_index":291,"title":{},"body":{"interfaces/AppState.html":{}}}],["auth/auth.reducer",{"_index":293,"title":{},"body":{"interfaces/AppState.html":{}}}],["authcomponent",{"_index":51,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["autheffects",{"_index":290,"title":{"injectables/AuthEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":303,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate(request",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":2510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticaterequestdto",{"_index":389,"title":{"interfaces/AuthenticateRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"coverage.html":{}}}],["authentication",{"_index":452,"title":{},"body":{"interfaces/AuthState.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["authenticationfailure",{"_index":372,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationsuccess",{"_index":304,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationsuccess(token",{"_index":329,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authinterceptor",{"_index":1472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authoptions",{"_index":2474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":2156,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":2107,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["authorized",{"_index":2149,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":2253,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":2298,"title":{},"body":{"license.html":{}}}],["authors",{"_index":1704,"title":{},"body":{"license.html":{}}}],["authreducer",{"_index":292,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":312,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authstate",{"_index":289,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authurl",{"_index":2472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatic",{"_index":2221,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1603,"title":{},"body":{"index.html":{},"license.html":{}}}],["available",{"_index":589,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["avatarmodule",{"_index":1399,"title":{},"body":{"components/TopbarComponent.html":{}}}],["avoid",{"_index":1262,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["away",{"_index":1691,"title":{},"body":{"license.html":{}}}],["b",{"_index":951,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["backend",{"_index":2559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":136,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["basic",{"_index":1910,"title":{},"body":{"license.html":{}}}],["bearer",{"_index":2520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behalf",{"_index":1932,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":135,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["being",{"_index":847,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["believe",{"_index":2290,"title":{},"body":{"license.html":{}}}],["below",{"_index":1938,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":2283,"title":{},"body":{"license.html":{}}}],["best",{"_index":2394,"title":{},"body":{"license.html":{}}}],["better",{"_index":1088,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["between",{"_index":1908,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":2017,"title":{},"body":{"license.html":{}}}],["bezier(0.86",{"_index":1236,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["binding",{"_index":1185,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["block",{"_index":832,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockbodyscroll",{"_index":818,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocked",{"_index":861,"title":{},"body":{"components/HomeComponent.html":{}}}],["blue",{"_index":160,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["body",{"_index":831,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["boolean",{"_index":138,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["bootstrap",{"_index":668,"title":{},"body":{"components/ConfigComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":1745,"title":{},"body":{"license.html":{}}}],["box",{"_index":2420,"title":{},"body":{"license.html":{}}}],["breadcrumb",{"_index":840,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbmodule",{"_index":807,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs",{"_index":835,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.length",{"_index":936,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.push",{"_index":937,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs[breadcrumbs.length",{"_index":938,"title":{},"body":{"components/HomeComponent.html":{}}}],["browser",{"_index":1511,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":1609,"title":{},"body":{"index.html":{}}}],["business",{"_index":2304,"title":{},"body":{"license.html":{}}}],["button",{"_index":561,"title":{},"body":{"components/ConfigComponent.html":{}}}],["buttonmodule",{"_index":482,"title":{},"body":{"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["buttons",{"_index":145,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["c",{"_index":1670,"title":{},"body":{"license.html":{}}}],["call",{"_index":1199,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["callback",{"_index":579,"title":{},"body":{"components/ConfigComponent.html":{}}}],["called",{"_index":1120,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["calls",{"_index":1592,"title":{},"body":{"index.html":{}}}],["can't",{"_index":1658,"title":{},"body":{"index.html":{}}}],["canactivatefn",{"_index":2575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":1582,"title":{},"body":{"index.html":{}}}],["carry",{"_index":1994,"title":{},"body":{"license.html":{}}}],["case",{"_index":1868,"title":{},"body":{"license.html":{}}}],["cases",{"_index":2091,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":368,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["catcherror((error",{"_index":330,"title":{},"body":{"injectables/AuthEffects.html":{},"miscellaneous/variables.html":{}}}],["cause",{"_index":2021,"title":{},"body":{"license.html":{}}}],["cd",{"_index":1149,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cease",{"_index":2189,"title":{},"body":{"license.html":{}}}],["centralized",{"_index":1570,"title":{},"body":{"index.html":{}}}],["certain",{"_index":539,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["cessation",{"_index":2202,"title":{},"body":{"license.html":{}}}],["chain",{"_index":789,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["change",{"_index":1100,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["changed",{"_index":576,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":1150,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["changelanguage",{"_index":1405,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changelanguage(language",{"_index":1410,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changes",{"_index":242,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["changetheme",{"_index":495,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changetheme(theme",{"_index":545,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changing",{"_index":1682,"title":{},"body":{"license.html":{}}}],["characterized",{"_index":2120,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1709,"title":{},"body":{"license.html":{}}}],["checks",{"_index":262,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["checkusername",{"_index":704,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusername(username",{"_index":713,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["child",{"_index":926,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["child.snapshot.data['breadcrumb",{"_index":932,"title":{},"body":{"components/HomeComponent.html":{}}}],["child.snapshot.url",{"_index":928,"title":{},"body":{"components/HomeComponent.html":{}}}],["children",{"_index":922,"title":{},"body":{"components/HomeComponent.html":{}}}],["children.length",{"_index":924,"title":{},"body":{"components/HomeComponent.html":{}}}],["choice",{"_index":1634,"title":{},"body":{"index.html":{}}}],["choose",{"_index":2343,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":2347,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":1936,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":1945,"title":{},"body":{"license.html":{}}}],["civil",{"_index":2388,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2244,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2255,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["class.active",{"_index":1146,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["class.layout",{"_index":1186,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["clear",{"_index":964,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clearly",{"_index":1742,"title":{},"body":{"license.html":{}}}],["cli",{"_index":1584,"title":{},"body":{"index.html":{}}}],["click",{"_index":856,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["clicked",{"_index":148,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["clicking",{"_index":1136,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["client",{"_index":1591,"title":{},"body":{"index.html":{}}}],["clone",{"_index":651,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonedrequest",{"_index":2517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clonelinkelement",{"_index":647,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonelinkelement.addeventlistener('load",{"_index":654,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('href",{"_index":649,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('id",{"_index":650,"title":{},"body":{"components/ConfigComponent.html":{}}}],["close",{"_index":191,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["closed",{"_index":234,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["closely",{"_index":2384,"title":{},"body":{"license.html":{}}}],["cms",{"_index":1573,"title":{},"body":{"index.html":{}}}],["cms:1",{"_index":1625,"title":{},"body":{"index.html":{}}}],["cms:latestimportant",{"_index":1646,"title":{},"body":{"index.html":{}}}],["cms:latestthen",{"_index":1645,"title":{},"body":{"index.html":{}}}],["code",{"_index":86,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["collapsed",{"_index":1232,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["collect",{"_index":1574,"title":{},"body":{"index.html":{},"license.html":{}}}],["color",{"_index":120,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["colorscheme",{"_index":94,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["combination",{"_index":2330,"title":{},"body":{"license.html":{}}}],["combine",{"_index":2328,"title":{},"body":{"license.html":{}}}],["combined",{"_index":2012,"title":{},"body":{"license.html":{}}}],["comes",{"_index":1999,"title":{},"body":{"license.html":{}}}],["command",{"_index":1173,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["commands",{"_index":1858,"title":{},"body":{"license.html":{}}}],["comment",{"_index":1550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comments",{"_index":112,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["commercial",{"_index":2101,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":2271,"title":{},"body":{"license.html":{}}}],["common",{"_index":2095,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":481,"title":{},"body":{"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["communication",{"_index":1906,"title":{},"body":{"license.html":{}}}],["compact",{"_index":671,"title":{},"body":{"components/ConfigComponent.html":{}}}],["compilation",{"_index":2007,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":2016,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":2309,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":1888,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":2226,"title":{},"body":{"license.html":{}}}],["comply",{"_index":1930,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["component's",{"_index":536,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["component_template",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"index.html":{},"overview.html":{}}}],["components/config/config.component",{"_index":883,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/footer/footer.component",{"_index":884,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/sidebar/sidebar.component",{"_index":885,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/topbar/topbar.component",{"_index":886,"title":{},"body":{"components/HomeComponent.html":{}}}],["compose",{"_index":1651,"title":{},"body":{"index.html":{}}}],["composed",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["computer",{"_index":1832,"title":{},"body":{"license.html":{}}}],["computers",{"_index":1791,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":2329,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":2336,"title":{},"body":{"license.html":{}}}],["conditionally",{"_index":537,"title":{},"body":{"components/ConfigComponent.html":{}}}],["conditioned",{"_index":2303,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1798,"title":{},"body":{"license.html":{}}}],["config",{"_index":157,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["config.component.html",{"_index":489,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.component.scss",{"_index":490,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.filled",{"_index":666,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.input_style",{"_index":664,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.menu_type",{"_index":661,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.outlined",{"_index":665,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.overlay",{"_index":663,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.ripple_effect",{"_index":667,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.scale",{"_index":660,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.static",{"_index":662,"title":{},"body":{"components/ConfigComponent.html":{}}}],["configcomponent",{"_index":53,"title":{"components/ConfigComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["configsidebarvisible",{"_index":172,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configupdate",{"_index":217,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configuration",{"_index":101,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["conjunction",{"_index":550,"title":{},"body":{"components/ConfigComponent.html":{}}}],["connection",{"_index":2292,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":2215,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":2367,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2428,"title":{},"body":{"license.html":{}}}],["considered",{"_index":2175,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2263,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":1979,"title":{},"body":{"license.html":{}}}],["const",{"_index":294,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":1786,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":1920,"title":{},"body":{"license.html":{}}}],["construct",{"_index":1168,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["constructed",{"_index":848,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(authservice",{"_index":311,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(formbuilder",{"_index":708,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(http",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(layoutservice",{"_index":503,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{}}}],["constructor(storage",{"_index":969,"title":{},"body":{"injectables/JwtService.html":{}}}],["constructor(store",{"_index":824,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(translate",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["construed",{"_index":2313,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":2079,"title":{},"body":{"license.html":{}}}],["contact",{"_index":2406,"title":{},"body":{"license.html":{}}}],["contain",{"_index":519,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["container",{"_index":1642,"title":{},"body":{"index.html":{}}}],["containerclass",{"_index":823,"title":{},"body":{"components/HomeComponent.html":{}}}],["containing",{"_index":2158,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1113,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["content",{"_index":1919,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["contents",{"_index":2267,"title":{},"body":{"license.html":{}}}],["context",{"_index":1882,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":2126,"title":{},"body":{"license.html":{}}}],["continued",{"_index":2110,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":2172,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":2319,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":1694,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2252,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2254,"title":{},"body":{"license.html":{}}}],["control",{"_index":511,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["controlled",{"_index":2257,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":1850,"title":{},"body":{"license.html":{}}}],["convention",{"_index":247,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["convey",{"_index":1837,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":2296,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":2121,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":1845,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":2171,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1681,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1678,"title":{},"body":{"license.html":{}}}],["copying",{"_index":1799,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":1685,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1669,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":1808,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":1934,"title":{},"body":{"license.html":{}}}],["core/domain/dto/requests/register",{"_index":1295,"title":{},"body":{"components/RegisterComponent.html":{}}}],["core/services/api/auth.api.service",{"_index":749,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/layout.service",{"_index":619,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["core/services/menu.service",{"_index":620,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["core/state/app.state",{"_index":736,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.actions",{"_index":746,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.selectors",{"_index":742,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["core/utils/regex.constants",{"_index":1298,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["correction",{"_index":2363,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":1650,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":1891,"title":{},"body":{"license.html":{}}}],["cost",{"_index":2045,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":2245,"title":{},"body":{"license.html":{}}}],["countries",{"_index":1835,"title":{},"body":{"license.html":{}}}],["country",{"_index":2286,"title":{},"body":{"license.html":{}}}],["course",{"_index":2418,"title":{},"body":{"license.html":{}}}],["court",{"_index":2318,"title":{},"body":{"license.html":{}}}],["courts",{"_index":2383,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":2274,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1456,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":1821,"title":{},"body":{"license.html":{}}}],["create",{"_index":1546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createaction",{"_index":2508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[home",{"_index":2511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbreadcrumbs",{"_index":819,"title":{},"body":{"components/HomeComponent.html":{}}}],["createbreadcrumbs(route",{"_index":834,"title":{},"body":{"components/HomeComponent.html":{}}}],["created",{"_index":229,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["createdat",{"_index":1439,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["createeffect",{"_index":316,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["createreducer",{"_index":436,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":838,"title":{},"body":{"components/HomeComponent.html":{}}}],["createselector",{"_index":2561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":219,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["credentials",{"_index":426,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["criterion",{"_index":1861,"title":{},"body":{"license.html":{}}}],["cross",{"_index":2243,"title":{},"body":{"license.html":{}}}],["css",{"_index":578,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["cubic",{"_index":1235,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cure",{"_index":2206,"title":{},"body":{"license.html":{}}}],["current",{"_index":108,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":181,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["currentuser",{"_index":812,"title":{},"body":{"components/HomeComponent.html":{}}}],["currentusererrorsubscription",{"_index":813,"title":{},"body":{"components/HomeComponent.html":{}}}],["custom",{"_index":1106,"title":{},"body":{"injectables/MenuService.html":{}}}],["customarily",{"_index":2034,"title":{},"body":{"license.html":{}}}],["customer",{"_index":2041,"title":{},"body":{"license.html":{}}}],["d",{"_index":2006,"title":{},"body":{"license.html":{}}}],["damages",{"_index":2365,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1793,"title":{},"body":{"license.html":{}}}],["dark",{"_index":124,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["dashboard",{"_index":919,"title":{},"body":{"components/HomeComponent.html":{}}}],["data",{"_index":1079,"title":{},"body":{"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["date",{"_index":1444,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["days",{"_index":2201,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":743,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["debouncetime(500",{"_index":755,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["debug_file",{"_index":1551,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["december",{"_index":1959,"title":{},"body":{"license.html":{}}}],["decide",{"_index":2345,"title":{},"body":{"license.html":{}}}],["declares",{"_index":168,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["declaring",{"_index":119,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["declining",{"_index":2164,"title":{},"body":{"license.html":{}}}],["decorator",{"_index":530,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["decorators",{"_index":731,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["decrements",{"_index":554,"title":{},"body":{"components/ConfigComponent.html":{}}}],["decrementscale",{"_index":496,"title":{},"body":{"components/ConfigComponent.html":{}}}],["deemed",{"_index":1947,"title":{},"body":{"license.html":{}}}],["default",{"_index":154,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defective",{"_index":2358,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":2316,"title":{},"body":{"license.html":{}}}],["defined",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["defines",{"_index":200,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["defining",{"_index":87,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["definition",{"_index":1898,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1803,"title":{},"body":{"license.html":{}}}],["delete",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["denied",{"_index":2127,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":2272,"title":{},"body":{"license.html":{}}}],["deny",{"_index":1755,"title":{},"body":{"license.html":{}}}],["denying",{"_index":1717,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":1506,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":527,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["deploy",{"_index":1616,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1638,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":2281,"title":{},"body":{"license.html":{}}}],["deps",{"_index":2502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":84,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["design",{"_index":670,"title":{},"body":{"components/ConfigComponent.html":{}}}],["designated",{"_index":2053,"title":{},"body":{"license.html":{}}}],["designed",{"_index":1689,"title":{},"body":{"license.html":{}}}],["desktop",{"_index":183,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["detail",{"_index":775,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"license.html":{}}}],["details",{"_index":2405,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":2416,"title":{},"body":{"license.html":{}}}],["detected",{"_index":1157,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["detection",{"_index":1155,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["determine",{"_index":107,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["determining",{"_index":2089,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1600,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2391,"title":{},"body":{"license.html":{}}}],["developers",{"_index":1732,"title":{},"body":{"license.html":{}}}],["development",{"_index":1596,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":184,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["device_state",{"_index":1552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["devices",{"_index":1754,"title":{},"body":{"license.html":{}}}],["deviceurl",{"_index":2466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["devtools",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["differ",{"_index":2334,"title":{},"body":{"license.html":{}}}],["different",{"_index":540,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["differently",{"_index":2154,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1933,"title":{},"body":{"license.html":{}}}],["directions",{"_index":2059,"title":{},"body":{"license.html":{}}}],["directive",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["directives",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1608,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1825,"title":{},"body":{"license.html":{}}}],["directory",{"_index":1613,"title":{},"body":{"index.html":{}}}],["disable",{"_index":236,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":956,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["disclaim",{"_index":1970,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":2348,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":2151,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":2300,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":364,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["display",{"_index":844,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["displayed",{"_index":1383,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["displays",{"_index":1847,"title":{},"body":{"license.html":{}}}],["dist",{"_index":1612,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":744,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["distinguishing",{"_index":2337,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1679,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1576,"title":{},"body":{"index.html":{},"license.html":{}}}],["distributing",{"_index":2305,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1800,"title":{},"body":{"license.html":{}}}],["docker",{"_index":1614,"title":{},"body":{"index.html":{}}}],["document",{"_index":504,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"license.html":{}}}],["document.body.classname.replace",{"_index":949,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":2137,"title":{},"body":{"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["domain/dto/requests/authenticate",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{}}}],["domain/dto/requests/register",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/requests/reset",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/token.dto",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/user.dto",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/models/enums/state",{"_index":438,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/menu",{"_index":1130,"title":{},"body":{"injectables/MenuService.html":{}}}],["domain/models/token.entity",{"_index":440,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/user.entity",{"_index":441,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/your",{"_index":1620,"title":{},"body":{"index.html":{}}}],["domains",{"_index":1777,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":2090,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":2223,"title":{},"body":{"license.html":{}}}],["dradman",{"_index":681,"title":{},"body":{"components/FooterComponent.html":{}}}],["dradman/loghub",{"_index":1624,"title":{},"body":{"index.html":{}}}],["dropdownmodule",{"_index":1398,"title":{},"body":{"components/TopbarComponent.html":{}}}],["dto",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["due",{"_index":1654,"title":{},"body":{"index.html":{}}}],["durable",{"_index":2033,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":2088,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1900,"title":{},"body":{"license.html":{}}}],["e",{"_index":2068,"title":{},"body":{"license.html":{}}}],["e.g",{"_index":1194,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["e2e",{"_index":1633,"title":{},"body":{"index.html":{}}}],["each",{"_index":113,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["earlier",{"_index":1820,"title":{},"body":{"license.html":{}}}],["effect",{"_index":147,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["effected",{"_index":1968,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1948,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":1794,"title":{},"body":{"license.html":{}}}],["effects",{"_index":142,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["efforts",{"_index":2237,"title":{},"body":{"license.html":{}}}],["el",{"_index":1355,"title":{},"body":{"components/SidebarComponent.html":{}}}],["electronic",{"_index":2407,"title":{},"body":{"license.html":{}}}],["element",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["elementref",{"_index":730,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["elements",{"_index":127,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["email",{"_index":804,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["embodied",{"_index":2028,"title":{},"body":{"license.html":{}}}],["emit",{"_index":222,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["emits",{"_index":202,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["emitted",{"_index":1219,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["emitting",{"_index":1104,"title":{},"body":{"injectables/MenuService.html":{}}}],["employer",{"_index":2421,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1212,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["en",{"_index":1419,"title":{},"body":{"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":141,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["enableregistration",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":1839,"title":{},"body":{"license.html":{}}}],["end",{"_index":245,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["enforce",{"_index":2273,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":1974,"title":{},"body":{"license.html":{}}}],["english",{"_index":1418,"title":{},"body":{"components/TopbarComponent.html":{}}}],["enhancing",{"_index":1579,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":2065,"title":{},"body":{"license.html":{}}}],["entered",{"_index":2310,"title":{},"body":{"license.html":{}}}],["entire",{"_index":1997,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":2326,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2227,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":1539,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/permission.enum",{"_index":1446,"title":{},"body":{"interfaces/User.html":{}}}],["enums/resource",{"_index":1448,"title":{},"body":{"interfaces/User.html":{}}}],["env",{"_index":1660,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1059,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":2453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.appname",{"_index":1067,"title":{},"body":{"components/LoginComponent.html":{},"components/TopbarComponent.html":{}}}],["environment.enableregistration",{"_index":1068,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":1060,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["equal",{"_index":267,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["equivalent",{"_index":1923,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":1752,"title":{},"body":{"license.html":{}}}],["error",{"_index":332,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('unauthorized",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.status",{"_index":767,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["errorsubscription",{"_index":697,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["eslint",{"_index":235,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["eslint/ban",{"_index":644,"title":{},"body":{"components/ConfigComponent.html":{}}}],["eslint/component",{"_index":1229,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["eslint/no",{"_index":239,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["essential",{"_index":1883,"title":{},"body":{"license.html":{}}}],["even",{"_index":2377,"title":{},"body":{"license.html":{}}}],["event",{"_index":752,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"license.html":{}}}],["event.model",{"_index":1131,"title":{},"body":{"injectables/MenuService.html":{}}}],["event.model.ts",{"_index":1101,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"coverage.html":{}}}],["event.preventdefault",{"_index":1265,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["event.target",{"_index":753,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["events",{"_index":203,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["everyone",{"_index":1676,"title":{},"body":{"license.html":{}}}],["exact",{"_index":1256,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["example",{"_index":1618,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":1831,"title":{},"body":{"license.html":{}}}],["exception",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exceptions",{"_index":2141,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":2078,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":2314,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":2400,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2264,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":1928,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":2320,"title":{},"body":{"license.html":{}}}],["executable",{"_index":1874,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1197,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["executed",{"_index":580,"title":{},"body":{"components/ConfigComponent.html":{}}}],["executing",{"_index":1192,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["exercise",{"_index":2238,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1969,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1206,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["expanded",{"_index":1211,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["expected",{"_index":2099,"title":{},"body":{"license.html":{}}}],["expects",{"_index":2098,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":1394,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["explains",{"_index":1743,"title":{},"body":{"license.html":{}}}],["explicit",{"_index":240,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["explicitly",{"_index":1200,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["express",{"_index":1525,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["expressed",{"_index":2350,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":2184,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1780,"title":{},"body":{"license.html":{}}}],["extended",{"_index":2299,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":2011,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1849,"title":{},"body":{"license.html":{}}}],["f",{"_index":2169,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":1929,"title":{},"body":{"license.html":{}}}],["fails",{"_index":2197,"title":{},"body":{"license.html":{}}}],["failure",{"_index":456,"title":{},"body":{"interfaces/AuthState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["fair",{"_index":1922,"title":{},"body":{"license.html":{}}}],["false",{"_index":149,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":2083,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":1817,"title":{},"body":{"license.html":{}}}],["favor",{"_index":2093,"title":{},"body":{"license.html":{}}}],["feature",{"_index":1852,"title":{},"body":{"license.html":{}}}],["features",{"_index":1587,"title":{},"body":{"index.html":{}}}],["fee",{"_index":1725,"title":{},"body":{"license.html":{}}}],["feel",{"_index":514,"title":{},"body":{"components/ConfigComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"license.html":{}}}],["files",{"_index":1605,"title":{},"body":{"index.html":{},"license.html":{}}}],["filesurl",{"_index":2470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filled",{"_index":129,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["filter",{"_index":881,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["finally",{"_index":1784,"title":{},"body":{"license.html":{}}}],["find",{"_index":2061,"title":{},"body":{"license.html":{}}}],["first",{"_index":1617,"title":{},"body":{"index.html":{},"license.html":{}}}],["firstname",{"_index":1290,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["fitness",{"_index":2353,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2032,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1416,"title":{},"body":{"components/TopbarComponent.html":{}}}],["flow",{"_index":1907,"title":{},"body":{"license.html":{}}}],["fluent",{"_index":673,"title":{},"body":{"components/ConfigComponent.html":{}}}],["follow",{"_index":1802,"title":{},"body":{"license.html":{}}}],["following",{"_index":2268,"title":{},"body":{"license.html":{}}}],["font",{"_index":542,"title":{},"body":{"components/ConfigComponent.html":{}}}],["footer",{"_index":678,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["footer.component.html",{"_index":679,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":680,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":55,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["forbid",{"_index":1967,"title":{},"body":{"license.html":{}}}],["force",{"_index":1925,"title":{},"body":{"license.html":{}}}],["forgot",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword",{"_index":305,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword(username",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":57,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["forgotpassworderror",{"_index":427,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["forgotpasswordfailure",{"_index":373,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgotpasswordform",{"_index":698,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordrequestdto",{"_index":802,"title":{"interfaces/ForgotPasswordRequestDto.html":{}},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"coverage.html":{}}}],["forgotpasswordsuccess",{"_index":343,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":1863,"title":{},"body":{"license.html":{}}}],["format",{"_index":2135,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":709,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["forms",{"_index":2022,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":488,"title":{},"body":{"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["found",{"_index":2402,"title":{},"body":{"license.html":{}}}],["foundation",{"_index":1673,"title":{},"body":{"license.html":{}}}],["fragment",{"_index":1260,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["free",{"_index":1671,"title":{},"body":{"license.html":{}}}],["free.app",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["freedom",{"_index":1692,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":1728,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":745,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fromevent(this.usernameinput.nativeelement",{"_index":750,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fulfilling",{"_index":1951,"title":{},"body":{"license.html":{}}}],["full",{"_index":1623,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":186,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["functionality",{"_index":477,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["functioning",{"_index":2111,"title":{},"body":{"license.html":{}}}],["functions",{"_index":105,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":1759,"title":{},"body":{"license.html":{}}}],["further",{"_index":1202,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["future",{"_index":1782,"title":{},"body":{"license.html":{}}}],["fw",{"_index":1391,"title":{},"body":{"components/SidebarComponent.html":{}}}],["gb",{"_index":1417,"title":{},"body":{"components/TopbarComponent.html":{}}}],["general",{"_index":1655,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":1896,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1607,"title":{},"body":{"index.html":{},"license.html":{}}}],["generated",{"_index":1583,"title":{},"body":{"index.html":{}}}],["getactiveclass",{"_index":1223,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getapplicationname",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{}}}],["getappname",{"_index":1406,"title":{},"body":{"components/TopbarComponent.html":{}}}],["getattribute('href",{"_index":638,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getcontainerclass",{"_index":877,"title":{},"body":{"components/HomeComponent.html":{}}}],["getinputstyle",{"_index":604,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getitem",{"_index":1002,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getitem(key",{"_index":1008,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getlength",{"_index":1015,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getmenumode",{"_index":600,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getrefreshtoken",{"_index":965,"title":{},"body":{"injectables/JwtService.html":{}}}],["getripple",{"_index":608,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getscale",{"_index":596,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getsubmenuanimation",{"_index":1221,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getting",{"_index":1566,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":966,"title":{},"body":{"injectables/JwtService.html":{}}}],["getvisible",{"_index":591,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ghcr.io/dradman/loghub",{"_index":1644,"title":{},"body":{"index.html":{}}}],["gi",{"_index":953,"title":{},"body":{"components/HomeComponent.html":{}}}],["github",{"_index":1641,"title":{},"body":{"index.html":{}}}],["give",{"_index":1989,"title":{},"body":{"license.html":{}}}],["given",{"_index":839,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["gives",{"_index":2003,"title":{},"body":{"license.html":{}}}],["giving",{"_index":1738,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":1664,"title":{},"body":{"license.html":{}}}],["gotoprofilepage",{"_index":1407,"title":{},"body":{"components/TopbarComponent.html":{}}}],["governed",{"_index":2144,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":1733,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2165,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1911,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2218,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":1724,"title":{},"body":{"license.html":{}}}],["greater",{"_index":272,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["greatest",{"_index":2392,"title":{},"body":{"license.html":{}}}],["green",{"_index":161,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["guarantee",{"_index":1696,"title":{},"body":{"license.html":{}}}],["gui",{"_index":2419,"title":{},"body":{"license.html":{}}}],["handle",{"_index":446,"title":{},"body":{"interfaces/AuthState.html":{},"components/MenuitemComponent.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":1191,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["handling",{"_index":525,"title":{},"body":{"components/ConfigComponent.html":{}}}],["hash",{"_index":1343,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["having",{"_index":1927,"title":{},"body":{"license.html":{}}}],["headers",{"_index":2475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["height",{"_index":1233,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["here",{"_index":1622,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":2260,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":187,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["hidemenu",{"_index":820,"title":{},"body":{"components/HomeComponent.html":{}}}],["hideprofilemenu",{"_index":821,"title":{},"body":{"components/HomeComponent.html":{}}}],["hides",{"_index":851,"title":{},"body":{"components/HomeComponent.html":{}}}],["holder",{"_index":2191,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2150,"title":{},"body":{"license.html":{}}}],["home",{"_index":806,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["home'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["home.component.html",{"_index":808,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":809,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":60,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["hope",{"_index":2403,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":134,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["host",{"_index":1187,"title":{},"body":{"components/MenuitemComponent.html":{},"miscellaneous/variables.html":{}}}],["hostbinding",{"_index":1227,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.active",{"_index":1271,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.layout",{"_index":1184,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbindings",{"_index":1145,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hosts",{"_index":2062,"title":{},"body":{"license.html":{}}}],["household",{"_index":2084,"title":{},"body":{"license.html":{}}}],["hover",{"_index":1195,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hovering",{"_index":198,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["href",{"_index":566,"title":{},"body":{"components/ConfigComponent.html":{}}}],["html",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["htmlinputelement).value",{"_index":754,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["http",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":1602,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/api",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpcontext().set(authenticate",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcontexttoken",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httphandlerfn",{"_index":2514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpheaders",{"_index":2476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":2512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":1464,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httploaderfactory(http",{"_index":1565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpparams",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpparams().set('username",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["httprequest",{"_index":2513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fsf.org",{"_index":1675,"title":{},"body":{"license.html":{}}}],["https://heavily",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.gnu.org/licenses",{"_index":2425,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":2433,"title":{},"body":{"license.html":{}}}],["hyphen",{"_index":1179,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hypothetical",{"_index":2417,"title":{},"body":{"license.html":{}}}],["i.e",{"_index":1210,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["icon",{"_index":916,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["id",{"_index":646,"title":{},"body":{"components/ConfigComponent.html":{}}}],["identifiable",{"_index":2288,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1170,"title":{},"body":{"components/MenuitemComponent.html":{},"coverage.html":{}}}],["identifiers",{"_index":1182,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["identify",{"_index":1181,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["if(!router.url.startswith('/auth",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(isusernametaken",{"_index":798,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ignored",{"_index":1258,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["image",{"_index":1615,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1087,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["implementation",{"_index":1881,"title":{},"body":{"license.html":{}}}],["implements",{"_index":685,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["implied",{"_index":2315,"title":{},"body":{"license.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["important",{"_index":1653,"title":{},"body":{"index.html":{}}}],["importing",{"_index":2251,"title":{},"body":{"license.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["impose",{"_index":2174,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":2317,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2370,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":2373,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":182,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inc",{"_index":1674,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":2366,"title":{},"body":{"license.html":{}}}],["include",{"_index":212,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["included",{"_index":1876,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1177,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["including",{"_index":1892,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":2020,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":1760,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":2426,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":2087,"title":{},"body":{"license.html":{}}}],["increments",{"_index":557,"title":{},"body":{"components/ConfigComponent.html":{}}}],["incrementscale",{"_index":497,"title":{},"body":{"components/ConfigComponent.html":{}}}],["indemnification",{"_index":2170,"title":{},"body":{"license.html":{}}}],["independent",{"_index":2009,"title":{},"body":{"license.html":{}}}],["index",{"_index":117,"title":{"index.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":248,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["indicates",{"_index":231,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["indicating",{"_index":275,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["individual",{"_index":2018,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":1769,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":2102,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["inform",{"_index":2071,"title":{},"body":{"license.html":{}}}],["information",{"_index":1114,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["infringe",{"_index":2219,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2248,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1828,"title":{},"body":{"license.html":{}}}],["initial",{"_index":215,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["initialized",{"_index":535,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["initializing",{"_index":211,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["initialstate",{"_index":444,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":2241,"title":{},"body":{"license.html":{}}}],["inject",{"_index":613,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{},"miscellaneous/variables.html":{}}}],["inject(authservice",{"_index":2525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(document",{"_index":623,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["inject(jwtservice",{"_index":2524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(jwtservice).gettoken",{"_index":2516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(platform_id",{"_index":1022,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["inject(router",{"_index":2527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(store",{"_index":2526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":162,"title":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/SessionStorage.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/SessionStorage.html":{},"coverage.html":{}}}],["injectables",{"_index":301,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/SessionStorage.html":{},"overview.html":{}}}],["injected",{"_index":1162,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["injection",{"_index":528,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["injectspeedinsights",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":126,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["inputmaskmodule",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inputs",{"_index":500,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["inputstyle",{"_index":93,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inputstyle(_val",{"_index":631,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputswitchmodule",{"_index":487,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputtextmodule",{"_index":692,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inside",{"_index":1362,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["insights",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["install",{"_index":1756,"title":{},"body":{"license.html":{}}}],["installation",{"_index":2105,"title":{},"body":{"license.html":{}}}],["installed",{"_index":2124,"title":{},"body":{"license.html":{}}}],["instance",{"_index":220,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["instanceof",{"_index":908,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"miscellaneous/variables.html":{}}}],["instead",{"_index":2431,"title":{},"body":{"license.html":{}}}],["intact",{"_index":1982,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1695,"title":{},"body":{"license.html":{}}}],["intention",{"_index":1971,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":1842,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":526,"title":{},"body":{"components/ConfigComponent.html":{}}}],["interactive",{"_index":1846,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":2035,"title":{},"body":{"license.html":{}}}],["interest",{"_index":2235,"title":{},"body":{"license.html":{}}}],["interface",{"_index":80,"title":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"license.html":{}}}],["interfaces",{"_index":82,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":2113,"title":{},"body":{"license.html":{}}}],["internal",{"_index":1452,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["internationalization",{"_index":1365,"title":{},"body":{"components/SidebarComponent.html":{}}}],["interpretation",{"_index":2380,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":1890,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":1905,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":2004,"title":{},"body":{"license.html":{}}}],["invitation",{"_index":958,"title":{},"body":{"components/InvitationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["invitation'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["invitation.component.html",{"_index":959,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.component.scss",{"_index":960,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitationcomponent",{"_index":62,"title":{"components/InvitationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["invitationurl",{"_index":2464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["irrevocable",{"_index":1913,"title":{},"body":{"license.html":{}}}],["isdesktop",{"_index":276,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isdevmode",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isloading",{"_index":699,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isloadingauthstate",{"_index":738,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ismobile",{"_index":282,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isoutsideclicked",{"_index":892,"title":{},"body":{"components/HomeComponent.html":{}}}],["isoverlay",{"_index":264,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isplatformbrowser",{"_index":1020,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isplatformbrowser(platformid",{"_index":1023,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isregistrationenabled",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{}}}],["issuccess",{"_index":739,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isusernameavialable",{"_index":428,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["isusernametaken",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isusernametaken(username",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["item",{"_index":1135,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["item.label",{"_index":1274,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick",{"_index":1142,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick(event",{"_index":1189,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["items",{"_index":523,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["itself",{"_index":2128,"title":{},"body":{"license.html":{}}}],["join",{"_index":931,"title":{},"body":{"components/HomeComponent.html":{}}}],["june",{"_index":1667,"title":{},"body":{"license.html":{}}}],["jwtservice",{"_index":313,"title":{"injectables/JwtService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtservice.clear",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice.savetoken(refreshresult.accesstoken",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice.savetoken(refreshresult.refreshtoken",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":1632,"title":{},"body":{"index.html":{}}}],["keep",{"_index":179,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["kernel",{"_index":1884,"title":{},"body":{"license.html":{}}}],["key",{"_index":1003,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["key(index",{"_index":1009,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["keys",{"_index":1095,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["keys.length",{"_index":1097,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["kind",{"_index":1838,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":1686,"title":{},"body":{"license.html":{}}}],["know",{"_index":1712,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":2276,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":2285,"title":{},"body":{"license.html":{}}}],["label",{"_index":842,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["landscape",{"_index":278,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["language",{"_index":510,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["language.label",{"_index":1437,"title":{},"body":{"components/TopbarComponent.html":{}}}],["languages",{"_index":1369,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["lara",{"_index":159,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["larger",{"_index":2013,"title":{},"body":{"license.html":{}}}],["lastlogintime",{"_index":1440,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["lastname",{"_index":1291,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["later",{"_index":2340,"title":{},"body":{"license.html":{}}}],["latest",{"_index":1640,"title":{},"body":{"index.html":{}}}],["law",{"_index":1830,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1805,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":2246,"title":{},"body":{"license.html":{}}}],["layout",{"_index":103,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["layoutservice",{"_index":106,"title":{"injectables/LayoutService.html":{}},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["layoutstate",{"_index":165,"title":{"interfaces/LayoutState.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"coverage.html":{}}}],["leaks",{"_index":1217,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["legal",{"_index":1739,"title":{},"body":{"license.html":{}}}],["legend",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["length",{"_index":1006,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["lesser",{"_index":2430,"title":{},"body":{"license.html":{}}}],["lgpl.html",{"_index":2434,"title":{},"body":{"license.html":{}}}],["liability",{"_index":2153,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1827,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1873,"title":{},"body":{"license.html":{}}}],["library",{"_index":221,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["license",{"_index":1663,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1809,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":1811,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":1813,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1687,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2222,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":2163,"title":{},"body":{"license.html":{}}}],["light",{"_index":123,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["likewise",{"_index":2216,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1972,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1656,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":2351,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":2152,"title":{},"body":{"license.html":{}}}],["line",{"_index":238,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":549,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["linked",{"_index":1901,"title":{},"body":{"license.html":{}}}],["linking",{"_index":2429,"title":{},"body":{"license.html":{}}}],["links",{"_index":146,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["list",{"_index":1857,"title":{},"body":{"license.html":{}}}],["listener",{"_index":857,"title":{},"body":{"components/HomeComponent.html":{}}}],["literal",{"_index":1084,"title":{},"body":{"injectables/MemoryStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["litigation",{"_index":2242,"title":{},"body":{"license.html":{}}}],["load",{"_index":459,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentuser",{"_index":306,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentuserfailure",{"_index":374,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentusersuccess",{"_index":375,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentusersuccess(user",{"_index":338,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["loaded",{"_index":572,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loader",{"_index":1518,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":447,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":209,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["localization",{"_index":1366,"title":{},"body":{"components/SidebarComponent.html":{}}}],["localizedlabel",{"_index":934,"title":{},"body":{"components/HomeComponent.html":{}}}],["localstorage",{"_index":970,"title":{"injectables/LocalStorage.html":{}},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"coverage.html":{}}}],["location",{"_index":1578,"title":{},"body":{"index.html":{}}}],["log_entry",{"_index":1554,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_session",{"_index":1555,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_source",{"_index":1556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logging",{"_index":1571,"title":{},"body":{"index.html":{}}}],["loghub",{"_index":1568,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["login.component.html",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":64,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{}}}],["logonly",{"_index":2507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":1408,"title":{},"body":{"components/TopbarComponent.html":{}}}],["logs",{"_index":1575,"title":{},"body":{"index.html":{}}}],["long",{"_index":1924,"title":{},"body":{"license.html":{}}}],["look",{"_index":513,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loss",{"_index":2371,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2374,"title":{},"body":{"license.html":{}}}],["machine",{"_index":2025,"title":{},"body":{"license.html":{}}}],["made",{"_index":2114,"title":{},"body":{"license.html":{}}}],["mail",{"_index":2409,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":2058,"title":{},"body":{"license.html":{}}}],["major",{"_index":1879,"title":{},"body":{"license.html":{}}}],["make",{"_index":1647,"title":{},"body":{"index.html":{},"license.html":{}}}],["makes",{"_index":1942,"title":{},"body":{"license.html":{}}}],["making",{"_index":1156,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["manage",{"_index":515,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["management",{"_index":1594,"title":{},"body":{"index.html":{}}}],["managing",{"_index":509,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["manipulate",{"_index":516,"title":{},"body":{"components/ConfigComponent.html":{}}}],["manner",{"_index":2261,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1153,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["manufacturer",{"_index":1758,"title":{},"body":{"license.html":{}}}],["map",{"_index":342,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["map((event",{"_index":751,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["map((segment",{"_index":929,"title":{},"body":{"components/HomeComponent.html":{}}}],["map((token",{"_index":326,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((user",{"_index":337,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["march",{"_index":2312,"title":{},"body":{"license.html":{}}}],["marked",{"_index":1749,"title":{},"body":{"license.html":{}}}],["marks",{"_index":531,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["masks",{"_index":1807,"title":{},"body":{"license.html":{}}}],["matching",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":669,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["materially",{"_index":2129,"title":{},"body":{"license.html":{}}}],["matrixparams",{"_index":1259,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["maxage",{"_index":2506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meaning",{"_index":2177,"title":{},"body":{"license.html":{}}}],["means",{"_index":532,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["measure",{"_index":1950,"title":{},"body":{"license.html":{}}}],["measures",{"_index":1964,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":1159,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["medium",{"_index":1978,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1993,"title":{},"body":{"license.html":{}}}],["meets",{"_index":1860,"title":{},"body":{"license.html":{}}}],["membersurl",{"_index":2468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":1019,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["memorystorage",{"_index":1018,"title":{"injectables/MemoryStorage.html":{}},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{}}}],["menu",{"_index":131,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["menubutton",{"_index":1402,"title":{},"body":{"components/TopbarComponent.html":{}}}],["menuchangeevent",{"_index":1098,"title":{"interfaces/MenuChangeEvent.html":{}},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"coverage.html":{}}}],["menuhoveractive",{"_index":174,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuitem",{"_index":836,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["menuitem.component.html",{"_index":1139,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem.component.scss",{"_index":1138,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem/menuitem.component",{"_index":1384,"title":{},"body":{"components/SidebarComponent.html":{}}}],["menuitem]'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["menuitemcomponent",{"_index":66,"title":{"components/MenuitemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["menumode",{"_index":97,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menumode(_val",{"_index":629,"title":{},"body":{"components/ConfigComponent.html":{}}}],["menuoutsideclicklistener",{"_index":814,"title":{},"body":{"components/HomeComponent.html":{}}}],["menuresetsubscription",{"_index":1140,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menus",{"_index":177,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuservice",{"_index":492,"title":{"injectables/MenuService.html":{}},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"coverage.html":{}}}],["menusource",{"_index":1107,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["menusourcesubscription",{"_index":1141,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["merchantability",{"_index":2352,"title":{},"body":{"license.html":{}}}],["mere",{"_index":1841,"title":{},"body":{"license.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merging",{"_index":2231,"title":{},"body":{"license.html":{}}}],["messageservice",{"_index":690,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["met",{"_index":1915,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["method",{"_index":1166,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["methods",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["minimal",{"_index":501,"title":{},"body":{"components/ConfigComponent.html":{}}}],["miscellaneous",{"_index":1538,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":2159,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":196,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["mode",{"_index":130,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":1356,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["models/enums/permission.enum",{"_index":1454,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/enums/resource",{"_index":1455,"title":{},"body":{"interfaces/UserDto.html":{}}}],["modification",{"_index":1801,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1864,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1748,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":1996,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1722,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1833,"title":{},"body":{"license.html":{}}}],["modules",{"_index":2435,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitoring",{"_index":1581,"title":{},"body":{"index.html":{}}}],["more",{"_index":2043,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":2203,"title":{},"body":{"license.html":{}}}],["move",{"_index":208,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["mutt.ngrok",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:your",{"_index":1621,"title":{},"body":{"index.html":{}}}],["named",{"_index":88,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["names",{"_index":2162,"title":{},"body":{"license.html":{}}}],["native",{"_index":1361,"title":{},"body":{"components/SidebarComponent.html":{}}}],["nature",{"_index":2010,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":1601,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":517,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["navigationend",{"_index":879,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["necessary",{"_index":2360,"title":{},"body":{"license.html":{}}}],["need",{"_index":1635,"title":{},"body":{"index.html":{},"license.html":{}}}],["needed",{"_index":1783,"title":{},"body":{"license.html":{}}}],["network",{"_index":1843,"title":{},"body":{"license.html":{}}}],["new",{"_index":218,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newhref",{"_index":637,"title":{},"body":{"components/ConfigComponent.html":{}}}],["newpassword",{"_index":1341,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["next",{"_index":237,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["next(clonedrequest",{"_index":2521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req",{"_index":2547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":2529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(request",{"_index":2522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":1598,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":705,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ngondestroy",{"_index":706,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngoninit",{"_index":707,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{}}}],["ngrok",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngrx",{"_index":1593,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":367,"title":{},"body":{"injectables/AuthEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":437,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["noauthoptions",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":787,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["noncommercially",{"_index":2049,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1877,"title":{},"body":{"license.html":{}}}],["normally",{"_index":2082,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":2217,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1853,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1848,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":1124,"title":{},"body":{"injectables/MenuService.html":{}}}],["notifies",{"_index":2204,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2198,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2148,"title":{},"body":{"license.html":{}}}],["null",{"_index":434,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":151,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["numbered",{"_index":2339,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":588,"title":{},"body":{"components/ConfigComponent.html":{}}}],["object",{"_index":158,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object's",{"_index":266,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["object.keys(this.data",{"_index":1096,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["object.keys(this.data).length",{"_index":1092,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["objects",{"_index":849,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["obligate",{"_index":2324,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":2064,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1952,"title":{},"body":{"license.html":{}}}],["observable",{"_index":228,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"miscellaneous/variables.html":{}}}],["observables",{"_index":205,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["occasionally",{"_index":2048,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":2214,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":1766,"title":{},"body":{"license.html":{}}}],["of(authenticate(request",{"_index":354,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(authenticationfailure",{"_index":331,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(forgotpasswordfailure",{"_index":344,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(loadcurrentuserfailure",{"_index":347,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(registernewuserfailure",{"_index":351,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(resetpasswordfailure",{"_index":359,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["offer",{"_index":1737,"title":{},"body":{"license.html":{}}}],["offered",{"_index":2073,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2052,"title":{},"body":{"license.html":{}}}],["official",{"_index":1865,"title":{},"body":{"license.html":{}}}],["oftype",{"_index":366,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticate",{"_index":318,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticationsuccess",{"_index":334,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(forgotpassword",{"_index":340,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(loadcurrentuser",{"_index":346,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(registernewuser",{"_index":349,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(registernewusersuccess",{"_index":353,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(resetpassword",{"_index":356,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(signout",{"_index":361,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["on(authenticate",{"_index":451,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authenticationfailure",{"_index":457,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authenticationsuccess",{"_index":454,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpassword",{"_index":465,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpasswordfailure",{"_index":467,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpasswordsuccess",{"_index":466,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentuser",{"_index":448,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentuserfailure",{"_index":461,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentusersuccess",{"_index":460,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(registernewuser",{"_index":471,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(registernewuserfailure",{"_index":473,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(registernewusersuccess",{"_index":472,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpassword",{"_index":468,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpasswordfailure",{"_index":470,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpasswordsuccess",{"_index":469,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(setcurrentuser",{"_index":462,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(settoken",{"_index":463,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(signout",{"_index":464,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["once",{"_index":570,"title":{},"body":{"components/ConfigComponent.html":{}}}],["oncomplete",{"_index":563,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigbuttonclick",{"_index":498,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigupdate",{"_index":285,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ondestroy",{"_index":688,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["one",{"_index":571,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["oninit",{"_index":687,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{}}}],["onmenustatechange",{"_index":1109,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["onmenustatechange(event",{"_index":1110,"title":{},"body":{"injectables/MenuService.html":{}}}],["onmenutoggle",{"_index":185,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["open",{"_index":1116,"title":{},"body":{"injectables/MenuService.html":{}}}],["opened",{"_index":233,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opens",{"_index":258,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["operate",{"_index":2376,"title":{},"body":{"license.html":{}}}],["operated",{"_index":2055,"title":{},"body":{"license.html":{}}}],["operating",{"_index":1886,"title":{},"body":{"license.html":{}}}],["operation",{"_index":1973,"title":{},"body":{"license.html":{}}}],["operator",{"_index":213,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opposite",{"_index":283,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["option",{"_index":139,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["optional",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":102,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["order",{"_index":1171,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["organization",{"_index":1557,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["organizations",{"_index":1814,"title":{},"body":{"license.html":{}}}],["organizationurl",{"_index":2462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["origin",{"_index":2160,"title":{},"body":{"license.html":{}}}],["original",{"_index":569,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["originalevent",{"_index":1267,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["others",{"_index":1716,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":279,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["out",{"_index":2369,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["outlined",{"_index":128,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["output",{"_index":1918,"title":{},"body":{"license.html":{}}}],["outside",{"_index":855,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["over",{"_index":199,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overall",{"_index":512,"title":{},"body":{"components/ConfigComponent.html":{}}}],["overlay",{"_index":133,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuactive",{"_index":170,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuopensubscription",{"_index":815,"title":{},"body":{"components/HomeComponent.html":{}}}],["overlayopen",{"_index":232,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overview",{"_index":2436,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":2256,"title":{},"body":{"license.html":{}}}],["p",{"_index":955,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["package",{"_index":1505,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packaged",{"_index":2002,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":1878,"title":{},"body":{"license.html":{}}}],["page",{"_index":1360,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["paper",{"_index":2408,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":2188,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":2269,"title":{},"body":{"license.html":{}}}],["param",{"_index":622,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameter",{"_index":230,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["parent",{"_index":534,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["parentkey",{"_index":1144,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["part",{"_index":1816,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1869,"title":{},"body":{"license.html":{}}}],["parties",{"_index":1840,"title":{},"body":{"license.html":{}}}],["parts",{"_index":224,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["party",{"_index":2056,"title":{},"body":{"license.html":{}}}],["party's",{"_index":2233,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1167,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["passed",{"_index":533,"title":{},"body":{"components/ConfigComponent.html":{}}}],["password",{"_index":323,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["password.back_to_login",{"_index":801,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.check_your_email",{"_index":782,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.html",{"_index":695,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":696,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":684,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:125",{"_index":1332,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:144",{"_index":717,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:152",{"_index":715,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:160",{"_index":714,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":1329,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":712,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":1333,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:65",{"_index":724,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:69",{"_index":726,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:70",{"_index":727,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":720,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:73",{"_index":733,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:74",{"_index":728,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:75",{"_index":729,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":1330,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:77",{"_index":716,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:82",{"_index":1331,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:88",{"_index":718,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.error",{"_index":774,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.error_description",{"_index":777,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.new_password_label",{"_index":1344,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_is_required",{"_index":1345,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_length",{"_index":1346,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_not_strong",{"_index":1347,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.success",{"_index":781,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.success_message",{"_index":1339,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.user_does_not_exist",{"_index":776,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_is_required",{"_index":799,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_length",{"_index":800,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_description",{"_index":796,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_message",{"_index":795,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.wrong_hash",{"_index":1338,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":683,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":1326,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordminlength",{"_index":1487,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordmodule",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordspecialchars",{"_index":1488,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["patent",{"_index":2187,"title":{},"body":{"license.html":{}}}],["patents",{"_index":1787,"title":{},"body":{"license.html":{}}}],["paths",{"_index":1255,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["pattern",{"_index":1764,"title":{},"body":{"license.html":{}}}],["payment",{"_index":2306,"title":{},"body":{"license.html":{}}}],["peer",{"_index":2069,"title":{},"body":{"license.html":{}}}],["peers",{"_index":2072,"title":{},"body":{"license.html":{}}}],["pending",{"_index":1563,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":574,"title":{},"body":{"components/ConfigComponent.html":{}}}],["performance",{"_index":2356,"title":{},"body":{"license.html":{}}}],["performing",{"_index":1897,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":2196,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1445,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["permissions",{"_index":1451,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["permissive",{"_index":1984,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2019,"title":{},"body":{"license.html":{}}}],["permits",{"_index":2179,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1677,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":2119,"title":{},"body":{"license.html":{}}}],["personal",{"_index":2081,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":2322,"title":{},"body":{"license.html":{}}}],["physical",{"_index":2029,"title":{},"body":{"license.html":{}}}],["physically",{"_index":2046,"title":{},"body":{"license.html":{}}}],["pi",{"_index":917,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["pieces",{"_index":1711,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":325,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["pipe(filter((event",{"_index":907,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["pixels",{"_index":274,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["place",{"_index":2054,"title":{},"body":{"license.html":{}}}],["platform",{"_index":1558,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["platform_id",{"_index":1017,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformid",{"_index":1021,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformurl",{"_index":2460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":2432,"title":{},"body":{"license.html":{}}}],["plus",{"_index":2236,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":2401,"title":{},"body":{"license.html":{}}}],["portion",{"_index":2076,"title":{},"body":{"license.html":{}}}],["portrait",{"_index":280,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["possesses",{"_index":2042,"title":{},"body":{"license.html":{}}}],["possession",{"_index":2000,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2379,"title":{},"body":{"license.html":{}}}],["possible",{"_index":2393,"title":{},"body":{"license.html":{}}}],["power",{"_index":1966,"title":{},"body":{"license.html":{}}}],["practical",{"_index":1688,"title":{},"body":{"license.html":{}}}],["practice",{"_index":1773,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":1684,"title":{},"body":{"license.html":{}}}],["precise",{"_index":1797,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":1770,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":2234,"title":{},"body":{"license.html":{}}}],["preference",{"_index":1371,"title":{},"body":{"components/SidebarComponent.html":{}}}],["preferred",{"_index":1862,"title":{},"body":{"license.html":{}}}],["present",{"_index":2333,"title":{},"body":{"license.html":{}}}],["presents",{"_index":1856,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":2155,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":1216,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["prevented",{"_index":2112,"title":{},"body":{"license.html":{}}}],["previous",{"_index":1753,"title":{},"body":{"license.html":{}}}],["price",{"_index":1708,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":2308,"title":{},"body":{"license.html":{}}}],["primeflex",{"_index":1527,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":1529,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":1531,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":737,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/avatar",{"_index":1429,"title":{},"body":{"components/TopbarComponent.html":{}}}],["primeng/breadcrumb",{"_index":880,"title":{},"body":{"components/HomeComponent.html":{}}}],["primeng/button",{"_index":614,"title":{},"body":{"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/dropdown",{"_index":1430,"title":{},"body":{"components/TopbarComponent.html":{}}}],["primeng/inputmask",{"_index":1057,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["primeng/inputswitch",{"_index":618,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/inputtext",{"_index":748,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["primeng/password",{"_index":1058,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/radiobutton",{"_index":615,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/ripple",{"_index":616,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/sidebar",{"_index":617,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/toast",{"_index":747,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeone",{"_index":674,"title":{},"body":{"components/ConfigComponent.html":{}}}],["prior",{"_index":2199,"title":{},"body":{"license.html":{}}}],["private",{"_index":216,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["problems",{"_index":1750,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":2106,"title":{},"body":{"license.html":{}}}],["processing",{"_index":1263,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["procuring",{"_index":2295,"title":{},"body":{"license.html":{}}}],["produce",{"_index":1889,"title":{},"body":{"license.html":{}}}],["product",{"_index":2030,"title":{},"body":{"license.html":{}}}],["production",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["products",{"_index":1768,"title":{},"body":{"license.html":{}}}],["profile",{"_index":192,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["profileiconurl",{"_index":1441,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["profilemenuoutsideclicklistener",{"_index":816,"title":{},"body":{"components/HomeComponent.html":{}}}],["profilesidebarvisible",{"_index":171,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["profileurl",{"_index":2458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":1698,"title":{},"body":{"license.html":{}}}],["program's",{"_index":1977,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":2422,"title":{},"body":{"license.html":{}}}],["programming",{"_index":1870,"title":{},"body":{"license.html":{}}}],["programs",{"_index":1705,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":1772,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":1962,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":2302,"title":{},"body":{"license.html":{}}}],["project",{"_index":1559,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["project_release",{"_index":1560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projecturl",{"_index":2456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominent",{"_index":1859,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":1851,"title":{},"body":{"license.html":{}}}],["promise.resolve(null).then",{"_index":1240,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["propagate",{"_index":1823,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":2220,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":1834,"title":{},"body":{"license.html":{}}}],["properties",{"_index":91,"title":{"properties.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"properties.html":{}}}],["property",{"_index":114,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["proprietary",{"_index":1795,"title":{},"body":{"license.html":{}}}],["props",{"_index":2509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protect",{"_index":1714,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":1762,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1741,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":2134,"title":{},"body":{"license.html":{}}}],["prove",{"_index":2357,"title":{},"body":{"license.html":{}}}],["provide",{"_index":115,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1163,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["providedin",{"_index":206,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MenuService.html":{},"injectables/SessionStorage.html":{}}}],["provideeffects(appefects",{"_index":2504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":689,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":201,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["provideserverrendering",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestore(appstore",{"_index":2503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestoredevtools",{"_index":2505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provision",{"_index":1781,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2193,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":2344,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":2346,"title":{},"body":{"license.html":{}}}],["public",{"_index":491,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["publicity",{"_index":2161,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":2136,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1981,"title":{},"body":{"license.html":{}}}],["published",{"_index":2341,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1639,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1790,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2085,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":2291,"title":{},"body":{"license.html":{}}}],["px",{"_index":659,"title":{},"body":{"components/ConfigComponent.html":{}}}],["qualify",{"_index":2210,"title":{},"body":{"license.html":{}}}],["quality",{"_index":2355,"title":{},"body":{"license.html":{}}}],["queryparams",{"_index":1257,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["radiobuttonmodule",{"_index":485,"title":{},"body":{"components/ConfigComponent.html":{}}}],["react",{"_index":243,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["reactiveformsmodule",{"_index":691,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["read",{"_index":1547,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["readable",{"_index":2026,"title":{},"body":{"license.html":{}}}],["readily",{"_index":2278,"title":{},"body":{"license.html":{}}}],["reading",{"_index":2139,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":1001,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["ready",{"_index":1779,"title":{},"body":{"license.html":{}}}],["reason",{"_index":2289,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":2044,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":2208,"title":{},"body":{"license.html":{}}}],["receive",{"_index":1123,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["received",{"_index":1729,"title":{},"body":{"license.html":{}}}],["receives",{"_index":2224,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":2297,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":2118,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":2287,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1726,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":1866,"title":{},"body":{"license.html":{}}}],["redistribute",{"_index":2396,"title":{},"body":{"license.html":{}}}],["referring",{"_index":1707,"title":{},"body":{"license.html":{}}}],["refers",{"_index":1804,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":2325,"title":{},"body":{"license.html":{}}}],["refresh_token_key",{"_index":980,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshexpiresin",{"_index":1395,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshresult.accesstoken",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken(refreshtoken",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["regard",{"_index":2145,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":2001,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":1909,"title":{},"body":{"license.html":{}}}],["regexp",{"_index":950,"title":{},"body":{"components/HomeComponent.html":{}}}],["register",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["register'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["register(dto",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.html",{"_index":1276,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1277,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":68,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["registerform",{"_index":1278,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registernewuser",{"_index":307,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registernewuserfailure",{"_index":376,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registernewusersuccess",{"_index":308,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registerrequestdto",{"_index":400,"title":{"interfaces/RegisterRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"coverage.html":{}}}],["registrationerror",{"_index":429,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["registrationguard",{"_index":1470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry",{"_index":1643,"title":{},"body":{"index.html":{}}}],["reinstated",{"_index":2192,"title":{},"body":{"license.html":{}}}],["related",{"_index":478,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["relationship",{"_index":1935,"title":{},"body":{"license.html":{}}}],["released",{"_index":1702,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":1117,"title":{},"body":{"injectables/MenuService.html":{},"license.html":{}}}],["relicensing",{"_index":2180,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1604,"title":{},"body":{"index.html":{}}}],["relying",{"_index":2277,"title":{},"body":{"license.html":{}}}],["remain",{"_index":2063,"title":{},"body":{"license.html":{}}}],["remains",{"_index":1699,"title":{},"body":{"license.html":{}}}],["remote",{"_index":1569,"title":{},"body":{"index.html":{}}}],["removal",{"_index":2147,"title":{},"body":{"license.html":{}}}],["remove",{"_index":2146,"title":{},"body":{"license.html":{}}}],["removeitem",{"_index":1004,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removeitem(key",{"_index":1011,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removes",{"_index":568,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["removing",{"_index":521,"title":{},"body":{"components/ConfigComponent.html":{}}}],["render",{"_index":538,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["rendered",{"_index":2372,"title":{},"body":{"license.html":{}}}],["renderer",{"_index":817,"title":{},"body":{"components/HomeComponent.html":{}}}],["renderer2",{"_index":825,"title":{},"body":{"components/HomeComponent.html":{}}}],["rendering",{"_index":1590,"title":{},"body":{"index.html":{}}}],["repair",{"_index":2362,"title":{},"body":{"license.html":{}}}],["replace(this.layoutservice.config.theme",{"_index":639,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replaces",{"_index":565,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replacethemelink",{"_index":499,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replacethemelink(href",{"_index":562,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replacing",{"_index":548,"title":{},"body":{"components/ConfigComponent.html":{}}}],["represent",{"_index":99,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["representing",{"_index":552,"title":{},"body":{"components/ConfigComponent.html":{}}}],["represents",{"_index":116,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["req",{"_index":2523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.context.get(authenticate",{"_index":2528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers.set",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('auth/authenticate",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('auth/refreshtoken",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":2518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.context.get(authenticate",{"_index":2515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.dto",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{}}}],["request.dto.ts",{"_index":475,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["request.headers.set('authorization",{"_index":2519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.password",{"_index":324,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.username",{"_index":322,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["require",{"_index":1904,"title":{},"body":{"license.html":{}}}],["required",{"_index":2108,"title":{},"body":{"license.html":{}}}],["requirement",{"_index":1995,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":2067,"title":{},"body":{"license.html":{}}}],["requires",{"_index":1747,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":1818,"title":{},"body":{"license.html":{}}}],["reset",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["resetpassword",{"_index":309,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpassword(dto",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":70,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["resetpassworderror",{"_index":430,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordfailure",{"_index":377,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordform",{"_index":1327,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordrequestdto",{"_index":404,"title":{"interfaces/ResetPasswordRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["resetpasswordsuccess",{"_index":358,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resets",{"_index":852,"title":{},"body":{"components/HomeComponent.html":{}}}],["resetsource",{"_index":1108,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["resolved",{"_index":2092,"title":{},"body":{"license.html":{}}}],["resourcetype",{"_index":1447,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["respect",{"_index":1723,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":1721,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":2225,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":1789,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":1963,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":2178,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2176,"title":{},"body":{"license.html":{}}}],["result",{"_index":793,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"license.html":{}}}],["resulting",{"_index":1819,"title":{},"body":{"license.html":{}}}],["results",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":2122,"title":{},"body":{"license.html":{}}}],["return",{"_index":268,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{},"components/TopbarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["returning",{"_index":265,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["returns",{"_index":263,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["reviewing",{"_index":2382,"title":{},"body":{"license.html":{}}}],["revised",{"_index":2331,"title":{},"body":{"license.html":{}}}],["right",{"_index":2116,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1715,"title":{},"body":{"license.html":{}}}],["ripple",{"_index":96,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ripple(_val",{"_index":633,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ripplemodule",{"_index":483,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/TopbarComponent.html":{}}}],["risk",{"_index":2354,"title":{},"body":{"license.html":{}}}],["role",{"_index":1378,"title":{},"body":{"components/SidebarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["roleid",{"_index":1450,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["rom",{"_index":2125,"title":{},"body":{"license.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["root'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["route",{"_index":826,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["route.children",{"_index":923,"title":{},"body":{"components/HomeComponent.html":{}}}],["routeevent",{"_index":1102,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{}}}],["router",{"_index":711,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/auth",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":918,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodule",{"_index":693,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["routerstatesnapshot",{"_index":2579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routeurl",{"_index":927,"title":{},"body":{"components/HomeComponent.html":{}}}],["routing",{"_index":1160,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["royalty",{"_index":2240,"title":{},"body":{"license.html":{}}}],["rules",{"_index":2133,"title":{},"body":{"license.html":{}}}],["run",{"_index":1597,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":1627,"title":{},"body":{"index.html":{},"license.html":{}}}],["runs",{"_index":1887,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":164,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1228,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["safest",{"_index":2398,"title":{},"body":{"license.html":{}}}],["sake",{"_index":1746,"title":{},"body":{"license.html":{}}}],["sale",{"_index":2250,"title":{},"body":{"license.html":{}}}],["same",{"_index":1727,"title":{},"body":{"license.html":{}}}],["satisfy",{"_index":2066,"title":{},"body":{"license.html":{}}}],["saverefreshtoken",{"_index":967,"title":{},"body":{"injectables/JwtService.html":{}}}],["saverefreshtoken(token",{"_index":975,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken",{"_index":968,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":977,"title":{},"body":{"injectables/JwtService.html":{}}}],["saying",{"_index":2060,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":1606,"title":{},"body":{"index.html":{}}}],["scale",{"_index":98,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["scale(_val",{"_index":627,"title":{},"body":{"components/ConfigComponent.html":{}}}],["scales",{"_index":493,"title":{},"body":{"components/ConfigComponent.html":{}}}],["scheme",{"_index":121,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["school",{"_index":2423,"title":{},"body":{"license.html":{}}}],["scope",{"_index":2301,"title":{},"body":{"license.html":{}}}],["scripts",{"_index":1893,"title":{},"body":{"license.html":{}}}],["scroll",{"_index":862,"title":{},"body":{"components/HomeComponent.html":{}}}],["scroll'.split",{"_index":952,"title":{},"body":{"components/HomeComponent.html":{}}}],["scrolling",{"_index":833,"title":{},"body":{"components/HomeComponent.html":{}}}],["secondarily",{"_index":1826,"title":{},"body":{"license.html":{}}}],["secret",{"_index":1328,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["section",{"_index":1940,"title":{},"body":{"license.html":{}}}],["sections",{"_index":2023,"title":{},"body":{"license.html":{}}}],["securepasswordregex",{"_index":1297,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":1652,"title":{},"body":{"index.html":{},"license.html":{}}}],["segment.path",{"_index":930,"title":{},"body":{"components/HomeComponent.html":{}}}],["select(issuccess",{"_index":779,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectauthorizationerror",{"_index":1062,"title":{},"body":{"components/LoginComponent.html":{}}}],["select(selectcurrentuser",{"_index":761,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectcurrentusererror",{"_index":913,"title":{},"body":{"components/HomeComponent.html":{}}}],["select(selectforgotpassworderror",{"_index":765,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["select(selectregistrationerror",{"_index":1300,"title":{},"body":{"components/RegisterComponent.html":{}}}],["select(selectresetpassworderror",{"_index":1335,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["selectauth",{"_index":1485,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectauthorizationerror",{"_index":1061,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrentuser",{"_index":740,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrentusererror",{"_index":882,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":137,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["selectedlanguage",{"_index":1403,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectedlanguage.label",{"_index":1436,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectforgotpassworderror",{"_index":741,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["selectregistrationerror",{"_index":1296,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectresetpassworderror",{"_index":1334,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":2266,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2249,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":1806,"title":{},"body":{"license.html":{}}}],["sends",{"_index":1112,"title":{},"body":{"injectables/MenuService.html":{}}}],["separable",{"_index":2075,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2008,"title":{},"body":{"license.html":{}}}],["separated",{"_index":1178,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["separately",{"_index":2005,"title":{},"body":{"license.html":{}}}],["serve",{"_index":1599,"title":{},"body":{"index.html":{}}}],["served",{"_index":1657,"title":{},"body":{"index.html":{}}}],["server",{"_index":1089,"title":{},"body":{"injectables/MemoryStorage.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["serverconfig",{"_index":1462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serves",{"_index":1880,"title":{},"body":{"license.html":{}}}],["service",{"_index":508,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["services",{"_index":1122,"title":{},"body":{"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["services/api/auth.api.service",{"_index":369,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["services/token",{"_index":370,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["servicing",{"_index":2361,"title":{},"body":{"license.html":{}}}],["sessionstorage",{"_index":1349,"title":{"injectables/SessionStorage.html":{}},"body":{"injectables/SessionStorage.html":{},"coverage.html":{}}}],["set",{"_index":144,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setcurrentuser",{"_index":442,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setinputstyle(_val",{"_index":606,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setitem",{"_index":1005,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setitem(key",{"_index":1013,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setmenumode(_val",{"_index":602,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setripple(_val",{"_index":610,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sets",{"_index":260,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["setscale(_val",{"_index":598,"title":{},"body":{"components/ConfigComponent.html":{}}}],["settings",{"_index":480,"title":{},"body":{"components/ConfigComponent.html":{}}}],["settoken",{"_index":443,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setupsidenavitems",{"_index":1357,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setupsidenavitems(sidenav",{"_index":1379,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setvisible(_val",{"_index":593,"title":{},"body":{"components/ConfigComponent.html":{}}}],["several",{"_index":90,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["severity",{"_index":770,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["shall",{"_index":1946,"title":{},"body":{"license.html":{}}}],["shape",{"_index":166,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["share",{"_index":1693,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1899,"title":{},"body":{"license.html":{}}}],["short",{"_index":2411,"title":{},"body":{"license.html":{}}}],["show",{"_index":1730,"title":{},"body":{"license.html":{}}}],["showconfigsidebar",{"_index":195,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["shown",{"_index":189,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showprofilesidebar",{"_index":190,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["shows",{"_index":560,"title":{},"body":{"components/ConfigComponent.html":{}}}],["side",{"_index":1377,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["sidebar",{"_index":193,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["sidebar.component.html",{"_index":1354,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1353,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":72,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["sidebarmodule",{"_index":484,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sidebars",{"_index":178,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sidenav",{"_index":935,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["sidenav.general",{"_index":1389,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.home",{"_index":1390,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sign",{"_index":2424,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["significant",{"_index":2104,"title":{},"body":{"license.html":{}}}],["signout",{"_index":310,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":1961,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":2321,"title":{},"body":{"license.html":{}}}],["single",{"_index":2293,"title":{},"body":{"license.html":{}}}],["size",{"_index":153,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sizes",{"_index":590,"title":{},"body":{"components/ConfigComponent.html":{}}}],["skip",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snippet",{"_index":1118,"title":{},"body":{"injectables/MenuService.html":{}}}],["software",{"_index":1672,"title":{},"body":{"license.html":{}}}],["sold",{"_index":2086,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1926,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1937,"title":{},"body":{"license.html":{}}}],["solution",{"_index":1572,"title":{},"body":{"index.html":{}}}],["somewhere",{"_index":2560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"index.html":{},"license.html":{}}}],["spare",{"_index":2040,"title":{},"body":{"license.html":{}}}],["speak",{"_index":1706,"title":{},"body":{"license.html":{}}}],["special",{"_index":1792,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1885,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":1903,"title":{},"body":{"license.html":{}}}],["specified",{"_index":543,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["specifies",{"_index":2338,"title":{},"body":{"license.html":{}}}],["specify",{"_index":2342,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":2332,"title":{},"body":{"license.html":{}}}],["src/.../api.ts",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.server.ts",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1564,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.state.ts",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.actions.ts",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.reducer.ts",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.selectors.ts",{"_index":2449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.production.ts",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.enum.ts",{"_index":1540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../regex.constants.ts",{"_index":2450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../registration.guard.ts",{"_index":2452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resource",{"_index":1541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state",{"_index":1543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../token",{"_index":2451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1463,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/domain/dto/requests/authenticate",{"_index":474,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/forgot",{"_index":803,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/register",{"_index":1324,"title":{},"body":{"interfaces/RegisterRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/reset",{"_index":1348,"title":{},"body":{"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/token.dto.ts",{"_index":1396,"title":{},"body":{"interfaces/TokenDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/user.dto.ts",{"_index":1453,"title":{},"body":{"interfaces/UserDto.html":{},"coverage.html":{}}}],["src/app/core/domain/models/enums/permission.enum.ts",{"_index":1545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/resource",{"_index":1549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/state",{"_index":1562,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/menu",{"_index":1099,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"coverage.html":{}}}],["src/app/core/domain/models/token.entity.ts",{"_index":1392,"title":{},"body":{"interfaces/Token.html":{},"coverage.html":{}}}],["src/app/core/domain/models/user.entity.ts",{"_index":1438,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/guards/registration.guard.ts",{"_index":1469,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts",{"_index":1471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/api/api.ts",{"_index":1474,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/api/auth.api.service.ts",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/api/auth.api.service.ts:14",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:17",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:25",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:33",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:37",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:45",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:53",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:61",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/layout.service.ts",{"_index":83,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"coverage.html":{}}}],["src/app/core/services/layout.service.ts:113",{"_index":999,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:128",{"_index":995,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:137",{"_index":997,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:143",{"_index":996,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:149",{"_index":998,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:154",{"_index":991,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:178",{"_index":993,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:188",{"_index":992,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:197",{"_index":989,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:209",{"_index":987,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:218",{"_index":988,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:225",{"_index":990,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:98",{"_index":994,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/local",{"_index":1000,"title":{},"body":{"injectables/LocalStorage.html":{},"coverage.html":{}}}],["src/app/core/services/memory",{"_index":1078,"title":{},"body":{"injectables/MemoryStorage.html":{},"coverage.html":{}}}],["src/app/core/services/menu.service.ts",{"_index":1103,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["src/app/core/services/menu.service.ts:16",{"_index":1121,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:22",{"_index":1127,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:27",{"_index":1126,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:31",{"_index":1129,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:40",{"_index":1111,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:47",{"_index":1119,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/session",{"_index":1350,"title":{},"body":{"injectables/SessionStorage.html":{},"coverage.html":{}}}],["src/app/core/services/token",{"_index":962,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/app.state.ts",{"_index":288,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.actions.ts",{"_index":1481,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.effects.ts",{"_index":302,"title":{},"body":{"injectables/AuthEffects.html":{},"coverage.html":{}}}],["src/app/core/state/auth/auth.effects.ts:106",{"_index":365,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:117",{"_index":352,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:134",{"_index":355,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:26",{"_index":315,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:33",{"_index":348,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:45",{"_index":333,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:66",{"_index":345,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:80",{"_index":360,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:94",{"_index":339,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.reducer.ts",{"_index":425,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.selectors.ts",{"_index":1484,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/utils/regex.constants.ts",{"_index":1486,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/auth/auth.component.ts",{"_index":297,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/forgot",{"_index":682,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts",{"_index":957,"title":{},"body":{"components/InvitationComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/login/login.component.ts",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/login/login.component.ts:127",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:136",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:142",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:146",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:150",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:65",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:76",{"_index":1054,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:81",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:82",{"_index":1052,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:84",{"_index":1056,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:85",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:86",{"_index":1055,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:88",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:99",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts",{"_index":1275,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/register/register.component.ts:100",{"_index":1283,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:131",{"_index":1281,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:142",{"_index":1282,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:148",{"_index":1284,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:159",{"_index":1280,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:67",{"_index":1279,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:78",{"_index":1286,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:79",{"_index":1287,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:81",{"_index":1292,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:96",{"_index":1294,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:97",{"_index":1285,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:98",{"_index":1293,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/reset",{"_index":1325,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/features/home/components/config/config.component.ts",{"_index":476,"title":{},"body":{"components/ConfigComponent.html":{},"coverage.html":{}}}],["src/app/features/home/components/config/config.component.ts:105",{"_index":559,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:117",{"_index":546,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:139",{"_index":564,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:159",{"_index":553,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:167",{"_index":556,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:175",{"_index":541,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:37",{"_index":529,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:43",{"_index":505,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:57",{"_index":581,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:58",{"_index":582,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:62",{"_index":592,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:66",{"_index":594,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:70",{"_index":597,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:74",{"_index":599,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:78",{"_index":601,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:82",{"_index":603,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:86",{"_index":605,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:90",{"_index":607,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:94",{"_index":609,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:98",{"_index":611,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/footer/footer.component.ts",{"_index":677,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts",{"_index":1134,"title":{},"body":{"components/MenuitemComponent.html":{},"coverage.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:103",{"_index":1214,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:111",{"_index":1151,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:129",{"_index":1213,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:131",{"_index":1220,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:171",{"_index":1207,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:185",{"_index":1208,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:209",{"_index":1190,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:229",{"_index":1222,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:234",{"_index":1188,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:241",{"_index":1203,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:62",{"_index":1172,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:69",{"_index":1164,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:74",{"_index":1183,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:83",{"_index":1176,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:89",{"_index":1209,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:96",{"_index":1218,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts",{"_index":1352,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:19",{"_index":1358,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:36",{"_index":1382,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:37",{"_index":1381,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:44",{"_index":1375,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:54",{"_index":1380,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts",{"_index":1397,"title":{},"body":{"components/TopbarComponent.html":{},"coverage.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:27",{"_index":1424,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:28",{"_index":1427,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:29",{"_index":1409,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:32",{"_index":1421,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:40",{"_index":1415,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:42",{"_index":1420,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:44",{"_index":1425,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:46",{"_index":1428,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:48",{"_index":1414,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:53",{"_index":1413,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:58",{"_index":1411,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:62",{"_index":1412,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":805,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:120",{"_index":868,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:122",{"_index":870,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:123",{"_index":871,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:125",{"_index":873,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:127",{"_index":875,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:129",{"_index":869,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:130",{"_index":874,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:132",{"_index":859,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:146",{"_index":858,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:167",{"_index":837,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:208",{"_index":850,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:222",{"_index":854,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:233",{"_index":829,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:244",{"_index":860,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:258",{"_index":878,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":865,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:44",{"_index":828,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:49",{"_index":872,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:50",{"_index":876,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/environments/environment.development.ts",{"_index":1499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.production.ts",{"_index":1500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":1502,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":1589,"title":{},"body":{"index.html":{}}}],["stand",{"_index":1778,"title":{},"body":{"license.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["standard",{"_index":1659,"title":{},"body":{"index.html":{},"license.html":{}}}],["standards",{"_index":1867,"title":{},"body":{"license.html":{}}}],["start",{"_index":2399,"title":{},"body":{"license.html":{}}}],["started",{"_index":1567,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":2412,"title":{},"body":{"license.html":{}}}],["state",{"_index":167,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["state.authstate",{"_index":2563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.credentials",{"_index":2565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.error",{"_index":2566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.forgotpassworderror",{"_index":2568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.registrationerror",{"_index":2569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.resetpassworderror",{"_index":2570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.status",{"_index":2562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.token",{"_index":2564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.user",{"_index":2567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stated",{"_index":1914,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2182,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":853,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["statestatus",{"_index":435,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/enumerations.html":{}}}],["statestatus.error",{"_index":458,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.loading",{"_index":449,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.pending",{"_index":445,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.success",{"_index":455,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":132,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenudesktopinactive",{"_index":169,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenumobileactive",{"_index":173,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["stating",{"_index":1983,"title":{},"body":{"license.html":{}}}],["status",{"_index":431,"title":{},"body":{"interfaces/AuthState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["status.enum",{"_index":439,"title":{},"body":{"interfaces/AuthState.html":{}}}],["status.enum.ts",{"_index":1544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["steps",{"_index":1734,"title":{},"body":{"license.html":{}}}],["storage",{"_index":210,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["storage.service",{"_index":371,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts",{"_index":963,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:10",{"_index":971,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:12",{"_index":1080,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:14",{"_index":972,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:16",{"_index":1081,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:19",{"_index":978,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:20",{"_index":1016,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:24",{"_index":974,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:26",{"_index":1082,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:28",{"_index":976,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:30",{"_index":1083,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:32",{"_index":1010,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:33",{"_index":973,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:36",{"_index":1012,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:40",{"_index":1014,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:6",{"_index":1085,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:8",{"_index":1086,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:9",{"_index":1007,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["store",{"_index":710,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["store.dispatch(settoken(refreshresult",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.dispatch(signout",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1611,"title":{},"body":{"index.html":{}}}],["string",{"_index":118,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["string(this.index",{"_index":1252,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["strings",{"_index":1368,"title":{},"body":{"components/SidebarComponent.html":{}}}],["style",{"_index":125,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["styles",{"_index":111,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["styleurls",{"_index":1137,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["sub",{"_index":1174,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subdividing",{"_index":2230,"title":{},"body":{"license.html":{}}}],["subject",{"_index":163,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["sublicenses",{"_index":2262,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":1939,"title":{},"body":{"license.html":{}}}],["submenuanimation",{"_index":1147,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subprograms",{"_index":1902,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":2427,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":226,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe((data",{"_index":756,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe((error",{"_index":766,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((issuccess",{"_index":780,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((user",{"_index":762,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribes",{"_index":1152,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subscribing",{"_index":1105,"title":{},"body":{"injectables/MenuService.html":{}}}],["subscription",{"_index":719,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscriptions",{"_index":1205,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subsection",{"_index":2050,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":2100,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":1776,"title":{},"body":{"license.html":{}}}],["success",{"_index":453,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["successsubscription",{"_index":700,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":92,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["sue",{"_index":2275,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":2109,"title":{},"body":{"license.html":{}}}],["summary",{"_index":771,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["supplement",{"_index":2140,"title":{},"body":{"license.html":{}}}],["support",{"_index":1991,"title":{},"body":{"license.html":{}}}],["supports",{"_index":2057,"title":{},"body":{"license.html":{}}}],["sure",{"_index":1648,"title":{},"body":{"index.html":{},"license.html":{}}}],["surrender",{"_index":1719,"title":{},"body":{"license.html":{}}}],["survive",{"_index":2181,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":2375,"title":{},"body":{"license.html":{}}}],["switchmap",{"_index":335,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["switchmap((request",{"_index":319,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["symbol",{"_index":1165,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["system",{"_index":518,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["systematic",{"_index":1763,"title":{},"body":{"license.html":{}}}],["t",{"_index":1619,"title":{},"body":{"index.html":{}}}],["table",{"_index":1504,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1503,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":277,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["tailwind",{"_index":672,"title":{},"body":{"components/ConfigComponent.html":{}}}],["take",{"_index":1690,"title":{},"body":{"license.html":{}}}],["takes",{"_index":506,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["tangible",{"_index":2080,"title":{},"body":{"license.html":{}}}],["tap",{"_index":362,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["target",{"_index":1196,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["team",{"_index":1561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["teamurl",{"_index":2454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technological",{"_index":1949,"title":{},"body":{"license.html":{}}}],["technologies",{"_index":1595,"title":{},"body":{"index.html":{}}}],["tells",{"_index":1854,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1091,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["term",{"_index":1912,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":2410,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":2186,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":2209,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2195,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2183,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1731,"title":{},"body":{"license.html":{}}}],["test",{"_index":1630,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1637,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1629,"title":{},"body":{"index.html":{}}}],["text",{"_index":843,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["theme",{"_index":95,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["themelink",{"_index":635,"title":{},"body":{"components/ConfigComponent.html":{}}}],["themelink.clonenode(true",{"_index":648,"title":{},"body":{"components/ConfigComponent.html":{}}}],["themelink.nextsibling",{"_index":653,"title":{},"body":{"components/ConfigComponent.html":{}}}],["themelink.parentnode!.insertbefore(clonelinkelement",{"_index":652,"title":{},"body":{"components/ConfigComponent.html":{}}}],["themelink.remove",{"_index":655,"title":{},"body":{"components/ConfigComponent.html":{}}}],["therefore",{"_index":1720,"title":{},"body":{"license.html":{}}}],["things",{"_index":1713,"title":{},"body":{"license.html":{}}}],["third",{"_index":1976,"title":{},"body":{"license.html":{}}}],["this.actions$.pipe",{"_index":317,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.active",{"_index":1242,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.applyscale",{"_index":657,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.appsidebar.el.nativeelement.contains(event.target",{"_index":894,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.appsidebar.el.nativeelement.issamenode(event.target",{"_index":893,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.contains(event.target",{"_index":900,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.issamenode(event.target",{"_index":899,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.contains(event.target",{"_index":896,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.issamenode",{"_index":895,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.contains",{"_index":902,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.issamenode",{"_index":901,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice",{"_index":320,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.forgotpassword(request.username).pipe",{"_index":341,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.me().pipe",{"_index":336,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.register(request).pipe",{"_index":350,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.resetpassword(request).pipe",{"_index":357,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.blockbodyscroll",{"_index":905,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.checkusername(data",{"_index":757,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.config.menumode",{"_index":269,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.asobservable",{"_index":249,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.next(this.config",{"_index":286,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.createbreadcrumbs(child",{"_index":940,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createbreadcrumbs(this.route.root",{"_index":911,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentusererrorsubscription",{"_index":912,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentusererrorsubscription?.unsubscribe",{"_index":920,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data",{"_index":1093,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.data[key",{"_index":1094,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.document",{"_index":891,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist",{"_index":945,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.add('blocked",{"_index":946,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.remove('blocked",{"_index":948,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classname",{"_index":947,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.documentelement.style.fontsize",{"_index":658,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.document.getelementbyid('theme",{"_index":636,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.errorsubscription",{"_index":764,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errorsubscription?.unsubscribe",{"_index":783,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.forgotpasswordform.get('username')?.value",{"_index":791,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formbuilder.group",{"_index":721,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.hidemenu",{"_index":897,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.hideprofilemenu",{"_index":903,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.home",{"_index":915,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.get(api.authurl",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.index",{"_index":1251,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.isdesktop",{"_index":255,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.isoverlay",{"_index":252,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.isusernametaken",{"_index":794,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.item",{"_index":1268,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.command",{"_index":1266,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.disabled",{"_index":1264,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.items",{"_index":1269,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.routerlink",{"_index":1248,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.items",{"_index":910,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.jwtservice.clear",{"_index":363,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.saverefreshtoken(token.refreshtoken",{"_index":328,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.savetoken(token.accesstoken",{"_index":327,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.key",{"_index":1244,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.languages[0",{"_index":1432,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.layoutservice.config.colorscheme",{"_index":640,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.inputstyle",{"_index":630,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.menumode",{"_index":628,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.ripple",{"_index":632,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.scale",{"_index":626,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.config.theme",{"_index":642,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.onconfigupdate",{"_index":643,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.overlayopen$.subscribe",{"_index":888,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.showconfigsidebar",{"_index":634,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.configsidebarvisible",{"_index":624,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.menuhoveractive",{"_index":942,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.overlaymenuactive",{"_index":941,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.profilesidebarvisible",{"_index":944,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenudesktopinactive",{"_index":954,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenumobileactive",{"_index":904,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.loginform.get('password')?.value",{"_index":1066,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":1065,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.menuoutsideclicklistener",{"_index":889,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.menuresetsubscription",{"_index":1246,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuresetsubscription.unsubscribe",{"_index":1273,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.menusource$.subscribe",{"_index":1239,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.onmenustatechange",{"_index":1261,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.resetsource$.subscribe",{"_index":1247,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusource.asobservable",{"_index":1125,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusource.next(event",{"_index":1132,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusourcesubscription",{"_index":1238,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusourcesubscription.unsubscribe",{"_index":1272,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.messageservice.add",{"_index":769,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.model",{"_index":1386,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.model.push",{"_index":1388,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.overlaymenuopensubscription",{"_index":887,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlaymenuopensubscription.unsubscribe",{"_index":921,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlayopen.asobservable",{"_index":250,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.overlayopen.next(null",{"_index":254,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.parentkey",{"_index":1250,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.profilemenuoutsideclicklistener",{"_index":898,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.registerform.get('email')?.value",{"_index":1305,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('firstname')?.value",{"_index":1306,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('lastname')?.value",{"_index":1307,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('password')?.value",{"_index":1304,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('username')?.value",{"_index":1303,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.renderer.listen",{"_index":890,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.replacethemelink(newhref",{"_index":641,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.resetpasswordform.get('password')?.value",{"_index":1342,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetsource.asobservable",{"_index":1128,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.resetsource.next(true",{"_index":1133,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.root",{"_index":1270,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.events",{"_index":906,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["this.router.isactive(this.item.routerlink[0",{"_index":1254,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":914,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":1299,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/home",{"_index":763,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/home/user",{"_index":1434,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.scale",{"_index":656,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.secret",{"_index":1340,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.selectedlanguage",{"_index":1431,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.setupsidenavitems(sidenav",{"_index":1387,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.state.configsidebarvisible",{"_index":261,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.overlaymenuactive",{"_index":253,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.profilesidebarvisible",{"_index":259,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenudesktopinactive",{"_index":256,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenumobileactive",{"_index":257,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.storage",{"_index":1025,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.clear",{"_index":1028,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(key",{"_index":1029,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(refresh_token_key",{"_index":986,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.getitem(token_key",{"_index":984,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.key(index",{"_index":1030,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.length",{"_index":1027,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(key",{"_index":1031,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(refresh_token_key",{"_index":982,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.removeitem(token_key",{"_index":981,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(key",{"_index":1032,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.setitem(refresh_token_key",{"_index":985,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(token_key",{"_index":983,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.store",{"_index":760,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch",{"_index":790,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(loadcurrentuser",{"_index":758,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(registernewuser(dto",{"_index":1308,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.store.dispatch(signout",{"_index":1433,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.store.select(isloadingauthstate",{"_index":725,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(selectcurrentuser",{"_index":867,"title":{},"body":{"components/HomeComponent.html":{},"components/TopbarComponent.html":{}}}],["this.successsubscription",{"_index":778,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.successsubscription?.unsubscribe",{"_index":785,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant",{"_index":772,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant('auth.reset",{"_index":1336,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.translateservice.stream('sidenav').subscribe",{"_index":909,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["this.translateservice.use(language.value",{"_index":1435,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.unblockbodyscroll",{"_index":943,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updateactivestatefromroute",{"_index":1249,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.usernamechecksubscription",{"_index":792,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usernamechecksubscription?.unsubscribe",{"_index":786,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usersubscription",{"_index":759,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.usersubscription?.unsubscribe",{"_index":784,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["those",{"_index":1774,"title":{},"body":{"license.html":{}}}],["though",{"_index":2143,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":1785,"title":{},"body":{"license.html":{}}}],["three",{"_index":2038,"title":{},"body":{"license.html":{}}}],["through",{"_index":204,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["throwerror",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thus",{"_index":1931,"title":{},"body":{"license.html":{}}}],["time",{"_index":2205,"title":{},"body":{"license.html":{}}}],["toastmodule",{"_index":694,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["todo",{"_index":207,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MemoryStorage.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":175,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["toggles",{"_index":251,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["toggling",{"_index":1193,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["token",{"_index":432,"title":{"interfaces/Token.html":{}},"body":{"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_key",{"_index":979,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokendto",{"_index":409,"title":{"interfaces/TokenDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/TokenDto.html":{},"coverage.html":{}}}],["tools",{"_index":1895,"title":{},"body":{"license.html":{}}}],["topbar",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["topbar.component.html",{"_index":1400,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":1401,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbarcomponent",{"_index":74,"title":{"components/TopbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["topbarmenubutton",{"_index":1404,"title":{},"body":{"components/TopbarComponent.html":{}}}],["track",{"_index":180,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["trade",{"_index":2167,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2166,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2168,"title":{},"body":{"license.html":{}}}],["trail",{"_index":841,"title":{},"body":{"components/HomeComponent.html":{}}}],["transaction",{"_index":2115,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1844,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":2117,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":2228,"title":{},"body":{"license.html":{}}}],["transition",{"_index":1225,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["translate",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["translate.addlangs(['en",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('en",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["translateloader",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatemodule",{"_index":486,"title":{},"body":{"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["translatemodule.forroot",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateservice",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["translating",{"_index":1367,"title":{},"body":{"components/SidebarComponent.html":{}}}],["transmission",{"_index":2070,"title":{},"body":{"license.html":{}}}],["treated",{"_index":2142,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1956,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["trigger",{"_index":1154,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["trigger('children",{"_index":1231,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["triggered",{"_index":1115,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["troubleshooting",{"_index":1580,"title":{},"body":{"index.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1534,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":507,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["type",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":1449,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["type.enum.ts",{"_index":1542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types",{"_index":645,"title":{},"body":{"components/ConfigComponent.html":{}}}],["typescript",{"_index":89,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["typical",{"_index":2094,"title":{},"body":{"license.html":{}}}],["typically",{"_index":573,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["ui",{"_index":143,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{}}}],["unacceptable",{"_index":1771,"title":{},"body":{"license.html":{}}}],["unautherrorinterceptor",{"_index":1473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["unblock",{"_index":863,"title":{},"body":{"components/HomeComponent.html":{}}}],["unblockbodyscroll",{"_index":822,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":933,"title":{},"body":{"components/HomeComponent.html":{}}}],["under",{"_index":1810,"title":{},"body":{"license.html":{}}}],["unique",{"_index":1169,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["uniquely",{"_index":1180,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["unit",{"_index":1628,"title":{},"body":{"index.html":{}}}],["unless",{"_index":2103,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":1917,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":1822,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":1943,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":2138,"title":{},"body":{"license.html":{}}}],["unsubscribe",{"_index":1215,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["unsubscribes",{"_index":1204,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["until",{"_index":2194,"title":{},"body":{"license.html":{}}}],["up",{"_index":1376,"title":{},"body":{"components/SidebarComponent.html":{}}}],["update",{"_index":551,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["updateactivestatefromroute",{"_index":1143,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["updated",{"_index":223,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["updatedat",{"_index":1442,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["updates",{"_index":284,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["updating",{"_index":522,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["url",{"_index":577,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":1175,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":104,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["usefactory",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useful",{"_index":2404,"title":{},"body":{"license.html":{}}}],["user",{"_index":197,"title":{"interfaces/User.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1370,"title":{},"body":{"components/SidebarComponent.html":{}}}],["userdto",{"_index":413,"title":{"interfaces/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["userid",{"_index":1443,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username",{"_index":321,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username/taken",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernamecheckerror",{"_index":433,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["usernamechecksubscription",{"_index":701,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["usernameinput",{"_index":702,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["users",{"_index":1700,"title":{},"body":{"license.html":{}}}],["userservice",{"_index":1385,"title":{},"body":{"components/SidebarComponent.html":{}}}],["userstorageservice",{"_index":1372,"title":{},"body":{"components/SidebarComponent.html":{}}}],["usersubscription",{"_index":703,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uses",{"_index":2097,"title":{},"body":{"license.html":{}}}],["using",{"_index":227,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["utilizes",{"_index":1586,"title":{},"body":{"index.html":{}}}],["v1/auth",{"_index":2473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/device",{"_index":2467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/files",{"_index":2471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/invitation",{"_index":2465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/members",{"_index":2469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/organization",{"_index":2463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/platform",{"_index":2461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/project",{"_index":2457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/team",{"_index":2455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/user",{"_index":2459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":2037,"title":{},"body":{"license.html":{}}}],["validators",{"_index":735,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.email",{"_index":1289,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":723,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":1053,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.pattern(securepasswordregex",{"_index":1288,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":722,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["value",{"_index":155,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.key",{"_index":1243,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.key.startswith(this.key",{"_index":1245,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.routeevent",{"_index":1241,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["values",{"_index":122,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["var",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["varaibles",{"_index":1661,"title":{},"body":{"index.html":{}}}],["variable",{"_index":246,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1649,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":100,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["verbatim",{"_index":1680,"title":{},"body":{"license.html":{}}}],["vercel/analytics",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["vercel/speed",{"_index":1522,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":1585,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":1697,"title":{},"body":{"license.html":{}}}],["via",{"_index":1631,"title":{},"body":{"index.html":{}}}],["view",{"_index":1363,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["viewchild",{"_index":734,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["viewchild('menubutton",{"_index":1423,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('topbarmenu",{"_index":1422,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('topbarmenubutton",{"_index":1426,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('username",{"_index":732,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewchild(sidebarcomponent",{"_index":864,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild(topbarcomponent",{"_index":866,"title":{},"body":{"components/HomeComponent.html":{}}}],["violates",{"_index":2132,"title":{},"body":{"license.html":{}}}],["violation",{"_index":2190,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":176,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["visible",{"_index":194,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["visible(_val",{"_index":625,"title":{},"body":{"components/ConfigComponent.html":{}}}],["void",{"_index":544,"title":{},"body":{"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["volume",{"_index":2014,"title":{},"body":{"license.html":{}}}],["w",{"_index":2414,"title":{},"body":{"license.html":{}}}],["waive",{"_index":1965,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":2387,"title":{},"body":{"license.html":{}}}],["want",{"_index":1710,"title":{},"body":{"license.html":{}}}],["warning",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":1855,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1744,"title":{},"body":{"license.html":{}}}],["way",{"_index":1703,"title":{},"body":{"license.html":{}}}],["ways",{"_index":2027,"title":{},"body":{"license.html":{}}}],["web",{"_index":1359,"title":{},"body":{"components/SidebarComponent.html":{}}}],["webpage",{"_index":547,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["welcome",{"_index":2415,"title":{},"body":{"license.html":{}}}],["well",{"_index":524,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["whatever",{"_index":2232,"title":{},"body":{"license.html":{}}}],["whether",{"_index":140,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["whole",{"_index":1875,"title":{},"body":{"license.html":{}}}],["whose",{"_index":2077,"title":{},"body":{"license.html":{}}}],["widely",{"_index":1871,"title":{},"body":{"license.html":{}}}],["width",{"_index":271,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window",{"_index":270,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["window.innerwidth",{"_index":281,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window.localstorage",{"_index":1026,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["window.sessionstorage",{"_index":1351,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["window?.localstorage",{"_index":1024,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["wipo",{"_index":1955,"title":{},"body":{"license.html":{}}}],["wish",{"_index":1662,"title":{},"body":{"index.html":{},"license.html":{}}}],["withcomponentinputbinding",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":1161,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["withinterceptors([authinterceptor",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1201,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["withpreloading(preloadallmodules",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":1701,"title":{},"body":{"license.html":{}}}],["work's",{"_index":1894,"title":{},"body":{"license.html":{}}}],["working",{"_index":1872,"title":{},"body":{"license.html":{}}}],["works",{"_index":961,"title":{},"body":{"components/InvitationComponent.html":{},"license.html":{}}}],["worldwide",{"_index":2265,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":1373,"title":{},"body":{"components/SidebarComponent.html":{}}}],["writing",{"_index":2349,"title":{},"body":{"license.html":{}}}],["written",{"_index":2036,"title":{},"body":{"license.html":{}}}],["years",{"_index":2039,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":2282,"title":{},"body":{"license.html":{}}}],["z])(?=.*[${passwordspecialchars}])(?=\\\\s+$).{${passwordminlength",{"_index":2574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*[a",{"_index":2573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1536,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  constructor(private translate: TranslateService) {\n    translate.setDefaultLang('en');\n    translate.addLangs(['en']);\n    translate.use('en');\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppConfig.html":{"url":"interfaces/AppConfig.html","title":"interface - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The above code is defining an interface named AppConfig in TypeScript. This interface has several\nproperties such as inputStyle, colorScheme, theme, ripple, menuMode, and scale. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe LayoutService class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colorScheme\n                                        \n                                \n                                \n                                        \n                                            inputStyle\n                                        \n                                \n                                \n                                        \n                                            menuMode\n                                        \n                                \n                                \n                                        \n                                            ripple\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorScheme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    colorScheme: string; is declaring a property named colorScheme of type string in the\nAppConfig interface. This property represents the color scheme of the layout and can have values\nsuch as 'light' or 'dark'. It is used in various functions of the LayoutService class to\ndetermine the current color scheme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputStyle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    inputStyle: string; is declaring a property named inputStyle of type string in the\nAppConfig interface. This property represents the style of the input elements in the layout and\ncan have values such as 'outlined' or 'filled'. It is used in various functions of the\nLayoutService class to determine the current input style of the layout and apply appropriate\nstyles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuMode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuMode: string; is declaring a property named menuMode of type string in the AppConfig\ninterface. This property represents the mode of the menu and can have values such as 'static',\n'overlay', or 'horizontal'. It is used in various functions of the LayoutService class to\ndetermine the behavior of the menu based on the selected mode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ripple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ripple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ripple: boolean; property in the AppConfig interface represents a configuration option for\nwhether or not to enable ripple effects on UI elements. If ripple is set to true, then UI\nelements such as buttons and links will have a ripple effect when clicked. If ripple is set to\nfalse, then no ripple effect will be applied.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    scale: number; is declaring a property named scale of type number in the AppConfig\ninterface. This property represents the scale of the layout and is used to adjust the size of\nvarious elements in the layout. The default value of scale is set to 14 in the config object\nof the LayoutService class.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    theme: string; is declaring a property named theme of type string in the AppConfig\ninterface. This property represents the theme of the layout and can have values such as\n'lara-light-blue', 'lara-dark-blue', or 'lara-green'. It is used in various functions of the\nLayoutService class to determine the current theme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.configUpdate.next(this.config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/app.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authState:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthEffects } from './auth/auth.effects';\nimport { AuthState, authReducer } from './auth/auth.reducer';\n\nexport interface AppState {\n  authState: AuthState;\n}\n\nexport const appEfects = [AuthEffects];\nexport const appStore = {\n  authState: authReducer,\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n})\nexport class AuthComponent {}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate$\n                            \n                            \n                                authenticationSuccess$\n                            \n                            \n                                forgotPassword$\n                            \n                            \n                                loadCurrentUser$\n                            \n                            \n                                registerNewUser$\n                            \n                            \n                                registerNewUserSuccess$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signOut$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, jwtService: JwtService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/auth/auth.effects.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:106\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../../services/api/auth.api.service';\nimport { JwtService } from '../../services/token-storage.service';\nimport {\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  signOut,\n} from './auth.actions';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticate$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  );\n\n  forgotPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  resetPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  signOut$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  registerNewUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  registerNewUserSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/auth.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                me\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/auth.api.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: AuthenticateRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            AuthenticateRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n            \n                \nisUsernameTaken(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(dto: ResetPasswordRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ResetPasswordRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { api } from './api';\nimport { TokenDto } from '../../domain/dto/token.dto';\nimport { Observable } from 'rxjs';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { ResetPasswordRequestDto } from '../../domain/dto/requests/reset-password-request.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  refreshToken(refreshToken: string): Observable {\n    return this.http.post(\n      api.authUrl + '/refreshToken',\n      { refreshToken: refreshToken },\n      api.noAuthOptions\n    );\n  }\n\n  authenticate(request: AuthenticateRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/authenticate',\n      request,\n      api.noAuthOptions\n    );\n  }\n\n  me(): Observable {\n    return this.http.get(api.authUrl + '/me', api.authOptions);\n  }\n\n  isUsernameTaken(username: string): Observable {\n    const params = new HttpParams().set('username', username);\n    return this.http.get(api.authUrl + '/username/taken', {\n      ...api.noAuthOptions,\n      params,\n    });\n  }\n\n  forgotPassword(username: string): Observable {\n    return this.http.post(\n      api.authUrl + '/forgot-password',\n      { username: username },\n      api.noAuthOptions\n    );\n  }\n\n  resetPassword(dto: ResetPasswordRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/reset-password',\n      dto,\n      api.noAuthOptions\n    );\n  }\n\n  register(dto: RegisterRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/register',\n      dto,\n      api.noAuthOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            credentials\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            forgotPasswordError\n                                        \n                                \n                                \n                                        \n                                            isUsernameAvialable\n                                        \n                                \n                                \n                                        \n                                            registrationError\n                                        \n                                \n                                \n                                        \n                                            resetPasswordError\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            usernameCheckError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:         AuthenticateRequestDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticateRequestDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forgotPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUsernameAvialable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isUsernameAvialable:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         Token | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Token | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usernameCheckError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usernameCheckError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Token } from '../../domain/models/token.entity';\nimport { User } from '../../domain/models/user.entity';\nimport {\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  setCurrentUser,\n  setToken,\n  signOut,\n} from './auth.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface AuthState {\n  user: User | null;\n  error: any | null;\n  forgotPasswordError: null | any;\n  resetPasswordError: null | any;\n  registrationError: null | any;\n  usernameCheckError: null | any;\n  isUsernameAvialable: boolean | null;\n  token: Token | null;\n  credentials: AuthenticateRequestDto | null;\n  status: StateStatus;\n}\n\nexport const initialState: AuthState = {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n};\n\nexport const authReducer = createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, { error }) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Reset Password\n  on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, { error }) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Register new user\n  on(registerNewUser, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Register new user success\n  on(registerNewUserSuccess, (state) => ({\n    ...state,\n    registrationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Register new user failure\n  on(registerNewUserFailure, (state, { error }) => ({\n    ...state,\n    registrationError: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticateRequestDto.html":{"url":"interfaces/AuthenticateRequestDto.html","title":"interface - AuthenticateRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticateRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/authenticate-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticateRequestDto {\n    username: string,\n    password: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigComponent.html":{"url":"components/ConfigComponent.html","title":"component - ConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/config/config.component.ts\n\n\n\n    \n        Description\n    \n    \n        The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            SidebarModule\n                            RadioButtonModule\n                            TranslateModule\n                            InputSwitchModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n\n            \n                styleUrl\n                ./config.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    Public\n                                menuService\n                            \n                            \n                                scales\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyScale\n                            \n                            \n                                changeTheme\n                            \n                            \n                                decrementScale\n                            \n                            \n                                incrementScale\n                            \n                            \n                                onConfigButtonClick\n                            \n                            \n                                replaceThemeLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minimal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    visible\n                                \n                                \n                                    scale\n                                \n                                \n                                    menuMode\n                                \n                                \n                                    inputStyle\n                                \n                                \n                                    ripple\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, menuService: MenuService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes two parameters, a LayoutService and a MenuService.\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n\n                                                        \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        minimal\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/config/config.component.ts:37\n                            \n                        \n                \n                    \n                        @Input() minimal: boolean = false; is a decorator that marks the minimal property as an input\nproperty, which means that it can be passed as a value from a parent component to this component.\nThe minimal property is of type boolean and is initialized to false by default. This\nproperty can be used in the component's template to conditionally render certain elements or apply\ndifferent styles based on its value.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyScale\n                        \n                    \n                \n            \n            \n                \napplyScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:175\n                        \n                    \n\n\n            \n                \n                        This function sets the font size of the HTML document to a specified scale.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeTheme\n                        \n                    \n                \n            \n            \n                \nchangeTheme(theme: string, colorScheme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:117\n                        \n                    \n\n\n            \n                \n                        This function changes the theme and color scheme of a webpage by replacing the theme link and\nupdating the layout service configuration.\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \na string representing the new theme to be applied.\n\n\n                                            \n                                        \n                                        \n                                                colorScheme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe colorScheme parameter is a string that represents the color\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decrementScale\n                        \n                    \n                \n            \n            \n                \ndecrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:159\n                        \n                    \n\n\n            \n                \n                        This function decrements the scale property and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementScale\n                        \n                    \n                \n            \n            \n                \nincrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:167\n                        \n                    \n\n\n            \n                \n                        The function increments the scale property by 1 and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigButtonClick\n                        \n                    \n                \n            \n            \n                \nonConfigButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:105\n                        \n                    \n\n\n            \n                \n                        This function shows the configuration sidebar when the config button is clicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceThemeLink\n                        \n                    \n                \n            \n            \n                \nreplaceThemeLink(href: string, onComplete: Function)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:139\n                        \n                    \n\n\n            \n                \n                        This function replaces the href attribute of a link element with a new value and removes the\noriginal link element once the new one has loaded.\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA string representing the URL of the new theme CSS file to be loaded.\n\n\n                                            \n                                        \n                                        \n                                                onComplete\n                                            \n                                                            Function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nonComplete is a callback function that will be executed once\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:57\n                        \n                    \n\n            \n                \n                    - The layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:58\n                        \n                    \n\n            \n                \n                    - The `menuService` parameter is an instance of the\n`MenuService` class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [12, 13, 14, 15, 16]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                        \n                    \n\n            \n                \n                    scales is an array of numbers that represents the available font sizes that can be applied to\nthe HTML document. The default values are [12, 13, 14, 15, 16]. These values are used in\nconjunction with the incrementScale() and decrementScale() methods to adjust the font size of\nthe document.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n\n                \n                    \n                        getvisible()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:62\n                                \n                            \n\n                \n                    \n                        setvisible(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n\n                \n                    \n                        getscale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:70\n                                \n                            \n\n                \n                    \n                        setscale(_val: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:74\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        menuMode\n                    \n                \n\n                \n                    \n                        getmenuMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:78\n                                \n                            \n\n                \n                    \n                        setmenuMode(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:82\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        inputStyle\n                    \n                \n\n                \n                    \n                        getinputStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:86\n                                \n                            \n\n                \n                    \n                        setinputStyle(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:90\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ripple\n                    \n                \n\n                \n                    \n                        getripple()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:94\n                                \n                            \n\n                \n                    \n                        setripple(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:98\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\n\n/** The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings. */\n@Component({\n  selector: 'app-config',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    SidebarModule,\n    RadioButtonModule,\n    TranslateModule,\n    InputSwitchModule,\n    FormsModule\n  ],\n  styleUrl: './config.component.scss',\n  templateUrl: './config.component.html',\n})\nexport class ConfigComponent {\n  /** `@Input() minimal: boolean = false;` is a decorator that marks the `minimal` property as an input\n  property, which means that it can be passed as a value from a parent component to this component.\n  The `minimal` property is of type `boolean` and is initialized to `false` by default. This\n  property can be used in the component's template to conditionally render certain elements or apply\n  different styles based on its value. */\n  @Input() minimal: boolean = false;\n\n  /** `scales` is an array of numbers that represents the available font sizes that can be applied to\n  the HTML document. The default values are `[12, 13, 14, 15, 16]`. These values are used in\n  conjunction with the `incrementScale()` and `decrementScale()` methods to adjust the font size of\n  the document. */\n  scales: number[] = [12, 13, 14, 15, 16];\n\n  /**\n   * This is a constructor function that takes two parameters, a LayoutService and a MenuService.\n   * @param {LayoutService} layoutService - The layoutService parameter is a dependency injection of\n   * a service that provides functionality related to the layout of the application, such as managing\n   * the theme, language, and other UI-related settings. It is likely used to control the overall\n   * look and feel of the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the\n   * `MenuService` class, which is likely used to manage and manipulate the application's menu or\n   * navigation system. It may contain methods for adding, removing, or updating menu items, as well\n   * as handling user interactions with the menu.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public menuService: MenuService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {}\n\n  get visible(): boolean {\n    return this.layoutService.state.configSidebarVisible;\n  }\n\n  set visible(_val: boolean) {\n    this.layoutService.state.configSidebarVisible = _val;\n  }\n\n  get scale(): number {\n    return this.layoutService.config.scale;\n  }\n\n  set scale(_val: number) {\n    this.layoutService.config.scale = _val;\n  }\n\n  get menuMode(): string {\n    return this.layoutService.config.menuMode;\n  }\n\n  set menuMode(_val: string) {\n    this.layoutService.config.menuMode = _val;\n  }\n\n  get inputStyle(): string {\n    return this.layoutService.config.inputStyle;\n  }\n\n  set inputStyle(_val: string) {\n    this.layoutService.config.inputStyle = _val;\n  }\n\n  get ripple(): boolean {\n    return this.layoutService.config.ripple;\n  }\n\n  set ripple(_val: boolean) {\n    this.layoutService.config.ripple = _val;\n  }\n\n  /**\n   * This function shows the configuration sidebar when the config button is clicked.\n   */\n  onConfigButtonClick() {\n    this.layoutService.showConfigSidebar();\n  }\n\n  /**\n   * This function changes the theme and color scheme of a webpage by replacing the theme link and\n   * updating the layout service configuration.\n   * @param {string} theme - a string representing the new theme to be applied.\n   * @param {string} colorScheme - The `colorScheme` parameter is a string that represents the color\n   * scheme to be applied to the theme. It is used in conjunction with the `theme` parameter to\n   * update the theme of the application.\n   */\n  changeTheme(theme: string, colorScheme: string) {\n    const themeLink = this.document.getElementById('theme-css');\n    const newHref = themeLink\n      .getAttribute('href')!\n      .replace(this.layoutService.config.theme, theme);\n    this.layoutService.config.colorScheme;\n    this.replaceThemeLink(newHref, () => {\n      this.layoutService.config.theme = theme;\n      this.layoutService.config.colorScheme = colorScheme;\n      this.layoutService.onConfigUpdate();\n    });\n  }\n\n  /**\n   * This function replaces the href attribute of a link element with a new value and removes the\n   * original link element once the new one has loaded.\n   * @param {string} href - A string representing the URL of the new theme CSS file to be loaded.\n   * @param {Function} onComplete - `onComplete` is a callback function that will be executed once\n   * the new theme link has been loaded and applied. It is typically used to perform additional\n   * actions or update the UI after the theme has been changed.\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  replaceThemeLink(href: string, onComplete: Function) {\n    const id = 'theme-css';\n    const themeLink = this.document.getElementById('theme-css');\n    const cloneLinkElement = themeLink.cloneNode(true);\n\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n\n    themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n\n    cloneLinkElement.addEventListener('load', () => {\n      themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n      onComplete();\n    });\n  }\n\n  /**\n   * This function decrements the scale property and applies the new scale value.\n   */\n  decrementScale() {\n    this.scale--;\n    this.applyScale();\n  }\n\n  /**\n   * The function increments the scale property by 1 and applies the new scale value.\n   */\n  incrementScale() {\n    this.scale++;\n    this.applyScale();\n  }\n\n  /**\n   * This function sets the font size of the HTML document to a specified scale.\n   */\n  applyScale() {\n    this.document.documentElement.style.fontSize = this.scale + 'px';\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  {{ \"config.scale\" | translate }}\n  \n    \n    \n      \n    \n    \n  \n\n  \n    {{ \"config.menu_type\" | translate }}\n    \n      \n      {{ \"config.static\" | translate }}\n    \n    \n      \n      {{ \"config.overlay\" | translate }}\n    \n  \n\n  \n    {{ \"config.input_style\" | translate }}\n    \n      \n        \n        {{\n          \"config.outlined\" | translate\n        }}\n      \n      \n        \n        {{\n          \"config.filled\" | translate\n        }}\n      \n    \n\n    {{ \"config.ripple_effect\" | translate }}\n    \n  \n\n  Bootstrap\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design Compact\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Tailwind\n  \n    \n      \n        \n      \n    \n  \n\n  Fluent UI\n  \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2022\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2021\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \"config.scale\" | translate }}                                {{ \"config.menu_type\" | translate }}                {{ \"config.static\" | translate }}                    {{ \"config.overlay\" | translate }}            {{ \"config.input_style\" | translate }}                          {{          \"config.outlined\" | translate        }}                            {{          \"config.filled\" | translate        }}              {{ \"config.ripple_effect\" | translate }}        Bootstrap                                                                                                                      Material Design                                                                                                                      Material Design Compact                                                                                                                      Tailwind                                  Fluent UI                                  PrimeOne Design - 2022                                                                                                                                                                                                                                      PrimeOne Design - 2021                                                                                                                                                                                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n  by\n  DRadman\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  by  DRadman'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputTextModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                forgotPasswordForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AppState } from '../../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router, RouterModule } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectForgotPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  forgotPassword,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputTextModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n})\nexport class ForgotPasswordComponent implements AfterViewInit, OnInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService\n  ) {}\n\n  forgotPasswordForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectForgotPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 404) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.user_does_not_exist'\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.error_description'\n              ),\n            });\n          }\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.forgot-password.success'\n            ),\n            detail: this.translateService.instant(\n              'auth.forgot-password.check_your_email'\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  // eslint-disable no-non-null-asserted-optional-chain\n  forgotPassword() {\n    this.store.dispatch(\n      forgotPassword({\n        username: this.forgotPasswordForm.get('username')?.value ?? '',\n      })\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.forgot-password.welcome_message\" | translate }}\n  \n  {{\n    \"auth.forgot-password.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n      \n      } @else if (isUsernameTaken) {\n      \n      } @else {\n      \n      }\n      \n    \n    {{ \"auth.forgot-password.username_is_required\" | translate }}\n    {{ \"auth.forgot-password.username_length\" | translate }}\n\n    \n      {{ \"auth.forgot-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.forgot-password.welcome_message\" | translate }}    {{    \"auth.forgot-password.welcome_description\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {            } @else if (isUsernameTaken) {            } @else {            }              {{ \"auth.forgot-password.username_is_required\" | translate }}    {{ \"auth.forgot-password.username_length\" | translate }}          {{ \"auth.forgot-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForgotPasswordRequestDto.html":{"url":"interfaces/ForgotPasswordRequestDto.html","title":"interface - ForgotPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForgotPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForgotPasswordRequestDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                SidebarComponent\n                                ConfigComponent\n                                FooterComponent\n                            BreadcrumbModule\n                                TopbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                appSidebar\n                            \n                            \n                                    \n                                appTopbar\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Private\n                                    Optional\n                                currentUserErrorSubscription\n                            \n                            \n                                home\n                            \n                            \n                                items\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuOutsideClickListener\n                            \n                            \n                                    Private\n                                overlayMenuOpenSubscription\n                            \n                            \n                                profileMenuOutsideClickListener\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockBodyScroll\n                            \n                            \n                                    Private\n                                createBreadcrumbs\n                            \n                            \n                                hideMenu\n                            \n                            \n                                hideProfileMenu\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                unblockBodyScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    containerClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, layoutService: LayoutService, renderer: Renderer2, document: Document, translateService: TranslateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockBodyScroll\n                        \n                    \n                \n            \n            \n                \nblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:233\n                        \n                    \n\n\n            \n                \n                        This function adds a class to the body element of a webpage to block scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBreadcrumbs\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBreadcrumbs(route: ActivatedRoute, url: string, breadcrumbs: MenuItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:167\n                        \n                    \n\n\n            \n                \n                        This function creates breadcrumbs for a given route in a TypeScript application.\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRoute\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe current activated route in the Angular application.\n\n\n                                            \n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe current URL being constructed for the breadcrumb trail.\n\n\n                                            \n                                        \n                                        \n                                                breadcrumbs\n                                            \n                                                        MenuItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    \nbreadcrumbs is an array of MenuItem objects that represent\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     MenuItem[]\n\n                        \n                            \n                                an array of MenuItem objects, which represent the breadcrumbs for a given route.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideMenu\n                        \n                    \n                \n            \n            \n                \nhideMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:208\n                        \n                    \n\n\n            \n                \n                        This function hides the menu and resets related layout service states.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideProfileMenu\n                        \n                    \n                \n            \n            \n                \nhideProfileMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:222\n                        \n                    \n\n\n            \n                \n                        This function hides the profile sidebar menu and removes the outside click listener.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unblockBodyScroll\n                        \n                    \n                \n            \n            \n                \nunblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:244\n                        \n                    \n\n\n            \n                \n                        This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appSidebar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SidebarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(SidebarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appTopbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TopbarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(TopbarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        currentUserErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        home\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayMenuOpenSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileMenuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        containerClass\n                    \n                \n\n                \n                    \n                        getcontainerClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/home.component.ts:258\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport {\n  Component,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\nimport { Subscription, filter } from 'rxjs';\nimport { LayoutService } from '../../core/services/layout.service';\nimport { AppState } from '../../core/state/app.state';\nimport { loadCurrentUser } from '../../core/state/auth/auth.actions';\nimport {\n  selectCurrentUser,\n  selectCurrentUserError,\n} from '../../core/state/auth/auth.selectors';\nimport { ConfigComponent } from './components/config/config.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { TopbarComponent } from './components/topbar/topbar.component';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [\n    CommonModule,\n    SidebarComponent,\n    ConfigComponent,\n    FooterComponent,\n    BreadcrumbModule,\n    TopbarComponent,\n  ],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  @ViewChild(SidebarComponent) appSidebar!: SidebarComponent;\n  @ViewChild(TopbarComponent) appTopbar!: TopbarComponent;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    public layoutService: LayoutService,\n    public renderer: Renderer2,\n    @Inject(DOCUMENT) private document: Document,\n    private translateService: TranslateService,\n    private route: ActivatedRoute,\n  ) {\n    this.overlayMenuOpenSubscription =\n      this.layoutService.overlayOpen$.subscribe(() => {\n        if (!this.menuOutsideClickListener) {\n          this.menuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appSidebar.el.nativeElement.isSameNode(event.target) ||\n                this.appSidebar.el.nativeElement.contains(event.target) ||\n                this.appTopbar.menuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.menuButton.nativeElement.contains(event.target)\n              );\n\n              if (isOutsideClicked) {\n                this.hideMenu();\n              }\n            },\n          );\n        }\n\n        if (!this.profileMenuOutsideClickListener) {\n          this.profileMenuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appTopbar.menu.nativeElement.isSameNode(event.target) ||\n                this.appTopbar.menu.nativeElement.contains(event.target) ||\n                this.appTopbar.topbarMenuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.topbarMenuButton.nativeElement.contains(\n                  event.target,\n                )\n              );\n\n              if (isOutsideClicked) {\n                this.hideProfileMenu();\n              }\n            },\n          );\n        }\n\n        if (this.layoutService.state.staticMenuMobileActive) {\n          this.blockBodyScroll();\n        }\n      });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.hideMenu();\n        this.hideProfileMenu();\n\n        this.translateService.stream('sidenav').subscribe({\n          next: () => {\n            this.items = this.createBreadcrumbs(this.route.root) ?? [];\n          },\n        });\n      });\n  }\n\n  currentUser = this.store.select(selectCurrentUser);\n\n  home!: MenuItem;\n  items!: MenuItem[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  menuOutsideClickListener: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  profileMenuOutsideClickListener: any;\n\n  private currentUserErrorSubscription?: Subscription;\n  private overlayMenuOpenSubscription: Subscription;\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.currentUserErrorSubscription = this.store\n      .select(selectCurrentUserError)\n      .subscribe((error) => {\n        if (error && error != null) {\n          this.router.navigate(['/auth']);\n        }\n      });\n\n    this.home = { icon: 'pi pi-home', routerLink: '/dashboard' };\n  }\n\n  ngOnDestroy() {\n    this.currentUserErrorSubscription?.unsubscribe();\n\n    if (this.overlayMenuOpenSubscription) {\n      this.overlayMenuOpenSubscription.unsubscribe();\n    }\n\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n    }\n  }\n  /**\n   * This function creates breadcrumbs for a given route in a TypeScript application.\n   * @param {ActivatedRoute} route - The current activated route in the Angular application.\n   * @param {string} [url] - The current URL being constructed for the breadcrumb trail.\n   * @param {MenuItem[]} breadcrumbs - `breadcrumbs` is an array of `MenuItem` objects that represent\n   * the breadcrumb trail for a given route. Each `MenuItem` object has a `label` property that\n   * represents the text to display for the breadcrumb, and a `url` property that represents the URL\n   * for the breadcrumb.\n   * @returns an array of MenuItem objects, which represent the breadcrumbs for a given route.\n   */\n  private createBreadcrumbs(\n    route: ActivatedRoute,\n    url: string = '',\n    breadcrumbs: MenuItem[] = [],\n  ): MenuItem[] {\n    const children: ActivatedRoute[] = route.children;\n\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n\n    for (const child of children) {\n      const routeURL: string = child.snapshot.url\n        .map((segment) => segment.path)\n        .join('/');\n      if (routeURL !== '') {\n        url += `/${routeURL}`;\n      }\n\n      const label = child.snapshot.data['breadcrumb'];\n      if (!(label === null || label === undefined)) {\n        const localizedLabel: string = this.translateService.instant(\n          'sidenav.' + label,\n        );\n        if (breadcrumbs.length == 0) {\n          breadcrumbs.push({ label: localizedLabel, url });\n        } else if (\n          breadcrumbs[breadcrumbs.length - 1].label !== localizedLabel\n        ) {\n          breadcrumbs.push({ label: localizedLabel, url });\n        }\n      }\n\n      return this.createBreadcrumbs(child, url, breadcrumbs);\n    }\n    return breadcrumbs;\n  }\n\n  /**\n   * This function hides the menu and resets related layout service states.\n   */\n  hideMenu() {\n    this.layoutService.state.overlayMenuActive = false;\n    this.layoutService.state.staticMenuMobileActive = false;\n    this.layoutService.state.menuHoverActive = false;\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n      this.menuOutsideClickListener = null;\n    }\n    this.unblockBodyScroll();\n  }\n\n  /**\n   * This function hides the profile sidebar menu and removes the outside click listener.\n   */\n  hideProfileMenu() {\n    this.layoutService.state.profileSidebarVisible = false;\n    if (this.profileMenuOutsideClickListener) {\n      this.profileMenuOutsideClickListener();\n      this.profileMenuOutsideClickListener = null;\n    }\n  }\n\n  /**\n   * This function adds a class to the body element of a webpage to block scrolling.\n   */\n  blockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.add('blocked-scroll');\n    } else {\n      this.document.body.className += ' blocked-scroll';\n    }\n  }\n\n  /**\n   * This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n   */\n  unblockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.remove('blocked-scroll');\n    } else {\n      this.document.body.className = document.body.className.replace(\n        new RegExp(\n          '(^|\\\\b)' + 'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)',\n          'gi',\n        ),\n        ' ',\n      );\n    }\n  }\n\n  get containerClass() {\n    return {\n      'layout-theme-light': this.layoutService.config.colorScheme === 'light',\n      'layout-theme-dark': this.layoutService.config.colorScheme === 'dark',\n      'layout-overlay': this.layoutService.config.menuMode === 'overlay',\n      'layout-static': this.layoutService.config.menuMode === 'static',\n      'layout-static-inactive':\n        this.layoutService.state.staticMenuDesktopInactive &&\n        this.layoutService.config.menuMode === 'static',\n      'layout-overlay-active': this.layoutService.state.overlayMenuActive,\n      'layout-mobile-active': this.layoutService.state.staticMenuMobileActive,\n      'p-input-filled': this.layoutService.config.inputStyle === 'filled',\n      'p-ripple-disabled': !this.layoutService.config.ripple,\n    };\n  }\n}\n\n    \n\n    \n        \n    \n    \n      \n    \n    \n      \n        \n          \n        \n        \n      \n      \n    \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitationComponent.html":{"url":"components/InvitationComponent.html","title":"component - InvitationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/invitation/invitation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-invitation\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./invitation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./invitation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-invitation',\n  standalone: true,\n  imports: [],\n  templateUrl: './invitation.component.html',\n  styleUrl: './invitation.component.scss'\n})\nexport class InvitationComponent {\n\n}\n\n    \n\n    \n        invitation works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'invitation works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/token-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getRefreshToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveRefreshToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/token-storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveRefreshToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { LocalStorage } from \"./local-storage.service\";\n\nconst TOKEN_KEY = 'auth-token';\nconst REFRESH_TOKEN_KEY = 'auth-refreshtoken';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class JwtService {\n\n  constructor(private storage: LocalStorage) {}\n\n  public clear(): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n  }\n\n  public saveToken(token: string): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return this.storage.getItem(TOKEN_KEY);\n  }\n\n  public saveRefreshToken(token: string): void {\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n   this.storage.setItem(REFRESH_TOKEN_KEY, token);\n  }\n\n  public getRefreshToken(): string | null {\n    return this.storage.getItem(REFRESH_TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The LayoutService class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Private\n                                configUpdate\n                            \n                            \n                                configUpdate$\n                            \n                            \n                                    Private\n                                overlayOpen\n                            \n                            \n                                overlayOpen$\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isDesktop\n                            \n                            \n                                isMobile\n                            \n                            \n                                isOverlay\n                            \n                            \n                                onConfigUpdate\n                            \n                            \n                                onMenuToggle\n                            \n                            \n                                showConfigSidebar\n                            \n                            \n                                showProfileSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isDesktop\n                        \n                    \n                \n            \n            \n                \nisDesktop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:209\n                        \n                    \n\n\n            \n                \n                        This function checks if the current window width is greater than 991 pixels, indicating if the\nuser is on a desktop device.\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isDesktop() returns a boolean value true if the width of the window is\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n            \n                \nisMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:218\n                        \n                    \n\n\n            \n                \n                        The function checks if the device is not a desktop and returns a boolean value.\nwill return true if the device is not a desktop and false if it is a desktop.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The isMobile() function is returning the opposite of the isDesktop() function. It\nwill return true if the device is not a desktop and false if it is a desktop.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOverlay\n                        \n                    \n                \n            \n            \n                \nisOverlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:197\n                        \n                    \n\n\n            \n                \n                        This function checks if the menu mode is set to 'overlay'.\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isOverlay() is returning a boolean value that indicates whether the\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigUpdate\n                        \n                    \n                \n            \n            \n                \nonConfigUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:225\n                        \n                    \n\n\n            \n                \n                        The function updates the configuration and emits the updated configuration through a subject.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuToggle\n                        \n                    \n                \n            \n            \n                \nonMenuToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:154\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a menu based on the device type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfigSidebar\n                        \n                    \n                \n            \n            \n                \nshowConfigSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:188\n                        \n                    \n\n\n            \n                \n                        This function sets the state of the configSidebarVisible property to true.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showProfileSidebar\n                        \n                    \n                \n            \n            \n                \nshowProfileSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:178\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\nvisible.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:98\n                        \n                    \n\n            \n                \n                    The config property is initializing an object of type AppConfig with default values for\nvarious configuration options. These options include ripple, inputStyle, menuMode,\ncolorScheme, theme, and scale. The = operator is assigning this object to the config\nproperty of the LayoutService class. This object represents the default configuration for the\nlayout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:128\n                        \n                    \n\n            \n                \n                    private configUpdate = new Subject(); is creating a new instance of the Subject\nclass from the rxjs library and assigning it to the configUpdate property of the\nLayoutService class. This Subject instance is used to emit events when the configuration is\nupdated. Other parts of the application can subscribe to these events using the configUpdate$\nobservable created from this Subject. The AppConfig type parameter in Subject\nindicates that the Subject can emit values of type AppConfig.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configUpdate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configUpdate.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:143\n                        \n                    \n\n            \n                \n                    configUpdate$ is creating an observable from the configUpdate subject. This allows other parts\nof the application to subscribe to changes in the configUpdate subject and react accordingly.\nThe $ at the end of the variable name is a convention in RxJS to indicate that the variable is\nan observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:137\n                        \n                    \n\n            \n                \n                    private overlayOpen = new Subject(); is creating a new instance of the Subject class from\nthe rxjs library and assigning it to the overlayOpen property of the LayoutService class.\nThis Subject instance is used to emit events when the overlay menu is opened or closed. Other\nparts of the application can subscribe to these events using the overlayOpen$ observable created\nfrom this Subject. The any type parameter in Subject indicates that the Subject can\nemit values of any type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlayOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.overlayOpen.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:149\n                        \n                    \n\n            \n                \n                    overlayOpen$ is creating an observable from the overlayOpen subject. This allows other parts\nof the application to subscribe to changes in the overlayOpen subject and react accordingly. The\n$ at the end of the variable name is a convention in RxJS to indicate that the variable is an\nobservable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutState\n\n                    \n                \n                \n                    \n                        Default value : {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:113\n                        \n                    \n\n            \n                \n                    state: LayoutState is declaring a property named state of type LayoutState. LayoutState is\nan interface that defines the shape of an object with boolean properties\nstaticMenuDesktopInactive, overlayMenuActive, profileSidebarVisible, configSidebarVisible,\nstaticMenuMobileActive, and menuHoverActive. The = operator is initializing the state\nproperty with an object that has all of these boolean properties set to false. This object\nrepresents the initial state of the layout.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.configUpdate.next(this.config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutState.html":{"url":"interfaces/LayoutState.html","title":"interface - LayoutState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LayoutState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The interface LayoutState is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as staticMenuDesktopInactive,\noverlayMenuActive, profileSidebarVisible, configSidebarVisible, staticMenuMobileActive, and\nmenuHoverActive. These properties are used in various functions of the LayoutService class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            menuHoverActive\n                                        \n                                \n                                \n                                        \n                                            overlayMenuActive\n                                        \n                                \n                                \n                                        \n                                            profileSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            staticMenuDesktopInactive\n                                        \n                                \n                                \n                                        \n                                            staticMenuMobileActive\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    configSidebarVisible: boolean; is declaring a boolean property named configSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the configuration\nsidebar is currently visible or not. It is used in the showConfigSidebar() function to set the\nstate of the configSidebarVisible property to true when the configuration sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuHoverActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuHoverActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuHoverActive: boolean; is declaring a boolean property named menuHoverActive in the\nLayoutState interface. This property represents the state of whether the user is currently\nhovering over the menu.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayMenuActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overlayMenuActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    overlayMenuActive: boolean; is declaring a boolean property named overlayMenuActive in the\nLayoutState interface. This property represents the state of whether the overlay menu is\ncurrently active or not. It is used in the onMenuToggle() function to toggle the visibility of\nthe overlay menu and set the state of the overlayMenuActive property to true when the overlay\nmenu is shown. It is also used in the showProfileSidebar() function to close the overlay menu\nwhen the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    profileSidebarVisible: boolean; is declaring a boolean property named profileSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the profile sidebar is\ncurrently visible or not. It is used in the showProfileSidebar() function to toggle the\nvisibility of the profile sidebar and set the state of the profileSidebarVisible property to\ntrue when the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuDesktopInactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuDesktopInactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuDesktopInactive: boolean; is declaring a boolean property named\nstaticMenuDesktopInactive in the LayoutState interface. This property represents the state of\nwhether the static menu is currently inactive on a desktop device. It is used in the\nonMenuToggle() function to toggle the visibility of the static menu and set the state of the\nstaticMenuDesktopInactive property to true when the static menu is hidden.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuMobileActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuMobileActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuMobileActive: boolean; is declaring a boolean property named staticMenuMobileActive\nin the LayoutState interface. This property represents the state of whether the static menu is\ncurrently active on a mobile device.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.configUpdate.next(this.config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorage.html":{"url":"injectables/LocalStorage.html","title":"injectable - LocalStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/local-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.localStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                getApplicationName\n                            \n                            \n                                isRegistrationEnabled\n                            \n                            \n                                login\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApplicationName\n                        \n                    \n                \n            \n            \n                \ngetApplicationName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRegistrationEnabled\n                        \n                    \n                \n            \n            \n                \nisRegistrationEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  authenticate,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectAuthorizationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  loginForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAuthorizationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.login.authorization_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.login.wrong_username_or_password',\n            ),\n          });\n        }\n      });\n  }\n\n  login() {\n    this.store.dispatch(\n      authenticate({\n        username: this.loginForm.get('username')?.value ?? '',\n        password: this.loginForm.get('password')?.value ?? '',\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  getApplicationName() {\n    return environment.appName;\n  }\n\n  isRegistrationEnabled() {\n    return environment.enableRegistration;\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},\n  \n  {{\n    \"auth.login.sign_in_to_continue\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n        \n        } @else if (isUsernameTaken) {\n        \n        } @else {\n        \n        }\n      \n    \n    {{ \"auth.login.username_is_required\" | translate }}\n    {{ \"auth.login.username_length\" | translate }}\n\n    {{ \"auth.login.password_label\" | translate }}\n    \n    {{ \"auth.login.password_is_required\" | translate }}\n    {{ \"auth.login.password_length\" | translate }}\n\n    \n      {{ \"auth.login.forgot_password\" | translate }}\n      {{ \"auth.login.register\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},    {{    \"auth.login.sign_in_to_continue\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {                } @else if (isUsernameTaken) {                } @else {                }              {{ \"auth.login.username_is_required\" | translate }}    {{ \"auth.login.username_length\" | translate }}    {{ \"auth.login.password_label\" | translate }}        {{ \"auth.login.password_is_required\" | translate }}    {{ \"auth.login.password_length\" | translate }}          {{ \"auth.login.forgot_password\" | translate }}      {{ \"auth.login.register\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/memory-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/memory-storage.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/memory-storage.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n//TODO: Implement better server storage alongside server temp memory storage\n@Injectable()\nexport class MemoryStorage implements Storage {\n  private data: { [key: string]: string } = {};\n\n  get length(): number {\n    return Object.keys(this.data).length;\n  }\n\n  clear(): void {\n    this.data = {};\n  }\n\n  getItem(key: string): string | null {\n    return key in this.data ? this.data[key] : null;\n  }\n\n  key(index: number): string | null {\n    const keys = Object.keys(this.data);\n\n    return index >= 0 && keys.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuChangeEvent.html":{"url":"interfaces/MenuChangeEvent.html","title":"interface - MenuChangeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuChangeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/menu-change-event.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeEvent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuChangeEvent {\n  key: string;\n  routeEvent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/menu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuSource\n                            \n                            \n                                menuSource$\n                            \n                            \n                                    Private\n                                resetSource\n                            \n                            \n                                resetSource$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMenuStateChange\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuStateChange\n                        \n                    \n                \n            \n            \n                \nonMenuStateChange(event: MenuChangeEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:40\n                        \n                    \n\n\n            \n                \n                        The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            MenuChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMenuChangeEvent is a custom event type that is triggered when\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:47\n                        \n                    \n\n\n            \n                \n                        The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:16\n                        \n                    \n\n            \n                \n                    private menuSource = new Subject(); is creating a new instance of the\nSubject class and assigning it to the menuSource variable. This Subject will be used to\nemit MenuChangeEvent objects when the onMenuStateChange() function is called in the\nMenuService. Other components or services can subscribe to the menuSource$ observable to\nreceive notifications when the onMenuStateChange() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.menuSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:27\n                        \n                    \n\n            \n                \n                    menuSource$ is creating an observable from the menuSource subject. This allows other\ncomponents or services to subscribe to the menuSource$ observable and receive notifications\nwhen the onMenuStateChange() function is called in the MenuService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:22\n                        \n                    \n\n            \n                \n                    private resetSource = new Subject(); is creating a new instance of the Subject class and\nassigning it to the resetSource variable. This Subject will be used to emit a boolean value\nof true when the reset() function is called in the MenuService. Other components or\nservices can subscribe to the resetSource$ observable to receive notifications when the\nreset() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.resetSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:31\n                        \n                    \n\n            \n                \n                    resetSource$ is creating an observable from the resetSource subject. This allows other\ncomponents or services to subscribe to the resetSource$ observable and receive notifications\nwhen the reset() function is called in the MenuService.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MenuChangeEvent } from '../domain/models/menu-change-event.model';\n\n/** The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuService {\n  /** `private menuSource = new Subject();` is creating a new instance of the\n    `Subject` class and assigning it to the `menuSource` variable. This `Subject` will be used to\n    emit `MenuChangeEvent` objects when the `onMenuStateChange()` function is called in the\n    `MenuService`. Other components or services can subscribe to the `menuSource$` observable to\n    receive notifications when the `onMenuStateChange()` function is called. */\n  private menuSource = new Subject();\n  /** `private resetSource = new Subject();` is creating a new instance of the `Subject` class and\n    assigning it to the `resetSource` variable. This `Subject` will be used to emit a boolean value\n    of `true` when the `reset()` function is called in the `MenuService`. Other components or\n    services can subscribe to the `resetSource$` observable to receive notifications when the\n    `reset()` function is called. */\n  private resetSource = new Subject();\n\n  /** `menuSource$` is creating an observable from the `menuSource` subject. This allows other\n    components or services to subscribe to the `menuSource$` observable and receive notifications\n    when the `onMenuStateChange()` function is called in the `MenuService`. */\n  menuSource$ = this.menuSource.asObservable();\n  /** `resetSource$` is creating an observable from the `resetSource` subject. This allows other\n    components or services to subscribe to the `resetSource$` observable and receive notifications\n    when the `reset()` function is called in the `MenuService`. */\n  resetSource$ = this.resetSource.asObservable();\n\n  /**\n   * The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\n   * @param {MenuChangeEvent} event - MenuChangeEvent is a custom event type that is triggered when\n   * the state of a menu changes. It contains information about the menu that triggered the event,\n   * such as its current state (open or closed) and any additional data that may be relevant to the\n   * event. In this code snippet, the event is being\n   */\n  onMenuStateChange(event: MenuChangeEvent) {\n    this.menuSource.next(event);\n  }\n\n  /**\n   * The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n   */\n  reset() {\n    this.resetSource.next(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuitemComponent.html":{"url":"components/MenuitemComponent.html","title":"component - MenuitemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuitemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/menuitem/menuitem.component.ts\n\n\n\n    \n        Description\n    \n    \n        The MenuitemComponent class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [app-menuitem]\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            TranslateModule\n                            CommonModule\n                            RippleModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./menuitem.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menuitem.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                key\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuResetSubscription\n                            \n                            \n                                menuSourceSubscription\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateActiveStateFromRoute\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                item\n                            \n                            \n                                parentKey\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.active-menuitem\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    submenuAnimation\n                                \n                                \n                                    activeClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, cd: ChangeDetectorRef, router: Router, menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                            \n                        \n\n                \n                    \n                            This is a constructor function that subscribes to menu and router events to update the active\nstate of a menu item based on the current route.\nused to manage the layout of the application.\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\nAngular. It is used to handle navigation and routing within the application.\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe \"cd\" parameter is an instance of the ChangeDetectorRef class,\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe router parameter is an instance of the Router service provided by\nAngular. It is used to handle navigation and routing within the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the MenuService\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:69\n                            \n                        \n                \n                    \n                        @Input() index!: number; is defining an input property called index of type number. The !\nsymbol after the index variable indicates that it is non-null and initialized in the constructor\nor ngOnInit method. This input property is used to pass the index of the current menu item to the\nMenuitemComponent class. The index is used to construct the unique identifier of the menu item\nand to determine the order of the menu items in the menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:62\n                            \n                        \n                \n                    \n                        @Input() item: any; is defining an input property called item of type any. This input\nproperty is used to pass a menu item object to the MenuitemComponent class. The item object\ncontains information about the menu item, such as its label, icon, command, and sub-items. By\ndefining this input property, the MenuitemComponent class can receive the item object from its\nparent component and use it to render the menu item in the application menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parentKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:83\n                            \n                        \n                \n                    \n                        @Input() parentKey!: string; is declaring an input property called parentKey of type string.\nThis input property is used to pass the unique identifier of the parent menu item to the child\nmenu items. If a menu item has a parent, its key property is set to a value that includes the\nparent key and the index of the item, separated by a hyphen. This allows the MenuitemComponent\nclass to uniquely identify each menu item in the application menu. The parentKey input property\nis used to pass the parent key to the child menu items so that they can construct their own unique\nidentifiers based on the parent key and their own index.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:74\n                            \n                        \n                \n                    \n                        The @Input() @HostBinding('class.layout-root-menuitem') root!: boolean; decorator is defining an\ninput property called root of type boolean and also binding the class.layout-root-menuitem\nCSS class to the host element of the component.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.active-menuitem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemClick\n                        \n                    \n                \n            \n            \n                \nitemClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:209\n                        \n                    \n\n\n            \n                \n                        This function handles the click event on a menu item, executing its command and toggling its\nactive state if it has sub-items.\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event parameter is an object that represents the event that triggered\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                If the item is disabled, the function will return without executing any further code. If\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:241\n                        \n                    \n\n\n            \n                \n                        The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:171\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets the key and updates the active state from the route if the item has a\nrouterLink.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateActiveStateFromRoute\n                        \n                    \n                \n            \n            \n                \nupdateActiveStateFromRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:185\n                        \n                    \n\n\n            \n                \n                        This function updates the active state of a menu item based on the current route in a TypeScript\napplication.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:89\n                        \n                    \n\n            \n                \n                    active = false; is initializing the active property of the MenuitemComponent class to\nfalse. This property is used to track whether or not a menu item is currently active (i.e.\nselected or expanded). By default, when a new instance of the MenuitemComponent class is\ncreated, no menu item is active, so the active property is set to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                        \n                    \n\n            \n                \n                    key: string = \"\"; is declaring a property called key with an initial value of an empty string.\nThis property is used to uniquely identify each menu item in the application menu. It is set to a\nvalue that includes the parent key and the index of the item, separated by a hyphen, if the item\nhas a parent. Otherwise, it is set to the index of the item as a string. This property is used to\nupdate the active state of a menu item based on the current route and to toggle the active state\nof a menu item if it has sub-items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:129\n                        \n                    \n\n            \n                \n                    - An instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuResetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:103\n                        \n                    \n\n            \n                \n                    menuResetSubscription: Subscription; is declaring a property called menuResetSubscription of\ntype Subscription. This property is used to store a subscription to the resetSource$\nobservable of the MenuService class. This subscription is used to reset the active state of a\nmenu item when the menu is closed or reset. The unsubscribe() method is called on this\nsubscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSourceSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:96\n                        \n                    \n\n            \n                \n                    menuSourceSubscription: Subscription; is declaring a property called menuSourceSubscription of\ntype Subscription. This property is used to store a subscription to the menuSource$ observable\nof the MenuService class. This subscription is used to update the active state of a menu item\nbased on events emitted by the menuSource$ observable. The unsubscribe() method is called on\nthis subscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:131\n                        \n                    \n\n            \n                \n                    - The `router` parameter is an instance of the `Router` service provided by\nAngular. It is used to handle navigation and routing within the application.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        submenuAnimation\n                    \n                \n\n                \n                    \n                        getsubmenuAnimation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:229\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        activeClass\n                    \n                \n\n                \n                    \n                        getactiveClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RippleModule } from 'primeng/ripple';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\n\n/** The `MenuitemComponent` class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route. */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[app-menuitem]',\n  templateUrl: './menuitem.component.html',\n  styleUrls: ['./menuitem.component.scss'],\n  standalone: true,\n  imports: [TranslateModule, CommonModule, RippleModule, RouterModule],\n  animations: [\n    trigger('children', [\n      state(\n        'collapsed',\n        style({\n          height: '0',\n        }),\n      ),\n      state(\n        'expanded',\n        style({\n          height: '*',\n        }),\n      ),\n      transition(\n        'collapsed  expanded',\n        animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'),\n      ),\n    ]),\n  ],\n})\nexport class MenuitemComponent implements OnInit, OnDestroy {\n  /** `@Input() item: any;` is defining an input property called `item` of type `any`. This input\n  property is used to pass a menu item object to the `MenuitemComponent` class. The `item` object\n  contains information about the menu item, such as its label, icon, command, and sub-items. By\n  defining this input property, the `MenuitemComponent` class can receive the `item` object from its\n  parent component and use it to render the menu item in the application menu. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Input() item: any;\n\n  /** `@Input() index!: number;` is defining an input property called `index` of type `number`. The `!`\n  symbol after the `index` variable indicates that it is non-null and initialized in the constructor\n  or ngOnInit method. This input property is used to pass the index of the current menu item to the\n  `MenuitemComponent` class. The index is used to construct the unique identifier of the menu item\n  and to determine the order of the menu items in the menu. */\n  @Input() index!: number;\n\n  /** The `@Input() @HostBinding('class.layout-root-menuitem') root!: boolean;` decorator is defining an\n  input property called `root` of type `boolean` and also binding the `class.layout-root-menuitem`\n  CSS class to the host element of the component. */\n  @Input() @HostBinding('class.layout-root-menuitem') root!: boolean;\n\n  /** `@Input() parentKey!: string;` is declaring an input property called `parentKey` of type `string`.\n  This input property is used to pass the unique identifier of the parent menu item to the child\n  menu items. If a menu item has a parent, its `key` property is set to a value that includes the\n  parent key and the index of the item, separated by a hyphen. This allows the `MenuitemComponent`\n  class to uniquely identify each menu item in the application menu. The `parentKey` input property\n  is used to pass the parent key to the child menu items so that they can construct their own unique\n  identifiers based on the parent key and their own index. */\n  @Input() parentKey!: string;\n\n  /** `active = false;` is initializing the `active` property of the `MenuitemComponent` class to\n  `false`. This property is used to track whether or not a menu item is currently active (i.e.\n  selected or expanded). By default, when a new instance of the `MenuitemComponent` class is\n  created, no menu item is active, so the `active` property is set to `false`. */\n  active = false;\n\n  /** `menuSourceSubscription: Subscription;` is declaring a property called `menuSourceSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `menuSource$` observable\n  of the `MenuService` class. This subscription is used to update the active state of a menu item\n  based on events emitted by the `menuSource$` observable. The `unsubscribe()` method is called on\n  this subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuSourceSubscription: Subscription;\n\n  /** `menuResetSubscription: Subscription;` is declaring a property called `menuResetSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `resetSource$`\n  observable of the `MenuService` class. This subscription is used to reset the active state of a\n  menu item when the menu is closed or reset. The `unsubscribe()` method is called on this\n  subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuResetSubscription: Subscription;\n\n  /** `key: string = \"\";` is declaring a property called `key` with an initial value of an empty string.\n  This property is used to uniquely identify each menu item in the application menu. It is set to a\n  value that includes the parent key and the index of the item, separated by a hyphen, if the item\n  has a parent. Otherwise, it is set to the index of the item as a string. This property is used to\n  update the active state of a menu item based on the current route and to toggle the active state\n  of a menu item if it has sub-items. */\n  key: string = '';\n\n  /**\n   * This is a constructor function that subscribes to menu and router events to update the active\n   * state of a menu item based on the current route.\n   * @param {LayoutService} layoutService - An instance of the LayoutService class, which is likely\n   * used to manage the layout of the application.\n   * @param {ChangeDetectorRef} cd - The \"cd\" parameter is an instance of the ChangeDetectorRef class,\n   * which is used to manually trigger change detection in Angular. It is typically used when making\n   * changes to the component's state that may not be detected by Angular's default change detection\n   * mechanism.\n   * @param {Router} router - The `router` parameter is an instance of the `Router` service provided by\n   * Angular. It is used to handle navigation and routing within the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the `MenuService`\n   * class, which is used to manage the application menu. It is injected into the constructor using\n   * Angular's dependency injection mechanism.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    private cd: ChangeDetectorRef,\n    public router: Router,\n    private menuService: MenuService,\n  ) {\n    this.menuSourceSubscription = this.menuService.menuSource$.subscribe(\n      (value) => {\n        Promise.resolve(null).then(() => {\n          if (value.routeEvent) {\n            this.active =\n              value.key === this.key || value.key.startsWith(this.key + '-')\n                ? true\n                : false;\n          } else {\n            if (\n              value.key !== this.key &&\n              !value.key.startsWith(this.key + '-')\n            ) {\n              this.active = false;\n            }\n          }\n        });\n      },\n    );\n\n    this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\n      this.active = false;\n    });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        if (this.item.routerLink) {\n          this.updateActiveStateFromRoute();\n        }\n      });\n  }\n\n  /**\n   * The ngOnInit function sets the key and updates the active state from the route if the item has a\n   * routerLink.\n   */\n  ngOnInit() {\n    this.key = this.parentKey\n      ? this.parentKey + '-' + this.index\n      : String(this.index);\n\n    if (this.item.routerLink) {\n      this.updateActiveStateFromRoute();\n    }\n  }\n\n  /**\n   * This function updates the active state of a menu item based on the current route in a TypeScript\n   * application.\n   */\n  updateActiveStateFromRoute() {\n    const activeRoute = this.router.isActive(this.item.routerLink[0], {\n      paths: 'exact',\n      queryParams: 'ignored',\n      matrixParams: 'ignored',\n      fragment: 'ignored',\n    });\n\n    if (activeRoute) {\n      this.menuService.onMenuStateChange({ key: this.key, routeEvent: true });\n    }\n  }\n\n  /**\n   * This function handles the click event on a menu item, executing its command and toggling its\n   * active state if it has sub-items.\n   * @param {Event} event - The event parameter is an object that represents the event that triggered\n   * the itemClick function. It contains information such as the type of event (e.g. click, hover), the\n   * target element that triggered the event, and any additional data related to the event.\n   * @returns If the item is disabled, the function will return without executing any further code. If\n   * the item is not disabled, the function will execute the command associated with the item (if there\n   * is one), toggle the active state if the item has sub-items, and call the `onMenuStateChange`\n   * method of the `menuService`. However, the function does not explicitly return any value.\n   */\n  itemClick(event: Event) {\n    // avoid processing disabled items\n    if (this.item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    // execute command\n    if (this.item.command) {\n      this.item.command({ originalEvent: event, item: this.item });\n    }\n\n    // toggle active state\n    if (this.item.items) {\n      this.active = !this.active;\n    }\n\n    this.menuService.onMenuStateChange({ key: this.key });\n  }\n\n  get submenuAnimation() {\n    return this.root ? 'expanded' : this.active ? 'expanded' : 'collapsed';\n  }\n\n  @HostBinding('class.active-menuitem')\n  get activeClass() {\n    return this.active && !this.root;\n  }\n\n  /**\n   * The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n   */\n  ngOnDestroy() {\n    if (this.menuSourceSubscription) {\n      this.menuSourceSubscription.unsubscribe();\n    }\n\n    if (this.menuResetSubscription) {\n      this.menuResetSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ item.label | translate }}\n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menuitem.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ item.label | translate }}            {{ item.label | translate }}                {{ item.label | translate }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuitemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-register\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  registerNewUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectCurrentUser,\n  selectRegistrationError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss',\n})\nexport class RegisterComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    if (!environment.enableRegistration) {\n      this.router.navigate(['/auth/login']);\n    }\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectRegistrationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.register.registration_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.register.registration_error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(registerNewUser(dto));\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.register.welcome_message\" | translate }}\n  \n  {{\n    \"auth.register.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.register.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.register.username_is_required\" | translate }}\n    {{ \"auth.register.username_length\" | translate }}\n\n    {{ \"auth.register.password_label\" | translate }}\n    \n    {{ \"auth.register.password_length\" | translate }}\n    {{ \"auth.register.password_not_strong\" | translate }}\n\n    {{\n      \"auth.register.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.register.email_is_required\" | translate }}\n\n    {{ \"auth.register.first_name_label\" | translate }}\n    \n    {{ \"auth.register.first_name_is_required\" | translate }}\n\n    {{ \"auth.register.last_name_label\" | translate }}\n    \n    {{ \"auth.register.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.register.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.register.welcome_message\" | translate }}    {{    \"auth.register.welcome_description\" | translate  }}      {{ \"auth.register.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.register.username_is_required\" | translate }}    {{ \"auth.register.username_length\" | translate }}    {{ \"auth.register.password_label\" | translate }}        {{ \"auth.register.password_length\" | translate }}    {{ \"auth.register.password_not_strong\" | translate }}    {{      \"auth.register.email_label\" | translate    }}                        {{ \"auth.register.email_is_required\" | translate }}    {{ \"auth.register.first_name_label\" | translate }}        {{ \"auth.register.first_name_is_required\" | translate }}    {{ \"auth.register.last_name_label\" | translate }}        {{ \"auth.register.last_name_is_required\" | translate }}          {{ \"auth.register.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequestDto.html":{"url":"interfaces/RegisterRequestDto.html","title":"interface - RegisterRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/register-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterRequestDto {\n  username: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                secret\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        secret\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { Subscription } from 'rxjs';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  resetPassword,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectResetPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss',\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input()\n  private secret?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  resetPasswordForm = this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectResetPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('auth.reset-password.error'),\n            detail: this.translateService.instant(\n              'auth.reset-password.wrong_hash',\n            ),\n          });\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.reset-password.success',\n            ),\n            detail: this.translateService.instant(\n              'auth.reset-password.success_message',\n            ),\n          });\n          this.router.navigate(['/auth']);\n        }\n      });\n  }\n\n  resetPassword() {\n    if (this.secret) {\n      const newPassword = this.resetPasswordForm.get('password')?.value ?? '';\n      this.store.dispatch(\n        resetPassword({ newPassword: newPassword, hash: this.secret }),\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.reset-password.welcome_message\" | translate }}\n  \n\n\n  \n    {{ \"auth.reset-password.new_password_label\" | translate }}\n    \n    {{ \"auth.reset-password.password_is_required\" | translate }}\n    {{ \"auth.reset-password.password_length\" | translate }}\n    {{ \"auth.reset-password.password_not_strong\" | translate }}\n\n    \n      {{ \"auth.reset-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.reset-password.welcome_message\" | translate }}        {{ \"auth.reset-password.new_password_label\" | translate }}        {{ \"auth.reset-password.password_is_required\" | translate }}    {{ \"auth.reset-password.password_length\" | translate }}    {{ \"auth.reset-password.password_not_strong\" | translate }}          {{ \"auth.reset-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordRequestDto.html":{"url":"interfaces/ResetPasswordRequestDto.html","title":"interface - ResetPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/reset-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPasswordRequestDto {\n    newPassword: string,\n    hash: string, \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionStorage.html":{"url":"injectables/SessionStorage.html","title":"injectable - SessionStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/session-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/session-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.sessionStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                MenuitemComponent\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setupSideNavItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, el: ElementRef, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes in several services as parameters.\nsuch as managing the layout of a web page or application.\na native element inside a View. It is used to access the properties and methods of the native\nelement.\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\nUserStorageService class, which is likely used to manage user data and authentication. It is\ninjected into the constructor using Angular's dependency injection system.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIt is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n\n\n                                                        \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nel is an instance of the ElementRef class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe translateService parameter is an instance of\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:44\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets up the side navigation based on the user's role.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupSideNavItems\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupSideNavItems(sidenav: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sidenav\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:37\n                        \n                    \n\n            \n                \n                    - `el` is an instance of the `ElementRef` class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:36\n                        \n                    \n\n            \n                \n                    - It is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                        \n                    \n\n            \n                \n                    model: MenuItem[] = []; is declaring a property called model of type MenuItem[] (an array of\nMenuItem objects) and initializing it to an empty array. This property is likely used to store\nthe items that will be displayed in the side navigation menu.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuitemComponent } from '../menuitem/menuitem.component';\n\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule, MenuitemComponent],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  /** `model: MenuItem[] = [];` is declaring a property called `model` of type `MenuItem[]` (an array of\n  `MenuItem` objects) and initializing it to an empty array. This property is likely used to store\n  the items that will be displayed in the side navigation menu. */\n  model: MenuItem[] = [];\n  /**\n   * This is a constructor function that takes in several services as parameters.\n   * @param {LayoutService} layoutService - It is a service that provides layout-related functionality,\n   * such as managing the layout of a web page or application.\n   * @param {ElementRef} el - `el` is an instance of the `ElementRef` class, which is a wrapper around\n   * a native element inside a View. It is used to access the properties and methods of the native\n   * element.\n   * @param {TranslateService} translateService - The `translateService` parameter is an instance of\n   * the `TranslateService` class, which is used for internationalization and localization of the\n   * application. It provides methods for translating text strings into different languages based on\n   * the user's language preference.\n   * @param {UserStorageService} userService - The `userService` parameter is an instance of the\n   * `UserStorageService` class, which is likely used to manage user data and authentication. It is\n   * injected into the constructor using Angular's dependency injection system.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public el: ElementRef,\n    private translateService: TranslateService,\n  ) {}\n\n  /**\n   * The ngOnInit function sets up the side navigation based on the user's role.\n   */\n  ngOnInit() {\n    this.translateService.stream('sidenav').subscribe({\n      next: (sidenav) => {\n        this.model = [];\n        this.setupSideNavItems(sidenav);\n      },\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private setupSideNavItems(sidenav: any) {\n    this.model.push({\n      label: sidenav.General,\n      items: [\n        {\n          label: sidenav.Home,\n          icon: 'pi pi-fw pi-home',\n          routerLink: ['/home'],\n        },\n      ],\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/token.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n    accessToken: string;\n    refreshToken: string;\n    expiresIn: 0;\n    refreshExpiresIn: 0;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenDto.html":{"url":"interfaces/TokenDto.html","title":"interface - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenDto {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: 0;\n  refreshExpiresIn: 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/topbar/topbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            DropdownModule\n                            AvatarModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./topbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                languages\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    \n                                menu\n                            \n                            \n                                    \n                                menuButton\n                            \n                            \n                                selectedLanguage\n                            \n                            \n                                    \n                                topbarMenuButton\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getAppName\n                            \n                            \n                                goToProfilePage\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, router: Router, store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(language: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToProfilePage\n                        \n                    \n                \n            \n            \n                \ngoToProfilePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [{flag: 'gb', label: \"English\", value: 'en'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('menubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        topbarMenuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { RippleModule } from 'primeng/ripple';\nimport { signOut } from '../../../../core/state/auth/auth.actions';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../core/state/app.state';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { Router } from '@angular/router';\nimport { MenuItem } from 'primeng/api';\nimport { selectCurrentUser } from '../../../../core/state/auth/auth.selectors';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-topbar',\n  standalone: true,\n  imports: [CommonModule, DropdownModule, AvatarModule, TranslateModule, ButtonModule, RippleModule, FormsModule],\n  templateUrl: './topbar.component.html',\n  styleUrl: './topbar.component.scss',\n})\nexport class TopbarComponent {\n  \n  @ViewChild('menubutton') menuButton!: ElementRef;\n  @ViewChild('topbarmenubutton') topbarMenuButton!: ElementRef;\n  @ViewChild('topbarmenu') menu!: ElementRef;\n\n  constructor(\n    public layoutService: LayoutService,\n    private router: Router,\n    private store: Store,\n    private translateService: TranslateService,\n  ) {\n    this.selectedLanguage = this.languages[0];\n  }\n\n  items: MenuItem[] = [];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  languages: any[] = [{flag: 'gb', label: \"English\", value: 'en'}];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  selectedLanguage: any;\n\n  user = this.store.select(selectCurrentUser);\n\n  logout() {\n    this.store.dispatch(signOut())\n    this.router.navigate(['/auth'])\n  }\n\n  goToProfilePage() {\n    this.router.navigate(['/home/user-profile'])\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  changeLanguage(language: any) {\n    this.translateService.use(language.value);\n  }\n\n  getAppName() {\n    return environment.appName\n  }\n}\n\n    \n\n    \n        \n    \n      \n      {{getAppName()}}\n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n      \n        \n          \n            \n            {{ selectedLanguage.label }}\n          \n        \n        \n          \n            \n            {{ language.label }}\n          \n        \n      \n      \n        \n          \n          {{ \"Profile\" | translate }}\n        \n      \n      \n        \n        Logout\n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{getAppName()}}                                                                                                {{ selectedLanguage.label }}                                                            {{ language.label }}                                                          {{ \"Profile\" | translate }}                                    Logout              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: {\n      roleId: string;\n      name: string;\n      permissions: [\n        {\n          type: ResourceType;\n          values: Permission;\n        }\n      ];\n      internal: boolean;\n    };\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from '../models/enums/permission.enum';\nimport { ResourceType } from '../models/enums/resource-type.enum';\n\nexport interface UserDto {\n  userId: string;\n  username: string;\n  lastLoginTime: Date;\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileIconUrl: string | null;\n  role: {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission;\n      }\n    ];\n    internal: boolean;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n  activated: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/authenticate-request.dto.ts\n            \n            interface\n            AuthenticateRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n            \n            interface\n            ForgotPasswordRequestDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/register-request.dto.ts\n            \n            interface\n            RegisterRequestDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/reset-password-request.dto.ts\n            \n            interface\n            ResetPasswordRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/token.dto.ts\n            \n            interface\n            TokenDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/user.dto.ts\n            \n            interface\n            UserDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/menu-change-event.model.ts\n            \n            interface\n            MenuChangeEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/token.entity.ts\n            \n            interface\n            Token\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/user.entity.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/guards/registration.guard.ts\n            \n            variable\n            registrationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            variable\n            unauthErrorInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/api.ts\n            \n            variable\n            api\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/api.ts\n            \n            variable\n            AUTHENTICATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/auth.api.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/layout.service.ts\n            \n            injectable\n            LayoutService\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/core/services/layout.service.ts\n            \n            interface\n            AppConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/layout.service.ts\n            \n            interface\n            LayoutState\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage.service.ts\n            \n            injectable\n            LocalStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/memory-storage.service.ts\n            \n            injectable\n            MemoryStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/session-storage.service.ts\n            \n            injectable\n            SessionStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            injectable\n            JwtService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            variable\n            REFRESH_TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            variable\n            TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            variable\n            appEfects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            variable\n            appStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticationFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticationSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPasswordFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPasswordSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUserFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUserSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            registerNewUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            registerNewUserFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            registerNewUserSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPasswordFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPasswordSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            setCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            setToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            signOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.effects.ts\n            \n            injectable\n            AuthEffects\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            interface\n            AuthState\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            variable\n            authReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            isLoadingAuthState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            isSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectAuthorizationError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectCurrentUserError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectForgotPasswordError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectRegistrationError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectResetPasswordError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            passwordMinLength\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            passwordSpecialChars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            securePasswordRegex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/invitation/invitation.component.ts\n            \n            component\n            InvitationComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/features/home/components/config/config.component.ts\n            \n            component\n            ConfigComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/features/home/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/home/components/menuitem/menuitem.component.ts\n            \n            component\n            MenuitemComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/features/home/components/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/features/home/components/topbar/topbar.component.ts\n            \n            component\n            TopbarComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                25 %\n                (5/20)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.production.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            - : ^0.0.1\n        \n            @angular/animations : ^17.1.0\n        \n            @angular/common : ^17.1.0\n        \n            @angular/compiler : ^17.1.0\n        \n            @angular/core : ^17.1.0\n        \n            @angular/forms : ^17.1.0\n        \n            @angular/platform-browser : ^17.1.0\n        \n            @angular/platform-browser-dynamic : ^17.1.0\n        \n            @angular/platform-server : ^17.1.0\n        \n            @angular/router : ^17.1.0\n        \n            @angular/ssr : ^17.1.3\n        \n            @ngrx/effects : ^17.1.0\n        \n            @ngrx/store : ^17.1.0\n        \n            @ngrx/store-devtools : ^17.1.0\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @vercel/analytics : ^1.1.3\n        \n            @vercel/speed-insights : ^1.0.9\n        \n            express : ^4.18.2\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^17.6.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            ResourceType   (src/.../resource-type.enum.ts)\n                        \n                        \n                            StateStatus   (src/.../state-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/domain/models/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/resource-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 COMMENT\n                            \n                        \n                        \n                            \n                                 DEBUG_FILE\n                            \n                        \n                        \n                            \n                                 DEVICE_STATE\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                 LOG_ENTRY\n                            \n                        \n                        \n                            \n                                 LOG_SESSION\n                            \n                        \n                        \n                            \n                                 LOG_SOURCE\n                            \n                        \n                        \n                            \n                                 ORGANIZATION\n                            \n                        \n                        \n                            \n                                 PLATFORM\n                            \n                        \n                        \n                            \n                                 PROJECT\n                            \n                        \n                        \n                            \n                                 PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                 TEAM\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                 PERMISSION\n                            \n                        \n                        \n                            \n                                 INVITATION\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/state-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StateStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : loading\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\nLogHub - Remote Centralized Logging Solution (CMS)\nThis project is a Angular CMS application that provides an UI for LogHub (remote centralized logging solution). It allows you to collect and manage logs from distributed applications in a centralized location, enhancing troubleshooting and monitoring capabilities.\nThis project was generated with Angular CLI version 17.1.3.\nThis project utilizes next features of angular:\n\nAngular 17\nSSR (Server Side Rendering)\nStandalone Components\nRouter (For url routing)\nHTTP Client (For api calls)\nNGRX (For state management)\nPrimeNG (For UI Components)\n\nTechnologies Used\n\n\n\n\n\n\n\n\n\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nBuild Docker Image\nYou can deploy the application using Docker. First, build your own image:\nExample :docker build -t your-domain/your-image-name:your-version .Here is the full example:\nExample :docker build -t dradman/loghub-cms:1 .\nThen you can run your own image with command:\nExample :docker run -p 80:4000 your-full-image-name Here is the full example:\nExample :docker run -p 80:4000 dradman/loghub-cms:1 . Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nDeploying with Docker\nYou can deploy the application using Docker. First, pull the latest Docker image from the GitHub Container Registry:\nExample :docker pull ghcr.io/dradman/loghub-cms:latestThen, run the Docker container:\nExample :docker run -p 80:4000 ghcr.io/dradman/loghub-cms:latestImportant: Make sure that all environment variables are set correctly.\nDocker-Compose\nYou can also run application using docker compose. See an example here\nEnvironment Variables\nImportant: Due to angular & general limitation since application is served to local browser you can't use standard .env to update environment varaibles.\nIf you wish to change any of the variables you will have to build your own version of application where will change these files\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            api   (src/.../api.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            appEfects   (src/.../app.state.ts)\n                        \n                        \n                            appStore   (src/.../app.state.ts)\n                        \n                        \n                            authenticate   (src/.../auth.actions.ts)\n                        \n                        \n                            AUTHENTICATE   (src/.../api.ts)\n                        \n                        \n                            authenticationFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            authenticationSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            authReducer   (src/.../auth.reducer.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.production.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            forgotPassword   (src/.../auth.actions.ts)\n                        \n                        \n                            forgotPasswordFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            forgotPasswordSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            initialState   (src/.../auth.reducer.ts)\n                        \n                        \n                            isLoadingAuthState   (src/.../auth.selectors.ts)\n                        \n                        \n                            isSuccess   (src/.../auth.selectors.ts)\n                        \n                        \n                            loadCurrentUser   (src/.../auth.actions.ts)\n                        \n                        \n                            loadCurrentUserFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            loadCurrentUserSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            passwordMinLength   (src/.../regex.constants.ts)\n                        \n                        \n                            passwordSpecialChars   (src/.../regex.constants.ts)\n                        \n                        \n                            REFRESH_TOKEN_KEY   (src/.../token-storage.service.ts)\n                        \n                        \n                            registerNewUser   (src/.../auth.actions.ts)\n                        \n                        \n                            registerNewUserFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            registerNewUserSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            registrationGuard   (src/.../registration.guard.ts)\n                        \n                        \n                            resetPassword   (src/.../auth.actions.ts)\n                        \n                        \n                            resetPasswordFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            resetPasswordSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            securePasswordRegex   (src/.../regex.constants.ts)\n                        \n                        \n                            selectAuth   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectAuthorizationError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectCurrentUser   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectCurrentUserError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectForgotPasswordError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectRegistrationError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectResetPasswordError   (src/.../auth.selectors.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            setCurrentUser   (src/.../auth.actions.ts)\n                        \n                        \n                            setToken   (src/.../auth.actions.ts)\n                        \n                        \n                            signOut   (src/.../auth.actions.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../token-storage.service.ts)\n                        \n                        \n                            unauthErrorInterceptor   (src/.../auth.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/api/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  url: environment.apiUrl,\n  teamUrl: environment.apiUrl + '/v1/team',\n  projectUrl: environment.apiUrl + '/v1/project',\n  profileUrl: environment.apiUrl + '/v1/user-profile',\n  platformUrl: environment.apiUrl + '/v1/platform',\n  organizationUrl: environment.apiUrl + '/v1/organization',\n  invitationUrl: environment.apiUrl + '/v1/invitation',\n  deviceUrl: environment.apiUrl + '/v1/device',\n  membersUrl: environment.apiUrl + '/v1/members',\n  filesUrl: environment.apiUrl + '/v1/files',\n  authUrl: environment.apiUrl + '/v1/auth',\n  authOptions: {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': 'true',\n    }),\n    context: new HttpContext().set(AUTHENTICATE, true),\n  },\n  noAuthOptions: {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': 'true',\n    }),\n    context: new HttpContext().set(AUTHENTICATE, false),\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTHENTICATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(\n      routes,\n      withPreloading(PreloadAllModules),\n      withComponentInputBinding(),\n    ),\n    provideHttpClient(\n      withInterceptors([authInterceptor, unauthErrorInterceptor]),\n      withFetch(),\n    ),\n    provideClientHydration(),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: () => {\n        inject({ mode: isDevMode() ? 'development' : 'production' });\n        injectSpeedInsights();\n      },\n    },\n    provideAnimations(),\n    TranslateModule.forRoot({\n      defaultLanguage: 'en',\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }).providers!,\n    provideStore(appStore),\n    provideEffects(appEfects),\n    provideStoreDevtools({ maxAge: 25, logOnly: !isDevMode() }),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/app.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appEfects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [AuthEffects]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appStore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  authState: authReducer,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Authenticate',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Authentication failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Authentication success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[ForgotPassword Page] forgot password',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Forgot password failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Forgot password success',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Get authenticated user',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUserFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Get authenticated user failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUserSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Get authenticated user success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Register Page] Register new user',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Register new user failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Register new user success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[ResetPassword Page] Reset password',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Reset password failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Reset password success',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Set current user',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Set current user',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Home Page] Sign Out')\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  request: HttpRequest,\n  next: HttpHandlerFn\n): Observable> => {\n  if (request.context.get(AUTHENTICATE)) {\n    const accessToken = inject(JwtService).getToken();\n    if (accessToken) {\n      const clonedRequest = request.clone({\n        headers: request.headers.set('Authorization', `Bearer ${accessToken}`),\n      });\n      return next(clonedRequest);\n    } else {\n      return next(request);\n    }\n  } else {\n    return next(request);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unauthErrorInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  req: HttpRequest,\n  next: HttpHandlerFn,\n): Observable> => {\n  const jwtService = inject(JwtService);\n  const authService = inject(AuthService);\n  const store = inject(Store);\n  const router = inject(Router);\n\n  if (req.context.get(AUTHENTICATE)) {\n    return next(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (\n          error instanceof HttpErrorResponse &&\n          !(\n            req.url.includes('auth/authenticate') ||\n            req.url.includes('auth/refreshToken')\n          ) && //  {\n                jwtService.saveToken(refreshResult.refreshToken);\n                jwtService.saveToken(refreshResult.accessToken);\n                store.dispatch(setToken(refreshResult));\n                return next(\n                  req.clone({\n                    headers: req.headers.set(\n                      'Authorization',\n                      `Bearer ${refreshResult.accessToken}`\n                    ),\n                  })\n                );\n              }),\n              catchError((error) => {\n                if (error.status === '401') {\n                  jwtService.clear();\n                  store.dispatch(signOut());\n                  if(!router.url.startsWith('/auth')) {\n                    router.navigate(['/auth'])\n                  }\n                }\n                return throwError(() => error);\n              })\n            );\n          }\n        }\n        return throwError(() => new Error('Unauthorized Exception'));\n      })\n    );\n  } else {\n    return next(req);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, { error }) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Reset Password\n  on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, { error }) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Register new user\n  on(registerNewUser, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Register new user success\n  on(registerNewUserSuccess, (state) => ({\n    ...state,\n    registrationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Register new user failure\n  on(registerNewUserFailure, (state, { error }) => ({\n    ...state,\n    registrationError: error,\n    status: StateStatus.ERROR,\n  })),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:8080/api',\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'https://heavily-composed-mutt.ngrok-free.app', //TODO: Host backend somewhere\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:8080/api',\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLoadingAuthState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.status == StateStatus.LOADING,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.status == StateStatus.SUCCESS,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: AppState) => state.authState\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuthorizationError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => {\n    if (\n      state.token == null &&\n      state.status == StateStatus.ERROR &&\n      state.credentials != null\n    ) {\n      return state.error;\n    } else {\n      return null;\n    }\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.user,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCurrentUserError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => {\n    if (\n      state.user == null &&\n      state.status == StateStatus.ERROR &&\n      state.error\n    ) {\n      return state.error;\n    } else {\n      return null;\n    }\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForgotPasswordError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.forgotPasswordError,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectRegistrationError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.registrationError,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectResetPasswordError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.resetPasswordError,\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/utils/regex.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordSpecialChars\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\\\\?@#$%^\\`<>&+=\"!ºª·#~%&'¿¡€,:;*/+-.=_{}\\\\(\\\\)\\\\[\\\\]`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        securePasswordRegex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[${passwordSpecialChars}])(?=\\\\S+$).{${passwordMinLength},}$`\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/token-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth-refreshtoken'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth-token'\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/registration.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        registrationGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  _next: ActivatedRouteSnapshot,\n  _state: RouterStateSnapshot) => {\n    return environment.enableRegistration;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
