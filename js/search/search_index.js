var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccessDeniedComponent.html",[0,0.168,1,0.864]],["body/components/AccessDeniedComponent.html",[0,0.269,1,1.484,2,1.171,3,0.078,4,0.059,5,0.93,6,0.93,7,0.93,8,0.068,9,4.674,10,3.291,11,4.674,12,0.93,13,1.884,14,1.884,15,1.713,16,5.567,17,1.226,18,1.145,19,1.254,20,2.592,21,3.048,22,4.13,23,3.444,24,2.731,25,1.254,26,6.3,27,1.312,28,6.3,29,0.442,30,0.009,31,1.539,32,0.502,33,2.121,34,1.617,35,1.617,36,2,37,2.259,38,0.078,39,0.502,40,6.3,41,3.359,42,6.3,43,0.93,44,1.254,45,1.254,46,0.93,47,1.518,48,0.93,49,0.465,50,0.93,51,0.909,52,0.93,53,0.909,54,0.93,55,0.909,56,0.93,57,0.909,58,0.93,59,0.909,60,0.93,61,0.909,62,0.849,63,1.254,64,0.909,65,1.254,66,0.909,67,0.93,68,0.909,69,0.93,70,0.909,71,0.93,72,0.909,73,0.889,74,1.254,75,0.909,76,0.93,77,0.909,78,0.93,79,0.909,80,0.93,81,0.909,82,0.93,83,0.909,84,0.93,85,0.909,86,0.93,87,0.909,88,0.93,89,1.254,90,0.909,91,0.93,92,0.909,93,0.811,94,1.418,95,0.909,96,0.93,97,0.909,98,0.93,99,0.909,100,0.93,101,0.909,102,0.93,103,0.909,104,0.909,105,1.125,106,0.909,107,1.198,108,0.93,109,1.145,110,1.254,111,0.909,112,0.909,113,0.93,114,0.909,115,0.93,116,0.909,117,0.93,118,0.909,119,0.93,120,0.909,121,0.869,122,0.909,123,0.93,124,0.909,125,0.93,126,0.93,127,0.909,128,0.93,129,0.909,130,0.93,131,0.909,132,0.93,133,0.909,134,0.909,135,0.93,136,0.909,137,1.145,138,0.93,139,0.909,140,0.93,141,0.909,142,0.93,143,0.909,144,0.93,145,0.909,146,0.93,147,0.93,148,0.889,149,0.909,150,0.93,151,0.909,152,0.93,153,0.93,154,0.93,155,0.006,156,0.006]],["title/components/AlertsComponent.html",[0,0.168,51,0.864]],["body/components/AlertsComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,1.523,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,157,4.988,158,7.827,159,6.579,160,6.579,161,2.393]],["title/components/AppComponent.html",[0,0.168,53,0.864]],["body/components/AppComponent.html",[0,0.251,1,0.796,2,1.069,3,0.068,4,0.051,5,0.814,6,0.814,7,0.814,8,0.06,12,0.814,13,1.874,14,1.874,15,0.796,17,1.118,18,1.044,19,1.144,25,1.144,27,1.197,29,0.409,30,0.009,31,1.347,32,0.44,33,1.857,34,1.415,35,1.415,38,0.068,39,0.44,41,2.532,43,0.814,44,1.144,45,1.144,46,0.814,47,1.434,48,0.814,49,0.532,50,0.814,51,0.796,52,0.814,53,1.402,54,0.814,55,0.796,56,0.814,57,0.796,58,0.814,59,0.796,60,0.814,61,0.796,62,0.743,63,1.144,64,0.796,65,1.144,66,0.796,67,0.814,68,0.796,69,0.814,70,0.796,71,0.814,72,0.796,73,0.778,74,1.144,75,0.796,76,0.814,77,0.796,78,0.814,79,0.796,80,0.814,81,0.796,82,0.814,83,0.796,84,0.814,85,0.796,86,0.814,87,0.796,88,0.814,89,1.144,90,0.796,91,0.814,92,0.796,93,0.71,94,1.323,95,0.796,96,0.814,97,0.796,98,0.814,99,0.796,100,0.814,101,0.796,102,0.814,103,0.796,104,0.796,105,1.049,106,0.796,107,1.093,108,0.814,109,1.044,110,1.144,111,0.796,112,0.796,113,0.814,114,0.796,115,0.814,116,0.796,117,0.814,118,0.796,119,0.814,120,0.796,121,0.761,122,0.796,123,0.814,124,0.796,125,0.814,126,0.814,127,0.796,128,0.814,129,0.796,130,0.814,131,0.796,132,0.814,133,0.796,134,0.796,135,0.814,136,0.796,137,1.044,138,0.814,139,0.796,140,0.814,141,0.796,142,0.814,143,0.796,144,0.814,145,0.796,146,0.814,147,0.814,148,0.778,149,0.796,150,0.814,151,0.796,152,0.814,153,0.814,154,0.814,155,0.005,156,0.005,162,4.092,163,2.203,164,3.11,165,3.7,166,2.532,167,5.872,168,5.748,169,5.748,170,0.292,171,1.499,172,4.013,173,3.373,174,2.457,175,5.079,176,7.207,177,7.207,178,1.339,179,4.092,180,3.483,181,4.503,182,6.063,183,1.715,184,4.092,185,1.252,186,0.424,187,1.197,188,4.092,189,1.893,190,2.471,191,4.092,192,5.079,193,1.074,194,4.092,195,5.079,196,4.092,197,4.092,198,2.881,199,2.725,200,3.302,201,4.092,202,4.092,203,4.092,204,4.092,205,4.092,206,4.092,207,3.615,208,3.615,209,3.615,210,2.383,211,5.872,212,5.079,213,5.363,214,3.615,215,3.615,216,4.092,217,2.881,218,3.068,219,3.615,220,3.615,221,5.363,222,2.725,223,3.615,224,3.615,225,3.615,226,5.079,227,3.615,228,3.615,229,3.615,230,3.615]],["title/interfaces/AppConfig.html",[231,0.387,232,3.33]],["body/interfaces/AppConfig.html",[3,0.038,4,0.029,8,0.033,18,1.324,29,0.25,30,0.009,32,0.244,38,0.061,39,0.893,49,0.272,155,0.003,156,0.003,166,1,170,0.162,174,1.523,181,4.555,186,0.625,189,1.561,193,1.404,210,0.713,217,4.41,218,4.388,222,5.346,231,0.749,232,6.229,233,0.541,234,1.833,235,3.222,236,4.388,237,2.803,238,3.475,239,6.655,240,1.889,241,3.475,242,0.74,243,4.673,244,5.698,245,5.698,246,5.849,247,5.793,248,6.018,249,2.589,250,6.478,251,5.877,252,3.994,253,5.414,254,4.904,255,5.35,256,5.464,257,3.768,258,4.835,259,5.149,260,4.573,261,3.74,262,3.086,263,5.505,264,3.475,265,5.665,266,5.708,267,3.994,268,3.994,269,4.722,270,3.994,271,3.994,272,2.215,273,5.149,274,3.74,275,2.757,276,4.944,277,4.514,278,4.944,279,5.589,280,2.968,281,2.968,282,2.935,283,2.589,284,3.328,285,2.757,286,4.995,287,2.757,288,2.968,289,3.751,290,4.813,291,2.968,292,2.968,293,3.994,294,2.757,295,3.557,296,2.589,297,3.187,298,2.757,299,2.757,300,1.635,301,1.492,302,3.475,303,4.944,304,4.494,305,5.322,306,2.968,307,0.801,308,5.849,309,1.492,310,3.086,311,2.449,312,1.439,313,5.698,314,2.968,315,3.86,316,1.833,317,5.322,318,5.322,319,5.322,320,5.542,321,5.055,322,5.055,323,4.388,324,5.322,325,1.833,326,1.833,327,1.703,328,1.513,329,4.696,330,1.703,331,5.055,332,5.542,333,3.74,334,4.469,335,1.833,336,2.449,337,4.299,338,3.74,339,1.703,340,4.388,341,4.725,342,3.263,343,2.968,344,2.589,345,1.304,346,1.833,347,1.833,348,2.968,349,1.439,350,2.968,351,4.12,352,2.589,353,1.833,354,1.063,355,1,356,1.703,357,1.833,358,1.374,359,2.589,360,1.703,361,2.968,362,3.475,363,1.703,364,5.542,365,2.679,366,3.994,367,3.374,368,2.757,369,3.994,370,2.968,371,3.994,372,3.222,373,2.493,374,2.33,375,3.129,376,2.757,377,2.449,378,3.475,379,5.542,380,1.833,381,1.599,382,0.806,383,0.806,384,0.806,385,0.848,386,0.826,387,0.826,388,2.449,389,2.449,390,2.757,391,2.968,392,2.589,393,3.751,394,2.968,395,2.757,396,1.833,397,1.833,398,2.968,399,1.833,400,3.74,401,3.74,402,2.968,403,2.968,404,3.74,405,1.833,406,3.74,407,1.513,408,1.833,409,3.74,410,2.968,411,2.968,412,1.833,413,1.833,414,1.672,415,1.833,416,2.757,417,2.968,418,2.968,419,3.74,420,2.968,421,3.475,422,3.74,423,2.968,424,1.833,425,1.599,426,1.833,427,1.833,428,2.968,429,1.833,430,1.599,431,1.833,432,1.833,433,1.833,434,1.833,435,3.74,436,1.833,437,0.649,438,1.833,439,1.833,440,1.833,441,1.833,442,1.833,443,1.833]],["title/interfaces/AppState.html",[231,0.387,444,1.796]],["body/interfaces/AppState.html",[3,0.09,4,0.068,8,0.079,29,0.497,30,0.009,38,0.127,137,1.264,155,0.007,156,0.007,170,0.387,186,0.65,210,2.184,231,0.474,233,1.296,242,0.706,444,2.814,445,5.438,446,7.176,447,7.176,448,7.176,449,7.176,450,7.176,451,7.176,452,7.176,453,7.176,454,5.615,455,5.438,456,6.149,457,5.438,458,5.615,459,5.438,460,6.149,461,5.438,462,5.615,463,5.438,464,6.149,465,5.438,466,5.615,467,5.438,468,6.149,469,5.438,470,5.615,471,5.438,472,6.149,473,5.438,474,5.615,475,5.438,476,6.149,477,5.438,478,6.149,479,5.438,480,5.615,481,5.438,482,5.615,483,5.217,484,5.438,485,6.149,486,5.438,487,5.438,488,5.438]],["title/components/AuthComponent.html",[0,0.168,55,0.864]],["body/components/AuthComponent.html",[0,0.278,1,0.966,2,1.219,3,0.082,4,0.062,5,0.988,6,0.988,7,0.988,8,0.072,12,0.988,13,1.889,14,1.889,15,0.966,17,1.276,18,1.192,19,1.306,25,1.306,27,1.366,29,0.354,30,0.009,32,0.533,33,2.254,38,0.082,39,0.533,43,0.988,44,1.306,45,1.306,46,0.988,47,1.555,48,0.988,49,0.484,50,0.988,51,0.966,52,0.988,53,0.966,54,0.988,55,1.52,56,0.988,57,0.966,58,0.988,59,0.966,60,0.988,61,0.966,62,0.902,63,1.306,64,0.966,65,1.306,66,0.966,67,0.988,68,0.966,69,0.988,70,0.966,71,0.988,72,0.966,73,0.944,74,1.306,75,0.966,76,0.988,77,0.966,78,0.988,79,0.966,80,0.988,81,0.966,82,0.988,83,0.966,84,0.988,85,0.966,86,0.988,87,0.966,88,0.988,89,1.306,90,0.966,91,0.988,92,0.966,93,0.861,94,1.462,95,0.966,96,0.988,97,0.966,98,0.988,99,0.966,100,0.988,101,0.966,102,0.988,103,0.966,104,0.966,105,1.16,106,0.966,107,1.247,108,0.988,109,1.192,110,1.306,111,0.966,112,0.966,113,0.988,114,0.966,115,0.988,116,0.966,117,0.988,118,0.966,119,0.988,120,0.966,121,0.923,122,0.966,123,0.988,124,0.966,125,0.988,126,0.988,127,0.966,128,0.988,129,0.966,130,0.988,131,0.966,132,0.988,133,0.966,134,0.966,135,0.988,136,0.966,137,1.192,138,0.988,139,0.966,140,0.988,141,0.966,142,0.988,143,0.966,144,0.988,145,0.966,146,0.988,147,0.988,148,0.944,149,0.966,150,0.988,151,0.966,152,0.988,153,0.988,154,0.988,155,0.006,156,0.006,167,6.49,489,4.966,490,5.796,491,6.559,492,6.559]],["title/injectables/AuthEffects.html",[307,0.968,454,3.585]],["body/injectables/AuthEffects.html",[3,0.061,4,0.046,8,0.054,29,0.422,30,0.009,32,0.395,38,0.061,39,0.395,49,0.271,155,0.005,156,0.005,170,0.262,174,1.962,178,1.241,183,1.833,185,0.801,186,0.271,187,0.766,242,0.54,295,2.493,300,2.32,301,2.118,307,1.16,309,0.938,312,2.329,414,2.608,454,4.298,493,1.372,494,3.677,495,5.148,496,6.714,497,5.697,498,6.067,499,5.148,500,4.153,501,5.541,502,6.714,503,5.148,504,5.541,505,3.677,506,4.813,507,6.325,508,5.518,509,4.364,510,3.677,511,5.423,512,5.403,513,5.326,514,6.092,515,5.326,516,5.326,517,3.308,518,4.073,519,5.326,520,3.796,521,5.326,522,5.234,523,5.326,524,2.782,525,3.677,526,5.326,527,6.866,528,3.677,529,5.326,530,3.75,531,6.866,532,6.866,533,2.754,534,5.326,535,5.326,536,5.326,537,5.326,538,6.866,539,3.677,540,5.326,541,4.408,542,6.866,543,6.866,544,6.866,545,3.677,546,5.326,547,5.326,548,5.534,549,5.326,550,3.677,551,5.326,552,5.326,553,3.677,554,5.326,555,5.326,556,5.326,557,3.677,558,5.326,559,3.677,560,5.326,561,5.326,562,5.534,563,5.326,564,3.677,565,5.326,566,6.263,567,5.326,568,4.706,569,3.677,570,2.224,571,2.131,572,2.224,573,3.677,574,3.677,575,3.249,576,3.249,577,3.249,578,3.249,579,3.249,580,3.249,581,3.249,582,3.249,583,3.249]],["title/injectables/AuthService.html",[307,0.968,506,2.814]],["body/injectables/AuthService.html",[3,0.083,4,0.063,8,0.073,29,0.472,30,0.009,32,0.538,38,0.083,39,0.538,49,0.63,73,0.953,121,0.931,155,0.006,156,0.006,166,2.207,170,0.357,171,1.721,178,1.168,183,1.885,185,1.858,186,0.63,187,1.776,189,2.126,193,1.416,210,1.573,307,1.437,309,1.278,354,2.345,355,2.207,365,2.143,375,4.544,414,2.677,493,1.87,497,5.531,499,4.947,503,4.947,506,4.179,518,4.367,520,3.685,584,5.01,585,4.645,586,6.272,587,5.531,588,3.031,589,4.544,590,5.01,591,3.674,592,6.598,593,5.878,594,5.01,595,6.598,596,6.598,597,5.01,598,4.645,599,5.01,600,5.01,601,6.598,602,5.01,603,6.598,604,5.222,605,5.01,606,4.203,607,6.598,608,6.327,609,5.01,610,5.01,611,3.031,612,3.824,613,4.043,614,5.01,615,4.427,616,4.276,617,3.337,618,4.043,619,4.427,620,5.01,621,6.575,622,8.147,623,7.392,624,6.598,625,3.031,626,4.645,627,5.01,628,5.01]],["title/interfaces/AuthState.html",[231,0.387,446,3.585]],["body/interfaces/AuthState.html",[3,0.063,4,0.048,8,0.055,29,0.413,30,0.009,38,0.106,73,1.21,121,1.182,155,0.005,156,0.005,170,0.269,186,0.625,210,1.705,231,0.33,233,0.901,240,1.341,242,0.551,257,3.596,284,2.437,290,3.441,315,4.352,345,3.209,365,2.721,382,1.341,383,1.341,386,1.375,387,1.375,437,2.679,446,5.133,456,3.34,495,2.834,496,3.34,497,4.074,498,3.34,499,2.834,500,2.286,501,3.05,502,3.34,503,2.834,504,4.385,520,3.832,524,2.908,548,3.34,562,3.34,575,3.34,576,3.34,577,3.34,578,3.34,579,3.34,580,3.34,581,3.34,582,3.34,587,4.769,593,5.214,615,3.34,616,2.191,629,3.78,630,7.903,631,8.235,632,7.903,633,7.367,634,7.903,635,7.903,636,4.874,637,6.635,638,7.367,639,3.474,640,3.287,641,1.276,642,2.286,643,1.954,644,3.78,645,2.517,646,3.78,647,3.78,648,3.848,649,2.286,650,5.44,651,2.286,652,3.78,653,4.64,654,3.34,655,3.78,656,4.801,657,3.966,658,3.78,659,3.966,660,4.64,661,3.78,662,4.181,663,3.441,664,3.78,665,3.78,666,3.78,667,3.78,668,3.78,669,3.78,670,3.78,671,3.78,672,3.78,673,3.78,674,3.78,675,3.78,676,3.78,677,3.78,678,4.478,679,4.236,680,3.78,681,3.78,682,3.78]],["title/interfaces/AuthenticateRequestDto.html",[231,0.387,593,3.33]],["body/interfaces/AuthenticateRequestDto.html",[3,0.116,4,0.088,8,0.102,30,0.009,38,0.116,155,0.008,156,0.008,170,0.497,186,0.598,193,1.468,231,0.609,233,1.663,242,0.822,518,4.724,520,4.402,593,6.074,683,6.977,684,4.22]],["title/components/CloseComponent.html",[0,0.168,57,0.864]],["body/components/CloseComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,1.523,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,339,5.868,685,4.988,686,6.579,687,6.579]],["title/components/ConfigComponent.html",[0,0.168,59,0.864]],["body/components/ConfigComponent.html",[0,0.239,1,0.4,2,0.631,3,0.034,4,0.026,5,0.862,6,0.41,7,0.41,8,0.063,12,0.41,13,1.797,14,1.797,15,0.4,17,0.66,18,0.616,19,0.675,20,1.575,21,1.852,23,2.092,24,1.659,25,0.675,27,0.706,29,0.39,30,0.009,31,0.678,32,0.221,34,0.712,35,0.712,36,0.88,37,0.994,38,0.034,39,0.736,41,3.456,43,0.41,44,1.19,45,1.19,46,0.41,47,0.999,48,0.41,49,0.521,50,0.41,51,0.4,52,0.41,53,0.4,54,0.41,55,0.4,56,0.41,57,0.4,58,0.41,59,1.163,60,0.41,61,0.4,62,0.374,63,0.675,64,0.4,65,0.675,66,0.4,67,0.41,68,0.4,69,0.41,70,0.4,71,0.41,72,0.4,73,0.391,74,0.675,75,0.4,76,0.41,77,0.4,78,0.41,79,0.4,80,0.41,81,0.4,82,0.41,83,0.4,84,0.41,85,0.4,86,0.41,87,0.4,88,0.41,89,0.675,90,0.4,91,0.41,92,0.4,93,0.357,94,0.862,95,0.4,96,0.41,97,0.4,98,0.41,99,0.4,100,0.41,101,0.4,102,0.41,103,0.4,104,0.4,105,0.683,106,0.4,107,0.645,108,0.41,109,0.616,110,0.675,111,0.4,112,0.4,113,0.41,114,0.4,115,0.41,116,0.4,117,0.41,118,0.4,119,0.41,120,0.4,121,0.382,122,0.4,123,0.41,124,0.4,125,0.41,126,0.41,127,0.4,128,0.41,129,0.4,130,0.41,131,0.4,132,0.41,133,0.4,134,0.4,135,0.41,136,0.4,137,0.616,138,0.41,139,0.4,140,0.41,141,0.4,142,0.41,143,0.4,144,0.41,145,0.4,146,0.41,147,0.41,148,0.391,149,0.4,150,0.41,151,0.4,152,0.41,153,0.41,154,0.41,155,0.003,156,0.003,170,0.147,171,1.723,174,0.588,175,2.998,178,1.17,181,4.369,182,5.639,183,1.789,185,1.536,186,0.564,187,1.376,189,1.803,190,2.27,192,2.998,193,1.367,195,4.908,198,1.449,199,1.37,200,1.661,207,1.818,208,2.998,209,1.818,210,1.744,211,3.825,212,2.998,213,4.483,214,1.818,215,1.818,219,1.818,220,1.818,221,3.493,222,5.767,223,1.818,224,1.818,225,1.818,226,2.998,227,1.818,228,1.818,229,1.818,230,1.818,235,3.037,240,1.535,242,0.344,243,3.037,244,3.245,245,4.74,246,3.048,247,3.245,248,5.639,251,4.482,253,4.185,254,4.645,258,2.389,260,2.259,263,4.467,265,3.344,267,3.765,268,4.165,269,3.181,272,2.486,273,2.544,277,4.255,282,2.149,284,2.928,289,4.821,290,3.518,294,2.544,295,2.798,296,4.966,297,2.889,298,2.544,299,3.765,300,1.67,301,1.883,302,3.765,303,3.765,334,4.539,341,2.259,342,3.048,345,1.781,349,3.787,365,3.315,367,2.742,372,4.374,377,4.816,382,0.73,383,0.73,384,0.73,385,0.768,389,2.259,407,2.259,414,1.744,509,2.41,688,2.058,689,4.824,690,4.966,691,5.978,692,4.824,693,4.329,694,4.329,695,4.329,696,2.238,697,3.393,698,3.393,699,3.787,700,6.158,701,4.908,702,5.021,703,3.393,704,5.978,705,5.978,706,5.021,707,1.889,708,6.848,709,2.259,710,1.543,711,3.393,712,2.998,713,2.738,714,4.209,715,4.437,716,3.765,717,4.437,718,5.021,719,5.021,720,5.021,721,3.765,722,5.021,723,4.052,724,4.052,725,4.437,726,5.021,727,5.021,728,5.283,729,3.535,730,4.437,731,5.021,732,5.021,733,3.493,734,3.493,735,2.058,736,2.998,737,2.998,738,2.998,739,3.393,740,2.998,741,2.998,742,2.998,743,3.393,744,2.738,745,2.998,746,2.738,747,2.058,748,5.978,749,2.998,750,3.393,751,2.058,752,2.998,753,3.393,754,6.051,755,5.555,756,3.981,757,5.021,758,2.058,759,3.393,760,4.437,761,2.058,762,3.393,763,2.259,764,2.058,765,3.393,766,2.738,767,6.322,768,2.058,769,3.393,770,3.393,771,2.998,772,2.998,773,5.021,774,1.966,775,6.322,776,3.825,777,4.329,778,3.245,779,3.825,780,2.544,781,3.393,782,3.393,783,2.058,784,2.058,785,5.021,786,4.437,787,4.437,788,4.437,789,2.738,790,3.393,791,2.998,792,3.393,793,2.058,794,2.058,795,2.058,796,2.058,797,7.053,798,2.058,799,2.058,800,2.058,801,2.058,802,2.058,803,2.058,804,2.058,805,2.058,806,2.058,807,2.058,808,2.058,809,2.058,810,2.058,811,2.058,812,2.058,813,2.058,814,2.058,815,2.058,816,2.058,817,1.818,818,1.028,819,4.209,820,3.393,821,2.058,822,2.058,823,5.021,824,2.998,825,2.058,826,2.998,827,2.058,828,2.998,829,2.058,830,2.058,831,2.058,832,2.998,833,2.058,834,2.058,835,2.058,836,2.058,837,4.329,838,3.393,839,3.393,840,3.393,841,3.393,842,3.393,843,3.393,844,3.393,845,3.393,846,3.393,847,3.393,848,4.437,849,6.608,850,3.393,851,3.393,852,3.393,853,5.021,854,3.393,855,3.393]],["title/components/CreateOrganizationComponent.html",[0,0.168,61,0.864]],["body/components/CreateOrganizationComponent.html",[0,0.2,1,0.543,2,0.805,3,0.046,4,0.035,5,0.555,6,0.555,7,0.555,8,0.041,12,0.555,13,1.837,14,1.837,15,0.543,17,0.842,18,0.786,19,0.862,20,1.93,21,2.269,23,2.563,24,2.033,25,0.862,27,0.901,29,0.455,30,0.009,31,0.919,32,0.3,33,1.266,34,0.965,35,0.965,36,1.193,37,1.348,38,0.046,39,0.3,41,3.53,43,0.555,44,0.862,45,0.862,46,0.555,47,1.19,48,0.555,49,0.56,50,0.555,51,0.543,52,0.555,53,0.543,54,0.555,55,0.543,56,0.555,57,0.543,58,0.555,59,0.543,60,0.555,61,1.163,62,1.562,63,0.862,64,0.543,65,0.862,66,0.543,67,0.555,68,0.543,69,0.555,70,0.543,71,0.555,72,0.543,73,0.531,74,0.862,75,0.543,76,0.555,77,0.543,78,0.555,79,0.543,80,0.555,81,0.543,82,0.555,83,0.543,84,0.555,85,0.543,86,0.555,87,0.543,88,0.555,89,0.862,90,0.543,91,0.555,92,0.543,93,0.484,94,1.056,95,0.543,96,0.555,97,0.543,98,0.555,99,0.543,100,0.555,101,0.543,102,0.555,103,0.543,104,0.543,105,0.837,106,0.543,107,0.823,108,0.555,109,0.786,110,0.862,111,0.543,112,0.543,113,0.555,114,0.543,115,0.555,116,0.543,117,0.555,118,0.543,119,0.555,120,0.543,121,0.519,122,0.543,123,0.555,124,0.543,125,0.555,126,0.555,127,0.543,128,0.555,129,0.543,130,0.555,131,0.543,132,0.555,133,0.543,134,0.543,135,0.555,136,0.543,137,0.786,138,0.555,139,0.543,140,0.555,141,0.543,142,0.555,143,0.543,144,0.555,145,0.543,146,0.555,147,0.555,148,0.531,149,0.543,150,0.555,151,0.543,152,0.555,153,0.555,154,0.555,155,0.004,156,0.004,163,1.659,164,2.483,165,2.953,170,0.199,171,1.129,172,3.329,173,2.798,174,2.471,178,1.009,180,3.453,183,1.823,185,1.302,186,0.572,187,1.614,189,1.781,190,2.243,193,1.276,210,1.665,240,1.535,242,0.439,272,1.8,284,1.659,300,1.482,301,1.353,309,0.711,373,1.306,382,1.535,383,1.535,384,1.881,385,1.616,386,1.575,387,1.575,414,0.876,437,2.168,444,1.128,517,1.128,524,1.705,533,2.238,606,1.495,616,1.617,641,0.941,696,2.743,818,1.393,856,8.437,857,8.437,858,2.79,859,2.844,860,2.162,861,4.065,862,2.798,863,2.844,864,2.953,865,3.074,866,3.825,867,3.825,868,5.305,869,3.533,870,3.074,871,5.031,872,4.687,873,5.305,874,4.281,875,4.281,876,4.329,877,3.493,878,4.852,879,3.205,880,3.246,881,2.465,882,4.822,883,2.889,884,4.322,885,3.695,886,4.329,887,4.329,888,2.79,889,2.79,890,3.493,891,2.79,892,3.541,893,2.79,894,2.79,895,2.79,896,2.79,897,3.246,898,2.79,899,2.619,900,3.616,901,2.79,902,3.83,903,2.79,904,4.329,905,2.79,906,2.79,907,3.603,908,2.321,909,3.825,910,2.79,911,2.79,912,3.493,913,2.79,914,1.495,915,1.687,916,1.306,917,1.553,918,1.495,919,1.687,920,3.209,921,1.687,922,3.246,923,2.79,924,2.465,925,1.193,926,2.092,927,2.251,928,2.79,929,2.251,930,2.465,931,2.092,932,2.251,933,2.619,934,1.965,935,2.41,936,2.509,937,2.619,938,2.619,939,2.251,940,2.465,941,2.79,942,2.465,943,2.79,944,1.907,945,2.79,946,2.79,947,1.858,948,2.883,949,1.858,950,2.465,951,1.767,952,3.977,953,1.442,954,2.251,955,2.465,956,1.553,957,1.553,958,1.553,959,2.79,960,2.79,961,1.495,962,1.495,963,2.79,964,3.493,965,2.79,966,2.79,967,2.79,968,2.79,969,3.091,970,2.092,971,2.79,972,2.79,973,2.79,974,2.251,975,2.465,976,2.092,977,3.493,978,4.329,979,4.329,980,4.329,981,4.329,982,4.329,983,4.329]],["title/interfaces/CreateOrganizationRequestDto.html",[231,0.387,922,3.33]],["body/interfaces/CreateOrganizationRequestDto.html",[3,0.116,4,0.088,8,0.102,30,0.009,38,0.116,49,0.65,155,0.008,156,0.008,170,0.496,186,0.598,193,1.467,231,0.608,233,1.66,242,0.821,684,4.214,862,3.26,892,4.554,922,6.069,984,5.621]],["title/interfaces/CreateProjectRequestDto.html",[231,0.387,985,3.585]],["body/interfaces/CreateProjectRequestDto.html",[3,0.116,4,0.088,8,0.102,30,0.009,38,0.116,49,0.65,105,1.1,155,0.008,156,0.008,170,0.496,186,0.598,193,1.467,231,0.608,233,1.66,242,0.821,684,4.214,984,5.621,985,6.532,986,5.866]],["title/interfaces/CreateTeamRequestDto.html",[231,0.387,987,3.585]],["body/interfaces/CreateTeamRequestDto.html",[3,0.117,4,0.089,8,0.103,30,0.008,38,0.117,155,0.008,156,0.008,170,0.503,186,0.522,193,1.391,231,0.616,233,1.684,242,0.828,684,4.274,892,4.574,984,5.702,987,6.586,988,3.787]],["title/components/DetailsComponent.html",[0,0.168,64,0.864]],["body/components/DetailsComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,1.523,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,989,4.988,990,5.51,991,5.813,992,5.813]],["title/components/DevicesComponent.html",[0,0.168,66,0.864]],["body/components/DevicesComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,1.523,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,993,4.988,994,6.916,995,6.579,996,6.579]],["title/components/DocumentationComponent.html",[0,0.168,68,0.864]],["body/components/DocumentationComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,1.523,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,997,4.988,998,7.827,999,6.579,1000,6.579]],["title/interfaces/FileDto.html",[231,0.387,1001,3.33]],["body/interfaces/FileDto.html",[3,0.11,4,0.083,8,0.096,30,0.009,38,0.11,155,0.007,156,0.007,170,0.471,186,0.662,193,1.504,231,0.577,233,1.576,242,0.797,297,4.047,780,6.495,1001,5.887,1002,6.615,1003,8.662,1004,8.662,1005,8.662,1006,8.662,1007,8.662,1008,4.047]],["title/components/FooterComponent.html",[0,0.168,70,0.864]],["body/components/FooterComponent.html",[0,0.278,1,0.972,2,1.224,3,0.083,4,0.063,5,0.994,6,0.994,7,0.994,8,0.073,12,0.994,13,1.889,14,1.889,15,0.972,17,1.281,18,1.196,19,0.994,25,1.31,27,1.371,29,0.269,30,0.009,32,0.536,38,0.083,39,0.536,43,0.994,44,1.31,45,1.31,46,0.994,47,1.558,48,0.994,49,0.486,50,0.994,51,0.972,52,0.994,53,0.972,54,0.994,55,0.972,56,0.994,57,0.972,58,0.994,59,0.972,60,0.994,61,0.972,62,0.907,63,1.31,64,0.972,65,1.31,66,0.972,67,0.994,68,0.972,69,0.994,70,1.523,71,0.994,72,0.972,73,0.95,74,1.31,75,0.972,76,0.994,77,0.972,78,0.994,79,0.972,80,0.994,81,0.972,82,0.994,83,0.972,84,0.994,85,0.972,86,0.994,87,0.972,88,0.994,89,1.31,90,0.972,91,0.994,92,0.972,93,0.866,94,1.466,95,0.972,96,0.994,97,0.972,98,0.994,99,0.972,100,0.994,101,0.972,102,0.994,103,0.972,104,0.972,105,1.163,106,0.972,107,1.252,108,0.994,109,1.196,110,1.31,111,0.972,112,0.972,113,0.994,114,0.972,115,0.994,116,0.972,117,0.994,118,0.972,119,0.994,120,0.972,121,0.928,122,0.972,123,0.994,124,0.972,125,0.994,126,0.994,127,0.972,128,0.994,129,0.972,130,0.994,131,0.972,132,0.994,133,0.972,134,0.972,135,0.994,136,0.972,137,1.196,138,0.994,139,0.972,140,0.994,141,0.972,142,0.994,143,0.972,144,0.994,145,0.972,146,0.994,147,0.994,148,0.95,149,0.972,150,0.994,151,0.972,152,0.994,153,0.994,154,0.994,155,0.006,156,0.006,1009,4.994,1010,6.583,1011,6.583,1012,6.583,1013,6.583]],["title/components/ForgotPasswordComponent.html",[0,0.168,72,0.864]],["body/components/ForgotPasswordComponent.html",[0,0.205,1,0.564,2,0.828,3,0.048,4,0.036,5,0.576,6,0.576,7,0.576,8,0.042,12,0.576,13,1.841,14,1.841,15,0.564,17,0.867,18,0.81,19,0.887,20,1.976,21,2.323,22,3.148,24,2.081,25,0.887,27,0.928,29,0.451,30,0.009,31,0.954,32,0.311,33,1.314,34,1.002,35,1.002,36,1.239,38,0.048,39,0.311,41,3.561,43,0.576,44,0.887,45,0.887,46,0.576,47,1.214,48,0.576,49,0.45,50,0.576,51,0.564,52,0.576,53,0.564,54,0.576,55,0.564,56,0.576,57,0.564,58,0.576,59,0.564,60,0.576,61,0.564,62,0.526,63,0.887,64,0.564,65,0.887,66,0.564,67,0.576,68,0.564,69,0.576,70,0.564,71,0.576,72,1.187,73,1.378,74,0.887,75,0.564,76,0.576,77,0.564,78,0.576,79,0.564,80,0.576,81,0.564,82,0.576,83,0.564,84,0.576,85,0.564,86,0.576,87,0.564,88,0.576,89,0.887,90,0.564,91,0.576,92,0.564,93,0.502,94,1.081,95,0.564,96,0.576,97,0.564,98,0.576,99,0.564,100,0.576,101,0.564,102,0.576,103,0.564,104,0.564,105,0.858,106,0.564,107,0.848,108,0.576,109,0.81,110,0.887,111,0.564,112,0.564,113,0.576,114,0.564,115,0.576,116,0.564,117,0.576,118,0.564,119,0.576,120,0.564,121,0.538,122,0.564,123,0.576,124,0.564,125,0.576,126,0.576,127,0.564,128,0.576,129,0.564,130,0.576,131,0.564,132,0.576,133,0.564,134,0.564,135,0.576,136,0.564,137,0.81,138,0.576,139,0.564,140,0.576,141,0.564,142,0.576,143,0.564,144,0.576,145,0.564,146,0.576,147,0.576,148,0.551,149,0.564,150,0.576,151,0.564,152,0.576,153,0.576,154,0.576,155,0.004,156,0.004,163,1.708,164,2.542,165,3.024,170,0.206,171,1.162,172,3.396,173,2.855,174,2.484,178,1.038,180,3.5,183,1.803,185,0.971,186,0.552,187,1.659,189,1.641,190,2.182,193,0.878,240,1.027,242,0.452,272,1.204,284,1.708,300,1.517,301,1.385,309,0.739,345,1.027,373,1.356,382,1.581,383,1.581,384,1.581,385,1.081,386,1.054,387,1.054,437,2.277,444,1.171,499,5.213,500,1.752,506,4.588,517,1.171,518,3.269,520,2.226,524,1.961,530,2.039,533,1.498,585,4.636,598,2.039,641,0.977,657,1.498,696,2.808,818,1.447,859,2.912,860,2.226,861,4.111,863,2.912,864,3.024,865,3.148,869,3.617,870,3.148,879,3.269,883,2.929,884,4.206,885,3.745,899,2.696,900,2.696,902,4.111,907,3.024,908,1.553,914,1.553,915,1.752,916,1.356,917,1.613,918,1.553,919,1.752,920,2.696,921,1.752,925,1.239,933,1.752,934,1.314,935,1.613,936,1.679,937,1.752,938,1.752,944,2.392,947,1.929,948,1.929,949,1.929,951,1.835,952,2.172,954,2.337,956,3.024,957,3.024,958,3.024,961,2.912,962,3.727,969,2.304,1014,8.358,1015,8.358,1016,2.559,1017,3.938,1018,3.938,1019,5.432,1020,4.8,1021,4.072,1022,4.072,1023,3.824,1024,3.341,1025,1.929,1026,4.456,1027,3.341,1028,2.896,1029,2.896,1030,2.896,1031,2.896,1032,2.896,1033,2.559,1034,3.341,1035,2.896,1036,3.138,1037,2.896,1038,2.559,1039,2.559,1040,2.896,1041,3.341,1042,2.559,1043,2.039,1044,4.8,1045,1.835,1046,2.896,1047,1.498,1048,1.835,1049,2.172,1050,2.172,1051,2.172,1052,1.929,1053,2.039,1054,2.039,1055,2.039,1056,2.896,1057,8.429,1058,3.938,1059,2.896,1060,2.896,1061,2.559,1062,2.559,1063,2.559,1064,2.559,1065,2.896,1066,2.039,1067,2.559,1068,3.341,1069,2.172,1070,2.559,1071,2.559,1072,1.929,1073,2.896,1074,2.172,1075,3.341,1076,3.938,1077,4.456,1078,3.938,1079,3.938,1080,4.456,1081,4.456,1082,3.938]],["title/interfaces/ForgotPasswordRequestDto.html",[231,0.387,1083,3.925]],["body/interfaces/ForgotPasswordRequestDto.html",[3,0.117,4,0.089,8,0.103,30,0.008,38,0.117,155,0.008,156,0.008,170,0.503,186,0.522,193,1.391,231,0.616,233,1.684,242,0.828,520,3.529,684,4.274,1083,7.211,1084,7.065,1085,4.742]],["title/components/GuidesComponent.html",[0,0.168,75,0.864]],["body/components/GuidesComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,1.523,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,1086,4.988,1087,7.827,1088,6.579,1089,6.579]],["title/components/HomeComponent.html",[0,0.168,77,0.864]],["body/components/HomeComponent.html",[0,0.178,1,0.452,2,0.697,3,0.039,4,0.029,5,0.463,6,0.463,7,0.463,8,0.034,12,0.463,13,1.814,14,1.814,15,0.452,17,0.729,18,0.681,19,0.746,20,1.713,25,0.746,27,0.78,29,0.443,30,0.009,31,0.766,32,0.25,33,1.055,34,0.804,35,0.804,38,0.039,39,0.636,43,0.463,44,0.746,45,1.26,46,0.463,47,1.075,48,0.463,49,0.399,50,0.463,51,0.452,52,0.463,53,0.452,54,0.463,55,0.452,56,0.463,57,0.452,58,0.463,59,1.051,60,0.463,61,0.452,62,0.422,63,0.746,64,0.452,65,0.746,66,0.452,67,0.463,68,0.452,69,0.463,70,1.051,71,0.463,72,0.452,73,0.442,74,0.746,75,0.452,76,0.463,77,1.051,78,0.463,79,0.452,80,0.463,81,0.452,82,0.463,83,0.452,84,0.463,85,0.452,86,0.463,87,0.452,88,0.463,89,0.746,90,0.452,91,0.463,92,0.452,93,0.403,94,0.937,95,0.452,96,0.463,97,0.452,98,0.463,99,0.452,100,0.463,101,0.452,102,0.463,103,0.452,104,0.452,105,0.743,106,0.452,107,0.713,108,0.463,109,0.681,110,0.746,111,0.452,112,0.452,113,0.463,114,0.452,115,0.463,116,0.452,117,0.463,118,0.452,119,0.463,120,0.452,121,0.432,122,0.452,123,0.463,124,0.452,125,0.463,126,0.463,127,0.452,128,0.463,129,0.452,130,0.463,131,0.452,132,0.463,133,0.452,134,1.232,135,0.463,136,0.452,137,0.681,138,0.463,139,0.452,140,0.463,141,0.452,142,0.463,143,0.452,144,0.463,145,0.452,146,0.463,147,0.463,148,0.442,149,1.232,150,0.463,151,0.452,152,0.463,153,0.463,154,0.463,155,0.004,156,0.004,163,1.436,164,2.203,165,2.621,170,0.166,171,0.977,172,3.006,173,2.527,174,2.328,178,0.873,180,3.217,181,4.088,182,4.992,183,1.84,185,0.816,186,0.574,187,1.318,189,1.783,190,2.245,193,1.023,198,1.637,199,1.548,200,1.876,210,2.09,217,2.638,222,2.496,235,1.406,240,1.915,242,0.38,246,1.637,249,3.802,253,4.53,257,2.792,262,3.135,263,3.829,265,4.216,270,2.81,272,0.966,275,2.81,277,3.006,278,4.048,279,3.53,295,2.527,300,1.047,301,0.956,304,2.982,309,0.593,330,1.743,334,4.088,336,2.496,340,2.81,341,2.496,344,1.637,365,0.994,372,3.266,373,1.088,382,1.329,383,1.329,384,1.67,385,1.399,386,1.363,387,1.363,414,1.695,437,1.543,444,0.94,500,1.406,524,1.205,641,0.784,690,2.638,699,4.01,709,2.496,714,2.638,729,3.314,752,3.311,771,4.771,780,6.049,789,4.358,819,3.314,824,4.16,826,2.054,828,2.054,832,3.311,859,2.524,862,1.088,879,2.894,883,2.56,885,3.443,902,3.569,908,2.009,914,1.246,916,1.088,925,0.994,926,1.743,927,1.876,930,2.054,931,1.743,934,2.136,935,2.621,942,2.054,944,1.024,950,2.054,951,1.472,952,2.81,953,2.434,955,2.054,962,1.246,1045,1.472,1047,1.202,1048,1.472,1052,1.548,1090,2.325,1091,5.883,1092,4.708,1093,3.747,1094,3.747,1095,4.708,1096,4.708,1097,4.708,1098,4.708,1099,4.708,1100,4.708,1101,4.708,1102,4.708,1103,5.922,1104,5.4,1105,4.708,1106,5.4,1107,5.4,1108,5.4,1109,4.708,1110,1.294,1111,5.922,1112,7.052,1113,7.152,1114,3.747,1115,2.325,1116,3.747,1117,5.108,1118,3.747,1119,5.4,1120,2.325,1121,7.772,1122,6.162,1123,2.325,1124,3.747,1125,5.883,1126,7.506,1127,5.922,1128,5.035,1129,3.53,1130,3.799,1131,2.81,1132,2.81,1133,3.024,1134,3.747,1135,4.358,1136,2.325,1137,5.4,1138,3.747,1139,3.311,1140,2.325,1141,3.311,1142,4.771,1143,3.747,1144,2.325,1145,2.325,1146,2.325,1147,2.325,1148,5.4,1149,5.922,1150,3.747,1151,3.747,1152,2.325,1153,3.747,1154,3.311,1155,2.325,1156,2.325,1157,2.325,1158,2.325,1159,2.325,1160,2.325,1161,2.325,1162,2.325,1163,2.325,1164,2.325,1165,2.325,1166,2.325,1167,3.311,1168,2.325,1169,1.406,1170,2.325,1171,2.325,1172,2.325,1173,2.325,1174,3.747,1175,2.325,1176,6.658,1177,3.747,1178,3.747,1179,5.4,1180,2.325,1181,2.325,1182,2.325,1183,2.325,1184,3.747,1185,5.922,1186,2.325,1187,2.325,1188,2.325,1189,2.325,1190,3.747,1191,4.708,1192,2.325,1193,2.054,1194,2.054,1195,2.054,1196,2.054,1197,2.325,1198,2.325,1199,2.325,1200,1.637,1201,2.81,1202,3.024,1203,2.325,1204,2.325,1205,2.325,1206,2.325,1207,2.325,1208,3.747,1209,2.325,1210,2.325,1211,2.054,1212,4.708,1213,2.325,1214,2.325,1215,2.325,1216,3.747,1217,2.325,1218,1.088,1219,5.4,1220,2.054,1221,2.325,1222,3.747,1223,2.325,1224,2.325,1225,2.325,1226,3.747,1227,2.325,1228,2.325,1229,2.325,1230,3.747,1231,2.325,1232,3.747,1233,2.325,1234,2.325,1235,2.325,1236,3.311,1237,2.325,1238,2.325,1239,2.325,1240,2.81,1241,1.876]],["title/interfaces/Invitation.html",[231,0.387,679,2.958]],["body/interfaces/Invitation.html",[3,0.113,4,0.086,8,0.1,29,0.369,30,0.009,38,0.113,155,0.008,156,0.008,170,0.487,186,0.627,193,1.461,231,0.596,233,1.63,242,0.813,679,5.333,1085,4.693,1242,6.838,1243,7.737,1244,4.924,1245,6.838]],["title/components/InvitationComponent.html",[0,0.168,79,0.864]],["body/components/InvitationComponent.html",[0,0.195,1,0.518,2,0.776,3,0.044,4,0.034,5,0.53,6,0.53,7,0.53,8,0.039,12,0.53,13,1.832,14,1.832,15,0.518,17,0.813,18,1.059,19,0.831,20,1.874,21,2.204,22,2.986,24,1.974,25,0.831,27,0.87,29,0.46,30,0.009,31,0.878,32,0.286,33,1.209,34,0.922,35,0.922,36,1.14,38,0.044,39,0.286,41,3.912,43,0.53,44,0.831,45,0.831,46,0.53,47,1.161,48,0.53,49,0.431,50,0.53,51,0.518,52,0.53,53,0.518,54,0.53,55,0.518,56,0.53,57,0.518,58,0.53,59,0.518,60,0.53,61,0.518,62,0.484,63,0.831,64,0.518,65,0.831,66,0.518,67,0.53,68,0.518,69,0.53,70,0.518,71,0.53,72,0.518,73,0.507,74,0.831,75,0.518,76,0.53,77,0.518,78,0.53,79,1.135,80,0.53,81,0.518,82,0.53,83,0.518,84,0.53,85,0.518,86,0.53,87,0.518,88,0.53,89,0.831,90,0.518,91,0.53,92,0.518,93,0.462,94,1.025,95,0.518,96,0.53,97,0.518,98,0.53,99,0.518,100,0.53,101,0.518,102,0.53,103,0.518,104,0.518,105,0.813,106,0.518,107,0.794,108,0.53,109,0.759,110,0.831,111,0.518,112,0.518,113,0.53,114,0.518,115,0.53,116,0.518,117,0.53,118,0.518,119,0.53,120,0.518,121,0.495,122,0.518,123,0.53,124,0.518,125,0.53,126,0.53,127,0.518,128,0.53,129,0.518,130,0.53,131,0.518,132,0.53,133,0.518,134,0.518,135,0.53,136,0.518,137,0.759,138,0.53,139,0.518,140,0.53,141,0.518,142,0.53,143,0.518,144,0.53,145,0.518,146,0.53,147,0.53,148,0.507,149,0.518,150,0.53,151,0.518,152,0.53,153,0.53,154,0.53,155,0.004,156,0.004,163,1.601,164,2.411,165,2.868,170,0.19,171,1.089,172,3.247,173,2.73,174,2.44,178,0.973,180,3.395,183,1.772,185,0.91,186,0.537,187,1.514,189,1.579,190,2.109,193,1.024,210,0.836,240,0.945,242,0.424,272,2.142,284,1.601,300,1.439,301,1.615,309,0.679,345,0.945,373,1.955,382,0.945,383,0.945,384,1.827,385,0.995,386,0.969,387,0.969,437,2.137,444,1.078,495,3.132,500,1.612,506,4.45,508,4.946,517,1.078,518,3.126,520,2.573,524,2.036,530,1.876,533,1.378,585,4.946,587,4.373,598,1.876,604,2.782,606,2.761,616,1.544,641,0.899,679,2.782,696,2.664,707,2.326,818,1.331,859,2.761,860,2.087,861,4.009,863,2.761,864,2.868,865,2.986,869,3.431,870,2.986,879,3.126,883,2.841,884,4.065,885,3.632,899,2.527,900,4.628,902,3.766,907,2.868,908,1.428,914,1.428,915,1.612,916,1.247,917,1.484,918,1.428,919,1.612,920,2.527,921,1.612,925,1.14,933,1.612,934,1.209,935,1.484,936,1.544,937,1.612,938,1.612,944,1.84,947,1.775,948,1.775,949,1.775,951,1.688,952,1.998,956,2.326,957,2.326,958,2.326,961,2.239,962,3.126,969,2.16,990,1.876,1021,3.862,1022,3.862,1023,3.627,1024,3.132,1025,1.775,1027,3.132,1034,3.132,1036,2.941,1041,3.132,1043,1.876,1045,1.688,1047,1.378,1048,1.688,1049,1.998,1050,1.998,1051,1.998,1052,1.775,1053,1.876,1054,1.876,1055,1.876,1066,1.876,1068,3.132,1072,1.775,1074,1.998,1075,3.132,1085,2.761,1241,3.371,1246,2.665,1247,4.157,1248,3.862,1249,4.177,1250,4.177,1251,4.552,1252,5.153,1253,4.177,1254,2.665,1255,2.665,1256,2.665,1257,2.665,1258,2.665,1259,2.665,1260,2.665,1261,2.665,1262,3.132,1263,3.371,1264,3.371,1265,3.431,1266,3.431,1267,2.665,1268,2.665,1269,2.665,1270,2.665,1271,2.15,1272,1.998,1273,2.355,1274,2.665,1275,2.15,1276,2.15,1277,2.665,1278,2.665,1279,2.665,1280,2.15,1281,2.665,1282,2.665,1283,4.177,1284,2.665,1285,2.665,1286,2.355,1287,2.355,1288,2.355,1289,2.355,1290,2.355,1291,2.665,1292,4.177,1293,4.177,1294,4.177,1295,4.177,1296,4.177,1297,4.177,1298,4.177,1299,4.177,1300,4.177,1301,4.177,1302,4.177,1303,4.177,1304,4.177,1305,4.177,1306,4.177]],["title/interfaces/InvitationDto.html",[231,0.387,1307,3.127]],["body/interfaces/InvitationDto.html",[3,0.113,4,0.086,8,0.1,29,0.369,30,0.009,38,0.113,155,0.008,156,0.008,170,0.487,186,0.627,193,1.461,231,0.596,233,1.63,242,0.813,1085,4.693,1243,7.737,1244,4.924,1307,5.637,1308,6.838,1309,6.838]],["title/interfaces/InvitationRequestDto.html",[231,0.387,1310,3.585]],["body/interfaces/InvitationRequestDto.html",[3,0.116,4,0.088,8,0.102,30,0.009,38,0.116,155,0.008,156,0.008,170,0.497,186,0.598,193,1.468,231,0.609,233,1.663,242,0.822,684,4.22,1085,4.724,1310,6.538,1311,6.977,1312,6.204]],["title/injectables/InvitationService.html",[307,0.968,508,3.127]],["body/injectables/InvitationService.html",[3,0.096,4,0.073,8,0.085,29,0.475,30,0.009,32,0.623,38,0.096,39,0.623,49,0.611,155,0.007,156,0.007,166,2.554,170,0.413,171,1.89,178,1.351,183,1.804,185,1.804,186,0.611,187,1.724,189,1.971,193,1.406,307,1.578,309,1.478,354,2.714,355,2.554,375,3.948,414,2.481,493,2.164,495,5.433,508,5.102,588,3.507,589,4.799,591,4.035,604,5.515,606,4.66,611,3.507,612,4.2,616,4.2,619,5.124,621,5.848,623,6.403,625,3.507,678,4.082,990,4.082,1252,7.317,1307,4.082,1310,6.682,1313,5.798,1314,7.246,1315,5.433,1316,5.798,1317,7.246,1318,5.798,1319,7.246,1320,5.798,1321,7.246,1322,5.798,1323,5.798,1324,5.798,1325,7.904,1326,5.798,1327,4.347]],["title/components/IssuesComponent.html",[0,0.168,81,0.864]],["body/components/IssuesComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,1.523,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,1328,4.988,1329,7.827,1330,6.579,1331,6.579]],["title/injectables/JwtService.html",[307,0.968,507,3.585]],["body/injectables/JwtService.html",[3,0.095,4,0.072,8,0.083,29,0.387,30,0.009,32,0.613,38,0.095,39,0.613,49,0.58,155,0.007,156,0.007,166,2.514,170,0.407,171,1.872,178,1.33,183,1.886,185,1.71,186,0.58,187,1.634,189,2.115,190,2.718,193,1.461,210,2.253,307,1.563,310,5.484,311,3.802,312,3.616,354,2.672,355,2.514,358,4.341,414,2.253,437,2.354,490,6.341,493,2.131,507,5.791,586,4.281,637,6.362,699,5.848,1332,8.79,1333,4.281,1334,5.798,1335,8.235,1336,8.235,1337,7.176,1338,7.176,1339,5.709,1340,5.709,1341,5.709,1342,5.709,1343,4.607,1344,7.176,1345,4.607,1346,7.176,1347,5.709,1348,5.709,1349,5.709,1350,7.176,1351,7.176,1352,5.709,1353,5.709,1354,5.709,1355,5.709]],["title/injectables/LayoutService.html",[181,2.473,307,0.968]],["body/injectables/LayoutService.html",[3,0.033,4,0.025,8,0.029,18,1.357,29,0.23,30,0.009,32,0.216,38,0.055,39,0.872,49,0.405,155,0.003,156,0.003,166,0.885,170,0.143,171,0.868,174,2,178,0.468,181,4.394,183,1.7,185,0.438,186,0.608,187,0.419,189,2.006,190,1.855,193,1.246,210,0.631,217,4.162,218,3.712,222,4.66,231,0.702,232,5.851,234,1.622,235,2.576,236,3.193,237,2.013,238,2.495,239,6.129,240,1.756,241,2.495,242,0.71,243,3.785,244,4.908,245,4.908,246,5.163,247,5.381,248,5.246,249,1.415,250,5.646,251,5.917,252,4.113,253,5.05,254,4.621,255,4.609,256,4.113,257,3.236,258,3.485,259,3.712,260,3.297,261,2.686,262,2.216,263,5.437,264,2.495,265,5.36,266,5.261,267,2.495,268,2.495,269,4.432,270,2.495,271,2.495,272,1.384,273,3.712,274,3.437,275,1.507,276,5.246,277,4.481,278,4.692,279,5.777,280,1.622,281,1.622,282,2.697,283,1.415,284,3.329,285,1.507,286,4.78,287,1.507,288,1.622,289,2.343,290,4.546,291,1.622,292,1.622,293,2.495,294,1.507,295,3.879,296,1.415,297,2.058,298,1.507,299,1.507,300,2.087,301,1.905,302,3.193,303,5.499,304,4.811,305,4.427,306,1.622,307,0.725,308,6.196,309,1.731,310,3.937,311,2.216,312,1.273,313,5.851,314,3.437,315,3.963,316,1.622,317,5.479,318,5.479,319,5.479,320,5.792,321,5.283,322,5.283,323,4.432,324,5.646,325,1.622,326,1.622,327,1.507,328,1.339,329,4.432,330,1.507,331,6.129,332,6.369,333,4.77,334,4.714,335,1.622,336,2.216,337,3.995,338,4.77,339,1.507,340,4.432,341,4.884,342,3.485,343,4.427,344,3.485,345,1.51,346,1.622,347,1.622,348,3.995,349,2.108,350,3.995,351,4.926,352,3.485,353,2.686,354,0.941,355,0.885,356,1.507,357,1.622,358,1.216,359,3.485,360,2.495,361,3.995,362,4.432,363,2.495,364,6.435,365,3.137,366,4.908,367,4.146,368,3.712,369,4.908,370,3.995,371,4.908,372,3.96,373,3.064,374,3.136,375,3.663,376,3.712,377,3.297,378,4.432,379,6.435,380,2.686,381,2.343,382,0.713,383,0.713,384,0.713,385,0.75,386,0.731,387,0.731,388,3.297,389,3.297,390,3.712,391,3.995,392,3.485,393,4.609,394,3.995,395,3.712,396,2.686,397,2.686,398,3.995,399,1.622,400,3.437,401,3.437,402,2.686,403,2.686,404,3.437,405,2.686,406,3.437,407,2.216,408,1.622,409,4.77,410,4.77,411,3.995,412,3.437,413,3.437,414,1.855,415,1.622,416,3.712,417,3.995,418,4.427,419,4.77,420,4.427,421,4.908,422,5.283,423,4.77,424,3.437,425,2.998,426,3.437,427,1.622,428,4.77,429,2.686,430,2.343,431,3.995,432,1.622,433,1.622,434,3.995,435,3.437,436,1.622,437,0.575,438,1.622,439,1.622,440,1.622,441,3.995,442,1.622,443,1.622,493,0.75,1356,2.01,1357,2.01,1358,2.01,1359,2.01,1360,2.01,1361,2.01,1362,2.01,1363,2.01,1364,2.01,1365,2.01,1366,2.01,1367,2.01,1368,2.01,1369,2.01,1370,2.01,1371,2.01,1372,2.01]],["title/interfaces/LayoutState.html",[231,0.387,313,3.33]],["body/interfaces/LayoutState.html",[3,0.038,4,0.029,8,0.033,18,1.407,29,0.251,30,0.009,32,0.246,38,0.061,39,0.855,49,0.274,155,0.003,156,0.003,166,1.01,170,0.163,174,1.531,181,4.312,186,0.605,189,1.568,193,1.252,210,0.72,217,3.772,218,3.498,222,4.59,231,0.747,232,5.713,233,0.547,234,1.851,235,3.241,236,4.017,237,2.822,238,3.498,239,6.668,240,1.655,241,3.498,242,0.742,243,4.169,244,4.717,245,4.717,246,5.147,247,4.964,248,5.167,249,1.615,250,5.9,251,5.807,252,3.498,253,5.146,254,4.912,255,4.852,256,4.41,257,3.424,258,3.772,259,4.017,260,3.568,261,3.765,262,3.107,263,5.536,264,3.498,265,5.701,266,5.771,267,2.779,268,2.779,269,4.194,270,2.779,271,2.779,272,1.541,273,4.017,274,2.991,275,1.72,276,4.41,277,4.743,278,5.481,279,5.891,280,1.851,281,1.851,282,2.348,283,1.615,284,3.482,285,1.72,286,5.531,287,1.72,288,1.851,289,2.61,290,4.906,291,1.851,292,1.851,293,2.779,294,1.72,295,3.499,296,1.615,297,2.254,298,1.72,299,1.72,300,1.496,301,1.366,302,2.779,303,4.717,304,4.509,305,4.324,306,1.851,307,0.807,308,5.859,309,1.5,310,3.107,311,2.469,312,1.453,313,6.24,314,3.765,315,4.097,316,2.991,317,6.34,318,6.34,319,6.34,320,6.42,321,6.149,322,6.149,323,5.337,324,6.033,325,2.991,326,2.991,327,2.779,328,2.469,329,5.713,330,2.779,331,5.343,332,5.9,333,4.746,334,4.664,335,2.991,336,3.568,337,5.562,338,4.746,339,2.779,340,5.337,341,5.298,342,4.141,343,3.765,344,3.284,345,1.655,346,2.991,347,2.991,348,2.991,349,1.453,350,2.991,351,4.141,352,2.61,353,1.851,354,1.073,355,1.01,356,1.72,357,1.851,358,1.387,359,2.61,360,1.72,361,2.991,362,3.498,363,1.72,364,5.562,365,2.691,366,4.017,367,3.394,368,2.779,369,4.017,370,2.991,371,4.017,372,3.241,373,2.508,374,2.348,375,3.143,376,2.779,377,2.469,378,3.498,379,5.562,380,1.851,381,1.615,382,0.813,383,0.813,384,0.813,385,0.856,386,0.834,387,0.834,388,2.469,389,2.469,390,2.779,391,2.991,392,2.61,393,3.772,394,2.991,395,2.779,396,1.851,397,1.851,398,2.991,399,1.851,400,3.765,401,3.765,402,2.991,403,2.991,404,3.765,405,1.851,406,3.765,407,1.527,408,1.851,409,3.765,410,2.991,411,2.991,412,1.851,413,1.851,414,1.682,415,1.851,416,2.779,417,2.991,418,2.991,419,3.765,420,2.991,421,3.498,422,3.765,423,2.991,424,1.851,425,1.615,426,1.851,427,1.851,428,2.991,429,1.851,430,1.615,431,1.851,432,1.851,433,1.851,434,1.851,435,3.765,436,1.851,437,0.656,438,1.851,439,1.851,440,1.851,441,1.851,442,1.851,443,1.851]],["title/injectables/LocalStorage.html",[307,0.968,310,2.958]],["body/injectables/LocalStorage.html",[3,0.09,4,0.068,8,0.079,29,0.412,30,0.009,31,1.778,32,0.58,38,0.09,39,0.58,49,0.596,155,0.007,156,0.007,163,2.069,166,2.378,170,0.493,171,1.806,174,2.186,178,1.782,183,1.915,185,1.757,186,0.616,187,1.68,189,2.08,190,2.679,193,1.488,198,3.801,210,1.694,242,0.703,297,3.898,301,2.057,307,1.509,310,4.613,312,3.419,354,2.527,358,5.163,365,2.309,414,2.4,437,2.306,493,2.015,709,4.613,986,3.595,1333,4.047,1334,5.68,1343,4.357,1345,4.357,1373,8.88,1374,6.757,1375,5.589,1376,5.556,1377,5.589,1378,5.589,1379,6.171,1380,6.12,1381,5.589,1382,5.589,1383,4.77,1384,5.589,1385,4.77,1386,5.589,1387,4.77,1388,4.357,1389,4.357,1390,4.77,1391,5.193,1392,4.047,1393,4.77,1394,4.77,1395,4.77,1396,4.77,1397,6.12,1398,5.398,1399,4.77,1400,4.77,1401,4.77,1402,4.77,1403,4.77,1404,4.77]],["title/components/LoginComponent.html",[0,0.168,83,0.864]],["body/components/LoginComponent.html",[0,0.207,1,0.572,2,0.838,3,0.049,4,0.037,5,0.585,6,0.585,7,0.585,8,0.043,12,0.585,13,1.843,14,1.843,15,0.572,17,0.877,18,0.819,19,0.897,20,1.995,21,2.345,22,3.178,24,2.101,25,0.897,27,0.939,29,0.462,30,0.009,31,0.968,32,0.316,33,1.334,34,1.017,35,1.017,36,1.258,38,0.049,39,0.316,41,3.818,43,0.585,44,0.897,45,0.897,46,0.585,47,1.223,48,0.585,49,0.454,50,0.585,51,0.572,52,0.585,53,0.572,54,0.585,55,0.572,56,0.585,57,0.572,58,0.585,59,0.572,60,0.585,61,0.572,62,0.534,63,0.897,64,0.572,65,0.897,66,0.572,67,0.585,68,0.572,69,0.585,70,0.572,71,0.585,72,0.572,73,0.559,74,0.897,75,0.572,76,0.585,77,0.572,78,0.585,79,0.572,80,0.585,81,0.572,82,0.585,83,1.196,84,0.585,85,0.572,86,0.585,87,0.572,88,0.585,89,0.897,90,0.572,91,0.585,92,0.572,93,0.51,94,1.091,95,0.572,96,0.585,97,0.572,98,0.585,99,0.572,100,0.585,101,0.572,102,0.585,103,0.572,104,0.572,105,0.866,106,0.572,107,0.857,108,0.585,109,0.819,110,0.897,111,0.572,112,0.572,113,0.585,114,0.572,115,0.585,116,0.572,117,0.585,118,0.572,119,0.585,120,0.572,121,0.547,122,0.572,123,0.585,124,0.572,125,0.585,126,0.585,127,0.572,128,0.585,129,0.572,130,0.585,131,0.572,132,0.585,133,0.572,134,0.572,135,0.585,136,0.572,137,0.819,138,0.585,139,0.572,140,0.585,141,0.572,142,0.585,143,0.572,144,0.585,145,0.572,146,0.585,147,0.585,148,0.559,149,0.572,150,0.585,151,0.572,152,0.585,153,0.585,154,0.585,155,0.004,156,0.004,163,1.727,164,2.566,165,3.053,170,0.209,171,1.176,172,3.423,173,2.877,174,2.45,178,1.051,180,3.519,183,1.826,185,0.982,186,0.538,187,1.564,189,1.815,190,2.196,193,0.886,240,1.043,242,0.457,272,1.223,284,1.727,300,1.531,301,1.398,309,0.75,345,1.043,373,1.376,382,1.043,383,1.043,384,1.599,385,1.098,386,1.07,387,1.07,414,1.415,437,2.202,444,1.189,497,3.38,500,1.779,506,4.612,517,1.189,518,3.295,520,2.739,524,1.763,530,2.07,533,1.52,585,4.667,598,2.07,641,0.992,696,2.835,818,1.469,859,2.939,860,2.252,861,4.129,863,2.939,864,3.053,865,3.178,869,3.652,870,3.178,879,3.295,883,2.945,884,4.231,885,3.765,899,2.727,900,3.718,902,3.903,907,3.053,908,1.576,914,1.576,915,1.779,916,1.376,917,1.637,918,1.576,919,1.779,920,2.727,921,1.779,925,1.258,933,1.779,934,1.334,935,1.637,936,1.704,937,1.779,938,1.779,944,1.986,947,1.958,948,1.958,949,1.958,951,1.862,956,1.637,957,1.637,958,1.637,961,1.576,962,2.417,969,2.331,1021,4.111,1022,4.111,1023,3.86,1024,3.38,1025,1.958,1027,3.38,1034,3.38,1036,3.174,1041,3.38,1043,2.07,1045,1.862,1047,1.52,1048,1.862,1049,2.205,1050,2.205,1051,2.205,1052,1.958,1053,2.07,1054,2.07,1055,2.07,1066,2.07,1068,3.38,1072,1.958,1074,2.205,1075,3.38,1078,3.984,1079,3.984,1247,4.425,1248,4.111,1262,3.38,1271,2.373,1272,2.205,1405,2.94,1406,6.995,1407,4.508,1408,4.508,1409,5.483,1410,6.995,1411,6.147,1412,4.508,1413,2.94,1414,2.94,1415,2.94,1416,2.94,1417,2.94,1418,2.94,1419,2.94,1420,2.94,1421,2.94,1422,2.94,1423,2.94,1424,2.94,1425,2.94,1426,2.205,1427,2.373,1428,2.94,1429,2.94,1430,2.94,1431,2.94,1432,2.94,1433,2.94,1434,2.598,1435,2.598,1436,4.508,1437,4.508,1438,4.508,1439,4.508,1440,4.508,1441,4.508,1442,4.508,1443,4.508,1444,4.508]],["title/components/LogsComponent.html",[0,0.168,85,0.864]],["body/components/LogsComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,1.523,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,1445,4.988,1446,6.916,1447,6.579,1448,6.579]],["title/components/MemberPickerComponent.html",[0,0.168,87,0.864]],["body/components/MemberPickerComponent.html",[0,0.219,1,0.624,2,0.895,3,0.053,4,0.04,5,0.639,6,0.639,7,0.639,8,0.047,12,0.639,13,1.852,14,1.852,15,0.624,17,0.937,18,1.051,19,0.959,20,2.104,21,2.474,23,2.795,24,2.216,25,0.959,27,1.003,29,0.455,30,0.009,31,1.057,32,0.345,34,1.11,35,1.11,36,1.373,37,1.551,38,0.053,39,0.345,43,0.639,44,0.959,45,0.959,46,0.639,47,1.279,48,0.639,49,0.583,50,0.639,51,0.624,52,0.639,53,0.624,54,0.639,55,0.624,56,0.639,57,0.624,58,0.639,59,0.624,60,0.639,61,0.624,62,0.583,63,0.959,64,0.624,65,0.959,66,0.624,67,0.639,68,0.624,69,0.639,70,0.624,71,0.639,72,0.624,73,0.61,74,0.959,75,0.624,76,0.639,77,0.624,78,0.639,79,0.624,80,0.639,81,0.624,82,0.639,83,0.624,84,0.639,85,0.624,86,0.639,87,1.251,88,1.625,89,0.959,90,0.624,91,0.639,92,0.624,93,1.115,94,1.151,95,0.624,96,0.639,97,0.624,98,0.639,99,0.624,100,0.639,101,0.624,102,0.639,103,0.624,104,0.624,105,0.913,106,0.624,107,0.916,108,0.639,109,0.875,110,0.959,111,0.624,112,0.624,113,0.639,114,0.624,115,0.639,116,0.624,117,0.639,118,0.624,119,0.639,120,0.624,121,0.596,122,0.624,123,0.639,124,0.624,125,0.639,126,0.639,127,0.624,128,0.639,129,0.624,130,0.639,131,0.624,132,0.639,133,0.624,134,0.624,135,0.639,136,0.624,137,0.875,138,0.639,139,0.624,140,0.639,141,0.624,142,0.639,143,0.624,144,0.639,145,0.624,146,0.639,147,0.639,148,0.61,149,0.624,150,0.639,151,0.624,152,0.639,153,0.639,154,0.639,155,0.005,156,0.005,170,0.229,171,1.256,178,0.748,183,1.84,185,1.635,186,0.603,187,1.563,189,1.871,190,2.355,193,1.213,242,0.489,272,2.673,295,2.255,300,1.796,301,1.757,309,0.818,334,2.682,345,2.852,355,1.413,414,1.815,437,1.653,444,1.298,533,1.659,641,1.083,707,2.682,774,1.86,883,2.926,925,1.373,934,2.917,944,1.413,953,2.491,1110,1.787,1169,2.914,1218,2.707,1449,8.517,1450,7.526,1451,2.835,1452,4.257,1453,4.336,1454,5.111,1455,3.663,1456,4.257,1457,4.257,1458,5.784,1459,4.667,1460,5.111,1461,4.257,1462,4.257,1463,4.257,1464,4.257,1465,4.257,1466,5.68,1467,3.612,1468,5.784,1469,5.784,1470,6.428,1471,2.835,1472,2.835,1473,2.835,1474,2.835,1475,4.257,1476,2.835,1477,4.257,1478,5.68,1479,3.209,1480,4.257,1481,5.68,1482,3.209,1483,4.257,1484,5.68,1485,3.209,1486,4.257,1487,5.68,1488,3.209,1489,3.209,1490,3.612,1491,3.209,1492,2.406,1493,2.835,1494,4.817,1495,2.835,1496,2.835,1497,2.033,1498,2.406,1499,2.835,1500,2.033,1501,2.59,1502,2.59,1503,2.59,1504,3.209,1505,3.209,1506,2.59,1507,2.835,1508,2.835,1509,2.835,1510,2.835,1511,2.835,1512,3.852,1513,2.406,1514,2.406,1515,2.406,1516,2.406,1517,3.612,1518,2.406,1519,3.209,1520,3.209,1521,3.209,1522,2.137,1523,2.033,1524,2.033,1525,3.209,1526,2.59,1527,2.59,1528,3.209,1529,3.209,1530,3.209,1531,3.209,1532,2.59,1533,2.835,1534,4.817,1535,4.817,1536,4.817,1537,4.817,1538,6.428,1539,4.817,1540,4.817,1541,4.817]],["title/components/MembersComponent.html",[0,0.168,90,0.864]],["body/components/MembersComponent.html",[0,0.241,1,1.354,2,1.011,3,0.063,4,0.048,5,0.754,6,0.754,7,0.754,8,0.055,10,2.666,12,0.754,13,1.868,14,1.868,15,0.737,17,1.058,18,0.988,19,1.083,20,2.316,24,2.44,25,1.083,27,1.133,29,0.475,30,0.009,31,1.247,32,0.407,34,1.31,35,1.31,38,0.063,39,0.407,43,0.754,44,1.083,45,1.083,46,0.754,47,1.385,48,0.754,49,0.47,50,0.754,51,0.737,52,0.754,53,0.737,54,0.754,55,0.737,56,0.754,57,0.737,58,0.754,59,0.737,60,0.754,61,0.737,62,0.688,63,1.083,64,0.737,65,1.083,66,0.737,67,0.754,68,0.737,69,0.754,70,0.737,71,0.754,72,0.737,73,0.72,74,1.083,75,0.737,76,0.754,77,0.737,78,0.754,79,0.737,80,0.754,81,0.737,82,0.754,83,0.737,84,0.754,85,0.737,86,0.754,87,0.737,88,0.754,89,1.083,90,1.354,91,0.754,92,1.354,93,1.104,94,1.267,95,0.737,96,0.754,97,0.737,98,0.754,99,0.737,100,0.754,101,0.737,102,0.754,103,0.737,104,0.737,105,1.005,106,0.737,107,1.035,108,0.754,109,0.988,110,1.083,111,0.737,112,0.737,113,0.754,114,0.737,115,0.754,116,0.737,117,0.754,118,0.737,119,0.754,120,0.737,121,0.704,122,0.737,123,0.754,124,0.737,125,0.754,126,0.754,127,0.737,128,0.754,129,0.737,130,0.754,131,0.737,132,0.754,133,0.737,134,0.737,135,0.754,136,0.737,137,0.988,138,0.754,139,0.737,140,0.754,141,0.737,142,0.754,143,0.737,144,0.754,145,0.737,146,0.754,147,0.754,148,0.72,149,0.737,150,0.754,151,0.737,152,0.754,153,0.754,154,0.754,155,0.005,156,0.005,163,2.084,164,2.98,170,0.27,171,1.419,173,3.258,178,0.882,183,1.795,185,0.825,186,0.28,187,0.788,189,0.944,190,1.188,242,0.552,300,2.208,301,2.2,309,0.965,355,1.667,444,1.531,517,1.531,641,1.278,860,2.717,861,3.413,863,3.413,883,3.103,916,1.772,918,2.03,925,1.62,944,3.38,1047,1.958,1110,2.108,1459,5.617,1503,3.055,1506,3.055,1542,3.786,1543,4.483,1544,5.44,1545,5.44,1546,5.626,1547,5.138,1548,4.774,1549,5.527,1550,6.367,1551,5.138,1552,3.786,1553,3.786,1554,5.44,1555,5.403,1556,3.786,1557,5.403,1558,7.675,1559,4.39,1560,3.786,1561,4.079,1562,3.786,1563,4.079,1564,3.786,1565,5.44,1566,3.786,1567,5.44,1568,3.786,1569,5.44,1570,3.786,1571,2.666,1572,2.03,1573,2.666,1574,2.108,1575,2.666,1576,2.108,1577,2.666,1578,3.055,1579,3.786,1580,3.786,1581,3.786,1582,2.839,1583,2.839,1584,3.346,1585,3.055,1586,2.839,1587,3.786,1588,3.83]],["title/interfaces/MembersDto.html",[231,0.387,1589,3.33]],["body/interfaces/MembersDto.html",[3,0.113,4,0.085,8,0.099,29,0.43,30,0.009,38,0.113,155,0.008,156,0.008,170,0.483,186,0.625,231,0.592,233,1.617,242,0.809,617,6.066,1307,6.149,1551,7.049,1589,5.977,1590,6.786,1591,7.718,1592,6.549,1593,6.786,1594,6.786]],["title/injectables/MembersEffects.html",[307,0.968,458,3.585]],["body/injectables/MembersEffects.html",[3,0.079,4,0.06,8,0.07,29,0.445,30,0.009,32,0.515,38,0.079,39,0.515,49,0.354,93,1.111,155,0.006,156,0.006,170,0.341,174,2.062,178,1.492,183,1.799,185,1.043,186,0.354,187,0.997,242,0.65,300,2.242,301,2.047,307,1.395,309,1.221,458,5.168,493,1.788,508,5.938,509,4.696,511,5.348,512,5.304,514,5.422,517,2.917,522,5.184,524,2.755,541,5.102,568,5.659,570,2.897,571,2.776,572,2.897,583,4.233,654,5.659,1315,5.774,1502,6.215,1578,6.665,1595,4.79,1596,5.774,1597,7.298,1598,4.79,1599,6.665,1600,4.79,1601,6.404,1602,6.404,1603,6.404,1604,6.404,1605,6.404,1606,4.79,1607,6.404,1608,6.404,1609,6.805,1610,6.404,1611,6.404,1612,4.79,1613,6.404,1614,6.404,1615,6.404,1616,6.404,1617,4.79,1618,6.404,1619,6.404,1620,6.404,1621,4.79,1622,6.404,1623,6.404,1624,6.404,1625,5.659,1626,4.79,1627,4.233,1628,4.233,1629,4.233,1630,4.233,1631,4.233,1632,4.233,1633,4.233,1634,4.233,1635,4.79]],["title/injectables/MembersService.html",[307,0.968,1599,3.585]],["body/injectables/MembersService.html",[3,0.102,4,0.077,8,0.089,29,0.475,30,0.009,32,0.658,38,0.102,39,0.658,49,0.553,155,0.007,156,0.007,166,2.697,170,0.436,171,1.955,178,1.427,183,1.839,185,1.633,186,0.553,187,1.561,189,2.019,193,1.31,307,1.633,309,1.562,336,4.079,354,2.867,355,2.697,375,4.326,414,2.543,493,2.286,588,3.705,589,4.892,591,4.174,611,3.705,612,4.344,617,4.079,618,4.943,625,4.9,1589,4.592,1596,5.62,1599,6.049,1636,6.124,1637,8.441,1638,8.441,1639,6.124,1640,6.124,1641,6.124,1642,7.496,1643,6.124,1644,6.624,1645,5.412,1646,7.496,1647,6.124]],["title/interfaces/MembersState.html",[231,0.387,447,3.585]],["body/interfaces/MembersState.html",[3,0.072,4,0.055,8,0.064,29,0.433,30,0.009,38,0.114,93,1.522,155,0.006,156,0.006,170,0.311,186,0.642,187,0.909,210,1.887,231,0.381,233,1.04,240,2.132,242,0.61,257,2.256,315,4.303,345,2.628,382,2.132,383,2.132,384,1.548,385,1.629,386,2.187,387,1.587,437,2.673,447,5.55,460,3.856,524,2.886,636,4.496,639,4.413,640,3.636,641,1.473,642,2.64,643,2.256,645,2.906,648,3.636,649,4.483,650,4.702,651,2.64,653,4.483,657,3.108,659,3.832,660,3.636,662,3.832,663,4.694,679,4.936,862,2.042,1069,3.272,1070,3.856,1071,3.856,1218,2.042,1315,3.272,1502,3.521,1546,7.099,1551,3.521,1578,3.521,1589,5.556,1591,3.856,1592,3.272,1596,3.272,1597,3.856,1627,3.856,1628,3.856,1629,3.856,1630,3.856,1631,3.856,1632,3.856,1633,3.856,1634,3.856,1645,3.856,1648,4.364,1649,8.387,1650,8.387,1651,8.387,1652,8.614,1653,8.387,1654,8.387,1655,8.387,1656,4.364,1657,4.364,1658,4.364,1659,4.364,1660,4.364,1661,4.364,1662,4.364,1663,4.364,1664,4.364,1665,4.364,1666,4.364,1667,4.364,1668,4.364,1669,4.364,1670,4.364,1671,4.364]],["title/components/MembersTableComponent.html",[0,0.168,92,0.864]],["body/components/MembersTableComponent.html",[0,0.172,1,0.431,2,0.67,3,0.06,4,0.028,5,0.441,6,0.441,7,0.441,8,0.032,12,0.441,13,1.808,14,1.808,15,0.431,17,0.701,18,1.394,19,0.717,20,1.657,21,1.948,23,2.201,24,1.745,25,0.717,27,0.75,29,0.457,30,0.009,31,0.729,32,0.238,34,0.766,35,0.766,36,0.947,37,1.07,38,0.037,39,0.238,41,3.731,43,0.441,44,0.717,45,0.717,46,0.441,47,1.044,48,0.441,49,0.502,50,0.441,51,0.431,52,0.441,53,0.431,54,0.441,55,0.431,56,0.441,57,0.431,58,0.441,59,0.431,60,0.441,61,0.431,62,0.402,63,0.717,64,0.431,65,0.717,66,0.431,67,0.441,68,0.431,69,0.441,70,0.431,71,0.441,72,0.431,73,0.421,74,0.717,75,0.431,76,0.441,77,0.431,78,0.441,79,0.431,80,0.441,81,0.431,82,0.441,83,0.431,84,0.441,85,0.431,86,0.441,87,0.431,88,1.044,89,0.717,90,0.431,91,0.441,92,1.021,93,1.532,94,0.906,95,0.431,96,0.441,97,0.431,98,0.441,99,0.431,100,0.441,101,0.431,102,0.441,103,0.431,104,0.431,105,0.719,106,0.431,107,0.685,108,0.441,109,0.654,110,0.717,111,0.431,112,0.431,113,0.441,114,0.431,115,0.441,116,0.431,117,0.441,118,0.431,119,0.441,120,0.431,121,0.412,122,0.431,123,0.441,124,0.431,125,0.441,126,0.441,127,0.431,128,0.441,129,0.431,130,0.441,131,0.431,132,0.441,133,0.431,134,0.431,135,0.441,136,0.431,137,0.654,138,0.441,139,0.431,140,0.441,141,0.431,142,0.441,143,0.431,144,0.441,145,0.431,146,0.441,147,0.441,148,0.421,149,0.431,150,0.441,151,0.431,152,0.441,153,0.441,154,0.441,155,0.003,156,0.003,170,0.158,171,0.94,174,1.944,178,0.839,180,3.153,183,1.836,185,1.348,186,0.589,187,1.289,189,1.695,190,1.943,193,1.169,210,0.695,240,1.615,242,0.366,272,2.923,284,3.058,295,2.897,300,2.143,301,2.012,309,0.565,345,1.615,382,1.615,383,1.615,384,1.615,385,1.7,386,1.657,387,1.657,414,1.429,437,1.03,444,0.895,524,1.158,533,1.862,606,1.187,636,4.175,639,1.106,641,0.747,643,1.145,657,1.862,659,2.713,662,2.713,678,1.559,696,2.355,707,2.006,766,4.235,774,2.088,818,1.106,860,1.799,861,3.769,863,2.441,864,2.536,865,2.639,870,2.639,883,2.503,884,3.947,899,2.755,900,3.744,908,1.187,914,1.187,915,1.339,916,1.036,917,1.233,918,1.187,925,0.947,934,3.28,935,1.233,936,1.283,944,1.586,953,1.862,956,2.922,957,2.922,958,2.922,961,2.813,962,3.096,1085,2.813,1110,1.233,1129,3.414,1169,2.755,1200,1.559,1201,2.701,1218,3.531,1240,3.934,1244,3.497,1264,3.675,1307,3.206,1312,1.559,1315,1.66,1453,3.414,1455,2.885,1461,3.183,1467,2.701,1475,3.183,1490,2.701,1492,1.66,1497,1.402,1498,1.66,1500,1.402,1501,1.787,1503,1.787,1506,1.787,1507,1.956,1508,1.956,1509,1.956,1510,1.956,1511,1.956,1512,3.033,1513,1.66,1514,1.66,1515,1.66,1516,1.66,1517,2.701,1518,1.66,1522,2.399,1523,2.282,1524,2.282,1532,2.907,1585,6.837,1596,3.414,1644,5.103,1672,8.472,1673,1.956,1674,5.674,1675,5.103,1676,4.024,1677,3.675,1678,3.675,1679,3.183,1680,3.183,1681,4.024,1682,4.554,1683,4.554,1684,5.247,1685,5.247,1686,3.675,1687,3.183,1688,5.247,1689,5.247,1690,5.247,1691,3.602,1692,2.639,1693,4.024,1694,4.024,1695,4.554,1696,4.024,1697,4.554,1698,4.024,1699,2.214,1700,2.214,1701,2.214,1702,2.214,1703,1.956,1704,1.956,1705,1.956,1706,2.214,1707,2.214,1708,3.183,1709,4.637,1710,1.956,1711,2.214,1712,3.602,1713,2.214,1714,2.214,1715,2.214,1716,2.214,1717,3.602,1718,2.214,1719,2.214,1720,3.183,1721,2.214,1722,1.956,1723,2.214,1724,3.602,1725,2.214,1726,3.602,1727,1.956,1728,3.602,1729,2.214,1730,1.787,1731,1.787,1732,1.956,1733,2.214,1734,1.66,1735,2.214,1736,2.214,1737,1.787,1738,2.214,1739,2.214,1740,2.214,1741,1.956,1742,2.214,1743,2.214,1744,4.554,1745,2.214,1746,2.701,1747,5.775,1748,3.183,1749,2.214,1750,3.183,1751,2.214,1752,2.214,1753,2.214,1754,2.214,1755,2.214,1756,1.956,1757,1.787,1758,1.956,1759,1.956,1760,2.214,1761,1.956,1762,2.214,1763,1.787,1764,1.956,1765,1.787,1766,1.956,1767,1.956,1768,3.183,1769,1.956,1770,2.214,1771,1.956,1772,2.214,1773,2.214,1774,2.214,1775,3.602,1776,2.214,1777,3.602,1778,3.602,1779,3.602,1780,3.602,1781,3.602,1782,3.602,1783,3.602,1784,3.602,1785,3.602,1786,3.602,1787,5.247,1788,3.602,1789,3.602,1790,3.602,1791,3.602,1792,3.602,1793,3.602]],["title/injectables/MemoryStorage.html",[307,0.968,1391,3.33]],["body/injectables/MemoryStorage.html",[3,0.092,4,0.07,8,0.081,29,0.3,30,0.009,32,0.599,38,0.092,39,0.599,49,0.603,155,0.007,156,0.007,163,2.136,170,0.553,171,1.844,174,2.219,183,1.905,185,1.778,186,0.636,187,1.7,189,2.1,190,2.562,193,1.489,210,1.75,242,0.717,297,3.945,300,1.557,301,1.979,307,1.54,356,4.179,358,4.695,414,2.436,437,2.408,493,2.081,709,4.708,953,2.882,1333,4.179,1334,5.747,1375,5.704,1376,5.823,1377,5.704,1378,5.704,1379,6.264,1381,5.704,1382,5.704,1384,4.498,1386,4.498,1388,4.498,1389,4.498,1391,5.3,1392,4.179,1692,4.499,1794,8.848,1795,5.574,1796,5.574,1797,5.574,1798,5.574,1799,4.179,1800,5.574,1801,5.574,1802,4.925,1803,5.574,1804,4.708,1805,5.574,1806,5.574,1807,5.574,1808,7.068,1809,5.574,1810,4.925,1811,5.574,1812,5.574]],["title/interfaces/MenuChangeEvent.html",[231,0.387,1813,3.585]],["body/interfaces/MenuChangeEvent.html",[3,0.115,4,0.087,8,0.101,30,0.009,38,0.115,155,0.008,156,0.008,170,0.495,186,0.597,187,1.682,193,1.382,231,0.606,233,1.655,242,0.82,284,3.274,1376,5.86,1813,6.52,1814,6.944,1815,4.889,1816,6.944,1817,7.775]],["title/injectables/MenuService.html",[307,0.968,700,3.33]],["body/injectables/MenuService.html",[2,1.538,3,0.069,4,0.052,8,0.06,18,1.315,29,0.36,30,0.009,32,0.444,38,0.069,39,0.871,49,0.305,121,1.615,155,0.005,156,0.005,166,1.819,170,0.294,171,1.509,174,2.435,183,1.72,185,0.9,186,0.493,187,0.86,189,1.442,190,1.816,235,3.5,237,4.04,242,0.587,243,4.04,254,4.194,257,3.453,277,4.607,284,2.773,300,2.021,301,2.11,307,1.26,308,6.426,309,1.053,315,3.873,334,4.962,349,3.665,351,4.073,352,4.073,354,1.933,362,5.426,365,3.717,366,6.203,367,4.584,369,5.426,373,3.873,375,4.34,381,4.702,388,4.819,389,5.074,393,5.095,493,1.541,689,4.669,690,4.073,700,6.515,778,5.007,819,2.907,934,3.974,1133,5.389,1135,4.669,1692,3.87,1813,6.949,1815,2.907,1818,4.129,1819,5.785,1820,5.785,1821,7.236,1822,7.999,1823,7.999,1824,7.527,1825,5.785,1826,4.129,1827,7.236,1828,5.389,1829,5.389,1830,6.732,1831,6.678,1832,5.901,1833,6.678,1834,4.129,1835,6.61,1836,4.129,1837,7.311,1838,6.677,1839,7.311,1840,5.785,1841,4.129,1842,4.129,1843,5.785,1844,4.129,1845,4.129,1846,4.129,1847,4.129,1848,4.129]],["title/components/MenuitemComponent.html",[0,0.168,95,0.864]],["body/components/MenuitemComponent.html",[0,0.218,1,0.327,2,0.533,3,0.028,4,0.021,5,0.335,6,0.335,7,0.335,8,0.025,12,0.335,13,1.767,14,1.765,15,0.327,17,0.558,18,0.803,19,0.57,20,1.362,22,2.169,23,1.809,24,1.434,25,0.57,29,0.353,30,0.009,31,0.554,32,0.181,33,0.763,34,0.582,35,0.582,37,0.813,38,0.028,39,0.892,41,2.376,43,0.335,44,0.57,45,1.146,46,0.335,47,0.88,48,0.335,49,0.326,50,0.335,51,0.327,52,0.335,53,0.327,54,0.335,55,0.327,56,0.335,57,0.327,58,0.335,59,0.327,60,0.335,61,0.327,62,0.306,63,0.57,64,0.327,65,0.57,66,0.327,67,0.335,68,0.327,69,0.335,70,0.327,71,0.335,72,0.327,73,0.32,74,0.57,75,0.327,76,0.335,77,0.327,78,0.335,79,0.327,80,0.335,81,0.327,82,0.335,83,0.327,84,0.335,85,0.327,86,0.335,87,0.327,88,0.335,89,0.57,90,0.327,91,0.335,92,0.327,93,0.292,94,0.745,95,1.487,96,0.335,97,0.327,98,0.335,99,0.327,100,0.335,101,0.327,102,0.335,103,0.327,104,0.327,105,0.591,106,0.327,107,0.545,108,0.335,109,0.521,110,0.57,111,0.327,112,0.327,113,0.335,114,0.327,115,0.335,116,0.327,117,0.335,118,0.327,119,0.335,120,0.327,121,0.922,122,0.327,123,0.335,124,0.327,125,0.335,126,0.335,127,0.327,128,0.335,129,0.327,130,0.335,131,0.327,132,0.335,133,0.327,134,0.327,135,0.335,136,0.327,137,0.521,138,0.335,139,0.327,140,0.335,141,0.327,142,0.335,143,0.327,144,0.335,145,0.327,146,0.335,147,0.335,148,0.32,149,0.327,150,0.335,151,0.327,152,0.335,153,0.335,154,0.335,155,0.003,156,0.003,163,1.098,164,1.752,166,3.049,170,0.566,171,0.747,173,2.838,174,0.819,178,1.474,181,4.017,183,1.665,185,0.624,186,0.607,187,0.597,189,1.236,190,1.387,193,1.167,199,1.12,210,0.528,213,2.312,235,2.264,237,1.733,238,4.547,240,1.327,242,0.291,243,3.483,253,2.799,254,5.042,256,2.148,257,3.388,260,1.12,262,2.943,263,5.223,265,1.908,266,4.27,271,2.806,272,3.483,277,4.978,282,4.385,283,2.017,284,2.206,286,2.017,290,3.841,295,3.159,297,2.607,300,1.608,301,1.765,304,3.841,309,0.429,315,3.866,323,4.045,328,1.908,329,2.148,334,4.387,336,5.665,351,3.798,359,2.017,363,2.148,365,1.226,367,4.385,372,4.766,373,0.787,374,2.371,375,2.695,376,2.148,377,4.213,378,2.148,381,2.017,382,1.016,383,1.016,384,1.016,385,1.07,386,0.612,387,0.612,388,1.908,389,2.493,393,2.017,407,1.908,414,1.904,425,2.017,430,3.112,437,0.819,650,3.263,690,2.635,699,3.417,700,5.854,707,1.595,709,1.908,710,1.261,713,2.312,714,2.635,721,4.317,723,3.567,728,2.532,729,5.246,733,3.021,734,3.021,736,2.532,740,6.584,741,2.532,742,3.307,744,3.567,756,3.593,763,1.12,774,2.169,776,3.307,778,2.806,817,1.486,819,3.49,859,2.006,879,3.512,883,1.787,885,4.037,902,4.352,934,3.634,953,1.482,1069,2.148,1112,5.79,1122,4.912,1128,2.017,1132,4.912,1142,4.381,1167,2.532,1169,1.018,1193,1.486,1194,1.486,1195,1.486,1200,2.017,1202,2.312,1211,3.905,1241,4.354,1376,5.248,1392,3.314,1523,2.799,1524,1.815,1692,2.169,1757,3.021,1815,3.798,1817,1.486,1822,3.905,1823,2.532,1824,3.307,1828,4.001,1829,4.001,1830,4.381,1835,5.732,1838,2.312,1849,1.682,1850,8.001,1851,2.865,1852,2.532,1853,3.743,1854,2.865,1855,5.758,1856,5.758,1857,4.957,1858,4.42,1859,6.326,1860,2.865,1861,2.865,1862,3.743,1863,3.743,1864,5.395,1865,5.758,1866,2.865,1867,2.865,1868,3.743,1869,4.42,1870,5.395,1871,3.307,1872,3.743,1873,4.767,1874,5.395,1875,3.905,1876,3.905,1877,3.307,1878,3.307,1879,1.682,1880,2.865,1881,7.077,1882,5.359,1883,4.42,1884,5.395,1885,4.42,1886,2.532,1887,1.682,1888,5.359,1889,6.326,1890,2.312,1891,1.682,1892,3.905,1893,4.42,1894,4.42,1895,4.42,1896,4.42,1897,2.865,1898,1.682,1899,3.743,1900,2.865,1901,2.865,1902,2.865,1903,2.865,1904,2.865,1905,1.682,1906,2.865,1907,3.905,1908,2.865,1909,3.743,1910,3.743,1911,3.567,1912,3.307,1913,3.743,1914,3.307,1915,2.532,1916,2.532,1917,1.682,1918,2.865,1919,2.865,1920,2.865,1921,1.682,1922,1.682,1923,1.682,1924,2.865,1925,4.767,1926,2.532,1927,1.682,1928,1.682,1929,3.905,1930,4.42,1931,1.682,1932,1.682,1933,1.682,1934,1.682,1935,1.682,1936,1.682,1937,2.865,1938,1.486,1939,1.682,1940,1.682,1941,1.682,1942,1.682,1943,1.682,1944,3.743,1945,2.865,1946,1.682,1947,1.682,1948,1.682,1949,1.682,1950,2.865,1951,1.682,1952,1.682,1953,1.682,1954,5.758,1955,2.865,1956,4.957,1957,2.865,1958,2.865,1959,1.682,1960,2.865,1961,2.865,1962,2.865,1963,1.682,1964,1.682,1965,2.865,1966,1.682,1967,1.682,1968,1.486,1969,1.682,1970,3.743,1971,1.682,1972,1.682,1973,2.865,1974,1.486,1975,1.682,1976,1.682,1977,1.682,1978,2.865,1979,1.682,1980,1.682,1981,1.682,1982,2.865,1983,1.682,1984,1.682,1985,1.682,1986,5.395]],["title/components/MessagesComponent.html",[0,0.168,97,0.864]],["body/components/MessagesComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,1.523,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,1987,4.988,1988,7.827,1989,6.579,1990,6.579]],["title/components/NotFoundComponent.html",[0,0.168,99,0.864]],["body/components/NotFoundComponent.html",[0,0.27,1,0.911,2,1.173,3,0.078,4,0.059,5,0.932,6,0.932,7,0.932,8,0.068,12,0.932,13,1.885,14,1.885,15,0.911,17,1.227,18,1.146,19,1.256,20,2.595,21,3.051,22,4.134,23,3.447,24,2.733,25,1.256,27,1.314,29,0.442,30,0.009,31,1.543,32,0.503,33,2.126,34,1.62,35,1.62,36,2.004,37,2.264,38,0.078,39,0.503,41,3.361,43,0.932,44,1.256,45,1.256,46,0.932,47,1.519,48,0.932,49,0.466,50,0.932,51,0.911,52,0.932,53,0.911,54,0.932,55,0.911,56,0.932,57,0.911,58,0.932,59,0.911,60,0.932,61,0.911,62,0.851,63,1.256,64,0.911,65,1.256,66,0.911,67,0.932,68,0.911,69,0.932,70,0.911,71,0.932,72,0.911,73,0.891,74,1.256,75,0.911,76,0.932,77,0.911,78,0.932,79,0.911,80,0.932,81,0.911,82,0.932,83,0.911,84,0.932,85,0.911,86,0.932,87,0.911,88,0.932,89,1.256,90,0.911,91,0.932,92,0.911,93,0.813,94,1.42,95,0.911,96,0.932,97,0.911,98,0.932,99,1.485,100,0.932,101,0.911,102,0.932,103,0.911,104,0.911,105,1.126,106,0.911,107,1.2,108,0.932,109,1.146,110,1.256,111,0.911,112,0.911,113,0.932,114,0.911,115,0.932,116,0.911,117,0.932,118,0.911,119,0.932,120,0.911,121,0.871,122,0.911,123,0.932,124,0.911,125,0.932,126,0.932,127,0.911,128,0.932,129,0.911,130,0.932,131,0.911,132,0.932,133,0.911,134,0.911,135,0.932,136,0.911,137,1.146,138,0.932,139,0.911,140,0.932,141,0.911,142,0.932,143,0.911,144,0.932,145,0.911,146,0.932,147,0.932,148,0.891,149,0.911,150,0.932,151,0.911,152,0.932,153,0.932,154,0.932,155,0.006,156,0.006,954,5.091,1991,4.684,1992,4.139,1993,4.684,1994,5.575,1995,6.309,1996,6.309,1997,6.309,1998,6.309]],["title/components/NotificationsComponent.html",[0,0.168,101,0.864]],["body/components/NotificationsComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,1.523,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,1839,6.916,1999,4.988,2000,6.579,2001,6.579]],["title/interfaces/Organization.html",[231,0.387,862,2.079]],["body/interfaces/Organization.html",[3,0.11,4,0.083,8,0.096,30,0.009,38,0.11,49,0.64,155,0.007,156,0.007,170,0.471,186,0.662,193,1.504,231,0.577,233,1.576,242,0.797,862,3.675,892,4.479,1008,4.335,2002,6.615,2003,5.02,2004,7.654,2005,6.99,2006,5.02]],["title/components/OrganizationComponent.html",[0,0.168,103,0.864]],["body/components/OrganizationComponent.html",[0,0.186,1,0.483,2,0.734,3,0.041,4,0.031,5,0.494,6,0.494,7,0.494,8,0.082,12,0.494,13,1.823,14,1.823,15,0.483,17,0.768,18,0.893,19,0.786,20,1.789,21,2.103,23,2.376,24,1.884,25,0.786,27,0.822,29,0.47,30,0.009,31,0.817,32,0.267,34,0.858,35,0.858,36,1.061,37,1.199,38,0.041,39,0.267,41,3.828,43,0.494,44,0.786,45,0.786,46,0.494,47,1.116,48,0.494,49,0.553,50,0.494,51,0.483,52,0.494,53,0.483,54,0.494,55,0.483,56,0.494,57,0.483,58,0.494,59,0.483,60,0.494,61,0.483,62,0.451,63,0.786,64,0.483,65,0.786,66,0.483,67,0.494,68,0.483,69,0.494,70,0.483,71,0.494,72,0.483,73,0.472,74,0.786,75,0.483,76,0.494,77,0.483,78,0.494,79,0.483,80,0.494,81,0.483,82,0.494,83,0.483,84,0.494,85,0.483,86,0.494,87,0.483,88,0.494,89,0.786,90,0.483,91,0.494,92,0.483,93,0.43,94,0.979,95,0.483,96,0.494,97,0.483,98,0.494,99,0.483,100,0.494,101,0.483,102,0.494,103,1.091,104,0.483,105,0.776,106,0.483,107,0.751,108,0.494,109,0.717,110,0.786,111,0.483,112,0.483,113,0.494,114,0.483,115,0.494,116,0.483,117,0.494,118,0.483,119,0.494,120,0.483,121,0.461,122,0.483,123,0.494,124,0.483,125,0.494,126,0.494,127,0.483,128,0.494,129,0.483,130,0.494,131,0.483,132,0.494,133,0.483,134,0.483,135,0.494,136,0.483,137,0.717,138,0.494,139,0.483,140,0.494,141,0.483,142,0.494,143,0.483,144,0.494,145,0.483,146,0.494,147,0.494,148,0.472,149,0.483,150,0.494,151,0.483,152,0.494,153,0.494,154,0.494,155,0.004,156,0.004,163,1.513,165,2.738,170,0.177,171,1.03,172,3.121,174,2.141,178,0.92,180,3.303,183,1.838,185,1.489,186,0.583,187,1.522,189,1.822,190,2.145,193,1.373,210,1.239,240,1.4,242,0.401,272,1.032,284,1.513,295,1.161,297,2.709,300,1.909,301,1.809,309,0.633,365,1.689,373,1.161,382,1.4,383,1.4,384,1.744,385,1.474,386,1.436,387,0.903,414,1.759,437,2.186,444,1.003,517,1.003,524,1.269,533,2.041,636,3.28,639,1.239,641,0.837,643,1.283,659,1.283,662,2.041,696,2.542,774,1.438,818,1.239,859,2.636,860,1.972,861,3.918,862,3.79,863,2.636,864,2.738,866,3.488,867,3.488,871,4.308,874,3.968,875,3.968,877,3.186,879,3.004,880,2.96,882,4.812,883,2.635,890,3.186,892,3.164,897,2.96,902,2.636,907,2.738,908,2.116,912,3.186,914,1.33,916,1.161,917,1.381,918,1.33,919,1.501,920,2.388,921,1.501,924,2.192,925,1.061,927,2.002,929,2.002,931,1.86,932,2.002,933,1.501,934,1.792,935,1.381,936,1.438,937,1.501,938,1.501,939,2.002,944,1.093,953,2.898,956,1.381,957,1.381,958,1.381,961,1.33,962,1.33,964,3.186,969,3.534,970,1.86,974,2.002,975,2.192,976,1.86,977,3.186,1047,1.283,1110,1.381,1169,2.388,1455,3.114,1467,2.96,1490,2.96,1492,1.86,1497,1.571,1500,1.571,1512,3.275,1513,1.86,1514,1.86,1515,1.86,1516,1.86,1517,2.96,1518,1.86,1522,1.652,1523,1.571,1524,1.571,1543,3.462,1548,3.687,1557,3.946,1561,2.96,1571,1.747,1572,1.33,1573,1.747,1574,1.381,1575,1.747,1576,1.381,1577,1.747,1734,1.86,1746,1.86,2007,2.481,2008,4.345,2009,4.345,2010,4.917,2011,4.917,2012,4.345,2013,4.917,2014,4.917,2015,4.345,2016,4.917,2017,4.917,2018,5.605,2019,3.948,2020,3.948,2021,3.948,2022,3.948,2023,2.481,2024,2.481,2025,3.948,2026,2.481,2027,2.481,2028,2.481,2029,2.481,2030,2.481,2031,3.948,2032,2.481,2033,3.948,2034,5.605,2035,2.481,2036,3.488,2037,2.481,2038,3.948,2039,2.481,2040,5.605,2041,2.481,2042,3.948,2043,2.481,2044,2.481,2045,3.948,2046,2.481,2047,3.488,2048,2.481,2049,4.917,2050,3.948,2051,2.481,2052,2.481,2053,2.192,2054,2.192,2055,2.481,2056,2.481,2057,2.192,2058,2.481,2059,1.86,2060,2.481,2061,2.481,2062,3.948,2063,3.948,2064,3.948,2065,2.481,2066,2.481,2067,2.481,2068,2.481,2069,2.481,2070,2.481,2071,3.948,2072,3.948,2073,2.481,2074,2.481,2075,2.481,2076,2.481,2077,2.481,2078,2.481,2079,2.481,2080,2.481,2081,3.948,2082,3.948,2083,3.948,2084,3.948,2085,3.948,2086,3.948,2087,3.948,2088,5.605,2089,3.948,2090,3.948,2091,3.948,2092,3.948,2093,3.948,2094,3.948]],["title/interfaces/OrganizationDto.html",[231,0.387,2095,3.585]],["body/interfaces/OrganizationDto.html",[3,0.11,4,0.083,8,0.096,30,0.009,38,0.11,49,0.64,155,0.007,156,0.007,170,0.471,186,0.662,193,1.504,231,0.577,233,1.576,242,0.797,892,4.479,1008,4.335,2003,5.02,2004,7.654,2005,6.99,2006,5.02,2095,6.337,2096,6.615]],["title/injectables/OrganizationEffects.html",[307,0.968,462,3.585]],["body/injectables/OrganizationEffects.html",[3,0.09,4,0.068,8,0.079,29,0.45,30,0.009,32,0.582,38,0.09,39,0.582,49,0.4,155,0.007,156,0.007,170,0.386,174,1.984,178,1.618,183,1.76,185,1.18,186,0.4,187,1.128,242,0.704,300,2.14,301,1.953,307,1.512,309,1.382,462,5.602,493,2.022,509,4.837,511,5.255,512,5.168,514,5.687,517,2.191,522,5.168,524,2.747,541,4.634,570,3.277,571,3.14,572,3.277,878,4.062,881,4.788,882,6.016,926,6.057,2059,6.057,2097,5.418,2098,7.66,2099,5.418,2100,6.942,2101,6.942,2102,8.078,2103,6.942,2104,8.078,2105,5.418,2106,6.942,2107,6.942,2108,6.942,2109,5.418,2110,6.942,2111,6.942,2112,5.602,2113,6.942,2114,6.942,2115,5.418,2116,5.418,2117,4.788,2118,4.788,2119,4.788,2120,4.788,2121,4.788,2122,4.788]],["title/injectables/OrganizationService.html",[307,0.968,882,3.127]],["body/injectables/OrganizationService.html",[3,0.094,4,0.071,8,0.12,29,0.473,30,0.009,32,0.608,38,0.094,39,0.608,49,0.606,155,0.007,156,0.007,166,2.492,170,0.403,171,1.861,178,1.319,183,1.843,185,1.788,186,0.606,187,1.709,189,2.046,193,1.264,210,1.776,307,1.554,309,1.443,354,2.649,355,2.492,365,2.42,375,4.473,414,2.576,493,2.112,588,3.423,589,4.757,591,3.973,606,4.19,611,3.423,612,4.136,616,3.279,621,4.566,625,4.728,756,3.769,862,2.649,871,5.024,878,5.861,882,5.024,892,3.69,922,6.154,976,5.351,1001,4.243,1327,4.243,1692,4.136,2059,5.351,2095,4.566,2123,5.658,2124,8.208,2125,5.658,2126,5.658,2127,5.658,2128,5.658,2129,5.658,2130,7.136,2131,5.658,2132,6.907,2133,4.566,2134,5.658,2135,5.658,2136,7.817,2137,5.658,2138,5,2139,5.658,2140,5.658,2141,5,2142,5.658]],["title/interfaces/OrganizationState.html",[231,0.387,448,3.585]],["body/interfaces/OrganizationState.html",[3,0.083,4,0.063,8,0.073,29,0.422,30,0.009,38,0.122,62,1.338,155,0.006,156,0.006,170,0.356,186,0.601,210,2.066,231,0.436,233,1.19,240,2.335,242,0.668,257,2.582,315,4.298,365,3.151,382,2.335,383,2.335,384,2.335,385,2.457,386,2.395,387,2.395,437,2.608,448,5.944,464,4.413,524,2.943,636,4.772,639,4.257,640,3.982,641,1.685,642,3.021,643,2.582,648,3.982,649,3.982,650,5.232,651,3.021,653,4.455,657,3.808,659,3.808,660,4.455,662,3.808,663,4.17,756,4.385,862,4.344,878,3.744,926,3.744,1001,3.744,1218,3.081,2005,4.03,2059,3.744,2117,4.413,2118,4.413,2119,4.413,2120,4.413,2121,4.413,2122,4.413,2132,6.508,2143,4.994,2144,8.649,2145,8.649,2146,4.994,2147,4.994,2148,4.994,2149,4.994,2150,4.994,2151,4.994,2152,4.994,2153,4.994,2154,4.994,2155,4.994,2156,4.994,2157,4.994,2158,4.994,2159,4.994]],["title/interfaces/Platform.html",[231,0.387,2160,2.574]],["body/interfaces/Platform.html",[3,0.108,4,0.082,8,0.095,29,0.35,30,0.009,38,0.108,155,0.007,156,0.007,170,0.463,186,0.68,193,1.482,231,0.567,233,1.549,242,0.788,437,2.376,986,5.736,1008,4.318,1576,3.619,2003,4.991,2006,4.991,2160,4.503,2161,6.499,2162,7.61,2163,5.736,2164,6.95,2165,6.499]],["title/interfaces/PlatformDto.html",[231,0.387,2166,3.127]],["body/interfaces/PlatformDto.html",[3,0.108,4,0.082,8,0.095,29,0.35,30,0.009,38,0.108,155,0.007,156,0.007,170,0.463,186,0.68,193,1.482,231,0.567,233,1.549,242,0.788,437,2.376,986,5.736,1008,4.318,1576,3.619,2003,4.991,2006,4.991,2162,7.61,2163,5.736,2164,6.95,2166,5.471,2167,6.499,2168,6.499]],["title/injectables/PlatformEffects.html",[307,0.968,480,3.585]],["body/injectables/PlatformEffects.html",[3,0.101,4,0.077,8,0.089,29,0.466,30,0.009,32,0.656,38,0.101,39,0.656,49,0.451,155,0.007,156,0.007,170,0.435,174,2.139,178,1.744,183,1.63,185,1.33,186,0.451,187,1.272,242,0.759,300,1.706,301,1.557,307,1.63,309,1.557,480,6.039,493,2.28,509,4.965,511,4.894,512,4.527,517,2.47,522,4.527,524,2.406,541,4.894,570,3.695,571,3.54,572,3.695,969,3.869,2112,6.039,2169,6.108,2170,6.805,2171,6.108,2172,7.106,2173,6.108,2174,7.483,2175,7.483,2176,7.149,2177,6.039,2178,7.483,2179,6.108,2180,6.108,2181,5.397,2182,5.397]],["title/injectables/PlatformService.html",[307,0.968,2172,3.585]],["body/injectables/PlatformService.html",[3,0.109,4,0.082,8,0.096,29,0.476,30,0.009,32,0.704,38,0.109,39,0.704,49,0.484,155,0.007,156,0.007,166,2.888,170,0.467,171,2.037,178,1.528,183,1.701,185,1.428,186,0.484,187,1.365,189,1.634,307,1.701,309,1.672,354,3.069,355,2.888,375,4.168,414,2.058,493,2.447,588,3.966,589,5.006,591,4.349,611,3.966,612,4.527,625,3.966,2166,4.616,2172,6.303,2183,6.556,2184,8.637,2185,6.556,2186,6.556,2187,6.556,2188,6.556]],["title/interfaces/PlatformState.html",[231,0.387,449,3.585]],["body/interfaces/PlatformState.html",[3,0.098,4,0.074,8,0.086,29,0.449,30,0.009,38,0.132,93,1.026,155,0.007,156,0.007,170,0.421,186,0.589,210,2.303,231,0.516,233,1.409,240,2.097,242,0.744,257,3.058,315,4.089,382,2.097,383,2.097,384,2.097,385,2.207,386,2.151,387,2.151,437,2.579,449,6.436,478,5.225,524,2.92,626,4.163,636,4.798,639,4.165,640,4.437,641,1.996,642,3.577,643,3.058,648,4.437,649,3.577,650,4.824,651,3.577,653,3.577,657,3.058,659,3.058,660,3.577,662,3.058,663,4.647,862,2.768,1218,2.768,2160,4.833,2170,4.772,2176,5.225,2177,7.05,2181,5.225,2182,5.225,2189,5.913,2190,5.913,2191,5.913,2192,5.913,2193,5.913,2194,5.913]],["title/interfaces/Project.html",[105,0.701,231,0.387]],["body/interfaces/Project.html",[3,0.113,4,0.086,8,0.1,29,0.369,30,0.009,38,0.113,49,0.646,105,1.264,155,0.008,156,0.008,170,0.487,186,0.627,193,1.461,231,0.596,233,1.63,242,0.813,2160,5.323,2195,6.838,2196,6.164,2197,6.838]],["title/components/ProjectDetailsComponent.html",[0,0.168,104,0.864]],["body/components/ProjectDetailsComponent.html",[0,0.277,1,0.96,2,1.214,3,0.082,4,0.062,5,0.982,6,0.982,7,0.982,8,0.072,12,0.982,13,1.888,14,1.888,15,0.96,17,1.271,18,1.186,19,0.982,25,1.3,27,1.36,29,0.266,30,0.008,32,0.53,38,0.082,39,0.53,43,0.982,44,1.3,45,1.3,46,0.982,47,1.551,48,0.982,49,0.482,50,0.982,51,0.96,52,0.982,53,0.96,54,0.982,55,0.96,56,0.982,57,0.96,58,0.982,59,0.96,60,0.982,61,0.96,62,0.896,63,1.3,64,0.96,65,1.3,66,0.96,67,0.982,68,0.96,69,0.982,70,0.96,71,0.982,72,0.96,73,0.938,74,1.3,75,0.96,76,0.982,77,0.96,78,0.982,79,0.96,80,0.982,81,0.96,82,0.982,83,0.96,84,0.982,85,0.96,86,0.982,87,0.96,88,0.982,89,1.3,90,0.96,91,0.982,92,0.96,93,0.856,94,1.457,95,0.96,96,0.982,97,0.96,98,0.982,99,0.96,100,0.982,101,0.96,102,0.982,103,0.96,104,1.516,105,1.403,106,0.96,107,1.242,108,0.982,109,1.186,110,1.3,111,0.96,112,0.96,113,0.982,114,0.96,115,0.982,116,0.96,117,0.982,118,0.96,119,0.982,120,0.96,121,0.917,122,0.96,123,0.982,124,0.96,125,0.982,126,0.982,127,0.96,128,0.982,129,0.96,130,0.982,131,0.96,132,0.982,133,0.96,134,0.96,135,0.982,136,0.96,137,1.186,138,0.982,139,0.96,140,0.982,141,0.96,142,0.982,143,0.96,144,0.982,145,0.96,146,0.982,147,0.982,148,0.938,149,0.96,150,0.982,151,0.96,152,0.982,153,0.982,154,0.982,155,0.006,156,0.006,161,2.376,990,5.486,991,5.771,992,5.771,2198,4.933,2199,4.933,2200,4.933]],["title/interfaces/ProjectDto.html",[231,0.387,2201,3.33]],["body/interfaces/ProjectDto.html",[3,0.113,4,0.086,8,0.1,29,0.369,30,0.009,38,0.113,49,0.646,155,0.008,156,0.008,170,0.487,186,0.627,193,1.461,231,0.596,233,1.63,242,0.813,2160,5.075,2166,6.164,2196,6.164,2201,6.003,2202,6.838,2203,6.042]],["title/injectables/ProjectEffects.html",[307,0.968,466,3.585]],["body/injectables/ProjectEffects.html",[3,0.089,4,0.068,8,0.078,29,0.449,30,0.009,32,0.579,38,0.089,39,0.579,49,0.398,109,1.464,155,0.007,156,0.007,170,0.384,174,1.976,178,1.611,183,1.756,185,1.173,186,0.398,187,1.121,242,0.702,300,2.133,301,1.948,307,1.506,309,1.373,466,5.581,493,2.01,509,4.83,511,5.248,512,5.16,514,5.675,517,2.178,522,5.16,524,2.742,541,4.62,570,3.258,571,3.121,572,3.258,2204,5.385,2205,6.043,2206,6.043,2207,6.504,2208,4.759,2209,6.006,2210,5.385,2211,6.915,2212,6.915,2213,6.915,2214,6.915,2215,6.915,2216,5.385,2217,6.915,2218,6.915,2219,7.122,2220,6.915,2221,6.915,2222,5.385,2223,6.915,2224,6.915,2225,6.915,2226,6.915,2227,5.385,2228,5.385,2229,4.759,2230,4.759,2231,4.759,2232,4.759,2233,4.759,2234,4.759,2235,4.759]],["title/interfaces/ProjectHourByHourStatDto.html",[231,0.387,2236,3.585]],["body/interfaces/ProjectHourByHourStatDto.html",[3,0.102,4,0.078,8,0.09,30,0.009,38,0.102,49,0.625,155,0.007,156,0.007,170,0.44,186,0.678,193,1.469,221,6.831,231,0.539,233,1.472,242,0.765,297,4.526,1008,4.267,2196,5.96,2236,6.08,2237,4.984,2238,6.657,2239,5.457,2240,8.465,2241,7.48,2242,8.465,2243,7.48,2244,8.465,2245,8.465,2246,8.465,2247,7.48]],["title/components/ProjectPickerComponent.html",[0,0.168,106,0.864]],["body/components/ProjectPickerComponent.html",[0,0.224,1,0.651,2,0.923,3,0.055,4,0.042,5,0.665,6,0.665,7,0.665,8,0.049,12,0.665,13,1.856,14,1.856,15,0.651,17,0.966,18,1.077,19,0.989,20,2.156,21,2.535,23,2.864,24,2.271,25,0.989,27,1.034,29,0.459,30,0.009,31,1.101,32,0.359,34,1.157,35,1.157,36,1.43,37,1.616,38,0.055,39,0.359,43,0.665,44,0.989,45,0.989,46,0.665,47,1.306,48,0.665,49,0.577,50,0.665,51,0.651,52,0.665,53,0.651,54,0.665,55,0.651,56,0.665,57,0.651,58,0.665,59,0.651,60,0.665,61,0.651,62,0.607,63,0.989,64,0.651,65,0.989,66,0.651,67,0.665,68,0.651,69,0.665,70,0.651,71,0.665,72,0.651,73,0.636,74,0.989,75,0.651,76,0.665,77,0.651,78,0.665,79,0.651,80,0.665,81,0.651,82,0.665,83,0.651,84,0.665,85,0.651,86,0.665,87,0.651,88,0.665,89,0.989,90,0.651,91,0.665,92,0.651,93,0.862,94,1.18,95,0.651,96,0.665,97,0.651,98,0.665,99,0.651,100,0.665,101,0.651,102,0.665,103,0.651,104,0.651,105,1.372,106,1.276,107,0.945,108,0.665,109,1.335,110,0.989,111,0.651,112,0.651,113,0.665,114,0.651,115,0.665,116,0.651,117,0.665,118,0.651,119,0.665,120,0.651,121,0.622,122,0.651,123,0.665,124,0.651,125,0.665,126,0.665,127,0.651,128,0.665,129,0.651,130,0.665,131,0.651,132,0.665,133,0.651,134,0.651,135,0.665,136,0.651,137,0.902,138,0.665,139,0.651,140,0.665,141,0.651,142,0.665,143,0.651,144,0.665,145,0.651,146,0.665,147,0.665,148,0.636,149,0.651,150,0.665,151,0.651,152,0.665,153,0.665,154,0.665,155,0.005,156,0.005,170,0.238,171,1.296,178,0.779,183,1.837,185,1.6,186,0.6,187,1.53,189,1.831,190,2.388,193,1.133,242,0.504,272,2.728,283,2.354,295,2.325,300,1.832,301,1.788,309,0.853,334,2.766,355,1.473,414,1.049,437,0.956,444,1.352,533,1.729,641,1.128,707,2.766,774,1.938,883,2.971,925,1.43,934,2.977,944,1.473,953,2.568,1110,1.862,1169,3.005,1218,1.565,1451,2.954,1452,4.389,1453,4.444,1454,5.237,1455,3.754,1456,4.389,1457,4.389,1460,5.237,1462,4.389,1463,4.389,1464,4.389,1465,4.389,1466,5.797,1467,3.724,1471,2.954,1472,2.954,1473,2.954,1474,2.954,1476,2.954,1477,4.389,1478,5.797,1480,4.389,1481,5.797,1483,4.389,1484,5.797,1486,4.389,1487,5.797,1490,3.724,1492,2.507,1493,2.954,1495,2.954,1496,2.954,1497,2.118,1498,2.507,1499,2.954,1500,2.118,1512,3.947,1513,2.507,1514,2.507,1515,2.507,1516,2.507,1517,3.724,1518,2.507,1522,2.227,1523,2.118,1524,2.118,1526,2.698,1527,2.698,1533,2.954,2206,2.507,2248,8.511,2249,7.52,2250,5.927,2251,5.237,2252,5.927,2253,5.927,2254,6.561,2255,3.343,2256,3.343,2257,3.343,2258,3.343,2259,3.343,2260,4.389,2261,2.507,2262,2.507,2263,2.954,2264,2.954,2265,2.507,2266,2.954,2267,2.954,2268,3.343,2269,3.343,2270,3.343,2271,3.343,2272,3.343,2273,3.343,2274,2.954,2275,4.967,2276,4.967,2277,4.967,2278,4.967,2279,4.967,2280,4.967,2281,4.389,2282,4.967]],["title/interfaces/ProjectReleaseDto.html",[231,0.387,2283,3.585]],["body/interfaces/ProjectReleaseDto.html",[3,0.114,4,0.087,8,0.1,30,0.009,38,0.114,155,0.008,156,0.008,170,0.49,186,0.629,193,1.463,231,0.6,233,1.64,242,0.815,1008,4.114,2163,5.843,2237,5.552,2283,6.485,2284,6.88,2285,8.773,2286,8.773]],["title/injectables/ProjectService.html",[307,0.968,2209,3.127]],["body/injectables/ProjectService.html",[3,0.09,4,0.068,8,0.079,29,0.469,30,0.009,32,0.584,38,0.09,39,0.584,49,0.642,105,0.859,155,0.007,156,0.007,166,2.395,170,0.387,171,1.815,178,1.267,183,1.863,185,1.821,186,0.617,187,1.741,189,2.084,193,1.438,307,1.516,309,1.387,354,2.545,355,2.395,375,4.507,414,2.684,493,2.03,588,3.289,589,4.688,591,3.874,606,3.73,611,3.289,612,4.033,616,3.152,625,5.173,626,3.829,985,6.528,1327,5.753,2133,4.388,2196,3.829,2201,4.077,2205,5.217,2209,4.899,2287,5.438,2288,8.089,2289,6.958,2290,6.958,2291,6.149,2292,5.438,2293,6.958,2294,5.438,2295,5.438,2296,6.958,2297,5.438,2298,6.781,2299,5.438,2300,6.958,2301,5.438,2302,6.149,2303,5.438,2304,4.805,2305,4.077,2306,5.438,2307,4.388,2308,6.958,2309,3.622,2310,7.673,2311,5.438,2312,5.438,2313,5.438]],["title/interfaces/ProjectStatDto.html",[231,0.387,2305,3.33]],["body/interfaces/ProjectStatDto.html",[3,0.1,4,0.076,8,0.088,29,0.434,30,0.009,38,0.1,49,0.62,105,1.173,155,0.007,156,0.007,170,0.43,186,0.676,193,1.419,231,0.526,233,1.438,242,0.754,297,4.517,2160,4.867,2166,5.912,2196,5.912,2203,5.331,2236,6.777,2237,4.869,2238,6.563,2239,5.331,2241,7.42,2283,6.777,2305,5.569,2307,4.869,2314,8.397,2315,8.397,2316,7.42,2317,8.397,2318,8.397,2319,8.397,2320,8.397,2321,6.033]],["title/interfaces/ProjectState.html",[231,0.387,450,3.585]],["body/interfaces/ProjectState.html",[3,0.08,4,0.061,8,0.07,29,0.417,30,0.009,38,0.12,62,1.317,105,1.373,109,1.505,155,0.006,156,0.006,170,0.345,186,0.634,210,2.023,231,0.422,233,1.153,240,1.715,242,0.654,315,4.284,365,3.101,382,1.715,383,1.715,386,1.759,387,1.759,437,2.646,450,5.85,468,4.274,524,2.663,639,4.387,640,3.899,641,1.632,642,2.926,643,2.501,648,3.899,649,4.385,650,5.26,651,3.899,653,4.385,657,3.748,659,3.748,660,4.385,662,3.748,663,4.897,988,3.886,1218,3.393,2205,3.626,2206,3.626,2207,3.903,2229,4.274,2230,4.274,2231,4.274,2232,4.274,2233,4.274,2234,4.274,2235,4.274,2322,4.837,2323,8.455,2324,8.588,2325,8.588,2326,8.588,2327,8.588,2328,7.319,2329,8.588,2330,8.588,2331,3.903,2332,4.837,2333,4.837,2334,4.837,2335,4.837,2336,4.837,2337,4.837,2338,4.837,2339,4.837,2340,4.837,2341,4.837]],["title/components/ProjectsComponent.html",[0,0.168,107,0.845]],["body/components/ProjectsComponent.html",[0,0.227,1,0.663,2,0.937,3,0.057,4,0.043,5,0.679,6,0.679,7,0.679,8,0.05,12,0.679,13,1.858,14,1.858,15,0.663,17,0.981,18,1.391,19,1.003,20,2.181,21,2.565,23,2.898,24,2.298,25,1.003,27,1.05,29,0.475,30,0.009,31,1.123,32,0.366,34,1.18,35,1.18,36,1.459,37,1.648,38,0.057,39,0.366,41,2.22,43,0.679,44,1.003,45,1.003,46,0.679,47,1.318,48,0.679,49,0.489,50,0.679,51,0.663,52,0.679,53,0.663,54,0.679,55,0.663,56,0.679,57,0.663,58,0.679,59,0.663,60,0.679,61,0.663,62,0.619,63,1.003,64,0.663,65,1.003,66,0.663,67,0.679,68,0.663,69,0.679,70,0.663,71,0.679,72,0.663,73,0.649,74,1.003,75,0.663,76,0.679,77,0.663,78,0.679,79,0.663,80,0.679,81,0.663,82,0.679,83,0.663,84,0.679,85,0.663,86,0.679,87,0.663,88,0.679,89,1.003,90,0.663,91,0.679,92,0.663,93,0.591,94,1.193,95,0.663,96,0.679,97,0.663,98,0.679,99,0.663,100,0.679,101,0.663,102,0.679,103,0.663,104,0.663,105,1.209,106,0.663,107,1.344,108,0.679,109,1.203,110,1.003,111,0.663,112,0.663,113,0.679,114,0.663,115,0.679,116,0.663,117,0.679,118,0.663,119,0.679,120,0.663,121,0.634,122,0.663,123,0.679,124,0.663,125,0.679,126,0.679,127,0.663,128,0.679,129,0.663,130,0.679,131,0.663,132,0.679,133,0.663,134,0.663,135,0.679,136,1.289,137,0.916,138,0.679,139,0.663,140,0.679,141,0.663,142,0.679,143,0.663,144,0.679,145,0.663,146,0.679,147,0.679,148,1.26,149,0.663,150,0.679,151,0.663,152,0.679,153,0.679,154,0.679,155,0.005,156,0.005,163,1.931,164,2.807,170,0.427,171,1.315,173,3.1,174,1.441,178,1.175,183,1.778,185,1.098,186,0.443,187,1.05,189,1.495,190,2.079,193,0.815,242,0.511,300,2.067,301,2.081,309,0.869,328,3.357,444,1.379,517,1.379,641,1.151,696,3.1,818,1.703,860,2.518,864,3.338,865,3.475,883,2.992,916,1.596,917,1.899,925,1.459,934,1.548,944,2.917,953,1.763,988,2.702,1072,2.271,1110,1.899,1218,2.807,1555,4.664,1588,4.664,2012,5.298,2057,3.013,2207,4.068,2262,2.557,2265,2.557,2298,3.013,2328,5.298,2342,3.41,2343,8.025,2344,5.996,2345,4.454,2346,4.454,2347,7.068,2348,5.996,2349,7.399,2350,5.853,2351,4.839,2352,5.04,2353,6.624,2354,3.41,2355,5.04,2356,6.624,2357,3.41,2358,3.41,2359,3.41,2360,5.996,2361,5.996,2362,5.996,2363,5.996,2364,5.996,2365,3.41,2366,3.41,2367,5.04,2368,3.41,2369,4.454,2370,3.41,2371,5.04,2372,3.41,2373,4.454,2374,3.41,2375,3.41,2376,3.41,2377,3.41,2378,2.557,2379,3.013,2380,3.013,2381,3.013,2382,3.41,2383,3.013,2384,3.41,2385,4.454,2386,3.41,2387,3.41,2388,3.41,2389,3.41,2390,3.013,2391,3.41,2392,5.04]],["title/components/ProjectsComponent-1.html",[0,0.14,107,0.703,763,2.463]],["body/components/ProjectsComponent-1.html",[0,0.25,1,1.397,2,1.062,3,0.067,4,0.051,5,0.808,6,0.808,7,0.808,8,0.059,10,2.857,12,0.808,13,1.874,14,1.874,15,0.79,17,1.112,18,1.038,19,1.137,20,2.407,24,2.535,25,1.137,27,1.19,29,0.474,30,0.009,31,1.336,32,0.436,34,1.404,35,1.404,38,0.067,39,0.436,43,0.808,44,1.137,45,1.137,46,0.808,47,1.429,48,0.808,49,0.488,50,0.808,51,0.79,52,0.808,53,0.79,54,0.808,55,0.79,56,0.808,57,0.79,58,0.808,59,0.79,60,0.808,61,0.79,62,0.737,63,1.137,64,0.79,65,1.137,66,0.79,67,0.808,68,0.79,69,0.808,70,0.79,71,0.808,72,0.79,73,0.772,74,1.137,75,0.79,76,0.808,77,0.79,78,0.808,79,0.79,80,0.808,81,0.79,82,0.808,83,0.79,84,0.808,85,0.79,86,0.808,87,0.79,88,0.808,89,1.137,90,0.79,91,0.808,92,0.79,93,0.704,94,1.317,95,0.79,96,0.808,97,0.79,98,0.808,99,0.79,100,0.808,101,0.79,102,0.808,103,0.79,104,0.79,105,1.044,106,0.79,107,1.44,108,0.808,109,1.466,110,1.137,111,1.397,112,0.79,113,0.808,114,0.79,115,0.808,116,0.79,117,0.808,118,0.79,119,0.808,120,0.79,121,0.754,122,0.79,123,0.808,124,0.79,125,0.808,126,0.808,127,0.79,128,0.808,129,0.79,130,0.808,131,0.79,132,0.808,133,0.79,134,0.79,135,0.808,136,0.79,137,1.038,138,0.808,139,0.79,140,0.808,141,0.79,142,0.808,143,0.79,144,0.808,145,0.79,146,0.808,147,0.808,148,0.772,149,0.79,150,0.808,151,0.79,152,0.808,153,0.808,154,0.808,155,0.005,156,0.005,163,2.19,164,3.096,170,0.289,171,1.491,173,3.361,178,0.946,183,1.71,185,0.884,186,0.3,187,0.845,189,1.012,190,1.794,242,0.58,300,2.006,301,2.002,309,1.035,355,1.787,444,1.641,517,1.641,641,1.369,692,4.612,763,2.703,883,3.175,925,1.736,944,2.517,1047,2.098,1110,2.259,1543,4.658,1547,5.339,1549,5.675,1555,4.024,1557,5.056,1559,4.612,1563,4.285,1571,2.857,1572,2.175,1573,2.857,1574,2.259,1575,2.857,1576,2.259,1577,2.857,1582,3.043,1583,3.043,1586,3.043,1588,4.024,2206,3.043,2260,5.05,2262,3.043,2263,6.345,2264,3.586,2265,3.043,2266,3.586,2267,5.05,2345,5.05,2346,5.05,2393,4.058,2394,4.058,2395,4.058,2396,7.181,2397,4.058,2398,4.058,2399,4.058,2400,4.058,2401,3.586,2402,3.275]],["title/components/ProjectsTableComponent.html",[0,0.168,111,0.864]],["body/components/ProjectsTableComponent.html",[0,0.181,1,0.464,2,0.711,3,0.04,4,0.03,5,0.474,6,0.474,7,0.474,8,0.035,12,0.474,13,1.818,14,1.818,15,0.464,17,0.744,18,1.421,19,0.761,20,1.741,21,2.048,23,2.313,24,1.834,25,0.761,27,0.796,29,0.466,30,0.009,31,0.785,32,0.256,34,0.824,35,0.824,36,1.019,37,1.152,38,0.04,39,0.256,41,3.492,43,0.474,44,0.761,45,0.761,46,0.474,47,1.09,48,0.474,49,0.558,50,0.474,51,0.464,52,0.474,53,0.464,54,0.474,55,0.464,56,0.474,57,0.464,58,0.474,59,0.464,60,0.474,61,0.464,62,0.433,63,0.761,64,0.464,65,0.761,66,0.464,67,0.474,68,0.464,69,0.474,70,0.464,71,0.474,72,0.464,73,0.453,74,0.761,75,0.464,76,0.474,77,0.464,78,0.474,79,0.464,80,0.474,81,0.464,82,0.474,83,0.464,84,0.474,85,0.464,86,0.474,87,0.464,88,0.474,89,0.761,90,0.464,91,0.474,92,0.464,93,0.413,94,0.953,95,0.464,96,0.474,97,0.464,98,0.474,99,0.464,100,0.474,101,0.464,102,0.474,103,0.464,104,0.464,105,1.011,106,0.464,107,0.727,108,0.474,109,1.557,110,0.761,111,1.066,112,0.464,113,0.474,114,0.464,115,0.474,116,0.464,117,0.474,118,0.464,119,0.474,120,0.464,121,0.443,122,0.464,123,0.474,124,0.464,125,0.474,126,0.474,127,0.464,128,0.474,129,0.464,130,0.474,131,0.464,132,0.474,133,0.464,134,0.464,135,0.474,136,0.464,137,0.694,138,0.474,139,0.464,140,0.474,141,0.464,142,0.474,143,0.464,144,0.474,145,0.464,146,0.474,147,0.474,148,0.453,149,0.464,150,0.474,151,0.464,152,0.474,153,0.474,154,0.474,155,0.004,156,0.004,163,1.465,165,2.665,170,0.17,171,0.997,172,3.05,174,2.266,178,0.891,180,3.25,183,1.866,185,1.193,186,0.599,187,1.333,189,1.743,190,2.194,193,1.222,210,1.2,240,0.845,242,0.388,272,2.999,284,3.108,295,2.564,300,2.151,301,1.994,309,0.608,373,1.115,382,0.845,383,0.845,384,1.356,385,0.889,386,0.867,387,0.867,414,0.748,437,1.922,444,0.964,517,0.964,524,1.229,533,1.977,606,1.277,636,3.605,639,1.19,641,0.804,643,1.232,657,1.232,659,1.977,662,1.977,696,2.475,707,2.128,774,1.381,818,1.19,859,2.566,860,1.91,861,3.866,863,2.566,864,2.665,865,2.774,870,2.774,872,4.23,879,2.936,880,2.866,883,2.72,884,3.872,892,1.232,897,2.866,899,2.896,900,3.872,902,2.566,907,2.665,908,2.049,909,3.378,914,1.277,915,1.441,916,1.115,917,1.327,918,1.277,919,1.441,920,2.312,921,1.441,925,1.019,933,1.441,934,2.721,935,1.327,936,2.216,937,1.441,938,1.441,940,2.106,944,1.049,956,2.128,957,2.128,958,2.128,961,2.049,962,2.049,969,2.832,970,1.787,986,1.587,1025,1.587,1169,2.312,1218,3.463,1453,3.589,1455,3.032,1497,1.509,1498,1.787,1500,1.509,1522,1.587,1523,1.509,1524,1.509,1673,2.106,1674,3.863,1675,5.299,1676,4.23,1677,3.863,1678,3.863,1679,3.378,1680,3.378,1681,4.23,1687,3.378,1692,2.774,1693,4.23,1694,4.23,1696,4.23,1698,4.23,1703,2.106,1704,2.106,1705,2.106,1708,3.378,1709,4.84,1710,2.106,1720,3.378,1722,2.106,1727,2.106,1730,1.923,1731,1.923,1732,2.106,1734,1.787,1741,2.106,1746,1.787,1748,2.106,1750,2.106,2160,3.898,2170,1.923,2177,3.863,2205,1.787,2209,4.735,2261,1.787,2262,1.787,2265,1.787,2281,5.656,2291,5.943,2302,2.106,2402,6.946,2403,8.607,2404,4.787,2405,4.787,2406,4.787,2407,4.787,2408,4.787,2409,3.823,2410,5.478,2411,5.478,2412,5.478,2413,4.787,2414,2.383,2415,2.383,2416,2.383,2417,2.383,2418,3.823,2419,2.383,2420,2.383,2421,2.383,2422,2.383,2423,2.383,2424,2.383,2425,2.383,2426,2.383,2427,2.383,2428,2.383,2429,3.823,2430,2.383,2431,2.383,2432,2.383,2433,3.823,2434,2.383,2435,2.383,2436,2.383,2437,2.106,2438,2.383,2439,2.383,2440,2.383,2441,2.383,2442,2.383,2443,2.383,2444,3.823,2445,2.383,2446,2.383,2447,4.787,2448,2.383,2449,3.823,2450,2.383,2451,2.383,2452,2.383,2453,2.383,2454,2.383,2455,2.383,2456,2.383,2457,2.106,2458,3.823,2459,3.823,2460,3.823,2461,3.378,2462,3.823,2463,3.823,2464,3.823,2465,3.823,2466,3.823,2467,3.823,2468,5.478,2469,5.478,2470,3.823]],["title/components/QueriesComponent.html",[0,0.168,112,0.864]],["body/components/QueriesComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,1.523,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,2471,4.988,2472,7.827,2473,6.579,2474,6.579]],["title/components/RegisterComponent.html",[0,0.168,114,0.864]],["body/components/RegisterComponent.html",[0,0.2,1,0.543,2,0.805,3,0.046,4,0.035,5,0.555,6,0.555,7,0.555,8,0.041,12,0.555,13,1.837,14,1.837,15,0.543,17,0.842,18,0.786,19,0.862,20,1.93,21,2.269,22,3.074,24,2.033,25,0.862,27,0.901,29,0.464,30,0.009,31,0.919,32,0.3,33,1.266,34,0.965,35,0.965,36,1.193,38,0.046,39,0.3,41,3.931,43,0.555,44,0.862,45,0.862,46,0.555,47,1.19,48,0.555,49,0.441,50,0.555,51,0.543,52,0.555,53,0.543,54,0.555,55,0.543,56,0.555,57,0.543,58,0.555,59,0.543,60,0.555,61,0.543,62,0.507,63,0.862,64,0.543,65,0.862,66,0.543,67,0.555,68,0.543,69,0.555,70,0.543,71,0.555,72,0.543,73,0.531,74,0.862,75,0.543,76,0.555,77,0.543,78,0.555,79,0.543,80,0.555,81,0.543,82,0.555,83,0.543,84,0.555,85,0.543,86,0.555,87,0.543,88,0.555,89,0.862,90,0.543,91,0.555,92,0.543,93,0.484,94,1.056,95,0.543,96,0.555,97,0.543,98,0.555,99,0.543,100,0.555,101,0.543,102,0.555,103,0.543,104,0.543,105,0.837,106,0.543,107,0.823,108,0.555,109,0.786,110,0.862,111,0.543,112,0.543,113,0.555,114,1.163,115,0.555,116,0.543,117,0.555,118,0.543,119,0.555,120,0.543,121,0.519,122,0.543,123,0.555,124,0.543,125,0.555,126,0.555,127,0.543,128,0.555,129,0.543,130,0.555,131,0.543,132,0.555,133,0.543,134,0.543,135,0.555,136,0.543,137,0.786,138,0.555,139,0.543,140,0.555,141,0.543,142,0.555,143,0.543,144,0.555,145,0.543,146,0.555,147,0.555,148,0.531,149,0.543,150,0.555,151,0.543,152,0.555,153,0.555,154,0.555,155,0.004,156,0.004,163,1.659,164,2.483,165,2.953,170,0.199,171,1.129,172,3.329,173,2.798,174,2.428,178,1.009,180,3.453,183,1.769,185,0.943,186,0.528,187,1.538,189,1.613,190,2.15,193,0.858,210,0.876,240,0.989,242,0.439,272,1.16,284,1.659,300,1.482,301,1.353,309,0.711,345,0.989,373,1.306,382,0.989,383,0.989,384,1.535,385,1.041,386,1.015,387,1.015,437,2.168,444,1.128,500,1.687,501,2.251,506,4.526,517,1.128,518,3.205,520,2.65,524,1.705,530,1.964,533,1.442,585,5.031,587,5.135,598,1.964,604,2.883,606,1.495,616,1.617,641,0.941,696,2.743,818,1.393,859,2.844,860,2.162,861,4.065,863,2.844,864,2.953,865,3.074,869,3.533,870,3.074,879,3.205,883,2.889,884,4.142,885,3.695,899,2.619,900,4.688,902,3.83,907,2.953,908,1.495,914,1.495,915,1.687,916,1.306,917,1.553,918,1.495,919,1.687,920,2.619,921,1.687,925,1.193,933,1.687,934,1.266,935,1.553,936,1.617,937,1.687,938,1.687,944,1.907,947,1.858,948,1.858,949,1.858,951,1.767,956,1.553,957,1.553,958,1.553,961,1.495,962,2.321,969,2.238,1021,3.977,1022,3.977,1023,3.735,1024,3.246,1025,1.858,1027,3.246,1034,3.246,1036,3.048,1041,3.246,1043,1.964,1045,1.767,1047,1.442,1048,1.767,1049,2.092,1050,2.092,1051,2.092,1052,1.858,1053,1.964,1054,1.964,1055,1.964,1066,1.964,1068,3.246,1074,2.092,1075,3.246,1085,2.844,1247,4.281,1248,3.977,1251,4.687,1262,3.246,1263,3.493,1264,3.493,1265,3.533,1266,3.533,1271,2.251,1272,2.092,1273,2.465,1275,2.251,1276,2.251,1286,2.465,1287,2.465,1288,2.465,1289,2.465,1290,2.465,1426,2.092,1427,2.251,1435,2.465,2475,2.79,2476,4.329,2477,4.329,2478,4.329,2479,2.79,2480,2.79,2481,2.79,2482,2.79,2483,2.79,2484,2.79,2485,2.79,2486,2.79,2487,2.79,2488,2.79,2489,2.79,2490,2.79,2491,2.79,2492,2.79,2493,2.79,2494,2.79,2495,2.79,2496,4.329,2497,4.329,2498,4.329,2499,4.329,2500,4.329,2501,4.329,2502,4.329,2503,4.329,2504,4.329,2505,4.329,2506,4.329,2507,4.329,2508,4.329,2509,4.329,2510,4.329]],["title/interfaces/RegisterRequestDto.html",[231,0.387,604,2.958]],["body/interfaces/RegisterRequestDto.html",[3,0.111,4,0.084,8,0.098,30,0.009,38,0.111,155,0.007,156,0.007,170,0.477,186,0.655,193,1.517,231,0.584,233,1.595,242,0.802,518,4.661,520,4.344,604,5.267,684,4.049,1085,4.661,1265,5.792,1266,5.792,2511,6.694]],["title/components/ReleasesComponent.html",[0,0.168,116,0.864]],["body/components/ReleasesComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,1.523,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,2316,6.916,2512,4.988,2513,6.579,2514,6.579]],["title/components/ReplaysComponent.html",[0,0.168,118,0.864]],["body/components/ReplaysComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,1.523,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,2515,4.988,2516,7.827,2517,6.579,2518,6.579]],["title/components/ResetPasswordComponent.html",[0,0.168,120,0.864]],["body/components/ResetPasswordComponent.html",[0,0.22,1,0.632,2,0.903,3,0.054,4,0.041,5,0.646,6,0.646,7,0.646,8,0.047,12,0.646,13,1.853,14,1.853,15,0.632,17,0.945,18,0.883,19,0.967,20,2.119,21,2.491,22,3.375,24,2.232,25,0.967,27,1.012,29,0.46,30,0.009,31,1.069,32,0.349,33,1.473,34,1.123,35,1.123,36,1.389,38,0.054,39,0.349,41,3.653,43,0.646,44,0.967,45,0.967,46,0.646,47,1.287,48,0.646,49,0.43,50,0.646,51,0.632,52,0.646,53,0.632,54,0.646,55,0.632,56,0.646,57,0.632,58,0.646,59,0.632,60,0.646,61,0.632,62,0.59,63,0.967,64,0.632,65,0.967,66,0.632,67,0.646,68,0.632,69,0.646,70,0.632,71,0.646,72,0.632,73,0.617,74,0.967,75,0.632,76,0.646,77,0.632,78,0.646,79,0.632,80,0.646,81,0.632,82,0.646,83,0.632,84,0.646,85,0.632,86,0.646,87,0.632,88,0.646,89,0.967,90,0.632,91,0.646,92,0.632,93,0.563,94,1.159,95,0.632,96,0.646,97,0.632,98,0.646,99,0.632,100,0.646,101,0.632,102,0.646,103,0.632,104,0.632,105,0.919,106,0.632,107,0.924,108,0.646,109,0.883,110,0.967,111,0.632,112,0.632,113,0.646,114,0.632,115,0.646,116,0.632,117,0.646,118,0.632,119,0.646,120,1.258,121,1.4,122,0.632,123,0.646,124,0.632,125,0.646,126,0.646,127,0.632,128,0.646,129,0.632,130,0.646,131,0.632,132,0.646,133,0.632,134,0.632,135,0.646,136,0.632,137,0.883,138,0.646,139,0.632,140,0.646,141,0.632,142,0.646,143,0.632,144,0.646,145,0.632,146,0.646,147,0.646,148,0.617,149,0.632,150,0.646,151,0.632,152,0.646,153,0.646,154,0.646,155,0.005,156,0.005,163,1.862,164,2.726,170,0.231,171,1.267,173,3.026,174,2.439,178,1.132,180,3.64,183,1.757,185,0.707,186,0.511,187,1.569,189,1.452,190,1.828,193,0.786,210,1.019,242,0.493,272,2.02,300,1.357,301,1.239,309,0.828,345,1.151,437,1.665,444,1.313,500,1.964,503,5.448,520,3.23,524,1.562,641,1.095,657,1.678,696,3.011,707,2.706,818,1.622,859,3.122,860,2.427,861,4.246,863,3.122,865,3.375,869,3.879,870,3.375,879,3.466,883,3.046,884,4.395,885,3.895,899,2.939,900,2.939,902,4.038,915,1.964,916,1.519,918,1.74,925,1.389,944,2.565,947,2.162,948,2.162,949,2.162,951,2.056,956,2.706,957,2.706,958,2.706,961,2.605,962,3.122,1016,2.868,1017,4.294,1018,4.294,1020,5.146,1023,4.1,1025,2.162,1033,2.868,1036,3.421,1038,2.868,1039,2.868,1042,2.868,1043,2.286,1044,5.146,1045,2.056,1047,1.678,1048,2.056,1052,2.162,1053,2.286,1054,2.286,1055,2.286,1058,2.868,1061,2.868,1062,2.868,1063,2.868,1064,2.868,1066,2.286,1067,2.868,1072,2.162,1076,4.294,1082,4.294,1248,4.367,1262,3.643,1263,3.921,1272,2.434,1275,2.62,1276,2.62,1280,2.62,1512,2.162,2519,8.188,2520,8.188,2521,5.824,2522,5.824,2523,4.859,2524,3.246,2525,3.246,2526,3.246,2527,3.246,2528,3.246,2529,3.246,2530,3.246,2531,8.535,2532,3.246,2533,3.246,2534,4.859,2535,5.146,2536,3.246,2537,4.859,2538,4.859,2539,4.859,2540,4.859]],["title/interfaces/ResetPasswordRequestDto.html",[231,0.387,608,3.585]],["body/interfaces/ResetPasswordRequestDto.html",[3,0.116,4,0.088,8,0.102,30,0.009,38,0.116,155,0.008,156,0.008,170,0.496,186,0.598,193,1.467,231,0.608,233,1.66,242,0.821,520,3.48,608,6.532,684,4.214,1512,5.866,2535,7.783,2541,6.966]],["title/components/ResourcesComponent.html",[0,0.168,122,0.864]],["body/components/ResourcesComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,1.523,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,2542,4.988,2543,7.827,2544,6.579,2545,6.579]],["title/interfaces/Role.html",[231,0.387,1244,2.381]],["body/interfaces/Role.html",[3,0.105,4,0.08,8,0.092,29,0.412,30,0.009,38,0.127,49,0.63,155,0.007,156,0.007,170,0.451,186,0.663,193,1.496,231,0.667,233,1.507,242,0.776,269,4.006,284,3.27,345,2.243,437,1.808,518,3.39,1008,3.97,1085,3.39,1131,4.742,1244,4.575,1265,4.212,1266,4.212,1312,6.008,1572,4.097,1574,4.256,1576,3.521,1799,5.731,2003,3.665,2006,3.665,2546,5.588,2547,6.887,2548,6.398,2549,5.588,2550,5.588,2551,5.104,2552,5.104,2553,5.104]],["title/injectables/RoleEffects.html",[307,0.968,470,3.585]],["body/injectables/RoleEffects.html",[3,0.101,4,0.077,8,0.089,29,0.466,30,0.009,32,0.656,38,0.101,39,0.656,49,0.451,155,0.007,156,0.007,170,0.435,174,2.139,178,1.744,183,1.63,185,1.33,186,0.451,187,1.272,242,0.759,300,1.706,301,1.557,307,1.63,309,1.557,470,6.039,493,2.28,509,4.965,511,4.894,512,4.527,517,2.47,522,4.527,524,2.406,541,4.894,570,3.695,571,3.54,572,3.695,969,3.869,1686,6.039,1737,6.805,2112,6.039,2554,6.108,2555,6.108,2556,7.106,2557,6.108,2558,7.483,2559,7.483,2560,7.149,2561,7.483,2562,6.108,2563,6.108,2564,5.397,2565,5.397]],["title/injectables/RoleService.html",[307,0.968,2556,3.585]],["body/injectables/RoleService.html",[3,0.109,4,0.082,8,0.096,29,0.476,30,0.009,32,0.704,38,0.109,39,0.704,49,0.484,155,0.007,156,0.007,166,2.888,170,0.467,171,2.037,178,1.528,183,1.701,185,1.428,186,0.484,187,1.365,189,1.634,307,1.701,309,1.672,354,3.069,355,2.888,375,4.168,414,2.058,493,2.447,588,3.966,589,5.006,591,4.349,611,3.966,612,4.527,625,3.966,645,4.367,1244,3.515,2556,6.303,2566,6.556,2567,8.637,2568,6.556,2569,6.556,2570,6.556]],["title/interfaces/RoleState.html",[231,0.387,451,3.585]],["body/interfaces/RoleState.html",[3,0.098,4,0.074,8,0.086,29,0.449,30,0.009,38,0.132,93,1.026,155,0.007,156,0.007,170,0.421,186,0.589,210,2.303,231,0.516,233,1.409,240,2.097,242,0.744,257,3.058,315,4.089,382,2.097,383,2.097,384,2.097,385,2.207,386,2.151,387,2.151,437,2.579,451,6.436,472,5.225,524,2.92,626,4.163,636,4.798,639,4.165,640,4.437,641,1.996,642,3.577,643,3.058,645,3.938,648,4.437,649,3.577,650,4.824,651,3.577,653,3.577,657,3.058,659,3.058,660,3.577,662,3.058,663,4.647,862,2.768,1218,2.768,1244,4.47,1686,7.05,1737,4.772,2560,5.225,2564,5.225,2565,5.225,2571,5.913,2572,5.913,2573,5.913,2574,5.913,2575,5.913]],["title/components/ScreenLoadsComponent.html",[0,0.168,124,0.864]],["body/components/ScreenLoadsComponent.html",[0,0.277,1,0.96,2,1.214,3,0.082,4,0.062,5,0.982,6,0.982,7,0.982,8,0.072,12,0.982,13,1.888,14,1.888,15,0.96,17,1.271,18,1.186,19,0.982,25,1.3,27,1.36,29,0.266,30,0.008,32,0.53,38,0.082,39,0.53,43,0.982,44,1.3,45,1.3,46,0.982,47,1.551,48,0.982,49,0.482,50,0.982,51,0.96,52,0.982,53,0.96,54,0.982,55,0.96,56,0.982,57,0.96,58,0.982,59,0.96,60,0.982,61,0.96,62,0.896,63,1.3,64,0.96,65,1.3,66,0.96,67,0.982,68,0.96,69,0.982,70,0.96,71,0.982,72,0.96,73,0.938,74,1.3,75,0.96,76,0.982,77,0.96,78,0.982,79,0.96,80,0.982,81,0.96,82,0.982,83,0.96,84,0.982,85,0.96,86,0.982,87,0.96,88,0.982,89,1.3,90,0.96,91,0.982,92,0.96,93,0.856,94,1.457,95,0.96,96,0.982,97,0.96,98,0.982,99,0.96,100,0.982,101,0.96,102,0.982,103,0.96,104,0.96,105,1.156,106,0.96,107,1.242,108,0.982,109,1.186,110,1.3,111,0.96,112,0.96,113,0.982,114,0.96,115,0.982,116,0.96,117,0.982,118,0.96,119,0.982,120,0.96,121,0.917,122,0.96,123,0.982,124,1.516,125,1.737,126,0.982,127,0.96,128,0.982,129,0.96,130,0.982,131,0.96,132,0.982,133,0.96,134,0.96,135,0.982,136,0.96,137,1.186,138,0.982,139,0.96,140,0.982,141,0.96,142,0.982,143,0.96,144,0.982,145,0.96,146,0.982,147,0.982,148,0.938,149,0.96,150,0.982,151,0.96,152,0.982,153,0.982,154,0.982,155,0.006,156,0.006,161,2.376,2576,4.933,2577,4.933,2578,4.933,2579,6.886,2580,6.53,2581,6.53]],["title/components/SdksComponent.html",[0,0.168,127,0.864]],["body/components/SdksComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,1.523,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,2582,4.988,2583,7.827,2584,6.579,2585,6.579]],["title/components/SecurityComponent.html",[0,0.168,129,0.864]],["body/components/SecurityComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,1.523,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,2586,4.988,2587,7.827,2588,6.579,2589,6.579]],["title/injectables/SessionStorage.html",[307,0.968,2590,3.925]],["body/injectables/SessionStorage.html",[3,0.09,4,0.068,8,0.079,29,0.412,30,0.009,31,1.778,32,0.58,38,0.09,39,0.58,49,0.596,155,0.007,156,0.007,163,2.069,166,2.378,170,0.493,171,1.806,174,2.186,178,1.782,183,1.915,185,1.757,186,0.616,187,1.68,189,2.08,190,2.679,193,1.488,198,3.801,210,1.694,242,0.703,297,3.898,301,2.057,307,1.509,312,3.419,354,2.527,358,5.163,365,2.309,414,2.4,437,2.306,493,2.015,709,4.613,986,3.595,1333,4.047,1334,5.68,1343,4.357,1345,4.357,1374,6.757,1375,5.589,1376,5.556,1377,5.589,1378,5.589,1379,6.171,1380,6.12,1381,5.589,1382,5.589,1383,4.77,1384,5.589,1385,4.77,1386,5.589,1387,4.77,1388,4.357,1389,4.357,1390,4.77,1391,5.193,1392,4.047,1393,4.77,1394,4.77,1395,4.77,1396,4.77,1397,6.12,1399,4.77,1400,4.77,1401,4.77,1402,4.77,1403,4.77,1404,4.77,2590,6.12,2591,8.88,2592,5.398]],["title/components/SessionsComponent.html",[0,0.168,131,0.864]],["body/components/SessionsComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,1.523,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,2593,4.988,2594,6.916,2595,6.579,2596,6.579]],["title/components/SettingsComponent.html",[0,0.168,133,0.864]],["body/components/SettingsComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,1.523,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,692,6.316,2597,4.988,2598,6.579,2599,6.579]],["title/components/SidebarComponent.html",[0,0.168,134,0.864]],["body/components/SidebarComponent.html",[0,0.19,1,0.5,2,0.754,3,0.043,4,0.032,5,0.511,6,0.511,7,0.511,8,0.037,12,0.511,13,1.827,14,1.827,15,1.211,17,0.789,18,0.914,19,0.808,20,1.83,25,0.808,29,0.357,30,0.009,31,0.846,32,0.276,34,0.888,35,0.888,38,0.043,39,0.794,43,0.511,44,0.808,45,1.506,46,0.511,47,1.137,48,0.511,49,0.422,50,0.511,51,0.5,52,0.511,53,0.5,54,0.511,55,0.5,56,0.511,57,0.5,58,0.511,59,0.5,60,0.511,61,0.5,62,0.467,63,0.808,64,0.5,65,0.808,66,0.5,67,0.511,68,0.5,69,0.511,70,0.5,71,0.511,72,0.5,73,0.488,74,0.808,75,0.5,76,0.511,77,0.5,78,0.511,79,0.5,80,0.511,81,0.5,82,0.511,83,0.5,84,0.511,85,0.5,86,0.511,87,0.5,88,0.511,89,0.808,90,0.5,91,0.511,92,0.5,93,0.445,94,1.001,95,1.112,96,0.511,97,0.5,98,0.511,99,0.5,100,0.511,101,0.5,102,0.511,103,0.5,104,0.5,105,0.794,106,0.5,107,0.772,108,0.511,109,0.737,110,0.808,111,0.5,112,0.5,113,0.511,114,0.5,115,0.511,116,0.5,117,0.511,118,0.5,119,0.511,120,0.5,121,0.477,122,0.5,123,0.511,124,0.5,125,0.511,126,0.511,127,0.5,128,0.511,129,0.5,130,0.511,131,0.5,132,0.511,133,0.5,134,1.112,135,0.511,136,0.5,137,0.737,138,0.511,139,0.5,140,0.511,141,0.5,142,0.511,143,0.5,144,0.511,145,0.5,146,0.511,147,0.511,148,0.488,149,0.5,150,0.511,151,0.5,152,0.511,153,0.511,154,0.511,155,0.004,156,0.004,163,1.555,164,2.354,170,0.183,171,1.928,173,3.096,174,1.633,178,1.541,180,3.899,181,4.299,183,1.441,185,1.245,186,0.511,187,0.845,189,1.011,190,1.274,199,1.71,235,1.553,237,1.553,240,0.911,241,3.042,242,0.671,243,3.457,253,4.387,254,4.475,260,1.71,263,3.457,266,2.857,277,2.259,282,3.941,295,1.202,300,0.717,301,0.655,334,3.182,341,2.702,344,1.808,345,1.784,349,4.19,359,2.857,367,4.19,372,4.19,374,2.57,377,3.35,382,0.911,383,0.911,384,1.439,385,1.514,386,0.934,387,0.934,407,2.702,656,3.585,689,4.059,690,3.541,699,4.19,710,1.925,712,3.585,714,3.541,715,5.049,716,3.771,721,3.042,723,4.611,724,3.274,729,4.877,733,3.274,734,3.274,746,4.059,789,4.611,819,4.023,883,1.641,907,4.115,916,1.202,1091,3.585,1122,5.542,1128,6.26,1129,3.771,1135,3.274,1196,2.269,1200,6.209,1201,7.019,1202,7.138,1220,3.585,1244,2.175,1592,1.925,1692,2.351,1763,3.274,1804,1.71,1835,3.042,1837,3.585,1852,3.585,1873,3.585,1877,3.585,1925,3.585,1926,3.585,2579,2.269,2600,2.568,2601,5.03,2602,4.057,2603,7.391,2604,6.121,2605,4.057,2606,4.057,2607,5.049,2608,5.714,2609,7.18,2610,5.049,2611,5.049,2612,5.03,2613,5.03,2614,5.03,2615,5.03,2616,4.444,2617,6.222,2618,5.03,2619,5.03,2620,5.03,2621,5.03,2622,2.568,2623,4.057,2624,5.049,2625,4.057,2626,2.568,2627,2.568,2628,2.568,2629,3.585,2630,2.568,2631,4.057,2632,2.568,2633,2.568,2634,5.03,2635,2.568,2636,2.568,2637,8.819,2638,2.568,2639,2.568,2640,2.568,2641,3.585,2642,2.568,2643,2.568,2644,2.568,2645,2.568,2646,2.568,2647,4.057,2648,2.568,2649,2.568,2650,2.568,2651,2.568,2652,2.568,2653,2.568,2654,2.568,2655,4.057,2656,2.568,2657,2.568,2658,2.568,2659,2.568,2660,2.568,2661,2.568,2662,2.568,2663,2.568,2664,2.568,2665,2.568,2666,2.568,2667,2.568,2668,2.568,2669,2.568,2670,2.568,2671,2.568,2672,3.585,2673,2.568,2674,2.568,2675,2.269,2676,2.568,2677,2.568,2678,2.568,2679,2.568,2680,2.568,2681,2.568,2682,2.568,2683,2.568,2684,2.568,2685,2.568,2686,2.568,2687,2.568,2688,2.568,2689,2.568,2690,2.568,2691,2.568,2692,2.568,2693,2.568,2694,2.568,2695,2.568,2696,2.568,2697,2.568,2698,2.568,2699,2.568,2700,2.568,2701,2.568,2702,2.568,2703,2.568,2704,2.568,2705,2.568,2706,2.568,2707,2.568,2708,2.568,2709,2.568,2710,2.568,2711,2.568,2712,2.568,2713,2.568,2714,2.568,2715,2.568,2716,2.568]],["title/components/SingleProjectCardComponent.html",[0,0.168,136,0.864]],["body/components/SingleProjectCardComponent.html",[0,0.199,1,0.535,2,0.796,3,0.046,4,0.035,5,0.547,6,0.547,7,0.547,8,0.04,12,0.547,13,1.835,14,1.835,15,0.535,17,0.833,18,1.078,19,0.852,20,1.912,21,2.249,22,3.047,23,2.54,24,2.014,25,0.852,27,0.891,29,0.436,30,0.009,31,0.906,32,0.295,33,1.248,34,0.951,35,0.951,36,1.176,37,1.329,38,0.046,39,0.295,41,3.4,43,1.046,44,0.852,45,0.852,46,0.547,47,1.181,48,0.547,49,0.475,50,0.547,51,0.535,52,0.547,53,0.535,54,0.547,55,0.535,56,0.547,57,0.535,58,0.547,59,0.535,60,0.547,61,0.535,62,0.5,63,0.852,64,0.535,65,0.852,66,0.535,67,0.547,68,0.535,69,0.547,70,0.535,71,0.547,72,0.535,73,0.523,74,0.852,75,0.535,76,0.547,77,0.535,78,0.547,79,0.535,80,0.547,81,0.535,82,0.547,83,0.535,84,0.547,85,0.535,86,0.547,87,0.535,88,0.547,89,0.852,90,0.535,91,0.547,92,0.535,93,0.477,94,1.046,95,0.535,96,0.547,97,0.535,98,0.547,99,0.535,100,0.547,101,0.535,102,0.547,103,0.535,104,0.535,105,1.428,106,0.535,107,0.814,108,0.547,109,0.778,110,0.852,111,0.535,112,0.535,113,0.547,114,0.535,115,0.547,116,0.535,117,0.547,118,0.535,119,0.547,120,0.535,121,0.511,122,0.535,123,0.547,124,0.535,125,0.547,126,0.547,127,0.535,128,0.547,129,0.535,130,0.547,131,0.535,132,0.547,133,0.535,134,0.535,135,0.547,136,1.154,137,1.335,138,0.547,139,0.535,140,0.547,141,0.535,142,0.547,143,0.535,144,0.547,145,0.535,146,0.547,147,0.547,148,0.523,149,0.535,150,0.547,151,0.535,152,0.547,153,0.547,154,0.547,155,0.004,156,0.004,163,1.64,165,2.927,170,0.375,171,1.117,172,3.303,174,2.158,178,0.998,183,1.682,185,1.145,186,0.581,187,1.48,189,1.479,190,1.862,193,0.692,242,0.434,272,1.78,284,1.64,295,3.187,297,3.552,300,1.196,301,1.092,304,1.742,328,2.851,373,1.287,384,0.975,414,0.863,524,0.884,701,3.783,707,2.384,763,4.895,860,2.139,870,4.557,885,3.675,953,3.991,969,3.904,1008,3.552,1128,4.177,1130,4.788,1455,3.33,1497,1.742,1692,3.438,2208,2.43,2209,4.793,2243,2.43,2247,2.43,2261,2.062,2305,5.105,2307,2.219,2383,6.948,2437,2.43,2457,2.43,2461,3.783,2594,3.783,2675,5.242,2717,7.863,2718,2.75,2719,7.551,2720,4.281,2721,5.257,2722,5.257,2723,5.257,2724,4.281,2725,4.281,2726,5.257,2727,5.257,2728,5.257,2729,4.281,2730,5.933,2731,4.281,2732,4.281,2733,2.75,2734,4.281,2735,5.257,2736,2.75,2737,2.75,2738,2.75,2739,2.75,2740,4.281,2741,2.75,2742,2.75,2743,4.281,2744,4.281,2745,2.75,2746,2.75,2747,2.75,2748,2.75,2749,2.75,2750,2.75,2751,2.75,2752,2.75,2753,4.281,2754,2.75,2755,2.75,2756,2.75,2757,2.75,2758,5.257,2759,2.75,2760,2.75,2761,2.75,2762,2.75,2763,2.75,2764,2.75,2765,2.43,2766,4.281,2767,4.281,2768,2.75,2769,2.75,2770,2.75,2771,5.257,2772,4.645,2773,5.933,2774,2.75,2775,2.75,2776,2.75,2777,2.75,2778,4.281,2779,4.281,2780,4.281,2781,4.281,2782,4.281,2783,4.281,2784,4.281,2785,4.281,2786,6.495,2787,7.987,2788,4.281,2789,4.281,2790,4.281,2791,4.281,2792,4.281,2793,4.281,2794,4.281]],["title/components/SingleTeamComponent.html",[0,0.168,139,0.864]],["body/components/SingleTeamComponent.html",[0,0.168,1,1.002,2,0.652,3,0.058,4,0.027,5,0.427,6,0.427,7,0.427,8,0.031,10,1.51,12,0.427,13,1.803,14,1.803,15,0.417,17,0.683,18,0.809,19,0.699,20,1.621,21,1.906,23,2.153,24,1.707,25,0.699,27,0.731,29,0.469,30,0.009,31,0.706,32,0.23,33,0.973,34,0.742,35,0.742,36,0.917,37,1.036,38,0.036,39,0.23,41,3.293,43,0.427,44,0.699,45,0.699,46,0.427,47,1.025,48,0.427,49,0.475,50,0.427,51,0.417,52,0.427,53,0.417,54,0.427,55,0.417,56,0.427,57,0.417,58,0.427,59,0.417,60,0.427,61,0.417,62,0.39,63,0.699,64,0.417,65,0.699,66,0.417,67,0.427,68,0.417,69,0.427,70,0.417,71,0.427,72,0.417,73,0.408,74,0.699,75,0.417,76,0.427,77,0.417,78,0.427,79,0.417,80,0.427,81,0.417,82,0.427,83,0.417,84,0.427,85,0.417,86,0.427,87,1.002,88,0.427,89,0.699,90,0.417,91,0.427,92,1.002,93,1.058,94,0.887,95,0.417,96,0.427,97,0.417,98,0.427,99,1.002,100,0.427,101,0.417,102,0.427,103,0.417,104,0.417,105,0.963,106,1.002,107,0.668,108,0.427,109,1.169,110,0.699,111,1.002,112,0.417,113,0.427,114,0.417,115,0.427,116,0.417,117,0.427,118,0.417,119,0.427,120,0.417,121,0.399,122,0.417,123,0.427,124,0.417,125,0.427,126,0.427,127,0.417,128,0.427,129,0.417,130,0.427,131,0.417,132,0.427,133,0.417,134,0.417,135,0.427,136,0.417,137,1.523,138,0.427,139,1.002,140,0.427,141,0.417,142,0.427,143,0.417,144,0.427,145,0.417,146,0.427,147,0.427,148,0.408,149,0.417,150,0.427,151,0.417,152,0.427,153,0.427,154,0.427,155,0.003,156,0.003,163,1.345,164,2.085,170,0.153,171,0.916,173,2.41,174,2.265,178,0.818,180,3.111,183,1.862,185,1.237,186,0.528,187,1.34,189,1.675,190,2.182,193,1.23,210,0.673,240,1.245,242,0.356,272,1.852,284,1.973,295,2.41,300,2.187,301,2.096,309,0.547,345,1.58,373,1.004,382,1.245,383,1.245,384,1.826,385,1.31,386,1.277,387,1.277,414,0.673,437,1.84,444,0.867,483,6.484,517,0.867,524,1.655,533,1.815,606,1.15,636,3.044,639,1.071,641,0.724,643,1.109,659,1.109,662,1.815,678,1.51,707,1.954,766,4.155,774,1.243,859,2.388,860,1.753,861,3.727,863,2.388,864,2.481,871,3.998,874,3.596,875,3.596,877,2.833,879,2.76,880,2.632,883,2.466,885,3.328,890,2.833,892,2.936,897,2.632,902,2.388,907,2.481,908,1.15,912,2.833,914,1.15,916,1.004,917,1.194,918,1.15,919,1.297,920,2.123,921,1.297,925,0.917,932,1.731,933,1.297,934,1.593,935,1.954,936,1.243,937,1.297,938,1.297,939,1.731,944,2.501,956,1.954,957,1.954,958,1.954,961,1.882,962,2.388,964,2.833,969,2.662,970,1.608,974,1.731,977,2.833,988,3.927,1047,1.109,1072,3.782,1110,1.194,1129,3.341,1169,2.123,1200,1.51,1201,2.632,1218,1.643,1240,3.86,1450,1.895,1459,3.596,1500,1.358,1501,1.731,1522,1.428,1523,1.358,1524,1.358,1532,2.833,1543,3.137,1548,3.341,1549,4.258,1555,3.625,1557,4.293,1561,3.86,1563,2.632,1571,1.51,1572,1.15,1573,1.51,1574,1.194,1575,1.51,1576,1.194,1577,1.51,1582,1.608,1583,1.608,1584,1.895,1585,1.731,1586,2.632,1588,4.293,1674,5.611,1678,3.596,1730,1.731,1734,1.608,1746,1.608,1756,1.895,1757,1.731,1758,1.895,1759,1.895,1761,1.895,1763,1.731,1764,1.895,1765,1.731,1766,1.895,1767,1.895,1768,3.102,1769,1.895,1771,1.895,1992,1.895,2008,3.937,2009,3.937,2015,3.937,2053,1.895,2054,1.895,2249,1.895,2251,3.937,2261,1.608,2274,3.102,2309,4.879,2401,1.895,2402,1.731,2795,8.585,2796,2.145,2797,4.455,2798,4.455,2799,3.51,2800,3.51,2801,5.149,2802,4.455,2803,4.455,2804,4.455,2805,4.455,2806,4.455,2807,3.86,2808,5.149,2809,3.51,2810,3.51,2811,4.532,2812,3.51,2813,2.145,2814,2.145,2815,2.145,2816,2.145,2817,2.145,2818,2.145,2819,3.51,2820,2.145,2821,2.145,2822,3.51,2823,2.145,2824,5.388,2825,2.145,2826,2.145,2827,2.145,2828,3.51,2829,2.145,2830,3.51,2831,2.145,2832,3.51,2833,2.145,2834,2.145,2835,3.51,2836,2.145,2837,2.145,2838,2.145,2839,2.145,2840,2.145,2841,3.51,2842,2.145,2843,2.145,2844,2.145,2845,3.51,2846,2.145,2847,2.145,2848,2.145,2849,2.632,2850,2.632,2851,1.731,2852,1.731,2853,1.731,2854,2.632,2855,2.632,2856,1.895,2857,2.632,2858,3.51,2859,1.51,2860,2.145,2861,2.145,2862,2.145,2863,2.145,2864,2.145,2865,2.145,2866,2.145,2867,2.145,2868,3.51,2869,2.145,2870,2.145,2871,2.145,2872,2.145,2873,6.717,2874,2.145,2875,2.145,2876,3.51,2877,2.145,2878,2.145,2879,2.145,2880,4.455,2881,2.145,2882,2.145,2883,2.145,2884,2.145,2885,3.51,2886,2.145,2887,2.145,2888,2.145,2889,2.145,2890,4.55,2891,3.51,2892,3.51,2893,3.51,2894,3.51,2895,3.51,2896,3.51,2897,3.51,2898,3.51,2899,3.51]],["title/injectables/SingleTeamEffects.html",[307,0.968,482,3.585]],["body/injectables/SingleTeamEffects.html",[3,0.064,4,0.049,8,0.056,29,0.401,30,0.009,32,0.416,38,0.064,39,0.416,49,0.286,93,1.49,109,1.56,137,0.703,155,0.005,156,0.005,170,0.276,174,1.579,178,1.287,183,1.804,185,0.843,186,0.286,187,0.805,242,0.561,300,2.273,301,2.075,307,1.203,309,0.986,482,4.458,483,6.299,493,1.444,509,4.43,511,5.37,512,5.343,517,1.564,522,5.343,524,2.839,541,2.34,570,2.34,571,2.242,572,2.34,988,4.361,1609,6.831,2219,6.831,2811,5.442,2849,5.27,2850,5.27,2851,5.672,2852,5.672,2853,5.672,2854,5.27,2855,2.9,2857,5.27,2859,2.723,2900,7.424,2901,3.868,2902,6.443,2903,3.418,2904,3.868,2905,5.524,2906,8.832,2907,5.524,2908,8.136,2909,5.694,2910,5.524,2911,3.868,2912,5.524,2913,5.524,2914,5.694,2915,5.524,2916,3.868,2917,5.524,2918,5.524,2919,6.211,2920,5.694,2921,5.524,2922,3.868,2923,5.524,2924,5.524,2925,5.694,2926,5.524,2927,3.868,2928,5.524,2929,5.524,2930,5.694,2931,5.524,2932,3.868,2933,5.524,2934,5.524,2935,5.694,2936,5.524,2937,3.868,2938,5.524,2939,5.524,2940,5.694,2941,5.524,2942,3.868,2943,5.524,2944,5.524,2945,5.524,2946,5.694,2947,5.524,2948,3.868,2949,3.418,2950,3.418,2951,3.418,2952,3.418,2953,3.418,2954,3.418,2955,3.418,2956,3.418,2957,3.418]],["title/interfaces/SingleTeamState.html",[231,0.387,452,3.585]],["body/interfaces/SingleTeamState.html",[3,0.059,4,0.045,8,0.052,29,0.404,30,0.009,38,0.102,93,1.492,105,1.066,109,1.562,137,0.644,155,0.005,156,0.005,170,0.253,186,0.654,210,1.628,231,0.309,233,0.845,240,1.257,242,0.526,315,4.364,345,2.394,382,1.257,383,1.257,386,1.29,387,1.29,437,2.672,452,4.95,483,2.658,485,3.133,524,2.803,639,4.514,640,3.138,641,1.196,642,2.145,643,1.833,645,2.361,648,3.71,649,4.807,653,4.807,659,4.109,662,4.109,988,4.259,1218,3.719,2331,2.861,2849,2.658,2850,2.658,2851,2.861,2852,2.861,2853,2.861,2854,2.658,2855,2.658,2856,3.133,2857,2.658,2859,2.496,2900,3.133,2909,3.133,2914,3.133,2920,3.133,2925,3.133,2930,3.133,2935,3.133,2940,3.133,2946,3.133,2950,3.133,2951,3.133,2952,3.133,2953,3.133,2954,3.133,2955,3.133,2956,3.133,2957,3.133,2958,3.545,2959,7.946,2960,7.946,2961,7.946,2962,7.946,2963,7.946,2964,7.946,2965,7.946,2966,7.946,2967,7.946,2968,7.946,2969,7.946,2970,7.946,2971,7.75,2972,7.946,2973,7.946,2974,7.946,2975,7.946,2976,3.133,2977,3.545,2978,3.545,2979,3.545,2980,3.545,2981,3.545,2982,3.545,2983,3.545,2984,3.545,2985,3.545,2986,3.545,2987,3.545,2988,3.545,2989,3.545,2990,3.545,2991,3.545,2992,3.545,2993,3.545,2994,3.545,2995,3.545,2996,3.545,2997,3.545,2998,3.545,2999,3.545,3000,3.545,3001,3.545]],["title/components/StatsComponent.html",[0,0.168,141,0.864]],["body/components/StatsComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,1.523,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,3002,4.988,3003,7.827,3004,6.579,3005,6.579]],["title/components/SupportComponent.html",[0,0.168,143,0.864]],["body/components/SupportComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,1.523,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,0.97,152,0.993,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,3006,4.988,3007,6.916,3008,6.579,3009,6.579]],["title/interfaces/Team.html",[231,0.387,988,2.381]],["body/interfaces/Team.html",[3,0.113,4,0.085,8,0.099,30,0.009,38,0.113,155,0.008,156,0.008,170,0.484,186,0.645,193,1.459,231,0.593,233,1.62,242,0.81,892,4.518,988,4.277,1008,4.361,2003,5.065,2006,5.065,2309,5.82,3010,6.796]],["title/interfaces/TeamDto.html",[231,0.387,3011,3.585]],["body/interfaces/TeamDto.html",[3,0.113,4,0.085,8,0.099,30,0.009,38,0.113,155,0.008,156,0.008,170,0.484,186,0.645,193,1.459,231,0.593,233,1.62,242,0.81,892,4.518,1008,4.361,2003,5.065,2006,5.065,2309,5.82,3011,6.439,3012,6.796]],["title/injectables/TeamEffects.html",[307,0.968,474,3.585]],["body/injectables/TeamEffects.html",[3,0.084,4,0.064,8,0.074,29,0.441,30,0.009,32,0.544,38,0.084,39,0.544,49,0.374,148,1.498,155,0.006,156,0.006,170,0.361,174,1.9,178,1.549,183,1.781,185,1.104,186,0.374,187,1.055,242,0.675,300,2.2,301,2.008,307,1.448,309,1.292,474,5.364,493,1.891,509,4.761,511,5.308,512,5.248,514,5.544,517,3,522,5.248,524,2.789,541,4.946,570,3.065,571,2.937,572,3.065,2378,5.904,2807,5.904,2811,5.908,2859,3.568,2903,4.478,2919,5.874,2949,4.478,3013,5.067,3014,6.959,3015,6.355,3016,5.067,3017,6.647,3018,6.647,3019,6.647,3020,6.647,3021,5.067,3022,6.647,3023,6.647,3024,6.647,3025,6.647,3026,6.647,3027,5.067,3028,6.647,3029,6.647,3030,7.875,3031,6.647,3032,6.647,3033,5.067,3034,6.647,3035,6.647,3036,6.647,3037,6.647,3038,5.067,3039,4.478,3040,4.478,3041,4.478,3042,4.478,3043,5.067,3044,4.478,3045,4.478,3046,4.478]],["title/injectables/TeamService.html",[307,0.968,2811,3.127]],["body/injectables/TeamService.html",[3,0.068,4,0.051,8,0.06,29,0.458,30,0.009,32,0.439,38,0.068,39,0.439,49,0.64,105,0.645,155,0.005,156,0.005,166,1.799,170,0.291,171,1.497,178,0.952,183,1.917,185,1.889,186,0.65,187,1.806,189,2.179,193,1.514,307,1.25,309,1.041,345,1.448,354,1.912,355,1.799,375,4.575,414,2.744,493,1.524,588,2.47,589,4.174,591,3.196,606,4.218,611,2.47,612,3.327,616,2.367,617,2.72,618,3.296,625,5.287,626,5.07,645,2.72,871,4.042,892,3.432,976,4.304,987,5.812,988,2.189,1218,2.687,1327,4.977,1799,4.304,2133,3.296,2138,3.609,2141,3.609,2201,3.062,2304,3.609,2309,5.776,2331,3.296,2807,4.304,2811,4.042,2849,4.304,2850,4.304,2854,4.304,2855,4.304,2857,4.304,2890,7.99,3011,3.296,3047,4.084,3048,5.741,3049,7.201,3050,7.201,3051,5.741,3052,5.741,3053,5.741,3054,4.084,3055,5.741,3056,4.084,3057,5.741,3058,4.084,3059,5.741,3060,4.084,3061,5.741,3062,4.084,3063,4.084,3064,4.084,3065,5.741,3066,4.084,3067,5.741,3068,4.084,3069,5.741,3070,4.084,3071,4.084,3072,5.741,3073,4.084,3074,5.741,3075,4.084,3076,5.741,3077,4.084,3078,4.084,3079,6.638,3080,7.869,3081,6.638,3082,6.638,3083,4.084,3084,6.638,3085,5.741]],["title/interfaces/TeamState.html",[231,0.387,453,3.585]],["body/interfaces/TeamState.html",[3,0.072,4,0.055,8,0.063,29,0.399,30,0.009,38,0.114,62,1.247,148,1.527,155,0.006,156,0.006,170,0.31,186,0.636,210,1.883,231,0.38,233,1.037,240,2.625,242,0.609,257,2.25,315,4.302,345,1.543,365,2.937,382,2.625,383,2.625,384,2.625,385,2.763,386,2.692,387,2.692,437,2.649,453,5.541,476,3.845,524,2.734,636,2.332,639,4.411,640,3.629,641,1.468,642,2.632,643,2.25,648,3.629,649,4.477,650,5.145,651,3.629,653,4.477,657,3.55,659,3.827,660,4.154,662,3.827,663,4.688,862,2.036,988,4.7,1218,3.464,2309,3.996,2351,6.478,2378,3.262,2390,3.845,2807,3.262,2859,3.063,2976,3.845,3014,3.845,3015,3.511,3039,3.845,3040,3.845,3041,3.845,3042,3.845,3044,3.845,3045,3.845,3046,3.845,3086,4.351,3087,8.225,3088,8.225,3089,8.381,3090,8.381,3091,8.381,3092,8.381,3093,7.406,3094,8.381,3095,8.381,3096,4.351,3097,4.351,3098,5.999,3099,4.351,3100,4.351,3101,4.351,3102,4.351,3103,4.351,3104,4.351,3105,4.351,3106,4.351,3107,4.351,3108,4.351]],["title/components/TeamsComponent.html",[0,0.168,145,0.864]],["body/components/TeamsComponent.html",[0,0.244,1,1.369,2,1.029,3,0.064,4,0.049,5,0.772,6,0.772,7,0.772,8,0.057,10,2.73,12,0.772,13,1.87,14,1.87,15,0.755,17,1.077,18,1.005,19,1.101,20,2.347,24,2.473,25,1.101,27,1.152,29,0.471,30,0.009,31,1.277,32,0.417,34,1.341,35,1.341,38,0.064,39,0.417,43,0.772,44,1.101,45,1.101,46,0.772,47,1.401,48,0.772,49,0.476,50,0.772,51,0.755,52,0.772,53,0.755,54,0.772,55,0.755,56,0.772,57,0.755,58,0.772,59,0.755,60,0.772,61,0.755,62,0.705,63,1.101,64,0.755,65,1.101,66,0.755,67,0.772,68,0.755,69,0.772,70,0.755,71,0.772,72,0.755,73,0.738,74,1.101,75,0.755,76,0.772,77,0.755,78,0.772,79,0.755,80,0.772,81,0.755,82,0.772,83,0.755,84,0.772,85,0.755,86,0.772,87,0.755,88,0.772,89,1.101,90,0.755,91,0.772,92,0.755,93,0.673,94,1.284,95,0.755,96,0.772,97,0.755,98,0.772,99,0.755,100,0.772,101,0.755,102,0.772,103,0.755,104,0.755,105,1.019,106,0.755,107,1.053,108,0.772,109,1.005,110,1.101,111,0.755,112,0.755,113,0.772,114,0.755,115,0.772,116,0.755,117,0.772,118,0.755,119,0.772,120,0.755,121,0.721,122,0.755,123,0.772,124,0.755,125,0.772,126,0.772,127,0.755,128,0.772,129,0.755,130,0.772,131,0.755,132,0.772,133,0.755,134,0.755,135,0.772,136,0.755,137,1.005,138,0.772,139,0.755,140,0.772,141,0.755,142,0.772,143,0.755,144,0.772,145,1.369,146,0.772,147,1.401,148,1.227,149,0.755,150,0.772,151,0.755,152,0.772,153,0.772,154,0.772,155,0.005,156,0.005,163,2.121,164,3.02,170,0.276,171,1.444,173,3.294,178,0.904,183,1.805,185,0.845,186,0.286,187,0.808,189,0.967,190,1.737,242,0.562,300,2.224,301,2.169,309,0.989,355,1.708,444,1.568,517,1.568,641,1.309,883,3.129,925,1.659,944,3.099,1047,2.005,1110,2.159,1543,4.543,1547,5.207,1548,4.838,1549,5.579,1555,4.954,1557,5.447,1559,4.466,1561,4.149,1563,4.149,1571,2.73,1572,2.079,1573,2.73,1574,2.159,1575,2.73,1576,2.159,1577,2.73,1582,2.908,1583,2.908,1586,2.908,1588,3.896,2350,6.218,2351,5.207,2369,4.89,2373,4.89,2378,2.908,2379,3.427,2380,3.427,2381,3.427,2385,3.427,2824,6.837,3015,3.13,3093,5.702,3109,3.878,3110,5.534,3111,5.534,3112,7.037,3113,3.878,3114,3.878,3115,3.878,3116,3.878,3117,3.878,3118,3.878,3119,5.534,3120,3.878,3121,3.878,3122,5.534,3123,3.878,3124,3.878,3125,3.878,3126,3.878,3127,3.878]],["title/interfaces/Token.html",[231,0.387,637,3.33]],["body/interfaces/Token.html",[3,0.114,4,0.087,8,0.1,30,0.009,38,0.114,155,0.008,156,0.008,170,0.49,186,0.593,193,1.463,231,0.6,233,1.64,242,0.815,586,6.578,637,6.025,953,4.155,3128,6.88,3129,7.752,3130,7.752,3131,7.752]],["title/interfaces/TokenDto.html",[231,0.387,613,3.585]],["body/interfaces/TokenDto.html",[3,0.114,4,0.087,8,0.1,30,0.009,38,0.114,155,0.008,156,0.008,170,0.49,186,0.593,193,1.463,231,0.6,233,1.64,242,0.815,586,6.578,613,6.485,953,4.155,3129,7.752,3130,7.752,3131,7.752,3132,6.88]],["title/components/TopbarComponent.html",[0,0.168,149,0.864]],["body/components/TopbarComponent.html",[0,0.232,1,0.69,2,0.964,3,0.059,4,0.045,5,0.706,6,0.706,7,0.706,8,0.052,12,0.706,13,1.862,14,1.862,15,0.69,17,1.009,18,0.942,19,1.032,20,2.231,21,2.624,23,2.964,24,2.35,25,1.032,27,1.08,29,0.473,30,0.009,31,1.168,32,0.381,33,1.609,34,1.226,35,1.226,36,1.517,37,1.713,38,0.059,39,0.381,43,0.706,44,1.032,45,1.032,46,0.706,47,1.343,48,0.706,49,0.498,50,0.706,51,0.69,52,0.706,53,0.69,54,0.706,55,0.69,56,0.706,57,0.69,58,0.706,59,0.69,60,0.706,61,0.69,62,0.644,63,1.032,64,0.69,65,1.032,66,0.69,67,0.706,68,0.69,69,0.706,70,0.69,71,0.706,72,0.69,73,0.674,74,1.032,75,0.69,76,0.706,77,0.69,78,0.706,79,0.69,80,0.706,81,0.69,82,0.706,83,0.69,84,0.706,85,0.69,86,0.706,87,0.69,88,0.706,89,1.032,90,0.69,91,0.706,92,0.69,93,0.615,94,1.221,95,0.69,96,0.706,97,0.69,98,0.706,99,0.69,100,0.706,101,0.69,102,0.706,103,0.69,104,0.69,105,0.968,106,0.69,107,0.986,108,0.706,109,0.942,110,1.032,111,0.69,112,0.69,113,0.706,114,0.69,115,0.706,116,0.69,117,0.706,118,0.69,119,0.706,120,0.69,121,0.659,122,0.69,123,0.706,124,0.69,125,0.706,126,0.706,127,0.69,128,0.706,129,0.69,130,0.706,131,0.69,132,0.706,133,0.69,134,0.69,135,0.706,136,0.69,137,0.942,138,0.706,139,0.69,140,0.706,141,0.69,142,0.706,143,0.69,144,0.706,145,0.69,146,0.706,147,0.706,148,0.674,149,1.313,150,0.706,151,0.69,152,0.706,153,0.706,154,0.706,155,0.005,156,0.005,170,0.253,171,1.353,174,1.753,178,1.209,180,3.745,181,4.513,183,1.873,185,1.13,186,0.598,187,1.08,189,1.683,190,1.925,199,2.361,240,2.175,242,0.526,277,3.415,300,1.885,301,1.913,345,2.175,382,2.175,383,2.175,384,2.175,385,2.289,386,2.231,387,2.231,414,1.113,444,1.434,504,2.861,641,1.196,696,3.171,699,3.885,710,2.658,716,2.658,729,4.318,818,1.771,862,2.871,883,3.134,885,4.007,907,4.315,908,3.288,914,1.901,916,1.659,925,1.517,929,2.861,931,2.658,1045,2.246,1047,1.833,1048,2.246,1122,4.599,1128,3.652,1154,4.583,1280,2.861,1426,2.658,1427,2.861,1434,3.133,1455,3.885,1497,2.246,1677,4.95,1731,2.861,2047,4.583,2616,5.42,3133,3.545,3134,5.187,3135,5.187,3136,5.187,3137,6.133,3138,6.133,3139,6.133,3140,5.187,3141,7.503,3142,6.749,3143,7.503,3144,5.187,3145,5.187,3146,3.545,3147,3.545,3148,3.545,3149,3.545,3150,3.545,3151,5.187,3152,5.187,3153,5.187,3154,5.187,3155,3.545,3156,3.545,3157,5.187,3158,5.187,3159,3.545,3160,3.545,3161,3.545,3162,5.187,3163,3.545,3164,3.545,3165,3.545,3166,3.545,3167,3.545,3168,3.545,3169,3.545,3170,5.187,3171,5.187]],["title/interfaces/User.html",[231,0.387,345,1.575]],["body/interfaces/User.html",[3,0.098,4,0.074,8,0.086,29,0.395,30,0.009,38,0.122,49,0.435,155,0.007,156,0.007,170,0.42,186,0.677,193,1.513,231,0.639,233,1.406,242,0.743,269,3.736,284,3.192,345,2.597,437,2.277,518,4.466,1008,4.359,1085,4.466,1131,6.246,1244,4.795,1265,5.548,1266,5.548,1312,4.152,1572,3.926,1574,4.078,1576,3.284,2003,4.828,2006,4.828,2546,5.212,2547,4.76,2548,4.422,2549,5.212,2550,5.212,2551,6.723,2552,6.723,2553,6.723]],["title/interfaces/UserDto.html",[231,0.387,617,2.958]],["body/interfaces/UserDto.html",[3,0.098,4,0.074,8,0.086,29,0.395,30,0.009,38,0.098,49,0.437,155,0.007,156,0.007,170,0.421,186,0.682,193,1.514,231,0.516,233,1.409,242,0.744,269,3.746,284,3.195,437,2.279,518,4.47,617,4.886,1008,4.361,1085,4.47,1131,6.252,1244,4.47,1265,5.553,1266,5.553,1312,4.163,1572,3.932,1574,4.084,1576,3.292,1799,5.5,2003,4.833,2006,4.833,2547,4.772,2548,4.434,2551,6.729,2552,6.729,2553,6.729,3172,5.913,3173,5.913,3174,5.913]],["title/components/VitalsComponent.html",[0,0.168,151,0.864]],["body/components/VitalsComponent.html",[0,0.278,1,0.97,2,1.223,3,0.083,4,0.063,5,0.993,6,0.993,7,0.993,8,0.073,12,0.993,13,1.889,14,1.889,15,0.97,17,1.28,18,1.195,19,0.993,25,1.309,27,1.37,29,0.269,30,0.008,32,0.536,38,0.083,39,0.536,43,0.993,44,1.309,45,1.309,46,0.993,47,1.558,48,0.993,49,0.486,50,0.993,51,0.97,52,0.993,53,0.97,54,0.993,55,0.97,56,0.993,57,0.97,58,0.993,59,0.97,60,0.993,61,0.97,62,0.906,63,1.309,64,0.97,65,1.309,66,0.97,67,0.993,68,0.97,69,0.993,70,0.97,71,0.993,72,0.97,73,0.949,74,1.309,75,0.97,76,0.993,77,0.97,78,0.993,79,0.97,80,0.993,81,0.97,82,0.993,83,0.97,84,0.993,85,0.97,86,0.993,87,0.97,88,0.993,89,1.309,90,0.97,91,0.993,92,0.97,93,0.865,94,1.465,95,0.97,96,0.993,97,0.97,98,0.993,99,0.97,100,0.993,101,0.97,102,0.993,103,0.97,104,0.97,105,1.162,106,0.97,107,1.251,108,0.993,109,1.195,110,1.309,111,0.97,112,0.97,113,0.993,114,0.97,115,0.993,116,0.97,117,0.993,118,0.97,119,0.993,120,0.97,121,0.927,122,0.97,123,0.993,124,0.97,125,0.993,126,0.993,127,0.97,128,0.993,129,0.97,130,0.993,131,0.97,132,0.993,133,0.97,134,0.97,135,0.993,136,0.97,137,1.195,138,0.993,139,0.97,140,0.993,141,0.97,142,0.993,143,0.97,144,0.993,145,0.97,146,0.993,147,0.993,148,0.949,149,0.97,150,0.993,151,1.523,152,1.619,153,0.993,154,0.993,155,0.006,156,0.006,161,2.393,3175,4.988,3176,6.579,3177,6.579]],["title/dependencies.html",[3178,2.984,3179,4.726]],["body/dependencies.html",[30,0.009,31,2.11,32,0.688,33,2.907,34,2.665,35,2.216,155,0.007,156,0.007,309,1.633,571,3.713,641,2.6,818,3.2,1804,4.266,1938,5.66,3179,5.66,3180,6.406,3181,9.143,3182,6.406,3183,6.406,3184,6.406,3185,8.26,3186,6.807,3187,6.406,3188,6.406,3189,6.406,3190,8.26,3191,6.406,3192,6.406,3193,6.406,3194,6.406,3195,6.406,3196,6.406,3197,6.406,3198,6.406,3199,6.406,3200,6.406,3201,6.406,3202,6.406,3203,5.17,3204,6.406,3205,6.406,3206,6.406,3207,6.406,3208,6.406,3209,5.66,3210,6.406,3211,6.406,3212,6.406,3213,6.406,3214,6.406,3215,6.406]],["title/miscellaneous/enumerations.html",[3216,2.773,3217,4.726]],["body/miscellaneous/enumerations.html",[30,0.009,62,1.263,105,1.098,155,0.007,156,0.007,170,0.387,301,2.424,345,2.466,390,5.213,524,2.235,639,3.473,651,4.206,657,3.595,679,4.631,756,4.631,862,3.254,988,3.727,1132,5.213,1244,3.727,1572,4.334,1574,3.871,1804,4.631,2160,4.03,2164,5.611,2607,6.144,3203,5.611,3216,4.072,3217,4.799,3218,5.431,3219,5.431,3220,8.085,3221,5.431,3222,5.431,3223,6.953,3224,5.431,3225,6.144,3226,6.953,3227,5.431,3228,6.953,3229,6.953,3230,6.953,3231,6.953,3232,6.953,3233,6.953,3234,6.953,3235,6.953,3236,6.144,3237,6.953,3238,6.953,3239,6.953,3240,6.953,3241,6.953,3242,6.953,3243,6.953,3244,6.953,3245,6.953,3246,5.431,3247,6.953,3248,6.953,3249,6.953,3250,6.953,3251,6.953,3252,6.953,3253,6.953,3254,6.953,3255,5.431,3256,6.953]],["title/miscellaneous/functions.html",[255,3.766,3216,2.773]],["body/miscellaneous/functions.html",[30,0.009,49,0.642,155,0.007,156,0.007,170,0.476,185,1.893,186,0.642,187,1.81,189,1.666,255,4.706,284,2.561,301,1.704,345,2.983,589,4.579,591,3.722,1117,5.394,1572,4.235,1574,4.399,3216,5.012,3257,7.901,3258,7.901,3259,7.901,3260,6.684,3261,7.901,3262,6.684,3263,7.901,3264,6.684,3265,6.684,3266,6.684,3267,6.684,3268,6.684,3269,7.901,3270,7.901,3271,6.684,3272,6.684]],["title/index.html",[170,0.263,3273,3.268,3274,3.268]],["body/index.html",[0,0.282,2,1.247,4,0.065,17,1,30,0.008,49,0.495,105,1.25,155,0.006,156,0.006,163,1.969,237,3.108,254,2.977,289,4.722,290,3.254,311,3.421,315,2.405,349,3.254,365,2.198,372,5.19,374,4.73,384,1.822,388,3.421,392,5.93,591,2.86,612,2.977,721,3.852,756,3.421,780,3.852,885,2.656,1132,6.158,1240,5.599,1426,5.599,1446,4.54,1804,4.974,1815,5.258,1875,4.54,1888,5.927,1890,6.027,1911,5.413,2160,2.977,2163,4.974,2624,4.54,3178,4.146,3186,4.54,3209,4.54,3275,6.707,3276,6.707,3277,7.468,3278,6.707,3279,6.707,3280,6.707,3281,4.54,3282,4.54,3283,4.54,3284,5.137,3285,5.137,3286,5.137,3287,5.137,3288,6.707,3289,5.137,3290,5.137,3291,5.137,3292,5.137,3293,5.137,3294,5.137,3295,5.137,3296,5.137,3297,5.137,3298,5.137,3299,5.137,3300,5.137,3301,5.137,3302,4.54,3303,7.903,3304,8.423,3305,5.137,3306,5.137,3307,5.137,3308,5.137,3309,4.54,3310,5.137,3311,5.927,3312,5.137,3313,6.599,3314,5.137,3315,8.798,3316,5.137,3317,5.137,3318,5.137,3319,5.137,3320,9.087,3321,8.423,3322,6.707,3323,6.599,3324,7.775,3325,6.707,3326,5.137,3327,5.137,3328,7.468,3329,6.599,3330,6.707,3331,6.707,3332,7.468,3333,5.927,3334,6.707,3335,7.917,3336,5.137,3337,6.707,3338,5.137,3339,5.137,3340,5.137,3341,4.54,3342,4.54,3343,5.137,3344,5.137,3345,6.707,3346,5.137,3347,5.137,3348,6.707,3349,5.137,3350,6.707,3351,5.137,3352,5.137,3353,4.54,3354,4.54,3355,7.468,3356,5.137,3357,6.707,3358,4.54,3359,5.137,3360,5.137,3361,4.54,3362,4.54,3363,5.137,3364,5.137,3365,4.54,3366,5.137,3367,5.137,3368,4.54]],["title/license.html",[3273,3.268,3274,3.268,3369,3.268]],["body/license.html",[0,0.155,4,0.105,8,0.032,15,0.882,16,1.096,29,0.067,30,0.005,39,0.133,137,0.399,155,0.003,156,0.002,161,2.244,171,0.324,174,0.355,182,2.22,183,0.27,186,0.162,190,0.389,231,0.428,233,0.706,236,2.22,237,4.87,243,4.415,249,0.873,252,0.93,254,3.576,258,4.58,259,3.918,262,3.832,263,0.75,264,3.072,276,1.648,277,0.691,282,2.871,285,2.22,286,2.885,287,0.93,293,0.93,296,0.873,297,1.062,304,4.624,308,0.873,311,1.464,315,0.581,327,2.22,342,0.873,345,2.358,352,2.522,358,0.75,360,3.398,365,2.098,368,2.22,371,3.398,374,2.269,384,0.44,385,0.463,392,0.873,395,0.93,414,0.389,416,0.93,421,0.93,425,3.191,430,0.873,509,0.691,520,0.62,636,0.665,660,0.75,678,1.548,699,4.812,713,1.001,714,1.548,716,1.648,717,4.005,724,3.306,725,1.096,730,1.096,737,1.096,738,6.198,744,1.001,745,3.165,746,2.89,749,1.943,754,1.096,760,1.943,763,2.729,772,1.943,774,2.627,778,4.877,779,1.096,786,1.096,787,1.943,788,1.943,791,4.866,848,5.607,862,1.029,934,0.563,961,0.665,969,0.641,990,1.548,994,1.096,1008,0.599,1069,4.128,1117,1.001,1125,2.616,1130,1.774,1133,1.774,1139,1.096,1141,1.096,1236,4.005,1334,0.873,1376,0.826,1500,0.786,1526,1.001,1527,1.001,1572,3.084,1592,4.128,1625,1.096,1692,1.716,1765,1.001,1802,1.096,1804,2.729,1810,1.096,1815,2.885,1828,1.774,1829,4.217,1832,1.943,1835,2.22,1838,4.217,1850,1.096,1871,4.617,1876,1.943,1878,5.607,1882,1.096,1886,1.943,1890,6.076,1892,3.165,1907,1.096,1911,1.001,1912,1.096,1914,1.943,1915,4.333,1916,4.617,1929,1.943,1968,1.096,1974,1.096,1994,1.096,2036,1.096,2163,5.059,2548,4.314,2604,1.096,2610,1.096,2611,1.096,2629,1.096,2641,1.943,2672,1.096,2765,6.372,2772,2.616,2786,3.62,3007,2.616,3203,1.774,3225,1.096,3236,4.617,3281,1.096,3282,1.096,3283,1.096,3302,1.096,3303,4.617,3309,3.165,3311,3.165,3313,1.096,3323,1.943,3324,5.748,3329,1.096,3333,2.616,3341,3.62,3342,3.165,3353,5.748,3354,2.616,3358,2.616,3361,6.59,3362,1.943,3365,2.616,3368,1.943,3369,8.002,3370,7.117,3371,1.24,3372,1.24,3373,2.961,3374,7.877,3375,7.718,3376,4.532,3377,1.24,3378,1.24,3379,2.198,3380,4.097,3381,7.596,3382,4.097,3383,2.961,3384,6.505,3385,1.24,3386,2.961,3387,1.24,3388,1.24,3389,2.198,3390,4.532,3391,1.24,3392,4.532,3393,1.24,3394,5.225,3395,2.198,3396,1.24,3397,1.24,3398,1.24,3399,6.505,3400,8.462,3401,2.961,3402,9.015,3403,2.198,3404,4.904,3405,4.904,3406,4.532,3407,1.24,3408,1.24,3409,3.582,3410,5.225,3411,2.961,3412,1.24,3413,2.198,3414,1.24,3415,2.961,3416,7.117,3417,3.582,3418,1.24,3419,1.24,3420,2.198,3421,3.582,3422,2.198,3423,6.169,3424,2.198,3425,2.198,3426,3.582,3427,4.904,3428,4.097,3429,1.24,3430,5.225,3431,4.532,3432,7.969,3433,2.961,3434,4.904,3435,1.24,3436,1.24,3437,4.097,3438,5.225,3439,2.198,3440,5.973,3441,4.097,3442,2.198,3443,1.24,3444,1.24,3445,6.65,3446,2.198,3447,1.24,3448,1.24,3449,6.346,3450,2.198,3451,2.961,3452,1.24,3453,1.24,3454,2.198,3455,1.24,3456,3.582,3457,1.24,3458,1.24,3459,1.24,3460,1.24,3461,1.24,3462,2.198,3463,1.24,3464,1.24,3465,1.24,3466,2.198,3467,1.24,3468,2.961,3469,2.198,3470,1.24,3471,1.24,3472,2.198,3473,2.198,3474,6.505,3475,1.24,3476,2.198,3477,2.198,3478,1.24,3479,1.24,3480,2.198,3481,2.961,3482,2.198,3483,2.961,3484,2.198,3485,1.24,3486,1.24,3487,4.532,3488,1.24,3489,1.24,3490,4.097,3491,1.24,3492,3.582,3493,2.198,3494,2.961,3495,1.24,3496,1.24,3497,6.505,3498,3.582,3499,4.097,3500,4.532,3501,2.961,3502,1.24,3503,2.961,3504,2.198,3505,1.24,3506,1.24,3507,1.24,3508,2.961,3509,8.368,3510,1.24,3511,1.24,3512,2.198,3513,2.198,3514,1.24,3515,5.754,3516,1.24,3517,3.582,3518,2.961,3519,2.198,3520,8.287,3521,2.961,3522,5.506,3523,3.582,3524,2.198,3525,1.24,3526,2.198,3527,2.961,3528,5.506,3529,5.754,3530,3.582,3531,2.198,3532,2.198,3533,3.582,3534,1.24,3535,2.961,3536,7.659,3537,2.198,3538,1.24,3539,5.225,3540,1.24,3541,2.961,3542,5.225,3543,1.24,3544,6.65,3545,3.582,3546,2.198,3547,5.973,3548,4.532,3549,1.24,3550,1.24,3551,1.24,3552,5.225,3553,1.24,3554,2.198,3555,1.24,3556,2.961,3557,2.961,3558,1.24,3559,1.24,3560,1.24,3561,5.973,3562,2.961,3563,1.24,3564,1.24,3565,1.24,3566,2.198,3567,5.754,3568,1.24,3569,1.24,3570,1.24,3571,2.961,3572,2.961,3573,2.961,3574,2.961,3575,1.24,3576,1.24,3577,4.097,3578,1.24,3579,2.198,3580,1.24,3581,2.961,3582,1.24,3583,2.961,3584,1.24,3585,1.24,3586,1.24,3587,2.198,3588,1.24,3589,7.458,3590,5.225,3591,1.24,3592,2.198,3593,1.24,3594,1.24,3595,2.198,3596,2.198,3597,1.24,3598,1.24,3599,1.24,3600,2.198,3601,2.961,3602,4.097,3603,1.24,3604,2.198,3605,1.24,3606,1.24,3607,1.24,3608,1.24,3609,4.904,3610,3.582,3611,1.24,3612,4.097,3613,1.24,3614,1.24,3615,1.24,3616,2.961,3617,1.24,3618,1.24,3619,1.24,3620,1.24,3621,2.961,3622,2.961,3623,1.24,3624,1.24,3625,2.198,3626,2.198,3627,2.198,3628,1.24,3629,2.198,3630,1.24,3631,1.24,3632,1.24,3633,1.24,3634,1.24,3635,2.961,3636,1.24,3637,1.24,3638,6.65,3639,2.961,3640,1.24,3641,1.24,3642,1.24,3643,4.097,3644,4.097,3645,1.24,3646,1.24,3647,2.961,3648,1.24,3649,1.24,3650,3.582,3651,1.24,3652,2.198,3653,1.24,3654,1.24,3655,1.24,3656,1.24,3657,1.24,3658,1.24,3659,2.198,3660,2.198,3661,1.24,3662,2.961,3663,1.24,3664,1.24,3665,2.198,3666,1.24,3667,1.24,3668,1.24,3669,1.24,3670,2.198,3671,2.198,3672,2.198,3673,2.198,3674,5.506,3675,2.198,3676,4.532,3677,1.24,3678,1.24,3679,2.198,3680,2.961,3681,3.582,3682,3.582,3683,2.961,3684,3.582,3685,2.961,3686,1.24,3687,4.097,3688,4.097,3689,2.961,3690,1.24,3691,2.198,3692,4.097,3693,2.198,3694,3.582,3695,3.582,3696,2.198,3697,2.961,3698,4.097,3699,1.24,3700,1.24,3701,1.24,3702,2.961,3703,2.198,3704,1.24,3705,1.24,3706,1.24,3707,1.24,3708,2.198,3709,1.24,3710,1.24,3711,2.961,3712,1.24,3713,1.24,3714,2.198,3715,2.961,3716,1.24,3717,2.198,3718,1.24,3719,2.961,3720,1.24,3721,1.24,3722,1.24,3723,2.198,3724,2.198,3725,4.532,3726,7.299,3727,2.961,3728,2.198,3729,2.198,3730,2.198,3731,2.198,3732,3.582,3733,3.582,3734,2.198,3735,1.24,3736,1.24,3737,1.24,3738,1.24,3739,4.904,3740,4.532,3741,2.198,3742,1.24,3743,1.24,3744,1.24,3745,1.24,3746,2.198,3747,1.24,3748,2.198,3749,1.24,3750,4.097,3751,1.24,3752,5.973,3753,1.24,3754,1.24,3755,1.24,3756,1.24,3757,2.198,3758,1.24,3759,1.24,3760,1.24,3761,2.198,3762,2.961,3763,4.097,3764,2.198,3765,3.582,3766,2.198,3767,1.24,3768,1.24,3769,1.24,3770,1.24,3771,1.24,3772,2.198,3773,1.24,3774,1.24,3775,3.582,3776,1.24,3777,2.198,3778,2.198,3779,1.24,3780,1.24,3781,2.961,3782,1.24,3783,1.24,3784,1.24,3785,1.24,3786,1.24,3787,2.198,3788,1.24,3789,1.24,3790,2.198,3791,1.24,3792,1.24,3793,1.24,3794,2.961,3795,1.24,3796,1.24,3797,1.24,3798,1.24,3799,1.24,3800,4.097,3801,1.24,3802,3.582,3803,1.24,3804,1.24,3805,3.582,3806,1.24,3807,1.24,3808,1.24,3809,1.24,3810,1.24,3811,2.198,3812,4.904,3813,2.961,3814,1.24,3815,3.582,3816,1.24,3817,1.24,3818,2.961,3819,1.24,3820,1.24,3821,2.961,3822,1.24,3823,2.198,3824,1.24,3825,1.24,3826,1.24,3827,1.24,3828,1.24,3829,1.24,3830,1.24,3831,1.24,3832,2.198,3833,1.24,3834,1.24,3835,1.24,3836,2.198,3837,2.198,3838,1.24,3839,1.24,3840,2.961,3841,1.24,3842,2.198,3843,2.198,3844,1.24,3845,2.198,3846,1.24,3847,2.961,3848,4.904,3849,1.24,3850,1.24,3851,2.198,3852,1.24,3853,1.24,3854,1.24,3855,1.24,3856,1.24,3857,2.198,3858,3.582,3859,1.24,3860,4.097,3861,1.24,3862,1.24,3863,1.24,3864,1.24,3865,1.24,3866,2.198,3867,2.198,3868,2.198,3869,2.961,3870,1.24,3871,2.198,3872,1.24,3873,2.961,3874,1.24,3875,2.198,3876,1.24,3877,2.198,3878,2.198,3879,1.24,3880,1.24,3881,2.198,3882,7.458,3883,2.198,3884,1.24,3885,4.097,3886,5.754,3887,2.961,3888,1.24,3889,1.24,3890,1.24,3891,3.582,3892,1.24,3893,1.24,3894,2.961,3895,1.24,3896,2.198,3897,1.24,3898,1.24,3899,1.24,3900,3.582,3901,1.24,3902,1.24,3903,1.24,3904,1.24,3905,3.582,3906,1.24,3907,1.24,3908,2.961,3909,1.24,3910,2.198,3911,2.961,3912,2.198,3913,1.24,3914,1.24,3915,1.24,3916,2.198,3917,2.961,3918,1.24,3919,1.24,3920,2.198,3921,1.24,3922,1.24,3923,1.24,3924,1.24,3925,1.24,3926,1.24,3927,2.961,3928,2.198,3929,1.24,3930,1.24,3931,3.582,3932,1.24,3933,2.961,3934,1.24,3935,1.24,3936,1.24,3937,2.198,3938,1.24,3939,1.24,3940,1.24,3941,2.961,3942,2.198,3943,2.198,3944,1.24,3945,4.904,3946,2.198,3947,2.961,3948,3.582,3949,1.24,3950,1.24,3951,1.24,3952,2.198,3953,1.24,3954,2.961,3955,1.24,3956,2.198,3957,1.24,3958,1.24,3959,1.24,3960,1.24,3961,2.961,3962,1.24,3963,2.961,3964,2.198,3965,1.24,3966,2.198,3967,1.24,3968,1.24,3969,2.198,3970,2.198,3971,1.24,3972,1.24,3973,2.198,3974,1.24,3975,1.24,3976,1.24,3977,1.24,3978,1.24,3979,2.961,3980,1.24,3981,1.24,3982,1.24,3983,1.24,3984,1.24,3985,3.582,3986,2.961,3987,1.24,3988,1.24,3989,1.24,3990,1.24,3991,1.24,3992,2.198,3993,1.24,3994,1.24,3995,1.24,3996,1.24,3997,1.24,3998,1.24,3999,1.24,4000,1.24,4001,1.24,4002,1.24,4003,1.24,4004,1.24,4005,1.24,4006,1.24,4007,3.582,4008,1.24,4009,2.198,4010,1.24,4011,1.24,4012,1.24,4013,1.24,4014,1.24,4015,1.24,4016,1.24,4017,1.24,4018,1.24,4019,2.961,4020,1.24,4021,1.24,4022,1.24,4023,2.198,4024,1.24,4025,1.24,4026,1.24,4027,1.24,4028,1.24,4029,2.198,4030,2.198,4031,4.097,4032,2.961,4033,1.24,4034,2.198,4035,1.24,4036,1.24,4037,1.24,4038,1.24,4039,2.961,4040,2.198,4041,1.24,4042,2.198,4043,2.198,4044,2.198,4045,1.24,4046,1.24,4047,1.24,4048,1.24,4049,1.24,4050,1.24,4051,2.198,4052,1.24,4053,1.24,4054,1.24,4055,1.24,4056,2.961,4057,1.24,4058,1.24,4059,1.24,4060,1.24,4061,1.24,4062,1.24,4063,1.24,4064,1.24,4065,1.24,4066,1.24,4067,2.198,4068,1.24,4069,1.24,4070,1.24,4071,1.24,4072,1.24,4073,1.24,4074,1.24,4075,1.24,4076,1.24,4077,1.24,4078,1.24,4079,1.24,4080,1.24,4081,1.24,4082,1.24,4083,1.24,4084,1.24,4085,1.24,4086,2.961,4087,2.198,4088,1.24,4089,1.24,4090,1.24,4091,1.24,4092,1.24,4093,2.198,4094,1.24,4095,1.24,4096,1.24,4097,1.24,4098,1.24,4099,1.24,4100,1.24,4101,1.24,4102,2.198,4103,1.24,4104,1.24,4105,1.24,4106,1.24,4107,1.24,4108,1.24,4109,1.24,4110,1.24,4111,1.24,4112,1.24,4113,1.24,4114,1.24,4115,1.24,4116,1.24,4117,1.24,4118,1.24,4119,1.24,4120,1.24,4121,1.24]],["title/modules.html",[4122,5.377]],["body/modules.html",[30,0.008,155,0.008,156,0.008,4122,6.49]],["title/overview.html",[4123,5.377]],["body/overview.html",[2,1.352,30,0.008,155,0.008,156,0.008,233,1.733,493,2.715,4123,6.426,4124,7.272,4125,7.272,4126,7.272]],["title/properties.html",[242,0.543,3178,2.984]],["body/properties.html",[30,0.008,155,0.008,156,0.008,242,0.742,2163,4.867,4127,7.308]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectReleaseDto.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":953,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/SingleProjectCardComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["0.0.0",{"_index":4127,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":3180,"title":{},"body":{"dependencies.html":{}}}],["0.07",{"_index":1949,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["0.14.4",{"_index":3215,"title":{},"body":{"dependencies.html":{}}}],["0xff",{"_index":1516,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["1",{"_index":763,"title":{"components/ProjectsComponent-1.html":{}},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["1.0.9",{"_index":3200,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":3197,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":3639,"title":{},"body":{"license.html":{}}}],["100",{"_index":2078,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["11",{"_index":3652,"title":{},"body":{"license.html":{}}}],["12",{"_index":785,"title":{},"body":{"components/ConfigComponent.html":{}}}],["13",{"_index":786,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["14",{"_index":302,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["15",{"_index":787,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["15.0.0",{"_index":3192,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":788,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["17",{"_index":3294,"title":{},"body":{"index.html":{}}}],["17.1.1",{"_index":3190,"title":{},"body":{"dependencies.html":{}}}],["17.1.3",{"_index":3291,"title":{},"body":{"index.html":{}}}],["17.2.1",{"_index":3183,"title":{},"body":{"dependencies.html":{}}}],["17.2.2",{"_index":3189,"title":{},"body":{"dependencies.html":{}}}],["17.2.3",{"_index":3181,"title":{},"body":{"dependencies.html":{}}}],["17.6.0",{"_index":3210,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":3658,"title":{},"body":{"license.html":{}}}],["1].label",{"_index":1224,"title":{},"body":{"components/HomeComponent.html":{}}}],["2",{"_index":3437,"title":{},"body":{"license.html":{}}}],["2.3.0",{"_index":3213,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":3656,"title":{},"body":{"license.html":{}}}],["2007",{"_index":3373,"title":{},"body":{"license.html":{}}}],["2021",{"_index":855,"title":{},"body":{"components/ConfigComponent.html":{}}}],["2022",{"_index":854,"title":{},"body":{"components/ConfigComponent.html":{}}}],["22",{"_index":4125,"title":{},"body":{"overview.html":{}}}],["28",{"_index":4003,"title":{},"body":{"license.html":{}}}],["29",{"_index":3371,"title":{},"body":{"license.html":{}}}],["3",{"_index":2786,"title":{},"body":{"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["3.3.1",{"_index":3206,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2036,"title":{},"body":{"components/OrganizationComponent.html":{},"license.html":{}}}],["4",{"_index":3689,"title":{},"body":{"license.html":{}}}],["4.18.2",{"_index":3204,"title":{},"body":{"dependencies.html":{}}}],["4.4.2",{"_index":3202,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":4126,"title":{},"body":{"overview.html":{}}}],["401",{"_index":955,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["404",{"_index":954,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/NotFoundComponent.html":{}}}],["409",{"_index":1282,"title":{},"body":{"components/InvitationComponent.html":{}}}],["5",{"_index":3720,"title":{},"body":{"license.html":{}}}],["51",{"_index":4124,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":3208,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":3895,"title":{},"body":{"license.html":{}}}],["6b",{"_index":3747,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3770,"title":{},"body":{"license.html":{}}}],["7",{"_index":3685,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":3211,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1515,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["8.0.0",{"_index":3195,"title":{},"body":{"dependencies.html":{}}}],["80:4000",{"_index":3332,"title":{},"body":{"index.html":{}}}],["90",{"_index":2038,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["991",{"_index":419,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["_val",{"_index":797,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ability",{"_index":3820,"title":{},"body":{"license.html":{}}}],["above",{"_index":236,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["absence",{"_index":3686,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":4076,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":4101,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":3465,"title":{},"body":{"license.html":{}}}],["accept",{"_index":678,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/InvitationService.html":{},"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{},"license.html":{}}}],["acceptance",{"_index":3905,"title":{},"body":{"license.html":{}}}],["acceptbuttonstyleclass",{"_index":1764,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["accepticon",{"_index":1767,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["acceptinvitation",{"_index":495,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{}}}],["acceptinvitation(invitationhash",{"_index":1317,"title":{},"body":{"injectables/InvitationService.html":{}}}],["acceptinvitationerror",{"_index":630,"title":{},"body":{"interfaces/AuthState.html":{}}}],["acceptinvitationfailure",{"_index":575,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["acceptinvitationsuccess",{"_index":496,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["access",{"_index":15,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["accessdeniedcomponent",{"_index":1,"title":{"components/AccessDeniedComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["accessible",{"_index":3972,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":709,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["accesstoken",{"_index":3129,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["accompanied",{"_index":3727,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4080,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3684,"title":{},"body":{"license.html":{}}}],["according",{"_index":4071,"title":{},"body":{"license.html":{}}}],["accordingly",{"_index":391,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["achieve",{"_index":4085,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":3619,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":3952,"title":{},"body":{"license.html":{}}}],["action",{"_index":654,"title":{},"body":{"interfaces/AuthState.html":{},"injectables/MembersEffects.html":{}}}],["actions",{"_index":509,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"license.html":{}}}],["activated",{"_index":1131,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["activatedroute",{"_index":1113,"title":{},"body":{"components/HomeComponent.html":{}}}],["active",{"_index":336,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MembersService.html":{},"components/MenuitemComponent.html":{}}}],["activeclass",{"_index":1863,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activemembers",{"_index":1546,"title":{},"body":{"components/MembersComponent.html":{},"interfaces/MembersState.html":{}}}],["activememberserror",{"_index":1649,"title":{},"body":{"interfaces/MembersState.html":{}}}],["activemembersstatus",{"_index":1650,"title":{},"body":{"interfaces/MembersState.html":{}}}],["activeroute",{"_index":1965,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activities",{"_index":3535,"title":{},"body":{"license.html":{}}}],["activity",{"_index":3999,"title":{},"body":{"license.html":{}}}],["actual",{"_index":3977,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":154,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["actually",{"_index":3793,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":3514,"title":{},"body":{"license.html":{}}}],["add",{"_index":3342,"title":{},"body":{"index.html":{},"license.html":{}}}],["added",{"_index":3683,"title":{},"body":{"license.html":{}}}],["adding",{"_index":726,"title":{},"body":{"components/ConfigComponent.html":{}}}],["additional",{"_index":778,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["addmemberserror",{"_index":2959,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["addmembersstatus",{"_index":2960,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["addprojectserror",{"_index":2961,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["addprojectsstatus",{"_index":2962,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["address",{"_index":4026,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":3511,"title":{},"body":{"license.html":{}}}],["adds",{"_index":1116,"title":{},"body":{"components/HomeComponent.html":{}}}],["addteammembers",{"_index":2849,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["addteammembers(teamid",{"_index":3055,"title":{},"body":{"injectables/TeamService.html":{}}}],["addteammembersfailure",{"_index":2950,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["addteammemberssuccess",{"_index":2909,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["addteamprojects",{"_index":2850,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["addteamprojects(teamid",{"_index":3057,"title":{},"body":{"injectables/TeamService.html":{}}}],["addteamprojectsfailure",{"_index":2951,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["addteamprojectssuccess",{"_index":2914,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["adjust",{"_index":298,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["adopted",{"_index":3655,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":3826,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4068,"title":{},"body":{"license.html":{}}}],["affects",{"_index":3827,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4019,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":3932,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":3614,"title":{},"body":{"license.html":{}}}],["afterviewchecked",{"_index":2797,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["afterviewinit",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["against",{"_index":3673,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":3711,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4015,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4055,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":3963,"title":{},"body":{"license.html":{}}}],["aim",{"_index":3461,"title":{},"body":{"license.html":{}}}],["alerts",{"_index":158,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts'},{'name",{"_index":52,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["alerts.component.html",{"_index":159,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alerts.component.scss",{"_index":160,"title":{},"body":{"components/AlertsComponent.html":{}}}],["alertscomponent",{"_index":51,"title":{"components/AlertsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["alleging",{"_index":3940,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3488,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":3386,"title":{},"body":{"license.html":{}}}],["allows",{"_index":388,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["allprojects",{"_index":2323,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["allprojectserror",{"_index":2324,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["allprojectsstatus",{"_index":2325,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["along",{"_index":3688,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1805,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["already",{"_index":3951,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":3743,"title":{},"body":{"license.html":{}}}],["although",{"_index":3457,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":3906,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":3441,"title":{},"body":{"license.html":{}}}],["android",{"_index":3228,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["angular",{"_index":1132,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["angular's",{"_index":1873,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["angular/animations",{"_index":1938,"title":{},"body":{"components/MenuitemComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":3182,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":31,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["angular/compiler",{"_index":3184,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":818,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":3185,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":33,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":3188,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":1936,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animate('400ms",{"_index":1946,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animations",{"_index":1942,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["anti",{"_index":3642,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":3695,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3523,"title":{},"body":{"license.html":{}}}],["api",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"index.html":{}}}],["api.authoptions",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["api.authoptionsautocontenttype",{"_index":2142,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["api.authurl",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.invitationurl",{"_index":1325,"title":{},"body":{"injectables/InvitationService.html":{}}}],["api.noauthoptions",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{}}}],["api.organizationurl",{"_index":2136,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["api.projecturl",{"_index":2310,"title":{},"body":{"injectables/ProjectService.html":{}}}],["api.teamurl",{"_index":3080,"title":{},"body":{"injectables/TeamService.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["app.component.html",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":53,"title":{"components/AppComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["appconfig",{"_index":232,"title":{"interfaces/AppConfig.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["appefects",{"_index":487,"title":{},"body":{"interfaces/AppState.html":{}}}],["applicable",{"_index":3528,"title":{},"body":{"license.html":{}}}],["application",{"_index":372,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["application's",{"_index":691,"title":{},"body":{"components/ConfigComponent.html":{}}}],["applications",{"_index":3283,"title":{},"body":{"index.html":{},"license.html":{}}}],["applied",{"_index":296,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applies",{"_index":760,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["apply",{"_index":258,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applyfilterglobal",{"_index":1687,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["applyfilterglobal($event",{"_index":1708,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["applyscale",{"_index":702,"title":{},"body":{"components/ConfigComponent.html":{}}}],["appropriate",{"_index":259,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["appropriately",{"_index":3678,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":4075,"title":{},"body":{"license.html":{}}}],["appsidebar",{"_index":1095,"title":{},"body":{"components/HomeComponent.html":{}}}],["appstate",{"_index":444,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["appstore",{"_index":488,"title":{},"body":{"interfaces/AppState.html":{}}}],["apptopbar",{"_index":1096,"title":{},"body":{"components/HomeComponent.html":{}}}],["archiveperiod",{"_index":2013,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["area",{"_index":3467,"title":{},"body":{"license.html":{}}}],["args.dto).pipe",{"_index":2945,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["args.ids).pipe",{"_index":2908,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["arise",{"_index":3475,"title":{},"body":{"license.html":{}}}],["arising",{"_index":4059,"title":{},"body":{"license.html":{}}}],["around",{"_index":2621,"title":{},"body":{"components/SidebarComponent.html":{}}}],["arrange",{"_index":3973,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":3986,"title":{},"body":{"license.html":{}}}],["array",{"_index":789,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["article",{"_index":3651,"title":{},"body":{"license.html":{}}}],["artifacts",{"_index":3316,"title":{},"body":{"index.html":{}}}],["asking",{"_index":3419,"title":{},"body":{"license.html":{}}}],["assert",{"_index":3436,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1070,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{}}}],["assets",{"_index":3922,"title":{},"body":{"license.html":{}}}],["assigning",{"_index":362,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["associated",{"_index":1912,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["assume",{"_index":4050,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":4079,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":3868,"title":{},"body":{"license.html":{}}}],["assures",{"_index":3495,"title":{},"body":{"license.html":{}}}],["async",{"_index":1588,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["async)?.pictureurl",{"_index":2088,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["async)?.slug",{"_index":2893,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["attach",{"_index":4087,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":3880,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":770,"title":{},"body":{"components/ConfigComponent.html":{}}}],["attributed",{"_index":3452,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":3852,"title":{},"body":{"license.html":{}}}],["auth",{"_index":490,"title":{},"body":{"components/AuthComponent.html":{},"injectables/JwtService.html":{}}}],["auth'},{'name",{"_index":56,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["auth.actions",{"_index":582,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["auth.component.html",{"_index":491,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":492,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.forgot",{"_index":1057,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["auth.invitation.back_to_login",{"_index":1306,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.email_is_required",{"_index":1301,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.email_label",{"_index":1300,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.first_name_is_required",{"_index":1303,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.first_name_label",{"_index":1302,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.last_name_is_required",{"_index":1305,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.last_name_label",{"_index":1304,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_label",{"_index":1297,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_length",{"_index":1298,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.password_not_strong",{"_index":1299,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error",{"_index":1283,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error_username_exists",{"_index":1284,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.registration_error_wrong_hash",{"_index":1285,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_is_required",{"_index":1295,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_label",{"_index":1294,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.username_length",{"_index":1296,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.welcome_description",{"_index":1293,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.invitation.welcome_message",{"_index":1292,"title":{},"body":{"components/InvitationComponent.html":{}}}],["auth.login.authorization_error",{"_index":1430,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.forgot_password",{"_index":1443,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_is_required",{"_index":1441,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_label",{"_index":1440,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_length",{"_index":1442,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.register",{"_index":1444,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.sign_in_to_continue",{"_index":1437,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_is_required",{"_index":1438,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_label",{"_index":1078,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["auth.login.username_length",{"_index":1439,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.welcome_message",{"_index":1436,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.wrong_username_or_password",{"_index":1431,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.register.back_to_login",{"_index":2510,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_is_required",{"_index":2505,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_label",{"_index":2504,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_is_required",{"_index":2507,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_label",{"_index":2506,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_is_required",{"_index":2509,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_label",{"_index":2508,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_label",{"_index":2501,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_length",{"_index":2502,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_not_strong",{"_index":2503,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error",{"_index":2493,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error_description",{"_index":2494,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_is_required",{"_index":2499,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_label",{"_index":2498,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_length",{"_index":2500,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_description",{"_index":2497,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_message",{"_index":2496,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.reset",{"_index":2531,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["auth/auth.effects",{"_index":455,"title":{},"body":{"interfaces/AppState.html":{}}}],["auth/auth.reducer",{"_index":457,"title":{},"body":{"interfaces/AppState.html":{}}}],["authcomponent",{"_index":55,"title":{"components/AuthComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["autheffects",{"_index":454,"title":{"injectables/AuthEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{}}}],["authenticate",{"_index":497,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{}}}],["authenticate(request",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticaterequestdto",{"_index":593,"title":{"interfaces/AuthenticateRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{}}}],["authentication",{"_index":656,"title":{},"body":{"interfaces/AuthState.html":{},"components/SidebarComponent.html":{}}}],["authenticationfailure",{"_index":576,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["authenticationsuccess",{"_index":498,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["authenticationsuccess(token",{"_index":537,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["author",{"_index":3851,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":3804,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":3844,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":3946,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":3990,"title":{},"body":{"license.html":{}}}],["authors",{"_index":3405,"title":{},"body":{"license.html":{}}}],["authreducer",{"_index":456,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["authservice",{"_index":506,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["authstate",{"_index":446,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{}}}],["automatic",{"_index":3914,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":3309,"title":{},"body":{"index.html":{},"license.html":{}}}],["available",{"_index":791,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["availablemembers",{"_index":1458,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["availableprojects",{"_index":2250,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["avatarmodule",{"_index":1455,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/TopbarComponent.html":{}}}],["avoid",{"_index":1974,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["away",{"_index":3393,"title":{},"body":{"license.html":{}}}],["b",{"_index":1236,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["badgemodule",{"_index":2009,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["bar",{"_index":2675,"title":{},"body":{"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["based",{"_index":282,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["basic",{"_index":3608,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":3630,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":281,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["being",{"_index":1133,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["believe",{"_index":3983,"title":{},"body":{"license.html":{}}}],["bell",{"_index":2702,"title":{},"body":{"components/SidebarComponent.html":{}}}],["below",{"_index":3636,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":3976,"title":{},"body":{"license.html":{}}}],["best",{"_index":4084,"title":{},"body":{"license.html":{}}}],["better",{"_index":1803,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["between",{"_index":3606,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":3713,"title":{},"body":{"license.html":{}}}],["bezier(0.86",{"_index":1948,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["binding",{"_index":1900,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["block",{"_index":1118,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockbodyscroll",{"_index":1104,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocked",{"_index":1148,"title":{},"body":{"components/HomeComponent.html":{}}}],["blue",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["body",{"_index":1117,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["book",{"_index":2706,"title":{},"body":{"components/SidebarComponent.html":{}}}],["boolean",{"_index":284,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/Role.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":847,"title":{},"body":{"components/ConfigComponent.html":{}}}],["both",{"_index":3446,"title":{},"body":{"license.html":{}}}],["box",{"_index":2672,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["breadcrumb",{"_index":1126,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbmodule",{"_index":1092,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs",{"_index":1121,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.length",{"_index":1221,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.push",{"_index":1222,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs[breadcrumbs.length",{"_index":1223,"title":{},"body":{"components/HomeComponent.html":{}}}],["browser",{"_index":3186,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["build",{"_index":3315,"title":{},"body":{"index.html":{}}}],["building",{"_index":2692,"title":{},"body":{"components/SidebarComponent.html":{}}}],["business",{"_index":3996,"title":{},"body":{"license.html":{}}}],["button",{"_index":766,"title":{},"body":{"components/ConfigComponent.html":{},"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["buttonmodule",{"_index":21,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{}}}],["buttons",{"_index":291,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["c",{"_index":3236,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["calendarmodule",{"_index":2404,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["call",{"_index":1913,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["callback",{"_index":781,"title":{},"body":{"components/ConfigComponent.html":{}}}],["called",{"_index":1835,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["calls",{"_index":3298,"title":{},"body":{"index.html":{}}}],["can't",{"_index":3364,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":3288,"title":{},"body":{"index.html":{}}}],["card",{"_index":2720,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card'},{'name",{"_index":138,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["card.component",{"_index":2384,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["card.component.html",{"_index":2724,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.scss",{"_index":2725,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts",{"_index":2718,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:110",{"_index":2736,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:119",{"_index":2738,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:35",{"_index":2733,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:37",{"_index":2746,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:39",{"_index":2742,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:40",{"_index":2745,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:53",{"_index":2732,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:61",{"_index":2739,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card.component.ts:76",{"_index":2741,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["card/single",{"_index":2383,"title":{},"body":{"components/ProjectsComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["cardmodule",{"_index":2722,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["carry",{"_index":3691,"title":{},"body":{"license.html":{}}}],["case",{"_index":3566,"title":{},"body":{"license.html":{}}}],["cases",{"_index":3787,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":572,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["catcherror((error",{"_index":522,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["cause",{"_index":3717,"title":{},"body":{"license.html":{}}}],["cd",{"_index":1864,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cease",{"_index":3884,"title":{},"body":{"license.html":{}}}],["centralized",{"_index":3277,"title":{},"body":{"index.html":{}}}],["certain",{"_index":745,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["cessation",{"_index":3897,"title":{},"body":{"license.html":{}}}],["chain",{"_index":1071,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{}}}],["change",{"_index":1815,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["changed",{"_index":779,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":1865,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["changelanguage",{"_index":3140,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changelanguage(language",{"_index":3145,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changes",{"_index":389,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["changeslugandcheckvalidity",{"_index":876,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["changeslugandcheckvalidity(organizationname",{"_index":887,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["changetheme",{"_index":703,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changetheme(theme",{"_index":750,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changing",{"_index":3385,"title":{},"body":{"license.html":{}}}],["char.charcodeat(0",{"_index":1514,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["characterized",{"_index":3817,"title":{},"body":{"license.html":{}}}],["charge",{"_index":3410,"title":{},"body":{"license.html":{}}}],["chart",{"_index":2655,"title":{},"body":{"components/SidebarComponent.html":{}}}],["chart.js",{"_index":3201,"title":{},"body":{"dependencies.html":{}}}],["chartdata",{"_index":2726,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["chartmodule",{"_index":2721,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["chartoptions",{"_index":2727,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["checkname",{"_index":2409,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["checkname(name",{"_index":2418,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["checks",{"_index":409,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["checkslug",{"_index":877,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["checkslug(slug",{"_index":890,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["checkusername",{"_index":1024,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusername(username",{"_index":1027,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["child",{"_index":1211,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["child.snapshot.data['breadcrumb",{"_index":1217,"title":{},"body":{"components/HomeComponent.html":{}}}],["child.snapshot.url",{"_index":1213,"title":{},"body":{"components/HomeComponent.html":{}}}],["children",{"_index":1208,"title":{},"body":{"components/HomeComponent.html":{}}}],["children.length",{"_index":1210,"title":{},"body":{"components/HomeComponent.html":{}}}],["choice",{"_index":3340,"title":{},"body":{"index.html":{}}}],["choose",{"_index":4034,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":4038,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1763,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{}}}],["circumstances",{"_index":3634,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":3643,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4078,"title":{},"body":{"license.html":{}}}],["claim",{"_index":3937,"title":{},"body":{"license.html":{}}}],["claims",{"_index":3948,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["class.active",{"_index":1861,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["class.layout",{"_index":1901,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cleanupperiod",{"_index":2014,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["clear",{"_index":1334,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clearly",{"_index":3443,"title":{},"body":{"license.html":{}}}],["cli",{"_index":3290,"title":{},"body":{"index.html":{}}}],["click",{"_index":1142,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["clicked",{"_index":294,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["clicking",{"_index":1851,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["client",{"_index":3297,"title":{},"body":{"index.html":{}}}],["clock",{"_index":2652,"title":{},"body":{"components/SidebarComponent.html":{}}}],["clone",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement.addeventlistener('load",{"_index":836,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('href",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('id",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["close",{"_index":339,"title":{},"body":{"interfaces/AppConfig.html":{},"components/CloseComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["close'},{'name",{"_index":58,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["close.component.html",{"_index":686,"title":{},"body":{"components/CloseComponent.html":{}}}],["close.component.scss",{"_index":687,"title":{},"body":{"components/CloseComponent.html":{}}}],["closecomponent",{"_index":57,"title":{"components/CloseComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["closed",{"_index":381,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["closely",{"_index":4074,"title":{},"body":{"license.html":{}}}],["cms",{"_index":3280,"title":{},"body":{"index.html":{}}}],["cms:1",{"_index":3331,"title":{},"body":{"index.html":{}}}],["cms:latestimportant",{"_index":3352,"title":{},"body":{"index.html":{}}}],["cms:latestthen",{"_index":3351,"title":{},"body":{"index.html":{}}}],["code",{"_index":237,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["collapsed",{"_index":1944,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["collect",{"_index":3281,"title":{},"body":{"index.html":{},"license.html":{}}}],["color",{"_index":267,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["colorscheme",{"_index":245,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["colour",{"_index":1517,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["combination",{"_index":4022,"title":{},"body":{"license.html":{}}}],["combine",{"_index":4020,"title":{},"body":{"license.html":{}}}],["combined",{"_index":3708,"title":{},"body":{"license.html":{}}}],["comes",{"_index":3696,"title":{},"body":{"license.html":{}}}],["command",{"_index":1888,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["commands",{"_index":3556,"title":{},"body":{"license.html":{}}}],["comment",{"_index":3247,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comments",{"_index":261,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["commercial",{"_index":3798,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":3964,"title":{},"body":{"license.html":{}}}],["common",{"_index":3792,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":20,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["communication",{"_index":3604,"title":{},"body":{"license.html":{}}}],["compact",{"_index":850,"title":{},"body":{"components/ConfigComponent.html":{}}}],["compilation",{"_index":3703,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":3712,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4001,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":3586,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":3919,"title":{},"body":{"license.html":{}}}],["comply",{"_index":3628,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{},"license.html":{}}}],["component's",{"_index":742,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["component_template",{"_index":48,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{},"overview.html":{}}}],["components/config/config.component",{"_index":1170,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/footer/footer.component",{"_index":1171,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/sidebar/sidebar.component",{"_index":1172,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/single",{"_index":2382,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["components/topbar/topbar.component",{"_index":1173,"title":{},"body":{"components/HomeComponent.html":{}}}],["compose",{"_index":3357,"title":{},"body":{"index.html":{}}}],["computer",{"_index":3531,"title":{},"body":{"license.html":{}}}],["computers",{"_index":3491,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":4021,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":4027,"title":{},"body":{"license.html":{}}}],["conditionally",{"_index":743,"title":{},"body":{"components/ConfigComponent.html":{}}}],["conditioned",{"_index":3995,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":3497,"title":{},"body":{"license.html":{}}}],["config",{"_index":303,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["config'},{'name",{"_index":60,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["config.component.html",{"_index":697,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.component.scss",{"_index":698,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.filled",{"_index":845,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.input_style",{"_index":843,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.menu_type",{"_index":840,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.outlined",{"_index":844,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.overlay",{"_index":842,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.ripple_effect",{"_index":846,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.scale",{"_index":839,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.static",{"_index":841,"title":{},"body":{"components/ConfigComponent.html":{}}}],["configcomponent",{"_index":59,"title":{"components/ConfigComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["configsidebarvisible",{"_index":320,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configupdate",{"_index":364,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configuration",{"_index":251,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["confirmationservice",{"_index":1674,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["confirmdialogmodule",{"_index":1678,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["conjunction",{"_index":755,"title":{},"body":{"components/ConfigComponent.html":{}}}],["connection",{"_index":3985,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":3908,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4058,"title":{},"body":{"license.html":{}}}],["consider",{"_index":4115,"title":{},"body":{"license.html":{}}}],["considered",{"_index":3870,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":3956,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":3677,"title":{},"body":{"license.html":{}}}],["const",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["constantly",{"_index":3486,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":3618,"title":{},"body":{"license.html":{}}}],["construct",{"_index":1883,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["constructed",{"_index":1134,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(authservice",{"_index":505,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(formbuilder",{"_index":1025,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(http",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["constructor(layoutservice",{"_index":710,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(localstorage",{"_index":1356,"title":{},"body":{"injectables/LayoutService.html":{}}}],["constructor(membersservice",{"_index":1598,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["constructor(organizationservice",{"_index":881,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{}}}],["constructor(platformservice",{"_index":2171,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["constructor(private",{"_index":355,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent-1.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{}}}],["constructor(projectservice",{"_index":2208,"title":{},"body":{"injectables/ProjectEffects.html":{},"components/SingleProjectCardComponent.html":{}}}],["constructor(roleservice",{"_index":2555,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["constructor(storage",{"_index":1339,"title":{},"body":{"injectables/JwtService.html":{}}}],["constructor(store",{"_index":1110,"title":{},"body":{"components/HomeComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["constructor(teamservice",{"_index":2903,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["constructor(translate",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["construed",{"_index":4005,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":3775,"title":{},"body":{"license.html":{}}}],["contact",{"_index":4094,"title":{},"body":{"license.html":{}}}],["contain",{"_index":725,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["container",{"_index":3348,"title":{},"body":{"index.html":{}}}],["containerclass",{"_index":1109,"title":{},"body":{"components/HomeComponent.html":{}}}],["containing",{"_index":3853,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1828,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["content",{"_index":3617,"title":{},"body":{"license.html":{}}}],["contents",{"_index":3960,"title":{},"body":{"license.html":{}}}],["contenttype",{"_index":1003,"title":{},"body":{"interfaces/FileDto.html":{}}}],["context",{"_index":3580,"title":{},"body":{"license.html":{}}}],["continue",{"_index":3823,"title":{},"body":{"license.html":{}}}],["continued",{"_index":3807,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":3867,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4011,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3396,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":3945,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":3947,"title":{},"body":{"license.html":{}}}],["control",{"_index":717,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["controlled",{"_index":3950,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":3549,"title":{},"body":{"license.html":{}}}],["convention",{"_index":394,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["converttodate",{"_index":3257,"title":{},"body":{"miscellaneous/functions.html":{}}}],["converttodate(body",{"_index":3265,"title":{},"body":{"miscellaneous/functions.html":{}}}],["convey",{"_index":3536,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":3988,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":3818,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":3544,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":3866,"title":{},"body":{"license.html":{}}}],["copies",{"_index":3384,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3381,"title":{},"body":{"license.html":{}}}],["copying",{"_index":3498,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":3388,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3374,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":3507,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":3632,"title":{},"body":{"license.html":{}}}],["core/domain/dto/invitation.dto",{"_index":1733,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/domain/dto/project",{"_index":2750,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["core/domain/dto/requests/create",{"_index":923,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["core/domain/dto/requests/register",{"_index":1273,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["core/domain/models/enums/permission.enum",{"_index":1573,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["core/domain/models/enums/resource",{"_index":1575,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["core/domain/models/enums/state",{"_index":1734,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["core/domain/models/organization.entity",{"_index":2058,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["core/domain/models/platform.entity",{"_index":2436,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/domain/models/project.entity",{"_index":2261,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{}}}],["core/domain/models/team.entity",{"_index":2376,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["core/domain/models/user.entity",{"_index":1501,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["core/services/api/auth.api.service",{"_index":1049,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/api/invitation.api.service",{"_index":1277,"title":{},"body":{"components/InvitationComponent.html":{}}}],["core/services/api/organization.api.service",{"_index":924,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["core/services/api/project.api.service",{"_index":2437,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["core/services/api/team.api.service",{"_index":2848,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["core/services/layout.service",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["core/services/menu.service",{"_index":817,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["core/state/app.state",{"_index":925,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.actions",{"_index":1048,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.selectors",{"_index":1047,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/members/members.actions",{"_index":1503,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{}}}],["core/state/members/members.selectors",{"_index":1506,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{}}}],["core/state/organization/organization.actions",{"_index":927,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/OrganizationComponent.html":{}}}],["core/state/organization/organization.selectors",{"_index":931,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/OrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/platform/platform.actions",{"_index":2438,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/state/platform/platform.selectors",{"_index":2440,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["core/state/project/project.actions",{"_index":2262,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{}}}],["core/state/project/project.selectors",{"_index":2265,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{}}}],["core/state/role/role.actions",{"_index":1738,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/state/role/role.selectors",{"_index":1740,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["core/state/single",{"_index":2858,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["core/state/team/team.actions",{"_index":2379,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["core/state/team/team.selectors",{"_index":2381,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["core/utils/regex.constants",{"_index":1276,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["correction",{"_index":4054,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":3356,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":3589,"title":{},"body":{"license.html":{}}}],["cost",{"_index":3741,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":3938,"title":{},"body":{"license.html":{}}}],["countries",{"_index":3534,"title":{},"body":{"license.html":{}}}],["country",{"_index":3979,"title":{},"body":{"license.html":{}}}],["course",{"_index":4106,"title":{},"body":{"license.html":{}}}],["court",{"_index":4010,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4073,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":3967,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":3790,"title":{},"body":{"license.html":{}}}],["covered",{"_index":3520,"title":{},"body":{"license.html":{}}}],["cpp",{"_index":3237,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["crash",{"_index":2764,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["crashfreegain",{"_index":2240,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["crashfreepercentage",{"_index":2241,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["crashfreepercentagegain",{"_index":2314,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["create",{"_index":62,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["createbreadcrumbs",{"_index":1105,"title":{},"body":{"components/HomeComponent.html":{}}}],["createbreadcrumbs(route",{"_index":1120,"title":{},"body":{"components/HomeComponent.html":{}}}],["created",{"_index":376,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["createdat",{"_index":2003,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Role.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["createdtime",{"_index":1004,"title":{},"body":{"interfaces/FileDto.html":{}}}],["createeffect",{"_index":511,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["createneworganization",{"_index":2098,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["createnewproject",{"_index":2410,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["createnewprojectform",{"_index":2405,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["createnewteam",{"_index":3048,"title":{},"body":{"injectables/TeamService.html":{}}}],["createnewteam(dto",{"_index":3059,"title":{},"body":{"injectables/TeamService.html":{}}}],["createorganization",{"_index":878,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["createorganization(dto",{"_index":2126,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["createorganizationcomponent",{"_index":61,"title":{"components/CreateOrganizationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["createorganizationfailure",{"_index":2147,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["createorganizationform",{"_index":868,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["createorganizationrequestdto",{"_index":922,"title":{"interfaces/CreateOrganizationRequestDto.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"injectables/OrganizationService.html":{}}}],["createorganizationsuccess",{"_index":2117,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["createorganizationsuccess(organization",{"_index":2103,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["createorganizationteamerror",{"_index":3087,"title":{},"body":{"interfaces/TeamState.html":{}}}],["createorganizationteamstatus",{"_index":3088,"title":{},"body":{"interfaces/TeamState.html":{}}}],["createproject",{"_index":2205,"title":{},"body":{"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{}}}],["createproject(dto",{"_index":2293,"title":{},"body":{"injectables/ProjectService.html":{}}}],["createprojecterror",{"_index":2326,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["createprojectfailure",{"_index":2229,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["createprojectrequestdto",{"_index":985,"title":{"interfaces/CreateProjectRequestDto.html":{}},"body":{"interfaces/CreateProjectRequestDto.html":{},"injectables/ProjectService.html":{}}}],["createprojectstatus",{"_index":2327,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["createprojectsuccess",{"_index":2230,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["createprojectsuccess(project",{"_index":2214,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["createreducer",{"_index":640,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["creates",{"_index":1124,"title":{},"body":{"components/HomeComponent.html":{}}}],["createteam",{"_index":3014,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamfailure",{"_index":3039,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamrequestdto",{"_index":987,"title":{"interfaces/CreateTeamRequestDto.html":{}},"body":{"interfaces/CreateTeamRequestDto.html":{},"injectables/TeamService.html":{}}}],["createteamsuccess",{"_index":3040,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["createteamsuccess(team",{"_index":3019,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["creating",{"_index":366,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["credentials",{"_index":631,"title":{},"body":{"interfaces/AuthState.html":{}}}],["criterion",{"_index":3559,"title":{},"body":{"license.html":{}}}],["cross",{"_index":3936,"title":{},"body":{"license.html":{}}}],["cs",{"_index":3245,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["css",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["cubic",{"_index":1947,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cure",{"_index":3901,"title":{},"body":{"license.html":{}}}],["current",{"_index":257,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["currently",{"_index":329,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["currentuser",{"_index":1097,"title":{},"body":{"components/HomeComponent.html":{}}}],["currentusererrorsubscription",{"_index":1098,"title":{},"body":{"components/HomeComponent.html":{}}}],["custom",{"_index":1821,"title":{},"body":{"injectables/MenuService.html":{}}}],["customarily",{"_index":3730,"title":{},"body":{"license.html":{}}}],["customer",{"_index":3737,"title":{},"body":{"license.html":{}}}],["d",{"_index":2772,"title":{},"body":{"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["damages",{"_index":4056,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1765,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{},"license.html":{}}}],["dark",{"_index":270,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["data",{"_index":1692,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"components/ProjectsTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["data.append('picture",{"_index":2140,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["database",{"_index":2658,"title":{},"body":{"components/SidebarComponent.html":{}}}],["datasets",{"_index":2761,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["date",{"_index":1008,"title":{},"body":{"interfaces/FileDto.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/Role.html":{},"components/SingleProjectCardComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["datepipe",{"_index":2719,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["days",{"_index":3896,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":919,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["debouncetime(500",{"_index":937,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["debug_file",{"_index":3248,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["december",{"_index":3657,"title":{},"body":{"license.html":{}}}],["decide",{"_index":4036,"title":{},"body":{"license.html":{}}}],["declares",{"_index":316,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["declaring",{"_index":266,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["declining",{"_index":3859,"title":{},"body":{"license.html":{}}}],["decorator",{"_index":736,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["decorators",{"_index":908,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{}}}],["decrements",{"_index":759,"title":{},"body":{"components/ConfigComponent.html":{}}}],["decrementscale",{"_index":704,"title":{},"body":{"components/ConfigComponent.html":{}}}],["deemed",{"_index":3645,"title":{},"body":{"license.html":{}}}],["default",{"_index":300,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["defective",{"_index":4049,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4008,"title":{},"body":{"license.html":{}}}],["defined",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["defines",{"_index":348,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["defining",{"_index":238,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["definition",{"_index":3596,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":3502,"title":{},"body":{"license.html":{}}}],["delete",{"_index":3226,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deleteorganization",{"_index":2018,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["deleteteam",{"_index":2807,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{}}}],["deleteteam(teamid",{"_index":3061,"title":{},"body":{"injectables/TeamService.html":{}}}],["deleteteamerror",{"_index":3089,"title":{},"body":{"interfaces/TeamState.html":{}}}],["deleteteamfailure",{"_index":3041,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["deleteteamstatus",{"_index":3090,"title":{},"body":{"interfaces/TeamState.html":{}}}],["deleteteamsuccess",{"_index":3042,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["deleteteamsuccess({teamid",{"_index":3024,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["denied",{"_index":16,"title":{},"body":{"components/AccessDeniedComponent.html":{},"license.html":{}}}],["denied'},{'name",{"_index":50,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["denied.access_denied",{"_index":40,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component",{"_index":1583,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["denied.component.html",{"_index":26,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component.scss",{"_index":28,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.component.ts",{"_index":11,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied.insufficient_permission",{"_index":42,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["denied/access",{"_index":10,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["denominated",{"_index":3965,"title":{},"body":{"license.html":{}}}],["deny",{"_index":3455,"title":{},"body":{"license.html":{}}}],["denying",{"_index":3418,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":3179,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":733,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["deploy",{"_index":3322,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":3344,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":3974,"title":{},"body":{"license.html":{}}}],["description",{"_index":235,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["design",{"_index":849,"title":{},"body":{"components/ConfigComponent.html":{}}}],["designated",{"_index":3749,"title":{},"body":{"license.html":{}}}],["designed",{"_index":3392,"title":{},"body":{"license.html":{}}}],["desktop",{"_index":331,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["detail",{"_index":961,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"license.html":{}}}],["details",{"_index":990,"title":{},"body":{"components/DetailsComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/ProjectDetailsComponent.html":{},"license.html":{}}}],["details'},{'name",{"_index":65,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["details.component.html",{"_index":991,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProjectDetailsComponent.html":{}}}],["details.component.scss",{"_index":992,"title":{},"body":{"components/DetailsComponent.html":{},"components/ProjectDetailsComponent.html":{}}}],["details.component.ts",{"_index":2200,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["details.the",{"_index":4104,"title":{},"body":{"license.html":{}}}],["details/project",{"_index":2199,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["detailscomponent",{"_index":64,"title":{"components/DetailsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["detected",{"_index":1872,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["detection",{"_index":1870,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["determine",{"_index":256,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["determining",{"_index":3785,"title":{},"body":{"license.html":{}}}],["dev",{"_index":3306,"title":{},"body":{"index.html":{}}}],["develop",{"_index":4081,"title":{},"body":{"license.html":{}}}],["developers",{"_index":3433,"title":{},"body":{"license.html":{}}}],["development",{"_index":3302,"title":{},"body":{"index.html":{},"license.html":{}}}],["device",{"_index":332,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["device_state",{"_index":3249,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["devices",{"_index":994,"title":{},"body":{"components/DevicesComponent.html":{},"license.html":{}}}],["devices'},{'name",{"_index":67,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["devices.component.html",{"_index":995,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devices.component.scss",{"_index":996,"title":{},"body":{"components/DevicesComponent.html":{}}}],["devicescomponent",{"_index":66,"title":{"components/DevicesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["devtools",{"_index":3191,"title":{},"body":{"dependencies.html":{}}}],["dialogmodule",{"_index":1453,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["differ",{"_index":4025,"title":{},"body":{"license.html":{}}}],["different",{"_index":746,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["differently",{"_index":3849,"title":{},"body":{"license.html":{}}}],["direction",{"_index":3631,"title":{},"body":{"license.html":{}}}],["directions",{"_index":3755,"title":{},"body":{"license.html":{}}}],["directive",{"_index":46,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["directives",{"_index":153,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3314,"title":{},"body":{"index.html":{}}}],["directly",{"_index":3524,"title":{},"body":{"license.html":{}}}],["directory",{"_index":3319,"title":{},"body":{"index.html":{}}}],["disable",{"_index":383,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["disabled",{"_index":1241,"title":{},"body":{"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/MenuitemComponent.html":{}}}],["disclaim",{"_index":3668,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4039,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":3846,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":3992,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":568,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{}}}],["display",{"_index":1130,"title":{},"body":{"components/HomeComponent.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["displayed",{"_index":2629,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["displays",{"_index":3546,"title":{},"body":{"license.html":{}}}],["dist",{"_index":3318,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":920,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["distinguishing",{"_index":4028,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":3382,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":3282,"title":{},"body":{"index.html":{},"license.html":{}}}],["distributing",{"_index":3997,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":3499,"title":{},"body":{"license.html":{}}}],["dividermodule",{"_index":2008,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["docker",{"_index":3320,"title":{},"body":{"index.html":{}}}],["document",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"license.html":{}}}],["document.body.classname.replace",{"_index":1234,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":998,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation'},{'name",{"_index":69,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["documentation.component.html",{"_index":999,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentation.component.scss",{"_index":1000,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["documentationcomponent",{"_index":68,"title":{"components/DocumentationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["documented",{"_index":3833,"title":{},"body":{"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["domain/dto/file.dto",{"_index":2135,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["domain/dto/invitation.dto",{"_index":1323,"title":{},"body":{"injectables/InvitationService.html":{}}}],["domain/dto/members.dto",{"_index":1645,"title":{},"body":{"injectables/MembersService.html":{},"interfaces/MembersState.html":{}}}],["domain/dto/organization.dto",{"_index":2134,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["domain/dto/platform.dto",{"_index":2187,"title":{},"body":{"injectables/PlatformService.html":{}}}],["domain/dto/project",{"_index":2306,"title":{},"body":{"injectables/ProjectService.html":{}}}],["domain/dto/project.dto",{"_index":2304,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TeamService.html":{}}}],["domain/dto/requests/authenticate",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{}}}],["domain/dto/requests/create",{"_index":2133,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/ProjectService.html":{},"injectables/TeamService.html":{}}}],["domain/dto/requests/invitation",{"_index":1324,"title":{},"body":{"injectables/InvitationService.html":{}}}],["domain/dto/requests/register",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{}}}],["domain/dto/requests/reset",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/team.dto",{"_index":3078,"title":{},"body":{"injectables/TeamService.html":{}}}],["domain/dto/token.dto",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/user.dto",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MembersService.html":{},"injectables/TeamService.html":{}}}],["domain/models/enums/state",{"_index":642,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["domain/models/invitation.entity",{"_index":1656,"title":{},"body":{"interfaces/MembersState.html":{}}}],["domain/models/menu",{"_index":1845,"title":{},"body":{"injectables/MenuService.html":{}}}],["domain/models/organization.entity",{"_index":2146,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["domain/models/platform.entity",{"_index":2190,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["domain/models/project.entity",{"_index":2331,"title":{},"body":{"interfaces/ProjectState.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["domain/models/team.entity",{"_index":2976,"title":{},"body":{"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["domain/models/token.entity",{"_index":644,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/user.entity",{"_index":645,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["domain/your",{"_index":3326,"title":{},"body":{"index.html":{}}}],["domains",{"_index":3477,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":3786,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":3916,"title":{},"body":{"license.html":{}}}],["dradman",{"_index":1013,"title":{},"body":{"components/FooterComponent.html":{}}}],["dradman/loghub",{"_index":3330,"title":{},"body":{"index.html":{}}}],["dropdownmodule",{"_index":1677,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["dt",{"_index":1681,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["dto",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateOrganizationComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/MembersTableComponent.html":{},"injectables/OrganizationService.html":{},"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{}}}],["due",{"_index":3360,"title":{},"body":{"index.html":{}}}],["durable",{"_index":3729,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":3784,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":3187,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3598,"title":{},"body":{"license.html":{}}}],["e",{"_index":3764,"title":{},"body":{"license.html":{}}}],["e.g",{"_index":1909,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["e2e",{"_index":3339,"title":{},"body":{"index.html":{}}}],["each",{"_index":262,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["earlier",{"_index":3519,"title":{},"body":{"license.html":{}}}],["effect",{"_index":293,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["effected",{"_index":3666,"title":{},"body":{"license.html":{}}}],["effective",{"_index":3646,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":3493,"title":{},"body":{"license.html":{}}}],["effects",{"_index":288,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["efforts",{"_index":3930,"title":{},"body":{"license.html":{}}}],["el",{"_index":2603,"title":{},"body":{"components/SidebarComponent.html":{}}}],["electronic",{"_index":4095,"title":{},"body":{"license.html":{}}}],["element",{"_index":45,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["elementref",{"_index":907,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{}}}],["elements",{"_index":273,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["email",{"_index":1085,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["embodied",{"_index":3724,"title":{},"body":{"license.html":{}}}],["emit",{"_index":369,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["emits",{"_index":350,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["emitted",{"_index":1524,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["emitting",{"_index":1819,"title":{},"body":{"injectables/MenuService.html":{}}}],["employer",{"_index":4108,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1926,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["en",{"_index":3154,"title":{},"body":{"components/TopbarComponent.html":{}}}],["enable",{"_index":287,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["enableaddaction",{"_index":2413,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["enablefiltering",{"_index":1693,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["enableglobalsearch",{"_index":1694,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["enableinviteaction",{"_index":1695,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["enablepagination",{"_index":1696,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["enableremoveaction",{"_index":1697,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["enables",{"_index":3538,"title":{},"body":{"license.html":{}}}],["enablesorting",{"_index":1698,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["end",{"_index":392,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["enddate",{"_index":2735,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["endinterval",{"_index":2242,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["enforce",{"_index":3966,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":3672,"title":{},"body":{"license.html":{}}}],["english",{"_index":3153,"title":{},"body":{"components/TopbarComponent.html":{}}}],["enhancing",{"_index":3285,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":3761,"title":{},"body":{"license.html":{}}}],["entered",{"_index":4002,"title":{},"body":{"license.html":{}}}],["entire",{"_index":3694,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":4018,"title":{},"body":{"license.html":{}}}],["entity",{"_index":3920,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":3217,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/permission.enum",{"_index":2549,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["enums/platform",{"_index":2165,"title":{},"body":{"interfaces/Platform.html":{}}}],["enums/resource",{"_index":2550,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["env",{"_index":3366,"title":{},"body":{"index.html":{}}}],["envelope",{"_index":2647,"title":{},"body":{"components/SidebarComponent.html":{}}}],["environment",{"_index":1426,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["environment.appname",{"_index":1434,"title":{},"body":{"components/LoginComponent.html":{},"components/TopbarComponent.html":{}}}],["environment.enableregistration",{"_index":1435,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["environments/environment",{"_index":1427,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["equal",{"_index":413,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["equivalent",{"_index":3621,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":3453,"title":{},"body":{"license.html":{}}}],["error",{"_index":524,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["error('method",{"_index":2063,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["error.status",{"_index":952,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{}}}],["errors",{"_index":2243,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["errorsubscription",{"_index":869,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["eslint",{"_index":382,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["eslint/ban",{"_index":834,"title":{},"body":{"components/ConfigComponent.html":{}}}],["eslint/component",{"_index":1941,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["eslint/no",{"_index":386,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["essential",{"_index":3581,"title":{},"body":{"license.html":{}}}],["even",{"_index":4067,"title":{},"body":{"license.html":{}}}],["event",{"_index":934,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{},"license.html":{}}}],["event.files.length",{"_index":2069,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["event.files[0",{"_index":2070,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["event.model",{"_index":1846,"title":{},"body":{"injectables/MenuService.html":{}}}],["event.model.ts",{"_index":1816,"title":{},"body":{"interfaces/MenuChangeEvent.html":{}}}],["event.preventdefault",{"_index":1977,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["event.target",{"_index":935,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["event.value",{"_index":2387,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["events",{"_index":351,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["eventtarget",{"_index":1758,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["everyone",{"_index":3379,"title":{},"body":{"license.html":{}}}],["exact",{"_index":1968,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["example",{"_index":3324,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":3530,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":3837,"title":{},"body":{"license.html":{}}}],["exclamation",{"_index":2690,"title":{},"body":{"components/SidebarComponent.html":{}}}],["excluded",{"_index":3774,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":4006,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":4090,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":3957,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":3626,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4012,"title":{},"body":{"license.html":{}}}],["executable",{"_index":3572,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1911,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["executed",{"_index":782,"title":{},"body":{"components/ConfigComponent.html":{}}}],["executing",{"_index":1907,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["exercise",{"_index":3931,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":3667,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1920,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["expanded",{"_index":1925,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["expected",{"_index":3796,"title":{},"body":{"license.html":{}}}],["expects",{"_index":3795,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":3130,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["explains",{"_index":3444,"title":{},"body":{"license.html":{}}}],["explicit",{"_index":387,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["explicitly",{"_index":1914,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectReleaseDto.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{}}}],["express",{"_index":3203,"title":{},"body":{"dependencies.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["expressed",{"_index":4041,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":3879,"title":{},"body":{"license.html":{}}}],["extend",{"_index":3480,"title":{},"body":{"license.html":{}}}],["extended",{"_index":3991,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":3707,"title":{},"body":{"license.html":{}}}],["extent",{"_index":3548,"title":{},"body":{"license.html":{}}}],["f",{"_index":3864,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":3627,"title":{},"body":{"license.html":{}}}],["fails",{"_index":3892,"title":{},"body":{"license.html":{}}}],["failure",{"_index":660,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"license.html":{}}}],["fair",{"_index":3620,"title":{},"body":{"license.html":{}}}],["false",{"_index":295,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{}}}],["family",{"_index":3779,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":3516,"title":{},"body":{"license.html":{}}}],["favor",{"_index":3789,"title":{},"body":{"license.html":{}}}],["feature",{"_index":3551,"title":{},"body":{"license.html":{}}}],["features",{"_index":3293,"title":{},"body":{"index.html":{}}}],["fee",{"_index":3426,"title":{},"body":{"license.html":{}}}],["feel",{"_index":720,"title":{},"body":{"components/ConfigComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectReleaseDto.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["filedto",{"_index":1001,"title":{"interfaces/FileDto.html":{}},"body":{"interfaces/FileDto.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["filedto.url",{"_index":2157,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["filename",{"_index":1005,"title":{},"body":{"interfaces/FileDto.html":{}}}],["files",{"_index":3311,"title":{},"body":{"index.html":{},"license.html":{}}}],["filesize",{"_index":1006,"title":{},"body":{"interfaces/FileDto.html":{}}}],["fileupload",{"_index":2049,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fileuploadhandlerevent",{"_index":2034,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["fileuploadmodule",{"_index":2011,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["filled",{"_index":275,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["filter",{"_index":1169,"title":{},"body":{"components/HomeComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["filter((members",{"_index":1521,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["filter((projects",{"_index":2268,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["filteredprojects",{"_index":2347,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filtermyteams",{"_index":2352,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filtermyteams($event",{"_index":2355,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filterprojects",{"_index":2353,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filterservice",{"_index":2343,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["filtervalue",{"_index":2348,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["finally",{"_index":3484,"title":{},"body":{"license.html":{}}}],["find",{"_index":3757,"title":{},"body":{"license.html":{}}}],["first",{"_index":3323,"title":{},"body":{"index.html":{},"license.html":{}}}],["firstname",{"_index":1265,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["fitness",{"_index":4044,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":3728,"title":{},"body":{"license.html":{}}}],["flag",{"_index":3151,"title":{},"body":{"components/TopbarComponent.html":{}}}],["flow",{"_index":3605,"title":{},"body":{"license.html":{}}}],["fluent",{"_index":852,"title":{},"body":{"components/ConfigComponent.html":{}}}],["follow",{"_index":3501,"title":{},"body":{"license.html":{}}}],["following",{"_index":3961,"title":{},"body":{"license.html":{}}}],["font",{"_index":748,"title":{},"body":{"components/ConfigComponent.html":{}}}],["footer",{"_index":1010,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":71,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["footer.component.html",{"_index":1011,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":1012,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":70,"title":{"components/FooterComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forbid",{"_index":3665,"title":{},"body":{"license.html":{}}}],["force",{"_index":3623,"title":{},"body":{"license.html":{}}}],["foreach((value",{"_index":2067,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["forgot",{"_index":73,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forgotpassword",{"_index":499,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{}}}],["forgotpassword(username",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":72,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["forgotpassworderror",{"_index":632,"title":{},"body":{"interfaces/AuthState.html":{}}}],["forgotpasswordfailure",{"_index":577,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["forgotpasswordform",{"_index":1019,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordrequestdto",{"_index":1083,"title":{"interfaces/ForgotPasswordRequestDto.html":{}},"body":{"interfaces/ForgotPasswordRequestDto.html":{}}}],["forgotpasswordsuccess",{"_index":548,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["form",{"_index":3561,"title":{},"body":{"license.html":{}}}],["format",{"_index":3831,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":884,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["formdata",{"_index":2139,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["forms",{"_index":3718,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":696,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["found",{"_index":1994,"title":{},"body":{"components/NotFoundComponent.html":{},"license.html":{}}}],["found'},{'name",{"_index":100,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["found.component",{"_index":2870,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["found.component.html",{"_index":1995,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.scss",{"_index":1996,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":1993,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.not_available",{"_index":1998,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.not_found",{"_index":1997,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found/not",{"_index":1992,"title":{},"body":{"components/NotFoundComponent.html":{},"components/SingleTeamComponent.html":{}}}],["foundation",{"_index":3376,"title":{},"body":{"license.html":{}}}],["fragment",{"_index":1972,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["free",{"_index":2765,"title":{},"body":{"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["freedom",{"_index":3394,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":3429,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":921,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["fromevent(this.nameinput.nativeelement",{"_index":940,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["fromevent(this.sluginput.nativeelement",{"_index":932,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["fromevent(this.usernameinput.nativeelement",{"_index":1050,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fulfilling",{"_index":3649,"title":{},"body":{"license.html":{}}}],["full",{"_index":3329,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":334,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MemberPickerComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/ProjectPickerComponent.html":{},"components/SidebarComponent.html":{}}}],["functionality",{"_index":689,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["functioning",{"_index":3808,"title":{},"body":{"license.html":{}}}],["functions",{"_index":255,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":3459,"title":{},"body":{"license.html":{}}}],["further",{"_index":1916,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["future",{"_index":3482,"title":{},"body":{"license.html":{}}}],["fw",{"_index":2637,"title":{},"body":{"components/SidebarComponent.html":{}}}],["gb",{"_index":3152,"title":{},"body":{"components/TopbarComponent.html":{}}}],["general",{"_index":3361,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":3594,"title":{},"body":{"license.html":{}}}],["generate",{"_index":3313,"title":{},"body":{"index.html":{},"license.html":{}}}],["generated",{"_index":3289,"title":{},"body":{"index.html":{}}}],["getactiveclass",{"_index":1935,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getactivemembers",{"_index":1637,"title":{},"body":{"injectables/MembersService.html":{}}}],["getallprojects",{"_index":2288,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getapplicationname",{"_index":1410,"title":{},"body":{"components/LoginComponent.html":{}}}],["getappname",{"_index":3141,"title":{},"body":{"components/TopbarComponent.html":{}}}],["getattribute('href",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["getchartlabel",{"_index":2729,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["getchartlabel(startdate",{"_index":2734,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["getcontainerclass",{"_index":1165,"title":{},"body":{"components/HomeComponent.html":{}}}],["getinputstyle",{"_index":806,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getinvitationdetails",{"_index":1314,"title":{},"body":{"injectables/InvitationService.html":{}}}],["getinvitationdetails(invitationhash",{"_index":1319,"title":{},"body":{"injectables/InvitationService.html":{}}}],["getitem",{"_index":1375,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getitem(key",{"_index":1381,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getlength",{"_index":1388,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getmembers",{"_index":1638,"title":{},"body":{"injectables/MembersService.html":{}}}],["getmenumode",{"_index":802,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getmyprojects",{"_index":2289,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getmyprojects(teamids",{"_index":2296,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getmyteams",{"_index":3049,"title":{},"body":{"injectables/TeamService.html":{}}}],["getorganization",{"_index":2124,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["getorganizationinitials",{"_index":2019,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getorganizationinitials(organization",{"_index":2025,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["getorganizationteams",{"_index":3050,"title":{},"body":{"injectables/TeamService.html":{}}}],["getplatforms",{"_index":2184,"title":{},"body":{"injectables/PlatformService.html":{}}}],["getprojectstats",{"_index":2290,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getprojectstats(projectid",{"_index":2300,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getprojectstats(this.project?.projectid",{"_index":2752,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["getrefreshtoken",{"_index":1335,"title":{},"body":{"injectables/JwtService.html":{}}}],["getripple",{"_index":810,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getroles",{"_index":2567,"title":{},"body":{"injectables/RoleService.html":{}}}],["getscale",{"_index":798,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getsubmenuanimation",{"_index":1933,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getteambyid",{"_index":3051,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteambyid(teamid",{"_index":3065,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteammembers",{"_index":3052,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteammembers(teamid",{"_index":3067,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteamprojects",{"_index":3053,"title":{},"body":{"injectables/TeamService.html":{}}}],["getteamprojects(teamid",{"_index":3069,"title":{},"body":{"injectables/TeamService.html":{}}}],["getting",{"_index":3273,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":1336,"title":{},"body":{"injectables/JwtService.html":{}}}],["getuserinitials",{"_index":1461,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["getuserinitials(member",{"_index":1475,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["getvisible",{"_index":793,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ghcr.io/dradman/loghub",{"_index":3350,"title":{},"body":{"index.html":{}}}],["gi",{"_index":1238,"title":{},"body":{"components/HomeComponent.html":{}}}],["github",{"_index":3347,"title":{},"body":{"index.html":{}}}],["give",{"_index":3687,"title":{},"body":{"license.html":{}}}],["given",{"_index":1125,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["gives",{"_index":3700,"title":{},"body":{"license.html":{}}}],["giving",{"_index":3439,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":3370,"title":{},"body":{"license.html":{}}}],["go",{"_index":3234,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gotoprofilepage",{"_index":3142,"title":{},"body":{"components/TopbarComponent.html":{}}}],["governed",{"_index":3840,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3434,"title":{},"body":{"license.html":{}}}],["grant",{"_index":3860,"title":{},"body":{"license.html":{}}}],["granted",{"_index":3609,"title":{},"body":{"license.html":{}}}],["grants",{"_index":3911,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":3425,"title":{},"body":{"license.html":{}}}],["greater",{"_index":418,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["greatest",{"_index":4082,"title":{},"body":{"license.html":{}}}],["green",{"_index":306,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["guarantee",{"_index":3398,"title":{},"body":{"license.html":{}}}],["gui",{"_index":4107,"title":{},"body":{"license.html":{}}}],["guides",{"_index":1087,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guides'},{'name",{"_index":76,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["guides.component.html",{"_index":1088,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guides.component.scss",{"_index":1089,"title":{},"body":{"components/GuidesComponent.html":{}}}],["guidescomponent",{"_index":75,"title":{"components/GuidesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["h:mm",{"_index":2773,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["handle",{"_index":650,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["handles",{"_index":1906,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["handleupdate",{"_index":2158,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["handling",{"_index":731,"title":{},"body":{"components/ConfigComponent.html":{}}}],["hascreatepermission",{"_index":1547,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["hasdeletepermission",{"_index":1548,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["hash",{"_index":1512,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["haspermission",{"_index":3259,"title":{},"body":{"miscellaneous/functions.html":{}}}],["haspermission(user",{"_index":3268,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasreadpermission",{"_index":1549,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["hasupdatepermission",{"_index":2015,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["having",{"_index":3625,"title":{},"body":{"license.html":{}}}],["header",{"_index":1761,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["heart",{"_index":2661,"title":{},"body":{"components/SidebarComponent.html":{}}}],["height",{"_index":1945,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["here",{"_index":3328,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":3953,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":335,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["hidemenu",{"_index":1106,"title":{},"body":{"components/HomeComponent.html":{}}}],["hideprofilemenu",{"_index":1107,"title":{},"body":{"components/HomeComponent.html":{}}}],["hides",{"_index":1137,"title":{},"body":{"components/HomeComponent.html":{}}}],["holder",{"_index":3886,"title":{},"body":{"license.html":{}}}],["holders",{"_index":3845,"title":{},"body":{"license.html":{}}}],["home",{"_index":1091,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["home'},{'name",{"_index":78,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["home.component.html",{"_index":1093,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":1094,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/devices",{"_index":2650,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/documentation",{"_index":2707,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/guides",{"_index":2713,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/sdks",{"_index":2710,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/support",{"_index":2716,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/issues",{"_index":2645,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/logs",{"_index":2642,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/messages",{"_index":2648,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/performance",{"_index":2656,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/projects",{"_index":2639,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/queries",{"_index":2659,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/releases",{"_index":2673,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/replays",{"_index":2670,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/resources",{"_index":2667,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/screen",{"_index":2665,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/sessions",{"_index":2653,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings",{"_index":2678,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account",{"_index":2680,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/close",{"_index":2689,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/details",{"_index":2682,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/notifications",{"_index":2687,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/security",{"_index":2684,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/alerts",{"_index":2703,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/members",{"_index":2700,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/organization",{"_index":2693,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/projects",{"_index":2695,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/teams",{"_index":2698,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/stats",{"_index":2676,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/vitals",{"_index":2662,"title":{},"body":{"components/SidebarComponent.html":{}}}],["homecomponent",{"_index":77,"title":{"components/HomeComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["hope",{"_index":4092,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":280,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["host",{"_index":1902,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding",{"_index":1939,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.active",{"_index":1983,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.layout",{"_index":1899,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbindings",{"_index":1860,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hosts",{"_index":3758,"title":{},"body":{"license.html":{}}}],["hour",{"_index":2238,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["hourbyhour",{"_index":2315,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["hourlystat",{"_index":2767,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.endinterval",{"_index":2760,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.errors",{"_index":2763,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.numberofcrashfreesessions",{"_index":2768,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.numberofsessions",{"_index":2769,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["hourlystat.transactions",{"_index":2762,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["household",{"_index":3780,"title":{},"body":{"license.html":{}}}],["hover",{"_index":1910,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hovering",{"_index":346,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["href",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["html",{"_index":44,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["htmlinputelement).value",{"_index":936,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["http",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":3308,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/MembersService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory",{"_index":3261,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":3272,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpparams",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpparams().set('username",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://fsf.org",{"_index":3378,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses",{"_index":4112,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":4120,"title":{},"body":{"license.html":{}}}],["hyphen",{"_index":1894,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hypothetical",{"_index":4105,"title":{},"body":{"license.html":{}}}],["i.e",{"_index":1924,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["icon",{"_index":1200,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{}}}],["iconurl",{"_index":2162,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{}}}],["id",{"_index":221,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"interfaces/ProjectHourByHourStatDto.html":{}}}],["identifiable",{"_index":3981,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1885,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["identifiers",{"_index":1897,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["identify",{"_index":1896,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["ids",{"_index":2890,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{}}}],["if(isusernametaken",{"_index":1079,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ignored",{"_index":1970,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["image",{"_index":3321,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1802,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["implementation",{"_index":3579,"title":{},"body":{"license.html":{}}}],["implemented",{"_index":2064,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["implements",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"index.html":{}}}],["implied",{"_index":4007,"title":{},"body":{"license.html":{}}}],["import",{"_index":29,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["important",{"_index":3359,"title":{},"body":{"index.html":{}}}],["importing",{"_index":3944,"title":{},"body":{"license.html":{}}}],["imports",{"_index":19,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["impose",{"_index":3869,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4009,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4060,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4063,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":330,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inbox",{"_index":2644,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inc",{"_index":3377,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":4057,"title":{},"body":{"license.html":{}}}],["include",{"_index":360,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["included",{"_index":3574,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1892,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["including",{"_index":3590,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":3716,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":3460,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":4113,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":3783,"title":{},"body":{"license.html":{}}}],["increments",{"_index":762,"title":{},"body":{"components/ConfigComponent.html":{}}}],["incrementscale",{"_index":705,"title":{},"body":{"components/ConfigComponent.html":{}}}],["indemnification",{"_index":3865,"title":{},"body":{"license.html":{}}}],["independent",{"_index":3705,"title":{},"body":{"license.html":{}}}],["index",{"_index":170,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectReleaseDto.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["indicate",{"_index":395,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["indicates",{"_index":378,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["indicating",{"_index":421,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["individual",{"_index":3714,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":3469,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":3799,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectReleaseDto.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{}}}],["inform",{"_index":3767,"title":{},"body":{"license.html":{}}}],["information",{"_index":1829,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["infringe",{"_index":3912,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":3941,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":3527,"title":{},"body":{"license.html":{}}}],["initial",{"_index":363,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["initialized",{"_index":741,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["initializing",{"_index":359,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["initialstate",{"_index":648,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["initiate",{"_index":3934,"title":{},"body":{"license.html":{}}}],["inject",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["inject(document",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["inject(platform_id",{"_index":1394,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["injectable",{"_index":307,"title":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}}}],["injectables",{"_index":493,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"overview.html":{}}}],["injected",{"_index":1877,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["injection",{"_index":734,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["input",{"_index":272,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{}}}],["inputmaskmodule",{"_index":1247,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inputnumbermodule",{"_index":2010,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["inputs",{"_index":707,"title":{},"body":{"components/ConfigComponent.html":{},"components/InvitationComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{}}}],["inputstyle",{"_index":244,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inputstyle(_val",{"_index":827,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputswitchmodule",{"_index":695,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputtextmodule",{"_index":864,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["inside",{"_index":2610,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["insights",{"_index":3199,"title":{},"body":{"dependencies.html":{}}}],["install",{"_index":3456,"title":{},"body":{"license.html":{}}}],["installation",{"_index":3802,"title":{},"body":{"license.html":{}}}],["installed",{"_index":3821,"title":{},"body":{"license.html":{}}}],["instance",{"_index":367,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["instanceof",{"_index":1195,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["instead",{"_index":4118,"title":{},"body":{"license.html":{}}}],["intact",{"_index":3680,"title":{},"body":{"license.html":{}}}],["intended",{"_index":3397,"title":{},"body":{"license.html":{}}}],["intention",{"_index":3669,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":3541,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":732,"title":{},"body":{"components/ConfigComponent.html":{}}}],["interactive",{"_index":3545,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":3731,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3928,"title":{},"body":{"license.html":{}}}],["interface",{"_index":231,"title":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["interfaces",{"_index":233,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/TeamState.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":3810,"title":{},"body":{"license.html":{}}}],["internal",{"_index":2547,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["internationalization",{"_index":2612,"title":{},"body":{"components/SidebarComponent.html":{}}}],["interpretation",{"_index":4070,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":3588,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":3603,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":3701,"title":{},"body":{"license.html":{}}}],["invitation",{"_index":679,"title":{"interfaces/Invitation.html":{}},"body":{"interfaces/AuthState.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/MembersState.html":{},"miscellaneous/enumerations.html":{}}}],["invitation'},{'name",{"_index":80,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["invitation.component.html",{"_index":1249,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.component.scss",{"_index":1250,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.dto",{"_index":1593,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["invitationcomponent",{"_index":79,"title":{"components/InvitationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["invitationdto",{"_index":1307,"title":{"interfaces/InvitationDto.html":{}},"body":{"interfaces/InvitationDto.html":{},"injectables/InvitationService.html":{},"interfaces/MembersDto.html":{},"components/MembersTableComponent.html":{}}}],["invitationhash",{"_index":1252,"title":{},"body":{"components/InvitationComponent.html":{},"injectables/InvitationService.html":{}}}],["invitationid",{"_index":1243,"title":{},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{}}}],["invitationrequestdto",{"_index":1310,"title":{"interfaces/InvitationRequestDto.html":{}},"body":{"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{}}}],["invitations",{"_index":1591,"title":{},"body":{"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{}}}],["invitationservice",{"_index":508,"title":{"injectables/InvitationService.html":{}},"body":{"injectables/AuthEffects.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/MembersEffects.html":{}}}],["invitationstatus",{"_index":1651,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitedmember",{"_index":1652,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitedmembers",{"_index":1550,"title":{},"body":{"components/MembersComponent.html":{}}}],["invitemember",{"_index":1315,"title":{},"body":{"injectables/InvitationService.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{}}}],["invitemember(dto",{"_index":1321,"title":{},"body":{"injectables/InvitationService.html":{}}}],["invitemembererror",{"_index":1653,"title":{},"body":{"interfaces/MembersState.html":{}}}],["invitememberfailure",{"_index":1627,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["invitemembersuccess",{"_index":1628,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["invitemembersuccess(invitation",{"_index":1604,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["invitenewuserform",{"_index":1682,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["ios",{"_index":3229,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["irrevocable",{"_index":3611,"title":{},"body":{"license.html":{}}}],["isaddnewprojectdialogvisible",{"_index":2406,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isdesktop",{"_index":422,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isinvitedialogvisible",{"_index":1683,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isiso8601",{"_index":3263,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isiso8601(value",{"_index":3266,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isloading",{"_index":870,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["isloadingactivemembers",{"_index":1504,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["isloadingallprojects",{"_index":2263,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["isloadingauthstate",{"_index":1043,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isloadingcreatenewproject",{"_index":2407,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isloadingcreateproject",{"_index":2441,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["isloadingmembers",{"_index":1459,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/SingleTeamComponent.html":{}}}],["isloadingmyprojects",{"_index":2349,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["isloadingmyteams",{"_index":2350,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["isloadingorganization",{"_index":928,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["isloadingorganizationteams",{"_index":3112,"title":{},"body":{"components/TeamsComponent.html":{}}}],["isloadingprojects",{"_index":2251,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/SingleTeamComponent.html":{}}}],["isloadingremovemembers",{"_index":1684,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isloadingsendinvitation",{"_index":1685,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["isloadingteammembers",{"_index":2860,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["isloadingteamprojects",{"_index":2861,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["isloadingupdateteam",{"_index":2801,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["ismobile",{"_index":428,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isnametaken",{"_index":2291,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{}}}],["isnametaken(name",{"_index":2302,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{}}}],["isoutsideclicked",{"_index":1179,"title":{},"body":{"components/HomeComponent.html":{}}}],["isoverlay",{"_index":410,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ispickerdialogvisible",{"_index":1460,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["isplatformbrowser",{"_index":1393,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isplatformbrowser(platformid",{"_index":1395,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isregistrationenabled",{"_index":1411,"title":{},"body":{"components/LoginComponent.html":{}}}],["isslugtaken",{"_index":871,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{}}}],["isslugtaken(slug",{"_index":976,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["issuccess",{"_index":1044,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["issue",{"_index":3250,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["issues",{"_index":1329,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issues'},{'name",{"_index":82,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["issues.component.html",{"_index":1330,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issues.component.scss",{"_index":1331,"title":{},"body":{"components/IssuesComponent.html":{}}}],["issuescomponent",{"_index":81,"title":{"components/IssuesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["isupdateorganizationpictureloading",{"_index":2060,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["isuploadinprogress",{"_index":2016,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["isusernameavialable",{"_index":633,"title":{},"body":{"interfaces/AuthState.html":{}}}],["isusernametaken",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isusernametaken(username",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["item",{"_index":1850,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["item.label",{"_index":1986,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick",{"_index":1857,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick(event",{"_index":1904,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["items",{"_index":729,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["itself",{"_index":3824,"title":{},"body":{"license.html":{}}}],["java",{"_index":3235,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["join",{"_index":1216,"title":{},"body":{"components/HomeComponent.html":{}}}],["js",{"_index":3238,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["json.parse(localstorageconfig",{"_index":439,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["json.stringify(this.config",{"_index":443,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["june",{"_index":3372,"title":{},"body":{"license.html":{}}}],["jwtservice",{"_index":507,"title":{"injectables/JwtService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{}}}],["karma",{"_index":3338,"title":{},"body":{"index.html":{}}}],["keep",{"_index":327,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["kernel",{"_index":3582,"title":{},"body":{"license.html":{}}}],["key",{"_index":1376,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["key(index",{"_index":1382,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["keys",{"_index":1810,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["keys.length",{"_index":1812,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["kind",{"_index":3537,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":3389,"title":{},"body":{"license.html":{}}}],["know",{"_index":3413,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":3969,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":3978,"title":{},"body":{"license.html":{}}}],["label",{"_index":1128,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/TopbarComponent.html":{}}}],["labels",{"_index":2757,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["landscape",{"_index":424,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["language",{"_index":716,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["language.label",{"_index":3171,"title":{},"body":{"components/TopbarComponent.html":{}}}],["languages",{"_index":2616,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["lara",{"_index":305,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["laravel",{"_index":3242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["larger",{"_index":3709,"title":{},"body":{"license.html":{}}}],["lastlogintime",{"_index":2552,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["lastname",{"_index":1266,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["later",{"_index":4031,"title":{},"body":{"license.html":{}}}],["latest",{"_index":3346,"title":{},"body":{"index.html":{}}}],["law",{"_index":3529,"title":{},"body":{"license.html":{}}}],["laws",{"_index":3504,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3939,"title":{},"body":{"license.html":{}}}],["layout",{"_index":253,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["layoutservice",{"_index":181,"title":{"injectables/LayoutService.html":{}},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["layoutstate",{"_index":313,"title":{"interfaces/LayoutState.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["leaks",{"_index":1930,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["legal",{"_index":3440,"title":{},"body":{"license.html":{}}}],["legend",{"_index":43,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["length",{"_index":1379,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["lesser",{"_index":4117,"title":{},"body":{"license.html":{}}}],["lgpl.html",{"_index":4121,"title":{},"body":{"license.html":{}}}],["liability",{"_index":3848,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3526,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3571,"title":{},"body":{"license.html":{}}}],["library",{"_index":368,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["license",{"_index":3369,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":3508,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":3510,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":3512,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":3390,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":3915,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":3858,"title":{},"body":{"license.html":{}}}],["light",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["likewise",{"_index":3909,"title":{},"body":{"license.html":{}}}],["limit",{"_index":3670,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":3362,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":4042,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":3847,"title":{},"body":{"license.html":{}}}],["line",{"_index":385,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["link",{"_index":754,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["linked",{"_index":3599,"title":{},"body":{"license.html":{}}}],["linking",{"_index":4116,"title":{},"body":{"license.html":{}}}],["links",{"_index":292,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["list",{"_index":2641,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["listener",{"_index":1143,"title":{},"body":{"components/HomeComponent.html":{}}}],["literal",{"_index":1799,"title":{},"body":{"injectables/MemoryStorage.html":{},"interfaces/Role.html":{},"injectables/TeamService.html":{},"interfaces/UserDto.html":{}}}],["litigation",{"_index":3935,"title":{},"body":{"license.html":{}}}],["load",{"_index":663,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{}}}],["loadactivemembers",{"_index":1502,"title":{},"body":{"components/MemberPickerComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadactivemembersfailure",{"_index":1629,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadactivememberssuccess",{"_index":1630,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadactivememberssuccess({members",{"_index":1610,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["loadallprojects",{"_index":2206,"title":{},"body":{"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent-1.html":{}}}],["loadallprojectsfailure",{"_index":2231,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadallprojectssuccess",{"_index":2232,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadallprojectssuccess({projects",{"_index":2220,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["loadcurrentorganization",{"_index":926,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationfailure",{"_index":2118,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationsuccess",{"_index":2119,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["loadcurrentorganizationsuccess(organization",{"_index":2108,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["loadcurrentuser",{"_index":500,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["loadcurrentuserfailure",{"_index":578,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["loadcurrentusersuccess",{"_index":579,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["loadcurrentusersuccess(user",{"_index":544,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["loaded",{"_index":775,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loader",{"_index":3194,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":651,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["loadmyprojects",{"_index":2207,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{}}}],["loadmyprojectsfailure",{"_index":2233,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadmyprojectssuccess",{"_index":2234,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["loadmyprojectssuccess({projects",{"_index":2225,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["loadmyteams",{"_index":2378,"title":{},"body":{"components/ProjectsComponent.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["loadmyteamsfailure",{"_index":3043,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadmyteamssuccess",{"_index":3044,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadmyteamssuccess({teams",{"_index":3031,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadorganizationmembers",{"_index":1578,"title":{},"body":{"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmembersfailure",{"_index":1631,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmemberssuccess",{"_index":1632,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["loadorganizationmemberssuccess(members",{"_index":1615,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["loadorganizationteams",{"_index":3015,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["loadorganizationteamsfailure",{"_index":3045,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadorganizationteamssuccess",{"_index":3046,"title":{},"body":{"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["loadorganizationteamssuccess({teams",{"_index":3036,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["loadplatforms",{"_index":2170,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{}}}],["loadplatformsfailure",{"_index":2181,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["loadplatformssuccess",{"_index":2176,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["loadroles",{"_index":1737,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loadrolesfailure",{"_index":2564,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loadrolessuccess",{"_index":2560,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["loads",{"_index":2579,"title":{},"body":{"components/ScreenLoadsComponent.html":{},"components/SidebarComponent.html":{}}}],["loads'},{'name",{"_index":126,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["loads.component.html",{"_index":2580,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads.component.scss",{"_index":2581,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads.component.ts",{"_index":2578,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loads/screen",{"_index":2577,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["loadteambyid",{"_index":2851,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteambyidfailure",{"_index":2952,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteambyidsuccess",{"_index":2920,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteammembers",{"_index":2852,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteammembersfailure",{"_index":2953,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteammemberssuccess",{"_index":2925,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteamprojects",{"_index":2853,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteamprojectsfailure",{"_index":2954,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["loadteamprojectssuccess",{"_index":2930,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["local",{"_index":311,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["localization",{"_index":2613,"title":{},"body":{"components/SidebarComponent.html":{}}}],["localizedlabel",{"_index":1219,"title":{},"body":{"components/HomeComponent.html":{}}}],["localstorage",{"_index":310,"title":{"injectables/LocalStorage.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{}}}],["localstorageconfig",{"_index":435,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["location",{"_index":3284,"title":{},"body":{"index.html":{}}}],["log_entry",{"_index":3251,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_session",{"_index":3252,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_source",{"_index":3253,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logging",{"_index":3278,"title":{},"body":{"index.html":{}}}],["loghub",{"_index":3275,"title":{},"body":{"index.html":{}}}],["login",{"_index":1406,"title":{},"body":{"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":84,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["login.component.html",{"_index":1407,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1408,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":83,"title":{"components/LoginComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["loginform",{"_index":1409,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":3143,"title":{},"body":{"components/TopbarComponent.html":{}}}],["logs",{"_index":1446,"title":{},"body":{"components/LogsComponent.html":{},"index.html":{}}}],["logs'},{'name",{"_index":86,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["logs.component.html",{"_index":1447,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.component.scss",{"_index":1448,"title":{},"body":{"components/LogsComponent.html":{}}}],["logscomponent",{"_index":85,"title":{"components/LogsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["long",{"_index":3622,"title":{},"body":{"license.html":{}}}],["look",{"_index":719,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loss",{"_index":4061,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4064,"title":{},"body":{"license.html":{}}}],["machine",{"_index":3721,"title":{},"body":{"license.html":{}}}],["made",{"_index":3811,"title":{},"body":{"license.html":{}}}],["mail",{"_index":4097,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":3754,"title":{},"body":{"license.html":{}}}],["major",{"_index":3577,"title":{},"body":{"license.html":{}}}],["make",{"_index":3353,"title":{},"body":{"index.html":{},"license.html":{}}}],["makes",{"_index":3640,"title":{},"body":{"license.html":{}}}],["making",{"_index":1871,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["manage",{"_index":721,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["management",{"_index":3300,"title":{},"body":{"index.html":{}}}],["managing",{"_index":715,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["manipulate",{"_index":722,"title":{},"body":{"components/ConfigComponent.html":{}}}],["manner",{"_index":3954,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1868,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["manufacturer",{"_index":3458,"title":{},"body":{"license.html":{}}}],["map",{"_index":517,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleEffects.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"components/TeamsComponent.html":{}}}],["map((event",{"_index":933,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["map((invitation",{"_index":1603,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["map((members",{"_index":1609,"title":{},"body":{"injectables/MembersEffects.html":{},"injectables/SingleTeamEffects.html":{}}}],["map((organization",{"_index":2102,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["map((project",{"_index":2213,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["map((projects",{"_index":2219,"title":{},"body":{"injectables/ProjectEffects.html":{},"injectables/SingleTeamEffects.html":{}}}],["map((result",{"_index":2112,"title":{},"body":{"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/RoleEffects.html":{}}}],["map((segment",{"_index":1214,"title":{},"body":{"components/HomeComponent.html":{}}}],["map((team",{"_index":2919,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["map((teams",{"_index":3030,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["map((token",{"_index":534,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((user",{"_index":543,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((value",{"_index":2361,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["march",{"_index":4004,"title":{},"body":{"license.html":{}}}],["marked",{"_index":3450,"title":{},"body":{"license.html":{}}}],["marks",{"_index":737,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["masks",{"_index":3506,"title":{},"body":{"license.html":{}}}],["matching",{"_index":156,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectReleaseDto.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["material",{"_index":848,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["materially",{"_index":3825,"title":{},"body":{"license.html":{}}}],["matrixparams",{"_index":1971,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["meaning",{"_index":3872,"title":{},"body":{"license.html":{}}}],["means",{"_index":738,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["measure",{"_index":3648,"title":{},"body":{"license.html":{}}}],["measures",{"_index":3662,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":1874,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["medium",{"_index":3676,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3690,"title":{},"body":{"license.html":{}}}],["meets",{"_index":3558,"title":{},"body":{"license.html":{}}}],["member",{"_index":88,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["member.email",{"_index":1785,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.email.charat(0",{"_index":1511,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.firstname",{"_index":1508,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.firstname?.charat(0",{"_index":1509,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.invitationid",{"_index":1775,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.lastname",{"_index":1507,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.lastname?.charat(0",{"_index":1510,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{}}}],["member.pictureurl",{"_index":1787,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.role.name",{"_index":1786,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member.userid",{"_index":1532,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["member?.firstname",{"_index":1783,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["member?.lastname",{"_index":1784,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["memberid",{"_index":1644,"title":{},"body":{"injectables/MembersService.html":{},"components/MembersTableComponent.html":{}}}],["memberpickercomponent",{"_index":87,"title":{"components/MemberPickerComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members",{"_index":93,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/PlatformState.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members'},{'name",{"_index":91,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["members.actions",{"_index":1634,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["members.component.html",{"_index":1544,"title":{},"body":{"components/MembersComponent.html":{}}}],["members.component.scss",{"_index":1545,"title":{},"body":{"components/MembersComponent.html":{}}}],["members.map((member",{"_index":2891,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["members/members.effects",{"_index":459,"title":{},"body":{"interfaces/AppState.html":{}}}],["members/members.reducer",{"_index":461,"title":{},"body":{"interfaces/AppState.html":{}}}],["members?.filter",{"_index":1529,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["memberscomponent",{"_index":90,"title":{"components/MembersComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["membersdto",{"_index":1589,"title":{"interfaces/MembersDto.html":{}},"body":{"interfaces/MembersDto.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{}}}],["memberseffects",{"_index":458,"title":{"injectables/MembersEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/MembersEffects.html":{}}}],["memberserror",{"_index":2963,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["membersreducer",{"_index":460,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/MembersState.html":{}}}],["membersservice",{"_index":1599,"title":{"injectables/MembersService.html":{}},"body":{"injectables/MembersEffects.html":{},"injectables/MembersService.html":{}}}],["membersstate",{"_index":447,"title":{"interfaces/MembersState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/MembersState.html":{}}}],["membersstatus",{"_index":2964,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["memberstablecomponent",{"_index":92,"title":{"components/MembersTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["memory",{"_index":1392,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["memorystorage",{"_index":1391,"title":{"injectables/MemoryStorage.html":{}},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["menu",{"_index":277,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["menubutton",{"_index":3137,"title":{},"body":{"components/TopbarComponent.html":{}}}],["menuchangeevent",{"_index":1813,"title":{"interfaces/MenuChangeEvent.html":{}},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{}}}],["menuhoveractive",{"_index":322,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuitem",{"_index":1122,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["menuitem.component.html",{"_index":1854,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem.component.scss",{"_index":1853,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem/menuitem.component",{"_index":2630,"title":{},"body":{"components/SidebarComponent.html":{}}}],["menuitem]'},{'name",{"_index":96,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["menuitemcomponent",{"_index":95,"title":{"components/MenuitemComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["menumode",{"_index":247,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menumode(_val",{"_index":825,"title":{},"body":{"components/ConfigComponent.html":{}}}],["menuoutsideclicklistener",{"_index":1099,"title":{},"body":{"components/HomeComponent.html":{}}}],["menuresetsubscription",{"_index":1855,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menus",{"_index":325,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuservice",{"_index":700,"title":{"injectables/MenuService.html":{}},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["menusource",{"_index":1822,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["menusourcesubscription",{"_index":1856,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["merchantability",{"_index":4043,"title":{},"body":{"license.html":{}}}],["mere",{"_index":3540,"title":{},"body":{"license.html":{}}}],["merging",{"_index":3924,"title":{},"body":{"license.html":{}}}],["message",{"_index":1759,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["messages",{"_index":1988,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages'},{'name",{"_index":98,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["messages.component.html",{"_index":1989,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messages.component.scss",{"_index":1990,"title":{},"body":{"components/MessagesComponent.html":{}}}],["messagescomponent",{"_index":97,"title":{"components/MessagesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["messageservice",{"_index":861,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["met",{"_index":3613,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["method",{"_index":1881,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["methods",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["minimal",{"_index":708,"title":{},"body":{"components/ConfigComponent.html":{}}}],["miscellaneous",{"_index":3216,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["misrepresentation",{"_index":3854,"title":{},"body":{"license.html":{}}}],["mmm",{"_index":2771,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["mobile",{"_index":344,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":276,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["model",{"_index":2604,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["models/enums/permission.enum",{"_index":3173,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/enums/platform",{"_index":2168,"title":{},"body":{"interfaces/PlatformDto.html":{}}}],["models/enums/resource",{"_index":3174,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/user.entity",{"_index":1309,"title":{},"body":{"interfaces/InvitationDto.html":{}}}],["modification",{"_index":3500,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":3562,"title":{},"body":{"license.html":{}}}],["modified",{"_index":3449,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":3693,"title":{},"body":{"license.html":{}}}],["modify",{"_index":3423,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":3532,"title":{},"body":{"license.html":{}}}],["modules",{"_index":4122,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitoring",{"_index":3287,"title":{},"body":{"index.html":{}}}],["more",{"_index":3739,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":3898,"title":{},"body":{"license.html":{}}}],["move",{"_index":357,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["multiselectchangeevent",{"_index":2356,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["multiselectmodule",{"_index":2344,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["myprojects",{"_index":2328,"title":{},"body":{"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{}}}],["myprojectserror",{"_index":2329,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["myprojectsstatus",{"_index":2330,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["myteams",{"_index":2351,"title":{},"body":{"components/ProjectsComponent.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["myteamserror",{"_index":3091,"title":{},"body":{"interfaces/TeamState.html":{}}}],["myteamsstatus",{"_index":3092,"title":{},"body":{"interfaces/TeamState.html":{}}}],["na",{"_index":2065,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["name",{"_index":49,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name/taken?name",{"_index":2313,"title":{},"body":{"injectables/ProjectService.html":{}}}],["name:your",{"_index":3327,"title":{},"body":{"index.html":{}}}],["namechecksubscription",{"_index":2408,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["named",{"_index":239,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["nameinput",{"_index":872,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["names",{"_index":3857,"title":{},"body":{"license.html":{}}}],["native",{"_index":2609,"title":{},"body":{"components/SidebarComponent.html":{}}}],["nature",{"_index":3706,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":3307,"title":{},"body":{"index.html":{}}}],["navigatetoprojectsettings",{"_index":2730,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["navigation",{"_index":723,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["navigationend",{"_index":1167,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["necessary",{"_index":4051,"title":{},"body":{"license.html":{}}}],["need",{"_index":3341,"title":{},"body":{"index.html":{},"license.html":{}}}],["needed",{"_index":3483,"title":{},"body":{"license.html":{}}}],["nest",{"_index":3244,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["network",{"_index":3542,"title":{},"body":{"license.html":{}}}],["new",{"_index":365,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/ProjectState.html":{},"injectables/SessionStorage.html":{},"interfaces/TeamState.html":{},"index.html":{},"license.html":{}}}],["newhref",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["newpassword",{"_index":2535,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["next",{"_index":384,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"index.html":{},"license.html":{}}}],["ng",{"_index":3304,"title":{},"body":{"index.html":{}}}],["ngafterviewchecked",{"_index":2808,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["ngafterviewinit",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["ngondestroy",{"_index":879,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["ngoninit",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["ngrx",{"_index":3299,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":571,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":641,"title":{},"body":{"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":34,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["node",{"_index":3230,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["non",{"_index":1069,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["noncommercially",{"_index":3745,"title":{},"body":{"license.html":{}}}],["none",{"_index":1768,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["normal",{"_index":3575,"title":{},"body":{"license.html":{}}}],["normally",{"_index":3778,"title":{},"body":{"license.html":{}}}],["notfoundcomponent",{"_index":99,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["nothing",{"_index":3910,"title":{},"body":{"license.html":{}}}],["notice",{"_index":3552,"title":{},"body":{"license.html":{}}}],["notices",{"_index":3547,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":1839,"title":{},"body":{"injectables/MenuService.html":{},"components/NotificationsComponent.html":{}}}],["notifications'},{'name",{"_index":102,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["notifications.component.html",{"_index":2000,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.component.scss",{"_index":2001,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationscomponent",{"_index":101,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["notifies",{"_index":3899,"title":{},"body":{"license.html":{}}}],["notify",{"_index":3893,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":3843,"title":{},"body":{"license.html":{}}}],["null",{"_index":437,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/PlatformState.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Role.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["number",{"_index":297,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"interfaces/FileDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{},"injectables/SessionStorage.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["numbered",{"_index":4030,"title":{},"body":{"license.html":{}}}],["numberofcrashfreesessions",{"_index":2244,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["numberofsessions",{"_index":2245,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["numbers",{"_index":790,"title":{},"body":{"components/ConfigComponent.html":{}}}],["object",{"_index":304,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SingleProjectCardComponent.html":{},"license.html":{}}}],["object's",{"_index":412,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["object.keys(this.data",{"_index":1811,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["object.keys(this.data).length",{"_index":1807,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["objects",{"_index":1135,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["obligate",{"_index":4016,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":3760,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":3650,"title":{},"body":{"license.html":{}}}],["observable",{"_index":375,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/TeamService.html":{}}}],["observables",{"_index":353,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["occasionally",{"_index":3744,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":3907,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":3466,"title":{},"body":{"license.html":{}}}],["of(acceptinvitationfailure",{"_index":523,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(addteammembersfailure",{"_index":2910,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(addteamprojectsfailure",{"_index":2915,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(authenticate(request",{"_index":527,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(authenticationfailure",{"_index":538,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(createprojectfailure",{"_index":2215,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(createteamfailure",{"_index":3020,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(deleteteamfailure",{"_index":3026,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(forgotpasswordfailure",{"_index":549,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(invitememberfailure",{"_index":1605,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadactivemembersfailure",{"_index":1611,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadallprojectsfailure",{"_index":2221,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(loadcurrentorganizationfailure",{"_index":2104,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["of(loadcurrentuserfailure",{"_index":552,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(loadmyprojectsfailure",{"_index":2226,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["of(loadmyteamsfailure",{"_index":3032,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(loadorganizationmembers",{"_index":1623,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadorganizationmembersfailure",{"_index":1616,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(loadorganizationteamsfailure",{"_index":3037,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["of(loadplatformsfailure",{"_index":2178,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["of(loadrolesfailure",{"_index":2561,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["of(loadteambyidfailure",{"_index":2921,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(loadteammembersfailure",{"_index":2926,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(loadteamprojectsfailure",{"_index":2931,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(registernewuserfailure",{"_index":556,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(removememberfailure",{"_index":1620,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["of(removeteammembersfailure",{"_index":2936,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(removeteamprojectsfailure",{"_index":2941,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["of(resetpasswordfailure",{"_index":563,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(updateorganizationpicturefailure",{"_index":2114,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["of(updateteamfailure",{"_index":2947,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["offer",{"_index":3438,"title":{},"body":{"license.html":{}}}],["offered",{"_index":3769,"title":{},"body":{"license.html":{}}}],["offering",{"_index":3748,"title":{},"body":{"license.html":{}}}],["official",{"_index":3563,"title":{},"body":{"license.html":{}}}],["oftype",{"_index":570,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["oftype(acceptinvitation",{"_index":513,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(acceptinvitationsuccess",{"_index":526,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(addteammembers",{"_index":2905,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(addteamprojects",{"_index":2912,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(authenticate",{"_index":529,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticationsuccess",{"_index":540,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(createorganization",{"_index":2100,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(createproject",{"_index":2211,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(createteam",{"_index":3017,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(deleteteam",{"_index":3022,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(forgotpassword",{"_index":546,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(invitemember",{"_index":1601,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadactivemembers",{"_index":1607,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadallprojects",{"_index":2217,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(loadcurrentorganization",{"_index":2106,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(loadcurrentuser",{"_index":551,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(loadmyprojects",{"_index":2223,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["oftype(loadmyteams",{"_index":3028,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(loadorganizationmembers",{"_index":1613,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(loadorganizationteams",{"_index":3034,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["oftype(loadplatforms",{"_index":2174,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["oftype(loadroles",{"_index":2558,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["oftype(loadteambyid",{"_index":2917,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(loadteammembers",{"_index":2923,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(loadteamprojects",{"_index":2928,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(registernewuser",{"_index":554,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(registernewusersuccess",{"_index":558,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(removemember",{"_index":1618,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(removemembersuccess",{"_index":1622,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["oftype(removeteammembers",{"_index":2933,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(removeteamprojects",{"_index":2938,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["oftype(resetpassword",{"_index":560,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(signout",{"_index":565,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(updateorganizationpicture",{"_index":2110,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(updateteam",{"_index":2943,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["on(acceptinvitation",{"_index":680,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(acceptinvitationfailure",{"_index":682,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(acceptinvitationsuccess",{"_index":681,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(addteammembers",{"_index":2990,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteammembersfailure",{"_index":2992,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteammemberssuccess",{"_index":2991,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteamprojects",{"_index":2996,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteamprojectsfailure",{"_index":2998,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(addteamprojectssuccess",{"_index":2997,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(authenticate",{"_index":655,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(authenticationfailure",{"_index":661,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(authenticationsuccess",{"_index":658,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(createorganization",{"_index":2151,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createorganizationfailure",{"_index":2153,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createorganizationsuccess",{"_index":2152,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(createproject",{"_index":2338,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createprojectfailure",{"_index":2341,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createprojectsuccess",{"_index":2339,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(createteam",{"_index":3101,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(createteamfailure",{"_index":3104,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(createteamsuccess",{"_index":3102,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteam",{"_index":3105,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteamfailure",{"_index":3108,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(deleteteamsuccess",{"_index":3106,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(forgotpassword",{"_index":669,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(forgotpasswordfailure",{"_index":671,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(forgotpasswordsuccess",{"_index":670,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(invitemember",{"_index":1660,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(invitememberfailure",{"_index":1665,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(invitemembersuccess",{"_index":1661,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadactivemembers",{"_index":1669,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadactivemembersfailure",{"_index":1671,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadactivememberssuccess",{"_index":1670,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadallprojects",{"_index":2332,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadallprojectsfailure",{"_index":2334,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadallprojectssuccess",{"_index":2333,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadcurrentorganization",{"_index":2148,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentorganizationfailure",{"_index":2150,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentorganizationsuccess",{"_index":2149,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(loadcurrentuser",{"_index":652,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadcurrentuserfailure",{"_index":665,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadcurrentusersuccess",{"_index":664,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(loadmyprojects",{"_index":2335,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadmyprojectsfailure",{"_index":2337,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadmyprojectssuccess",{"_index":2336,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["on(loadmyteams",{"_index":3099,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadmyteamssuccess",{"_index":3100,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationmembers",{"_index":1657,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationmembersfailure",{"_index":1659,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationmemberssuccess",{"_index":1658,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(loadorganizationteams",{"_index":3096,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationteamsfailure",{"_index":3098,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadorganizationteamssuccess",{"_index":3097,"title":{},"body":{"interfaces/TeamState.html":{}}}],["on(loadplatforms",{"_index":2191,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadplatformsfailure",{"_index":2194,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadplatformssuccess",{"_index":2192,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["on(loadroles",{"_index":2572,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadrolesfailure",{"_index":2575,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadrolessuccess",{"_index":2573,"title":{},"body":{"interfaces/RoleState.html":{}}}],["on(loadteambyid",{"_index":2978,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteambyidfailure",{"_index":2980,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteambyidsuccess",{"_index":2979,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteammembers",{"_index":2981,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteammembersfailure",{"_index":2983,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteammemberssuccess",{"_index":2982,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteamprojects",{"_index":2984,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteamprojectsfailure",{"_index":2986,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(loadteamprojectssuccess",{"_index":2985,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(registernewuser",{"_index":675,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(registernewuserfailure",{"_index":677,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(registernewusersuccess",{"_index":676,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(removemember",{"_index":1666,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removememberfailure",{"_index":1668,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removemembersuccess",{"_index":1667,"title":{},"body":{"interfaces/MembersState.html":{}}}],["on(removeteammembers",{"_index":2993,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteammembersfailure",{"_index":2995,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteammemberssuccess",{"_index":2994,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteamprojects",{"_index":2999,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteamprojectsfailure",{"_index":3001,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(removeteamprojectssuccess",{"_index":3000,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(resetpassword",{"_index":672,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetpasswordfailure",{"_index":674,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetpasswordsuccess",{"_index":673,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(resetsingleteamstate",{"_index":2977,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(setcurrentuser",{"_index":666,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(settoken",{"_index":667,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(signout",{"_index":668,"title":{},"body":{"interfaces/AuthState.html":{}}}],["on(updateorganizationpicture",{"_index":2154,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(updateorganizationpicturefailure",{"_index":2159,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(updateorganizationpicturesuccess",{"_index":2155,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["on(updateteam",{"_index":2987,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(updateteamfailure",{"_index":2989,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["on(updateteamsuccess",{"_index":2988,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["onaddmembers",{"_index":2802,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["onaddprojects",{"_index":2803,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["once",{"_index":773,"title":{},"body":{"components/ConfigComponent.html":{}}}],["oncomplete",{"_index":767,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigbuttonclick",{"_index":706,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigupdate",{"_index":431,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ondestroy",{"_index":859,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["one",{"_index":774,"title":{},"body":{"components/ConfigComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{},"license.html":{}}}],["oninit",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["onmemberspicked",{"_index":1468,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["onmembersremoved",{"_index":1469,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["onmenustatechange",{"_index":1824,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["onmenustatechange(event",{"_index":1825,"title":{},"body":{"injectables/MenuService.html":{}}}],["onmenutoggle",{"_index":333,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["onmovealltosource",{"_index":1462,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["onmovealltosource(event",{"_index":1477,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["onmovealltotarget",{"_index":1463,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["onmovealltotarget(event",{"_index":1480,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["onmovetosource",{"_index":1464,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["onmovetosource(event",{"_index":1483,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["onmovetotarget",{"_index":1465,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["onmovetotarget(event",{"_index":1486,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["onprojectspicked",{"_index":2252,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["onprojectsremoved",{"_index":2253,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["onremovemembers",{"_index":2804,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["onremoveprojects",{"_index":2805,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["open",{"_index":1831,"title":{},"body":{"injectables/MenuService.html":{}}}],["opened",{"_index":380,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opens",{"_index":405,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["operate",{"_index":4066,"title":{},"body":{"license.html":{}}}],["operated",{"_index":3751,"title":{},"body":{"license.html":{}}}],["operating",{"_index":3584,"title":{},"body":{"license.html":{}}}],["operation",{"_index":3671,"title":{},"body":{"license.html":{}}}],["operator",{"_index":361,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opposite",{"_index":429,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["option",{"_index":285,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["optional",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":252,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["order",{"_index":1886,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["organization",{"_index":862,"title":{"interfaces/Organization.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/MembersState.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["organization'},{'name",{"_index":63,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["organization.actions",{"_index":2122,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["organization.archive_period",{"_index":2089,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.archive_period_description",{"_index":2090,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.avatar",{"_index":2087,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.cleanup_period",{"_index":2091,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.cleanup_period_description",{"_index":2092,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.component.html",{"_index":866,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["organization.component.scss",{"_index":867,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["organization.component.ts",{"_index":858,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:108",{"_index":896,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:140",{"_index":895,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:146",{"_index":893,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:154",{"_index":898,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:159",{"_index":888,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:165",{"_index":891,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:64",{"_index":913,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:65",{"_index":886,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:76",{"_index":901,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:81",{"_index":906,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:82",{"_index":905,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:84",{"_index":911,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:85",{"_index":910,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:86",{"_index":903,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:88",{"_index":894,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.delete",{"_index":2093,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.delete_description",{"_index":2094,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.error",{"_index":960,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.error_description",{"_index":963,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.failed_to_upload_picture",{"_index":2076,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.id",{"_index":2081,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.id_description",{"_index":2082,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.name",{"_index":2085,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.name_description",{"_index":2086,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.name_is_required",{"_index":981,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.name_label",{"_index":980,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.slug",{"_index":2083,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.slug.split",{"_index":2066,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.slug_description",{"_index":2084,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["organization.slug_is_required",{"_index":983,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.slug_label",{"_index":982,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.welcome_description",{"_index":979,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.welcome_message",{"_index":978,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization/create",{"_index":857,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization/organization.effects",{"_index":463,"title":{},"body":{"interfaces/AppState.html":{}}}],["organization/organization.reducer",{"_index":465,"title":{},"body":{"interfaces/AppState.html":{}}}],["organizationcomponent",{"_index":103,"title":{"components/OrganizationComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["organizationdto",{"_index":2095,"title":{"interfaces/OrganizationDto.html":{}},"body":{"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{}}}],["organizationeffects",{"_index":462,"title":{"injectables/OrganizationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/OrganizationEffects.html":{}}}],["organizationerrorsubscription",{"_index":1100,"title":{},"body":{"components/HomeComponent.html":{}}}],["organizationid",{"_index":2004,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{}}}],["organizationname",{"_index":889,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organizationreducer",{"_index":464,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/OrganizationState.html":{}}}],["organizations",{"_index":3513,"title":{},"body":{"license.html":{}}}],["organizationservice",{"_index":882,"title":{"injectables/OrganizationService.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{}}}],["organizationstate",{"_index":448,"title":{"interfaces/OrganizationState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/OrganizationState.html":{}}}],["organizationsubscription",{"_index":873,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organizationteams",{"_index":3093,"title":{},"body":{"interfaces/TeamState.html":{},"components/TeamsComponent.html":{}}}],["organizationteamserror",{"_index":3094,"title":{},"body":{"interfaces/TeamState.html":{}}}],["organizationteamsstatus",{"_index":3095,"title":{},"body":{"interfaces/TeamState.html":{}}}],["origin",{"_index":3855,"title":{},"body":{"license.html":{}}}],["original",{"_index":772,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["originalevent",{"_index":1979,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["others",{"_index":3417,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":425,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["out",{"_index":1526,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"license.html":{}}}],["outlined",{"_index":274,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["output",{"_index":3616,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1141,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["over",{"_index":347,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overall",{"_index":718,"title":{},"body":{"components/ConfigComponent.html":{}}}],["overlay",{"_index":279,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuactive",{"_index":318,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuopensubscription",{"_index":1101,"title":{},"body":{"components/HomeComponent.html":{}}}],["overlayopen",{"_index":379,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overview",{"_index":4123,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":3949,"title":{},"body":{"license.html":{}}}],["owner",{"_index":1551,"title":{},"body":{"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{}}}],["p",{"_index":1240,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{},"index.html":{}}}],["package",{"_index":3178,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packaged",{"_index":3699,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":3576,"title":{},"body":{"license.html":{}}}],["page",{"_index":2608,"title":{},"body":{"components/SidebarComponent.html":{}}}],["panelmodule",{"_index":1543,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["paper",{"_index":4096,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3883,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":3962,"title":{},"body":{"license.html":{}}}],["param",{"_index":819,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameter",{"_index":377,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameters",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/PlatformState.html":{},"injectables/ProjectService.html":{},"interfaces/RoleState.html":{},"injectables/TeamService.html":{}}}],["params.platforms",{"_index":2193,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["params.roles",{"_index":2574,"title":{},"body":{"interfaces/RoleState.html":{}}}],["parent",{"_index":740,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["parentkey",{"_index":1859,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["part",{"_index":3515,"title":{},"body":{"license.html":{}}}],["particular",{"_index":3567,"title":{},"body":{"license.html":{}}}],["parties",{"_index":3539,"title":{},"body":{"license.html":{}}}],["parts",{"_index":371,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["party",{"_index":3752,"title":{},"body":{"license.html":{}}}],["party's",{"_index":3926,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1882,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["passed",{"_index":739,"title":{},"body":{"components/ConfigComponent.html":{}}}],["password",{"_index":520,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"license.html":{}}}],["password'},{'name",{"_index":74,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["password.back_to_login",{"_index":1082,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.check_your_email",{"_index":1065,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.html",{"_index":1017,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1018,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1016,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:125",{"_index":2526,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:144",{"_index":1031,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:152",{"_index":1029,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:160",{"_index":1028,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":2523,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":1026,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":2527,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:65",{"_index":1035,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:69",{"_index":1037,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:70",{"_index":1038,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":1033,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:73",{"_index":1042,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:74",{"_index":1039,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:75",{"_index":1040,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":2524,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:77",{"_index":1030,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:82",{"_index":2525,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:88",{"_index":1032,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.error",{"_index":1058,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.error_description",{"_index":1060,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.new_password_label",{"_index":2537,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_is_required",{"_index":2538,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_length",{"_index":2539,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_not_strong",{"_index":2540,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.success",{"_index":1064,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.success_message",{"_index":2533,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.user_does_not_exist",{"_index":1059,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_is_required",{"_index":1080,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_length",{"_index":1081,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_description",{"_index":1077,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_message",{"_index":1076,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.wrong_hash",{"_index":2532,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":1015,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password/reset",{"_index":2520,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["passwordmodule",{"_index":1248,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["patent",{"_index":3882,"title":{},"body":{"license.html":{}}}],["patents",{"_index":3487,"title":{},"body":{"license.html":{}}}],["paths",{"_index":1967,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["pattern",{"_index":3464,"title":{},"body":{"license.html":{}}}],["payment",{"_index":3998,"title":{},"body":{"license.html":{}}}],["peer",{"_index":3765,"title":{},"body":{"license.html":{}}}],["peers",{"_index":3768,"title":{},"body":{"license.html":{}}}],["pending",{"_index":3256,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":777,"title":{},"body":{"components/ConfigComponent.html":{}}}],["performance",{"_index":4047,"title":{},"body":{"license.html":{}}}],["performing",{"_index":3595,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":3891,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1572,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"interfaces/Role.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["permission.create",{"_index":1559,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/TeamsComponent.html":{}}}],["permission.delete",{"_index":1561,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["permission.read",{"_index":1563,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["permission.update",{"_index":2042,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["permissions",{"_index":2548,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["permissiontype",{"_index":3269,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permissionvalue",{"_index":3270,"title":{},"body":{"miscellaneous/functions.html":{}}}],["permissive",{"_index":3682,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3715,"title":{},"body":{"license.html":{}}}],["permits",{"_index":3874,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":3380,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":3816,"title":{},"body":{"license.html":{}}}],["personal",{"_index":3777,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":4014,"title":{},"body":{"license.html":{}}}],["php",{"_index":3243,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["physical",{"_index":3725,"title":{},"body":{"license.html":{}}}],["physically",{"_index":3742,"title":{},"body":{"license.html":{}}}],["pi",{"_index":1201,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{}}}],["picker",{"_index":1452,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker'},{'name",{"_index":89,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["picker.component",{"_index":2868,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["picker.component.html",{"_index":1456,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.scss",{"_index":1457,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts",{"_index":1451,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:100",{"_index":1488,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:102",{"_index":2255,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:106",{"_index":1479,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:108",{"_index":2256,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:112",{"_index":1482,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:40",{"_index":1471,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:42",{"_index":1495,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:43",{"_index":1493,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:44",{"_index":1496,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:47",{"_index":1474,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:50",{"_index":1472,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:53",{"_index":1473,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:55",{"_index":1476,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:63",{"_index":1491,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:68",{"_index":2259,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:76",{"_index":1489,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:90",{"_index":2257,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker.component.ts:94",{"_index":1485,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["picker.component.ts:96",{"_index":2258,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["picker/member",{"_index":1450,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/SingleTeamComponent.html":{}}}],["picker/project",{"_index":2249,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/SingleTeamComponent.html":{}}}],["picklistmodule",{"_index":1454,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picklistmovealltosourceevent",{"_index":1478,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picklistmovealltotargetevent",{"_index":1481,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picklistmovetosourceevent",{"_index":1484,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picklistmovetotargetevent",{"_index":1487,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["picture",{"_index":2132,"title":{},"body":{"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["pictureurl",{"_index":2005,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{}}}],["pieces",{"_index":3412,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":533,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["pipe(filter((event",{"_index":1194,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["pipe(map((value",{"_index":1555,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["pixels",{"_index":420,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["place",{"_index":3750,"title":{},"body":{"license.html":{}}}],["platform",{"_index":2160,"title":{"interfaces/Platform.html":{}},"body":{"interfaces/Platform.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectStatDto.html":{},"components/ProjectsTableComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["platform.actions",{"_index":2182,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{}}}],["platform.dto",{"_index":2203,"title":{},"body":{"interfaces/ProjectDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["platform.entity",{"_index":2197,"title":{},"body":{"interfaces/Project.html":{}}}],["platform.type",{"_index":2468,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["platform.version",{"_index":2469,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["platform/platform.effects",{"_index":481,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform/platform.reducer",{"_index":479,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform_id",{"_index":1390,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformdto",{"_index":2166,"title":{"interfaces/PlatformDto.html":{}},"body":{"interfaces/PlatformDto.html":{},"injectables/PlatformService.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["platformeffects",{"_index":480,"title":{"injectables/PlatformEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/PlatformEffects.html":{}}}],["platformid",{"_index":986,"title":{},"body":{"interfaces/CreateProjectRequestDto.html":{},"injectables/LocalStorage.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"components/ProjectsTableComponent.html":{},"injectables/SessionStorage.html":{}}}],["platformreducer",{"_index":478,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/PlatformState.html":{}}}],["platforms",{"_index":2177,"title":{},"body":{"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{}}}],["platformservice",{"_index":2172,"title":{"injectables/PlatformService.html":{}},"body":{"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{}}}],["platformstate",{"_index":449,"title":{"interfaces/PlatformState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/PlatformState.html":{}}}],["platformtype",{"_index":2164,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"miscellaneous/enumerations.html":{}}}],["play",{"_index":2669,"title":{},"body":{"components/SidebarComponent.html":{}}}],["please",{"_index":4119,"title":{},"body":{"license.html":{}}}],["plugins",{"_index":2744,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["plus",{"_index":3929,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":4091,"title":{},"body":{"license.html":{}}}],["portion",{"_index":3772,"title":{},"body":{"license.html":{}}}],["portrait",{"_index":426,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["possesses",{"_index":3738,"title":{},"body":{"license.html":{}}}],["possession",{"_index":3697,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4069,"title":{},"body":{"license.html":{}}}],["possible",{"_index":4083,"title":{},"body":{"license.html":{}}}],["power",{"_index":3664,"title":{},"body":{"license.html":{}}}],["practical",{"_index":3391,"title":{},"body":{"license.html":{}}}],["practice",{"_index":3473,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":3387,"title":{},"body":{"license.html":{}}}],["precise",{"_index":3496,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":3470,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":3927,"title":{},"body":{"license.html":{}}}],["preference",{"_index":2618,"title":{},"body":{"components/SidebarComponent.html":{}}}],["preferred",{"_index":3560,"title":{},"body":{"license.html":{}}}],["present",{"_index":1527,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{},"license.html":{}}}],["presents",{"_index":3555,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":3850,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":1929,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["prevented",{"_index":3809,"title":{},"body":{"license.html":{}}}],["previous",{"_index":3454,"title":{},"body":{"license.html":{}}}],["price",{"_index":3409,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4000,"title":{},"body":{"license.html":{}}}],["primefileupload",{"_index":2017,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeflex",{"_index":3205,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":3207,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":3209,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":916,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/avatar",{"_index":1497,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/badge",{"_index":2053,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["primeng/breadcrumb",{"_index":1168,"title":{},"body":{"components/HomeComponent.html":{}}}],["primeng/button",{"_index":36,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/calendar",{"_index":2435,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["primeng/card",{"_index":2747,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["primeng/chart",{"_index":2748,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["primeng/confirmdialog",{"_index":1730,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["primeng/dialog",{"_index":1498,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["primeng/divider",{"_index":2054,"title":{},"body":{"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["primeng/dropdown",{"_index":1731,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/fileupload",{"_index":2055,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeng/inputmask",{"_index":1271,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["primeng/inputnumber",{"_index":2056,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["primeng/inputswitch",{"_index":816,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/inputtext",{"_index":917,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["primeng/multiselect",{"_index":2375,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["primeng/panel",{"_index":1571,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["primeng/password",{"_index":1272,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/picklist",{"_index":1499,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["primeng/progressspinner",{"_index":2057,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{}}}],["primeng/radiobutton",{"_index":814,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/ripple",{"_index":37,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/sidebar",{"_index":815,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/skeleton",{"_index":2749,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["primeng/table",{"_index":1732,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["primeng/tabview",{"_index":2847,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["primeng/toast",{"_index":918,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["primeone",{"_index":853,"title":{},"body":{"components/ConfigComponent.html":{}}}],["prior",{"_index":3894,"title":{},"body":{"license.html":{}}}],["private",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["problems",{"_index":3451,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":3803,"title":{},"body":{"license.html":{}}}],["processing",{"_index":1975,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["procuring",{"_index":3987,"title":{},"body":{"license.html":{}}}],["produce",{"_index":3587,"title":{},"body":{"license.html":{}}}],["product",{"_index":3726,"title":{},"body":{"license.html":{}}}],["products",{"_index":3468,"title":{},"body":{"license.html":{}}}],["profile",{"_index":340,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["profileiconurl",{"_index":2553,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["profilemenuoutsideclicklistener",{"_index":1102,"title":{},"body":{"components/HomeComponent.html":{}}}],["profilesidebarvisible",{"_index":319,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["program",{"_index":3400,"title":{},"body":{"license.html":{}}}],["program's",{"_index":3675,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":4109,"title":{},"body":{"license.html":{}}}],["programming",{"_index":3568,"title":{},"body":{"license.html":{}}}],["programs",{"_index":3406,"title":{},"body":{"license.html":{}}}],["progressspinnermodule",{"_index":2012,"title":{},"body":{"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{}}}],["prohibit",{"_index":3472,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":3660,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":3994,"title":{},"body":{"license.html":{}}}],["project",{"_index":105,"title":{"interfaces/Project.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateProjectRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["project.actions",{"_index":2235,"title":{},"body":{"injectables/ProjectEffects.html":{},"interfaces/ProjectState.html":{}}}],["project.name",{"_index":2279,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["project.name.includes(this.filtervalue",{"_index":2364,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["project.platform.type",{"_index":2280,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["project.platform.version",{"_index":2282,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["project.projectid",{"_index":2274,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/SingleTeamComponent.html":{}}}],["project/project.effects",{"_index":467,"title":{},"body":{"interfaces/AppState.html":{}}}],["project/project.reducer",{"_index":469,"title":{},"body":{"interfaces/AppState.html":{}}}],["project?.name",{"_index":2461,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["project?.platform?.type",{"_index":2462,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["project?.platform?.version",{"_index":2463,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["project_release",{"_index":3254,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projectdetailscomponent",{"_index":104,"title":{"components/ProjectDetailsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectdto",{"_index":2201,"title":{"interfaces/ProjectDto.html":{}},"body":{"interfaces/ProjectDto.html":{},"injectables/ProjectService.html":{},"injectables/TeamService.html":{}}}],["projecteffects",{"_index":466,"title":{"injectables/ProjectEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/ProjectEffects.html":{}}}],["projecthourbyhourstatdto",{"_index":2236,"title":{"interfaces/ProjectHourByHourStatDto.html":{}},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["projectid",{"_index":2196,"title":{},"body":{"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{}}}],["projectid}/stats",{"_index":2311,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectpickercomponent",{"_index":106,"title":{"components/ProjectPickerComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectreducer",{"_index":468,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/ProjectState.html":{}}}],["projectreleasedto",{"_index":2283,"title":{"interfaces/ProjectReleaseDto.html":{}},"body":{"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["projects",{"_index":109,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projects'},{'name",{"_index":108,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projects.component.html",{"_index":2345,"title":{},"body":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["projects.component.scss",{"_index":2346,"title":{},"body":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["projects.crash_free_sessions",{"_index":2784,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects.errors",{"_index":2780,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects.latest_deploys",{"_index":2788,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects.map((project",{"_index":2892,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["projects.projects",{"_index":2392,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects.sessions",{"_index":2782,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects.transactions",{"_index":2778,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projects?.filter",{"_index":2271,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["projectscomponent",{"_index":107,"title":{"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectserror",{"_index":2965,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["projectservice",{"_index":2209,"title":{"injectables/ProjectService.html":{}},"body":{"injectables/ProjectEffects.html":{},"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["projectsstatus",{"_index":2966,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["projectstablecomponent",{"_index":111,"title":{"components/ProjectsTableComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["projectstat",{"_index":2728,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.crashfreepercentage",{"_index":2785,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.crashfreepercentagegain",{"_index":2787,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.releases",{"_index":2789,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.releases?.constructor(3",{"_index":2792,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.releases?.length",{"_index":2790,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.totalerrors",{"_index":2781,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.totalsessions",{"_index":2783,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstat?.totaltransactions",{"_index":2779,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["projectstatdto",{"_index":2305,"title":{"interfaces/ProjectStatDto.html":{}},"body":{"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["projectstate",{"_index":450,"title":{"interfaces/ProjectState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/ProjectState.html":{}}}],["prominent",{"_index":3557,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":3550,"title":{},"body":{"license.html":{}}}],["promise.resolve(null).then",{"_index":1952,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["propagate",{"_index":3522,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":3913,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":3533,"title":{},"body":{"license.html":{}}}],["properties",{"_index":242,"title":{"properties.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"properties.html":{}}}],["property",{"_index":263,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["proprietary",{"_index":3494,"title":{},"body":{"license.html":{}}}],["protect",{"_index":3415,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":3462,"title":{},"body":{"license.html":{}}}],["protection",{"_index":3442,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":3830,"title":{},"body":{"license.html":{}}}],["prove",{"_index":4048,"title":{},"body":{"license.html":{}}}],["provide",{"_index":264,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["provided",{"_index":1878,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["providedin",{"_index":354,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamService.html":{}}}],["providers",{"_index":860,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{}}}],["provides",{"_index":349,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["provision",{"_index":3481,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":3888,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":4035,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":4037,"title":{},"body":{"license.html":{}}}],["public",{"_index":699,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["publicity",{"_index":3856,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":3832,"title":{},"body":{"license.html":{}}}],["publish",{"_index":3679,"title":{},"body":{"license.html":{}}}],["published",{"_index":4032,"title":{},"body":{"license.html":{}}}],["pull",{"_index":3345,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":3490,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":3781,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":3984,"title":{},"body":{"license.html":{}}}],["px",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["python",{"_index":3239,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["qualify",{"_index":3904,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4046,"title":{},"body":{"license.html":{}}}],["queries",{"_index":2472,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queries'},{'name",{"_index":113,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["queries.component.html",{"_index":2473,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queries.component.scss",{"_index":2474,"title":{},"body":{"components/QueriesComponent.html":{}}}],["queriescomponent",{"_index":112,"title":{"components/QueriesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["queryparams",{"_index":1969,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["question",{"_index":2712,"title":{},"body":{"components/SidebarComponent.html":{}}}],["radiobuttonmodule",{"_index":694,"title":{},"body":{"components/ConfigComponent.html":{}}}],["react",{"_index":390,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"miscellaneous/enumerations.html":{}}}],["reactiveformsmodule",{"_index":865,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["read",{"_index":3225,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["readable",{"_index":3722,"title":{},"body":{"license.html":{}}}],["readily",{"_index":3971,"title":{},"body":{"license.html":{}}}],["reading",{"_index":3835,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":1374,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["ready",{"_index":3479,"title":{},"body":{"license.html":{}}}],["reason",{"_index":3982,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":3740,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":3902,"title":{},"body":{"license.html":{}}}],["receive",{"_index":1838,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["received",{"_index":3430,"title":{},"body":{"license.html":{}}}],["receives",{"_index":3917,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":3989,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":3815,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":3980,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":3427,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":3564,"title":{},"body":{"license.html":{}}}],["redistribute",{"_index":4086,"title":{},"body":{"license.html":{}}}],["referring",{"_index":3408,"title":{},"body":{"license.html":{}}}],["refers",{"_index":3503,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":4017,"title":{},"body":{"license.html":{}}}],["refresh_token_key",{"_index":1349,"title":{},"body":{"injectables/JwtService.html":{}}}],["refreshexpiresin",{"_index":3131,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshtoken",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshtoken(refreshtoken",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["regard",{"_index":3841,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3698,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":3607,"title":{},"body":{"license.html":{}}}],["regexp",{"_index":1235,"title":{},"body":{"components/HomeComponent.html":{}}}],["register",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":115,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["register(dto",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.html",{"_index":2476,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":2477,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":114,"title":{"components/RegisterComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["registerform",{"_index":1251,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["registernewuser",{"_index":501,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{}}}],["registernewuserfailure",{"_index":580,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["registernewusersuccess",{"_index":502,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["registeronce",{"_index":2806,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["registerrequestdto",{"_index":604,"title":{"interfaces/RegisterRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{}}}],["registrationerror",{"_index":634,"title":{},"body":{"interfaces/AuthState.html":{}}}],["registry",{"_index":3349,"title":{},"body":{"index.html":{}}}],["reinstated",{"_index":3887,"title":{},"body":{"license.html":{}}}],["reject",{"_index":1771,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["rejectbuttonstyleclass",{"_index":1766,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["rejecticon",{"_index":1769,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["related",{"_index":690,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["relationship",{"_index":3633,"title":{},"body":{"license.html":{}}}],["release",{"_index":2791,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["release.dto",{"_index":2321,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["release.dto.ts",{"_index":2284,"title":{},"body":{"interfaces/ProjectReleaseDto.html":{}}}],["release.releasetimestamp",{"_index":2794,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["release.version",{"_index":2793,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["released",{"_index":3403,"title":{},"body":{"license.html":{}}}],["releaseid",{"_index":2285,"title":{},"body":{"interfaces/ProjectReleaseDto.html":{}}}],["releases",{"_index":2316,"title":{},"body":{"interfaces/ProjectStatDto.html":{},"components/ReleasesComponent.html":{}}}],["releases'},{'name",{"_index":117,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["releases.component.html",{"_index":2513,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["releases.component.scss",{"_index":2514,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["releasescomponent",{"_index":116,"title":{"components/ReleasesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["releasetimestamp",{"_index":2286,"title":{},"body":{"interfaces/ProjectReleaseDto.html":{}}}],["relevant",{"_index":1832,"title":{},"body":{"injectables/MenuService.html":{},"license.html":{}}}],["relicensing",{"_index":3875,"title":{},"body":{"license.html":{}}}],["reload",{"_index":3310,"title":{},"body":{"index.html":{}}}],["relying",{"_index":3970,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3759,"title":{},"body":{"license.html":{}}}],["remains",{"_index":3401,"title":{},"body":{"license.html":{}}}],["remote",{"_index":3276,"title":{},"body":{"index.html":{}}}],["removal",{"_index":1625,"title":{},"body":{"injectables/MembersEffects.html":{},"license.html":{}}}],["remove",{"_index":3842,"title":{},"body":{"license.html":{}}}],["removeitem",{"_index":1377,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removeitem(key",{"_index":1384,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removemember",{"_index":1596,"title":{},"body":{"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{}}}],["removemember(member",{"_index":1712,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["removemember(memberid",{"_index":1642,"title":{},"body":{"injectables/MembersService.html":{}}}],["removemembererror",{"_index":1654,"title":{},"body":{"interfaces/MembersState.html":{}}}],["removememberfailure",{"_index":1633,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["removememberserror",{"_index":2967,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["removemembersstatus",{"_index":2968,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["removememberstatus",{"_index":1655,"title":{},"body":{"interfaces/MembersState.html":{}}}],["removemembersuccess",{"_index":1597,"title":{},"body":{"injectables/MembersEffects.html":{},"interfaces/MembersState.html":{}}}],["removeprojectserror",{"_index":2969,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["removeprojectsstatus",{"_index":2970,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["removes",{"_index":771,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["removeteammembers",{"_index":2854,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["removeteammembers(teamid",{"_index":3072,"title":{},"body":{"injectables/TeamService.html":{}}}],["removeteammembersfailure",{"_index":2955,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["removeteammemberssuccess",{"_index":2935,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["removeteamprojects",{"_index":2855,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["removeteamprojects(teamid",{"_index":3074,"title":{},"body":{"injectables/TeamService.html":{}}}],["removeteamprojectsfailure",{"_index":2956,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["removeteamprojectss",{"_index":2902,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["removeteamprojectssuccess",{"_index":2940,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["removing",{"_index":727,"title":{},"body":{"components/ConfigComponent.html":{}}}],["render",{"_index":744,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["rendered",{"_index":4062,"title":{},"body":{"license.html":{}}}],["renderer",{"_index":1103,"title":{},"body":{"components/HomeComponent.html":{}}}],["renderer2",{"_index":1111,"title":{},"body":{"components/HomeComponent.html":{}}}],["rendering",{"_index":3296,"title":{},"body":{"index.html":{}}}],["repair",{"_index":4053,"title":{},"body":{"license.html":{}}}],["replace('lara",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["replace(this.layoutservice.config.theme",{"_index":831,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replaces",{"_index":769,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replacethemelink",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["replacethemelink(href",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["replacing",{"_index":753,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replays",{"_index":2516,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replays'},{'name",{"_index":119,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["replays.component.html",{"_index":2517,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replays.component.scss",{"_index":2518,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["replayscomponent",{"_index":118,"title":{"components/ReplaysComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["represent",{"_index":249,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["representing",{"_index":757,"title":{},"body":{"components/ConfigComponent.html":{}}}],["represents",{"_index":265,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["request",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["request.dto",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{},"injectables/ProjectService.html":{},"components/RegisterComponent.html":{},"injectables/TeamService.html":{}}}],["request.dto).pipe",{"_index":516,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.dto.password",{"_index":521,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.dto.ts",{"_index":684,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/InvitationRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["request.dto.username",{"_index":519,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.password",{"_index":532,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.teamid",{"_index":3025,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["request.username",{"_index":531,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["require",{"_index":3602,"title":{},"body":{"license.html":{}}}],["required",{"_index":3805,"title":{},"body":{"license.html":{}}}],["requirement",{"_index":3692,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":3763,"title":{},"body":{"license.html":{}}}],["requires",{"_index":3448,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":3517,"title":{},"body":{"license.html":{}}}],["reset",{"_index":121,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resetinviteform",{"_index":1688,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["resetpassword",{"_index":503,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(dto",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":120,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resetpassworderror",{"_index":635,"title":{},"body":{"interfaces/AuthState.html":{}}}],["resetpasswordfailure",{"_index":581,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["resetpasswordform",{"_index":2521,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordrequestdto",{"_index":608,"title":{"interfaces/ResetPasswordRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["resetpasswordsuccess",{"_index":562,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["resetprojectsform",{"_index":2411,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["resets",{"_index":1138,"title":{},"body":{"components/HomeComponent.html":{}}}],["resetsingleteamstate",{"_index":2856,"title":{},"body":{"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{}}}],["resetsource",{"_index":1823,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["resolved",{"_index":3788,"title":{},"body":{"license.html":{}}}],["resources",{"_index":2543,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources'},{'name",{"_index":123,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resources.component.html",{"_index":2544,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resources.component.scss",{"_index":2545,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["resourcescomponent",{"_index":122,"title":{"components/ResourcesComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["resourcetype",{"_index":1574,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"interfaces/Role.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["respect",{"_index":3424,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":3422,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":3918,"title":{},"body":{"license.html":{}}}],["restoreconfig",{"_index":434,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["restorescale",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["restoretheme",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["restrict",{"_index":3489,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":3661,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":3873,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":3871,"title":{},"body":{"license.html":{}}}],["result",{"_index":969,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"injectables/PlatformEffects.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"injectables/RoleEffects.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"license.html":{}}}],["result.hourbyhour.map",{"_index":2766,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["result.hourbyhour.map((hourlystat",{"_index":2758,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["resulting",{"_index":3518,"title":{},"body":{"license.html":{}}}],["results",{"_index":155,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectReleaseDto.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retains",{"_index":3819,"title":{},"body":{"license.html":{}}}],["return",{"_index":414,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsTableComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["returning",{"_index":411,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["returns",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["reviewing",{"_index":4072,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4023,"title":{},"body":{"license.html":{}}}],["right",{"_index":3813,"title":{},"body":{"license.html":{}}}],["rights",{"_index":3416,"title":{},"body":{"license.html":{}}}],["ripple",{"_index":246,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ripple(_val",{"_index":829,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ripplemodule",{"_index":23,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{}}}],["risk",{"_index":4045,"title":{},"body":{"license.html":{}}}],["role",{"_index":1244,"title":{"interfaces/Role.html":{}},"body":{"interfaces/Invitation.html":{},"interfaces/InvitationDto.html":{},"components/MembersTableComponent.html":{},"interfaces/Role.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["role.actions",{"_index":2565,"title":{},"body":{"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["role/role.effects",{"_index":471,"title":{},"body":{"interfaces/AppState.html":{}}}],["role/role.reducer",{"_index":473,"title":{},"body":{"interfaces/AppState.html":{}}}],["roleeffects",{"_index":470,"title":{"injectables/RoleEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/RoleEffects.html":{}}}],["roleid",{"_index":1312,"title":{},"body":{"interfaces/InvitationRequestDto.html":{},"components/MembersTableComponent.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["rolereducer",{"_index":472,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/RoleState.html":{}}}],["roles",{"_index":1686,"title":{},"body":{"components/MembersTableComponent.html":{},"injectables/RoleEffects.html":{},"interfaces/RoleState.html":{}}}],["roleservice",{"_index":2556,"title":{"injectables/RoleService.html":{}},"body":{"injectables/RoleEffects.html":{},"injectables/RoleService.html":{}}}],["rolestate",{"_index":451,"title":{"interfaces/RoleState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/RoleState.html":{}}}],["rom",{"_index":3822,"title":{},"body":{"license.html":{}}}],["root",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MembersService.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformService.html":{},"injectables/ProjectService.html":{},"injectables/RoleService.html":{},"injectables/SessionStorage.html":{},"injectables/TeamService.html":{}}}],["root'},{'name",{"_index":54,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["route",{"_index":1112,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["route.children",{"_index":1209,"title":{},"body":{"components/HomeComponent.html":{}}}],["routeevent",{"_index":1817,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{}}}],["router",{"_index":885,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["routerlink",{"_index":1202,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodule",{"_index":22,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["routeroutlet",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["routeurl",{"_index":1212,"title":{},"body":{"components/HomeComponent.html":{}}}],["routing",{"_index":1875,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["royalty",{"_index":3933,"title":{},"body":{"license.html":{}}}],["ruby",{"_index":3241,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rules",{"_index":3829,"title":{},"body":{"license.html":{}}}],["run",{"_index":3303,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":3333,"title":{},"body":{"index.html":{},"license.html":{}}}],["runs",{"_index":3585,"title":{},"body":{"license.html":{}}}],["rust",{"_index":3240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rxjs",{"_index":309,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/InvitationService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"components/TeamsComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1940,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["safest",{"_index":4088,"title":{},"body":{"license.html":{}}}],["sake",{"_index":3447,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3943,"title":{},"body":{"license.html":{}}}],["same",{"_index":3428,"title":{},"body":{"license.html":{}}}],["satisfy",{"_index":3762,"title":{},"body":{"license.html":{}}}],["saveconfig",{"_index":441,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["saverefreshtoken",{"_index":1337,"title":{},"body":{"injectables/JwtService.html":{}}}],["saverefreshtoken(token",{"_index":1344,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken",{"_index":1338,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":1346,"title":{},"body":{"injectables/JwtService.html":{}}}],["saying",{"_index":3756,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":3312,"title":{},"body":{"index.html":{}}}],["scale",{"_index":248,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["scale(_val",{"_index":822,"title":{},"body":{"components/ConfigComponent.html":{}}}],["scales",{"_index":701,"title":{},"body":{"components/ConfigComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["scheme",{"_index":268,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["school",{"_index":4110,"title":{},"body":{"license.html":{}}}],["scope",{"_index":3993,"title":{},"body":{"license.html":{}}}],["screen",{"_index":125,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["screenloadscomponent",{"_index":124,"title":{"components/ScreenLoadsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["scripts",{"_index":3591,"title":{},"body":{"license.html":{}}}],["scroll",{"_index":1149,"title":{},"body":{"components/HomeComponent.html":{}}}],["scroll'.split",{"_index":1237,"title":{},"body":{"components/HomeComponent.html":{}}}],["scrolling",{"_index":1119,"title":{},"body":{"components/HomeComponent.html":{}}}],["sdks",{"_index":2583,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdks'},{'name",{"_index":128,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sdks.component.html",{"_index":2584,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdks.component.scss",{"_index":2585,"title":{},"body":{"components/SdksComponent.html":{}}}],["sdkscomponent",{"_index":127,"title":{"components/SdksComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["secondarily",{"_index":3525,"title":{},"body":{"license.html":{}}}],["secret",{"_index":2522,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["section",{"_index":3638,"title":{},"body":{"license.html":{}}}],["sections",{"_index":3719,"title":{},"body":{"license.html":{}}}],["securepasswordregex",{"_index":1275,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["security",{"_index":2587,"title":{},"body":{"components/SecurityComponent.html":{}}}],["security'},{'name",{"_index":130,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["security.component.html",{"_index":2588,"title":{},"body":{"components/SecurityComponent.html":{}}}],["security.component.scss",{"_index":2589,"title":{},"body":{"components/SecurityComponent.html":{}}}],["securitycomponent",{"_index":129,"title":{"components/SecurityComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["see",{"_index":3358,"title":{},"body":{"index.html":{},"license.html":{}}}],["segment.path",{"_index":1215,"title":{},"body":{"components/HomeComponent.html":{}}}],["select(issuccess",{"_index":1062,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectacceptinvitationerror",{"_index":1281,"title":{},"body":{"components/InvitationComponent.html":{}}}],["select(selectactivemembers",{"_index":1520,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["select(selectallprojects",{"_index":2267,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["select(selectauthorizationerror",{"_index":1429,"title":{},"body":{"components/LoginComponent.html":{}}}],["select(selectcreateprojectstatus",{"_index":2448,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["select(selectcurrentorganization",{"_index":945,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["select(selectcurrentuser",{"_index":1054,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectforgotpassworderror",{"_index":1056,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["select(selectinvitationsendstatus",{"_index":1745,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["select(selectinvitedmembers",{"_index":1565,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectmyprojects",{"_index":2371,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["select(selectmyteams",{"_index":2373,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["select(selectorganizationerror",{"_index":950,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["select(selectorganizationmembers",{"_index":1554,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectorganizationteams",{"_index":3122,"title":{},"body":{"components/TeamsComponent.html":{}}}],["select(selectownerasarray",{"_index":1569,"title":{},"body":{"components/MembersComponent.html":{}}}],["select(selectregistrationerror",{"_index":2492,"title":{},"body":{"components/RegisterComponent.html":{}}}],["select(selectremovememberstatus",{"_index":1772,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["select(selectresetpassworderror",{"_index":2529,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["select(selectsingleteammembers",{"_index":2835,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["select(selectsingleteamprojects",{"_index":2841,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["select(selectupdateorganizationpicturestatus",{"_index":2074,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["select(selectupdateteamstatus",{"_index":2888,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["selectacceptinvitationerror",{"_index":1274,"title":{},"body":{"components/InvitationComponent.html":{}}}],["selectactivemembers",{"_index":1505,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["selectallprojects",{"_index":2264,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["selectauthorizationerror",{"_index":1428,"title":{},"body":{"components/LoginComponent.html":{}}}],["selectcreateprojectstatus",{"_index":2442,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["selectcurrentorganization",{"_index":929,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["selectcurrentuser",{"_index":1045,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["selected",{"_index":283,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["selected.projectid",{"_index":2273,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["selected.userid",{"_index":1531,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["selectedlanguage",{"_index":3138,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectedlanguage.label",{"_index":3170,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectedmembers",{"_index":1470,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["selectedprojects",{"_index":2254,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["selectforgotpassworderror",{"_index":1046,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["selecthaspermission",{"_index":1577,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["selecthaspermission(resourcetype.organization",{"_index":2040,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["selecthaspermission(resourcetype.project",{"_index":2396,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["selecthaspermission(resourcetype.team",{"_index":2824,"title":{},"body":{"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["selecthaspermission(resourcetype.user",{"_index":1558,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectinvitationsendstatus",{"_index":1735,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectinvitedmembers",{"_index":1580,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectmyprojects",{"_index":2377,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["selectmyteams",{"_index":2380,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["selectorganizationerror",{"_index":930,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["selectorganizationmembers",{"_index":1579,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectorganizationteams",{"_index":3126,"title":{},"body":{"components/TeamsComponent.html":{}}}],["selectownerasarray",{"_index":1581,"title":{},"body":{"components/MembersComponent.html":{}}}],["selectplatforms",{"_index":2439,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["selectregistrationerror",{"_index":2490,"title":{},"body":{"components/RegisterComponent.html":{}}}],["selectremovememberstatus",{"_index":1736,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectresetpassworderror",{"_index":2528,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["selectroles",{"_index":1739,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["selectsingleteam",{"_index":2862,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["selectsingleteammembers",{"_index":2863,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["selectsingleteamprojects",{"_index":2864,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["selectupdateorganizationpicturestatus",{"_index":2061,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["selectupdateteamstatus",{"_index":2865,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["sell",{"_index":3959,"title":{},"body":{"license.html":{}}}],["selling",{"_index":3942,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":3505,"title":{},"body":{"license.html":{}}}],["send",{"_index":1326,"title":{},"body":{"injectables/InvitationService.html":{}}}],["sendinvite",{"_index":1689,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["sends",{"_index":1827,"title":{},"body":{"injectables/MenuService.html":{}}}],["separable",{"_index":3771,"title":{},"body":{"license.html":{}}}],["separate",{"_index":3704,"title":{},"body":{"license.html":{}}}],["separated",{"_index":1893,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["separately",{"_index":3702,"title":{},"body":{"license.html":{}}}],["serve",{"_index":3305,"title":{},"body":{"index.html":{}}}],["served",{"_index":3363,"title":{},"body":{"index.html":{}}}],["server",{"_index":1804,"title":{},"body":{"injectables/MemoryStorage.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{}}}],["serves",{"_index":3578,"title":{},"body":{"license.html":{}}}],["service",{"_index":714,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["services",{"_index":1837,"title":{},"body":{"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["services/api/auth.api.service",{"_index":573,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["services/api/invitation.api.service",{"_index":583,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{}}}],["services/api/members.api.service",{"_index":1635,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["services/api/organization.api.service",{"_index":2116,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["services/api/platform.api.service",{"_index":2180,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["services/api/project.api.service",{"_index":2228,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["services/api/role.api.service",{"_index":2563,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["services/api/team.api.service",{"_index":2949,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["services/token",{"_index":574,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["servicing",{"_index":4052,"title":{},"body":{"license.html":{}}}],["sessions",{"_index":2594,"title":{},"body":{"components/SessionsComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["sessions'},{'name",{"_index":132,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sessions.component.html",{"_index":2595,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessions.component.scss",{"_index":2596,"title":{},"body":{"components/SessionsComponent.html":{}}}],["sessionscomponent",{"_index":131,"title":{"components/SessionsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sessionstorage",{"_index":2590,"title":{"injectables/SessionStorage.html":{}},"body":{"injectables/SessionStorage.html":{}}}],["set",{"_index":290,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["setcurrentuser",{"_index":646,"title":{},"body":{"interfaces/AuthState.html":{}}}],["setinputstyle(_val",{"_index":808,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setitem",{"_index":1378,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setitem(key",{"_index":1386,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setmenumode(_val",{"_index":804,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setripple(_val",{"_index":812,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sets",{"_index":407,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["setscale(_val",{"_index":800,"title":{},"body":{"components/ConfigComponent.html":{}}}],["settings",{"_index":692,"title":{},"body":{"components/ConfigComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SettingsComponent.html":{}}}],["settings'},{'name",{"_index":110,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["settings.component.html",{"_index":2598,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.component.scss",{"_index":2599,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settingscomponent",{"_index":133,"title":{"components/SettingsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["settoken",{"_index":647,"title":{},"body":{"interfaces/AuthState.html":{}}}],["setupchartdata",{"_index":2731,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["setupchartdata(result",{"_index":2740,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["setupsidenavitems",{"_index":2605,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setupsidenavitems(sidenav",{"_index":2625,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setvisible(_val",{"_index":795,"title":{},"body":{"components/ConfigComponent.html":{}}}],["several",{"_index":241,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["severity",{"_index":957,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["shall",{"_index":3644,"title":{},"body":{"license.html":{}}}],["shape",{"_index":314,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["share",{"_index":3395,"title":{},"body":{"license.html":{}}}],["shared",{"_index":3597,"title":{},"body":{"license.html":{}}}],["shared/components/access",{"_index":1582,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["shared/components/member",{"_index":2867,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["shared/components/members",{"_index":1584,"title":{},"body":{"components/MembersComponent.html":{},"components/SingleTeamComponent.html":{}}}],["shared/components/not",{"_index":2869,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["shared/components/project",{"_index":2871,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["shared/components/projects",{"_index":2401,"title":{},"body":{"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{}}}],["shared/components/teams",{"_index":3124,"title":{},"body":{"components/TeamsComponent.html":{}}}],["shield",{"_index":2685,"title":{},"body":{"components/SidebarComponent.html":{}}}],["short",{"_index":4099,"title":{},"body":{"license.html":{}}}],["show",{"_index":3431,"title":{},"body":{"license.html":{}}}],["showadddialog",{"_index":2412,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["showconfigsidebar",{"_index":343,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showdeleteteamconfirmation",{"_index":2809,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["showdeleteteamconfirmation(event",{"_index":2819,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["showinvitedialog",{"_index":1690,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["shown",{"_index":337,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showpickerdialog",{"_index":1466,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["showprofilesidebar",{"_index":338,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showremovememberconfirmation",{"_index":1691,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["showremovememberconfirmation(member",{"_index":1717,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["shows",{"_index":765,"title":{},"body":{"components/ConfigComponent.html":{}}}],["side",{"_index":2624,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["sidebar",{"_index":341,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":135,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sidebar.component.html",{"_index":2602,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2601,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":134,"title":{"components/SidebarComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["sidebarmodule",{"_index":693,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sidebars",{"_index":326,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sidenav",{"_index":1220,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["sidenav.devices",{"_index":2649,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.general",{"_index":2635,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help",{"_index":2704,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_documentation",{"_index":2705,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_guides",{"_index":2711,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_sdks",{"_index":2708,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help_support",{"_index":2714,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.home",{"_index":2636,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.issues",{"_index":2643,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.logs",{"_index":2640,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.messages",{"_index":2646,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.performance",{"_index":2654,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.projects",{"_index":2638,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.queries",{"_index":2657,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.releases",{"_index":2671,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.replays",{"_index":2668,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.resources",{"_index":2666,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.screen_loads",{"_index":2663,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.sessions",{"_index":2651,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings",{"_index":2677,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account",{"_index":2679,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_close",{"_index":2688,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_details",{"_index":2681,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_notifications",{"_index":2686,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_security",{"_index":2683,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_alerts",{"_index":2701,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_members",{"_index":2699,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_organization",{"_index":2691,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_projects",{"_index":2694,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_teams",{"_index":2696,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.stats",{"_index":2674,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.vitals",{"_index":2660,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sign",{"_index":4111,"title":{},"body":{"license.html":{}}}],["significant",{"_index":3801,"title":{},"body":{"license.html":{}}}],["signout",{"_index":504,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/TopbarComponent.html":{}}}],["similar",{"_index":3659,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":4013,"title":{},"body":{"license.html":{}}}],["single",{"_index":137,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["singleprojectcardcomponent",{"_index":136,"title":{"components/SingleProjectCardComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["singleteam",{"_index":2971,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["singleteamcomponent",{"_index":139,"title":{"components/SingleTeamComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["singleteameffects",{"_index":482,"title":{"injectables/SingleTeamEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/SingleTeamEffects.html":{}}}],["singleteamerror",{"_index":2972,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["singleteamreducer",{"_index":485,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/SingleTeamState.html":{}}}],["singleteamstate",{"_index":452,"title":{"interfaces/SingleTeamState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/SingleTeamState.html":{}}}],["singleteamstatus",{"_index":2973,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["sitemap",{"_index":2697,"title":{},"body":{"components/SidebarComponent.html":{}}}],["size",{"_index":299,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sizes",{"_index":792,"title":{},"body":{"components/ConfigComponent.html":{}}}],["skeletonmodule",{"_index":2723,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["slug",{"_index":892,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{}}}],["slug.tolowercase().replaceall",{"_index":970,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["slug/taken?slug",{"_index":2138,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["slugchecksubscription",{"_index":874,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["sluginput",{"_index":875,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["snippet",{"_index":1833,"title":{},"body":{"injectables/MenuService.html":{}}}],["software",{"_index":3375,"title":{},"body":{"license.html":{}}}],["sold",{"_index":3782,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3624,"title":{},"body":{"license.html":{}}}],["solely",{"_index":3635,"title":{},"body":{"license.html":{}}}],["solution",{"_index":3279,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"interfaces/FileDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"components/IssuesComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"components/ProjectDetailsComponent.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectReleaseDto.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"components/ResourcesComponent.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"injectables/SessionStorage.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"components/VitalsComponent.html":{},"index.html":{},"license.html":{}}}],["spare",{"_index":3736,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3407,"title":{},"body":{"license.html":{}}}],["special",{"_index":3492,"title":{},"body":{"license.html":{}}}],["specific",{"_index":3583,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":3601,"title":{},"body":{"license.html":{}}}],["specified",{"_index":749,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["specifies",{"_index":4029,"title":{},"body":{"license.html":{}}}],["specify",{"_index":4033,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":4024,"title":{},"body":{"license.html":{}}}],["spring",{"_index":3233,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.config.ts",{"_index":3262,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.selectors.ts",{"_index":3260,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../date.interceptor.ts",{"_index":3258,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.enum.ts",{"_index":3218,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../platform",{"_index":3219,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../resource",{"_index":3221,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state",{"_index":3222,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app.component.ts",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:48",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":3271,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/domain/dto/file.dto.ts",{"_index":1002,"title":{},"body":{"interfaces/FileDto.html":{}}}],["src/app/core/domain/dto/invitation.dto.ts",{"_index":1308,"title":{},"body":{"interfaces/InvitationDto.html":{}}}],["src/app/core/domain/dto/members.dto.ts",{"_index":1590,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["src/app/core/domain/dto/organization.dto.ts",{"_index":2096,"title":{},"body":{"interfaces/OrganizationDto.html":{}}}],["src/app/core/domain/dto/platform.dto.ts",{"_index":2167,"title":{},"body":{"interfaces/PlatformDto.html":{}}}],["src/app/core/domain/dto/project",{"_index":2237,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectReleaseDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["src/app/core/domain/dto/project.dto.ts",{"_index":2202,"title":{},"body":{"interfaces/ProjectDto.html":{}}}],["src/app/core/domain/dto/requests/authenticate",{"_index":683,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{}}}],["src/app/core/domain/dto/requests/create",{"_index":984,"title":{},"body":{"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{}}}],["src/app/core/domain/dto/requests/forgot",{"_index":1084,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{}}}],["src/app/core/domain/dto/requests/invitation",{"_index":1311,"title":{},"body":{"interfaces/InvitationRequestDto.html":{}}}],["src/app/core/domain/dto/requests/register",{"_index":2511,"title":{},"body":{"interfaces/RegisterRequestDto.html":{}}}],["src/app/core/domain/dto/requests/reset",{"_index":2541,"title":{},"body":{"interfaces/ResetPasswordRequestDto.html":{}}}],["src/app/core/domain/dto/team.dto.ts",{"_index":3012,"title":{},"body":{"interfaces/TeamDto.html":{}}}],["src/app/core/domain/dto/token.dto.ts",{"_index":3132,"title":{},"body":{"interfaces/TokenDto.html":{}}}],["src/app/core/domain/dto/user.dto.ts",{"_index":3172,"title":{},"body":{"interfaces/UserDto.html":{}}}],["src/app/core/domain/models/enums/permission.enum.ts",{"_index":3224,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/platform",{"_index":3227,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/resource",{"_index":3246,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/state",{"_index":3255,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/invitation.entity.ts",{"_index":1242,"title":{},"body":{"interfaces/Invitation.html":{}}}],["src/app/core/domain/models/menu",{"_index":1814,"title":{},"body":{"interfaces/MenuChangeEvent.html":{}}}],["src/app/core/domain/models/organization.entity.ts",{"_index":2002,"title":{},"body":{"interfaces/Organization.html":{}}}],["src/app/core/domain/models/platform.entity.ts",{"_index":2161,"title":{},"body":{"interfaces/Platform.html":{}}}],["src/app/core/domain/models/project.entity.ts",{"_index":2195,"title":{},"body":{"interfaces/Project.html":{}}}],["src/app/core/domain/models/team.entity.ts",{"_index":3010,"title":{},"body":{"interfaces/Team.html":{}}}],["src/app/core/domain/models/token.entity.ts",{"_index":3128,"title":{},"body":{"interfaces/Token.html":{}}}],["src/app/core/domain/models/user.entity.ts",{"_index":2546,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{}}}],["src/app/core/interceptors/date.interceptor.ts",{"_index":3264,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/services/api/auth.api.service.ts",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:14",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:17",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:25",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:33",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:37",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:45",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:53",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:61",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts",{"_index":1313,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:12",{"_index":1316,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:15",{"_index":1322,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:23",{"_index":1320,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/invitation.api.service.ts:30",{"_index":1318,"title":{},"body":{"injectables/InvitationService.html":{}}}],["src/app/core/services/api/members.api.service.ts",{"_index":1636,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:11",{"_index":1639,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:14",{"_index":1641,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:18",{"_index":1640,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/members.api.service.ts:23",{"_index":1643,"title":{},"body":{"injectables/MembersService.html":{}}}],["src/app/core/services/api/organization.api.service.ts",{"_index":2123,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:12",{"_index":2125,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:15",{"_index":2127,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:25",{"_index":2128,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:29",{"_index":2129,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:36",{"_index":2131,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/platform.api.service.ts",{"_index":2183,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/platform.api.service.ts:10",{"_index":2185,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/platform.api.service.ts:13",{"_index":2186,"title":{},"body":{"injectables/PlatformService.html":{}}}],["src/app/core/services/api/project.api.service.ts",{"_index":2287,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:12",{"_index":2292,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:15",{"_index":2295,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:19",{"_index":2297,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:33",{"_index":2301,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:40",{"_index":2294,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/project.api.service.ts:44",{"_index":2303,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/app/core/services/api/role.api.service.ts",{"_index":2566,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/role.api.service.ts:10",{"_index":2568,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/role.api.service.ts:13",{"_index":2569,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/app/core/services/api/team.api.service.ts",{"_index":3047,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:15",{"_index":3054,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:18",{"_index":3064,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:22",{"_index":3063,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:26",{"_index":3066,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:30",{"_index":3068,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:37",{"_index":3070,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:44",{"_index":3071,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:51",{"_index":3060,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:55",{"_index":3062,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:59",{"_index":3077,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:67",{"_index":3056,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:78",{"_index":3073,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:85",{"_index":3058,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/api/team.api.service.ts:96",{"_index":3075,"title":{},"body":{"injectables/TeamService.html":{}}}],["src/app/core/services/layout.service.ts",{"_index":234,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["src/app/core/services/layout.service.ts:100",{"_index":1367,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:115",{"_index":1372,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:130",{"_index":1368,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:139",{"_index":1370,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:145",{"_index":1369,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:151",{"_index":1371,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:156",{"_index":1362,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:180",{"_index":1366,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:190",{"_index":1365,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:199",{"_index":1360,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:211",{"_index":1358,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:220",{"_index":1359,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:227",{"_index":1361,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:232",{"_index":1363,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:240",{"_index":1364,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:92",{"_index":1357,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/local",{"_index":1373,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["src/app/core/services/memory",{"_index":1794,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["src/app/core/services/menu.service.ts",{"_index":1818,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:16",{"_index":1836,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:22",{"_index":1842,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:27",{"_index":1841,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:31",{"_index":1844,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:40",{"_index":1826,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:47",{"_index":1834,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/session",{"_index":2591,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["src/app/core/services/token",{"_index":1332,"title":{},"body":{"injectables/JwtService.html":{}}}],["src/app/core/state/app.state.ts",{"_index":445,"title":{},"body":{"interfaces/AppState.html":{}}}],["src/app/core/state/auth/auth.effects.ts",{"_index":494,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:111",{"_index":569,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:122",{"_index":557,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:139",{"_index":559,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:146",{"_index":525,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:163",{"_index":528,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:30",{"_index":510,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:38",{"_index":553,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:50",{"_index":539,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:71",{"_index":550,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:85",{"_index":564,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:99",{"_index":545,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.reducer.ts",{"_index":629,"title":{},"body":{"interfaces/AuthState.html":{}}}],["src/app/core/state/auth/auth.selectors.ts",{"_index":3267,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/core/state/members/members.effects.ts",{"_index":1595,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:22",{"_index":1600,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:29",{"_index":1617,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:41",{"_index":1612,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:53",{"_index":1606,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:65",{"_index":1621,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.effects.ts:77",{"_index":1626,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["src/app/core/state/members/members.reducer.ts",{"_index":1648,"title":{},"body":{"interfaces/MembersState.html":{}}}],["src/app/core/state/organization/organization.effects.ts",{"_index":2097,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:14",{"_index":2109,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:26",{"_index":2105,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:38",{"_index":2115,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:8",{"_index":2099,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.reducer.ts",{"_index":2143,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["src/app/core/state/platform/platform.effects.ts",{"_index":2169,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.effects.ts:12",{"_index":2173,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.effects.ts:18",{"_index":2179,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["src/app/core/state/platform/platform.reducer.ts",{"_index":2189,"title":{},"body":{"interfaces/PlatformState.html":{}}}],["src/app/core/state/project/project.effects.ts",{"_index":2204,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:14",{"_index":2222,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:26",{"_index":2227,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:39",{"_index":2216,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.effects.ts:8",{"_index":2210,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["src/app/core/state/project/project.reducer.ts",{"_index":2322,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["src/app/core/state/role/role.effects.ts",{"_index":2554,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.effects.ts:14",{"_index":2562,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.effects.ts:8",{"_index":2557,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["src/app/core/state/role/role.reducer.ts",{"_index":2571,"title":{},"body":{"interfaces/RoleState.html":{}}}],["src/app/core/state/single",{"_index":2900,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["src/app/core/state/team/team.effects.ts",{"_index":3013,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:14",{"_index":3038,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:26",{"_index":3033,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:38",{"_index":3021,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:50",{"_index":3027,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.effects.ts:8",{"_index":3016,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["src/app/core/state/team/team.reducer.ts",{"_index":3086,"title":{},"body":{"interfaces/TeamState.html":{}}}],["src/app/features/auth/auth.component.ts",{"_index":489,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/features/auth/components/forgot",{"_index":1014,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts",{"_index":1246,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:147",{"_index":1255,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:158",{"_index":1256,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:164",{"_index":1258,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:177",{"_index":1254,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:60",{"_index":1269,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:62",{"_index":1253,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:74",{"_index":1260,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:75",{"_index":1261,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:77",{"_index":1267,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:95",{"_index":1270,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:96",{"_index":1259,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:97",{"_index":1268,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts:99",{"_index":1257,"title":{},"body":{"components/InvitationComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts",{"_index":1405,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:127",{"_index":1416,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:136",{"_index":1418,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:142",{"_index":1414,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:146",{"_index":1415,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:150",{"_index":1413,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:65",{"_index":1412,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:76",{"_index":1423,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:81",{"_index":1421,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:82",{"_index":1422,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:84",{"_index":1425,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:85",{"_index":1420,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:86",{"_index":1424,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:88",{"_index":1417,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:99",{"_index":1419,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts",{"_index":2475,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:100",{"_index":2482,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:131",{"_index":2480,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:142",{"_index":2481,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:148",{"_index":2483,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:159",{"_index":2479,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:67",{"_index":2478,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:78",{"_index":2485,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:79",{"_index":2486,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:81",{"_index":2487,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:96",{"_index":2489,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:97",{"_index":2484,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:98",{"_index":2488,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/reset",{"_index":2519,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["src/app/features/create",{"_index":856,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["src/app/features/devices/devices.component.ts",{"_index":993,"title":{},"body":{"components/DevicesComponent.html":{}}}],["src/app/features/help/documentation/documentation.component.ts",{"_index":997,"title":{},"body":{"components/DocumentationComponent.html":{}}}],["src/app/features/help/guides/guides.component.ts",{"_index":1086,"title":{},"body":{"components/GuidesComponent.html":{}}}],["src/app/features/help/sdks/sdks.component.ts",{"_index":2582,"title":{},"body":{"components/SdksComponent.html":{}}}],["src/app/features/help/support/support.component.ts",{"_index":3006,"title":{},"body":{"components/SupportComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts",{"_index":688,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:101",{"_index":813,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:109",{"_index":764,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:121",{"_index":751,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:143",{"_index":768,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:163",{"_index":758,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:171",{"_index":761,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:179",{"_index":747,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:37",{"_index":735,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:43",{"_index":711,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:57",{"_index":783,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:58",{"_index":784,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:62",{"_index":794,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:66",{"_index":796,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:70",{"_index":799,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:74",{"_index":801,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:79",{"_index":803,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:83",{"_index":805,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:88",{"_index":807,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:92",{"_index":809,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:97",{"_index":811,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/footer/footer.component.ts",{"_index":1009,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts",{"_index":1849,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:103",{"_index":1928,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:111",{"_index":1866,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:129",{"_index":1927,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:131",{"_index":1932,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:171",{"_index":1921,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:185",{"_index":1922,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:209",{"_index":1905,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:229",{"_index":1934,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:234",{"_index":1903,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:241",{"_index":1917,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:62",{"_index":1887,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:69",{"_index":1879,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:74",{"_index":1898,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:83",{"_index":1891,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:89",{"_index":1923,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:96",{"_index":1931,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts",{"_index":2600,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:19",{"_index":2606,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:36",{"_index":2628,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:37",{"_index":2627,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:44",{"_index":2622,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:54",{"_index":2626,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts",{"_index":3133,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:35",{"_index":3159,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:36",{"_index":3163,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:37",{"_index":3144,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:40",{"_index":3156,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:48",{"_index":3150,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:50",{"_index":3155,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:52",{"_index":3161,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:54",{"_index":3160,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:55",{"_index":3164,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:57",{"_index":3149,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:62",{"_index":3148,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:67",{"_index":3146,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:71",{"_index":3147,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":1090,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:120",{"_index":1155,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:122",{"_index":1157,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:123",{"_index":1158,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:125",{"_index":1160,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:127",{"_index":1163,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:129",{"_index":1156,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:130",{"_index":1162,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:131",{"_index":1161,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:133",{"_index":1146,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:140",{"_index":1144,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:155",{"_index":1145,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:177",{"_index":1123,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:218",{"_index":1136,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:232",{"_index":1140,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:243",{"_index":1115,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:254",{"_index":1147,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:268",{"_index":1166,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:43",{"_index":1152,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:44",{"_index":1114,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:49",{"_index":1159,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:50",{"_index":1164,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/issues/issues.component.ts",{"_index":1328,"title":{},"body":{"components/IssuesComponent.html":{}}}],["src/app/features/logs/logs.component.ts",{"_index":1445,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/features/messages/messages.component.ts",{"_index":1987,"title":{},"body":{"components/MessagesComponent.html":{}}}],["src/app/features/peformance/queries/queries.component.ts",{"_index":2471,"title":{},"body":{"components/QueriesComponent.html":{}}}],["src/app/features/peformance/resources/resources.component.ts",{"_index":2542,"title":{},"body":{"components/ResourcesComponent.html":{}}}],["src/app/features/peformance/screen",{"_index":2576,"title":{},"body":{"components/ScreenLoadsComponent.html":{}}}],["src/app/features/peformance/vitals/vitals.component.ts",{"_index":3175,"title":{},"body":{"components/VitalsComponent.html":{}}}],["src/app/features/project",{"_index":2198,"title":{},"body":{"components/ProjectDetailsComponent.html":{}}}],["src/app/features/projects/components/single",{"_index":2717,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["src/app/features/projects/projects.component.ts",{"_index":2342,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:46",{"_index":2354,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:52",{"_index":2374,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:55",{"_index":2370,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:57",{"_index":2366,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:59",{"_index":2372,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:63",{"_index":2365,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:71",{"_index":2368,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:73",{"_index":2359,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:78",{"_index":2357,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/projects/projects.component.ts:93",{"_index":2358,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/app/features/releases/releases.component.ts",{"_index":2512,"title":{},"body":{"components/ReleasesComponent.html":{}}}],["src/app/features/replays/replays.component.ts",{"_index":2515,"title":{},"body":{"components/ReplaysComponent.html":{}}}],["src/app/features/sessions/sessions.component.ts",{"_index":2593,"title":{},"body":{"components/SessionsComponent.html":{}}}],["src/app/features/settings/account/close/close.component.ts",{"_index":685,"title":{},"body":{"components/CloseComponent.html":{}}}],["src/app/features/settings/account/details/details.component.ts",{"_index":989,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/features/settings/account/notifications/notifications.component.ts",{"_index":1999,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["src/app/features/settings/account/security/security.component.ts",{"_index":2586,"title":{},"body":{"components/SecurityComponent.html":{}}}],["src/app/features/settings/alerts/alerts.component.ts",{"_index":157,"title":{},"body":{"components/AlertsComponent.html":{}}}],["src/app/features/settings/members/members.component.ts",{"_index":1542,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:38",{"_index":1552,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:41",{"_index":1564,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:44",{"_index":1562,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:47",{"_index":1560,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:50",{"_index":1568,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:51",{"_index":1556,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:54",{"_index":1566,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:57",{"_index":1570,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/members/members.component.ts:61",{"_index":1553,"title":{},"body":{"components/MembersComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts",{"_index":2007,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:110",{"_index":2028,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:114",{"_index":2024,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:118",{"_index":2030,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:123",{"_index":2026,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:135",{"_index":2029,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:148",{"_index":2035,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:182",{"_index":2032,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:186",{"_index":2023,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:75",{"_index":2052,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:76",{"_index":2022,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:85",{"_index":2048,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:86",{"_index":2043,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:89",{"_index":2041,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:92",{"_index":2044,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:93",{"_index":2037,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:94",{"_index":2039,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:95",{"_index":2046,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:97",{"_index":2051,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/organization/organization.component.ts:99",{"_index":2027,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["src/app/features/settings/projects/projects.component.ts",{"_index":2393,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:32",{"_index":2394,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:35",{"_index":2398,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:38",{"_index":2397,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:42",{"_index":2399,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:43",{"_index":2400,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/projects/projects.component.ts:47",{"_index":2395,"title":{},"body":{"components/ProjectsComponent-1.html":{}}}],["src/app/features/settings/settings.component.ts",{"_index":2597,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/features/settings/teams/components/single",{"_index":2795,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts",{"_index":3109,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:37",{"_index":3113,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:40",{"_index":3117,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:43",{"_index":3116,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:46",{"_index":3115,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:50",{"_index":3120,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:51",{"_index":3118,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:52",{"_index":3123,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:55",{"_index":3121,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/settings/teams/teams.component.ts:59",{"_index":3114,"title":{},"body":{"components/TeamsComponent.html":{}}}],["src/app/features/stats/stats.component.ts",{"_index":3002,"title":{},"body":{"components/StatsComponent.html":{}}}],["src/app/shared/components/access",{"_index":9,"title":{},"body":{"components/AccessDeniedComponent.html":{}}}],["src/app/shared/components/member",{"_index":1449,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["src/app/shared/components/members",{"_index":1672,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["src/app/shared/components/not",{"_index":1991,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["src/app/shared/components/project",{"_index":2248,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["src/app/shared/components/projects",{"_index":2403,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["ssr",{"_index":3295,"title":{},"body":{"index.html":{}}}],["stand",{"_index":3478,"title":{},"body":{"license.html":{}}}],["standalone",{"_index":17,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{},"index.html":{}}}],["standard",{"_index":3365,"title":{},"body":{"index.html":{},"license.html":{}}}],["standards",{"_index":3565,"title":{},"body":{"license.html":{}}}],["start",{"_index":4089,"title":{},"body":{"license.html":{}}}],["startdate",{"_index":2737,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["started",{"_index":3274,"title":{"index.html":{},"license.html":{}},"body":{}}],["startinterval",{"_index":2246,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{}}}],["starts",{"_index":4100,"title":{},"body":{"license.html":{}}}],["stat.dto",{"_index":2307,"title":{},"body":{"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["stat.dto.ts",{"_index":2239,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"interfaces/ProjectStatDto.html":{}}}],["state",{"_index":315,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MembersState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"index.html":{},"license.html":{}}}],["state.allprojects",{"_index":2340,"title":{},"body":{"interfaces/ProjectState.html":{}}}],["state.members?.invitations",{"_index":1663,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.members?.owner",{"_index":1662,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.members?.users",{"_index":1664,"title":{},"body":{"interfaces/MembersState.html":{}}}],["state.organization",{"_index":2156,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["state.organizationteams",{"_index":3103,"title":{},"body":{"interfaces/TeamState.html":{}}}],["state.organizationteams?.filter((team",{"_index":3107,"title":{},"body":{"interfaces/TeamState.html":{}}}],["stated",{"_index":3612,"title":{},"body":{"license.html":{}}}],["statement",{"_index":3877,"title":{},"body":{"license.html":{}}}],["states",{"_index":1139,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["statestatus",{"_index":639,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["statestatus.error",{"_index":662,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["statestatus.loading",{"_index":653,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["statestatus.pending",{"_index":649,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"interfaces/RoleState.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["statestatus.success",{"_index":659,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["static",{"_index":278,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenudesktopinactive",{"_index":317,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenumobileactive",{"_index":321,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["stating",{"_index":3681,"title":{},"body":{"license.html":{}}}],["stats",{"_index":3003,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats'},{'name",{"_index":142,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["stats.component.html",{"_index":3004,"title":{},"body":{"components/StatsComponent.html":{}}}],["stats.component.scss",{"_index":3005,"title":{},"body":{"components/StatsComponent.html":{}}}],["statscomponent",{"_index":141,"title":{"components/StatsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["status",{"_index":636,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/TeamState.html":{},"license.html":{}}}],["status.enum",{"_index":643,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{}}}],["status.enum.ts",{"_index":3223,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["steps",{"_index":3435,"title":{},"body":{"license.html":{}}}],["stopwatch",{"_index":2664,"title":{},"body":{"components/SidebarComponent.html":{}}}],["storage",{"_index":358,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["storage.service",{"_index":312,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts",{"_index":1333,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:10",{"_index":1340,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:12",{"_index":1795,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:14",{"_index":1341,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:16",{"_index":1796,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:19",{"_index":1347,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:20",{"_index":1389,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:24",{"_index":1343,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:26",{"_index":1797,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:28",{"_index":1345,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:30",{"_index":1798,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:32",{"_index":1383,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:33",{"_index":1342,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:36",{"_index":1385,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:40",{"_index":1387,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:6",{"_index":1800,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:8",{"_index":1801,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:9",{"_index":1380,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["store",{"_index":883,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["stored",{"_index":3317,"title":{},"body":{"index.html":{}}}],["str",{"_index":1492,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["str.split('').foreach((char",{"_index":1513,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["stream",{"_index":1007,"title":{},"body":{"interfaces/FileDto.html":{}}}],["string",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"injectables/MembersService.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectReleaseDto.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/SessionStorage.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["string(this.index",{"_index":1964,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["strings",{"_index":2615,"title":{},"body":{"components/SidebarComponent.html":{}}}],["stringtocolour",{"_index":1467,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["stringtocolour(str",{"_index":1490,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["stringval",{"_index":1709,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["style",{"_index":271,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["styles",{"_index":260,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["styleurl",{"_index":27,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["styleurls",{"_index":1852,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["sub",{"_index":1889,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subdividing",{"_index":3923,"title":{},"body":{"license.html":{}}}],["subject",{"_index":308,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["sublicenses",{"_index":3955,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":3637,"title":{},"body":{"license.html":{}}}],["submenuanimation",{"_index":1862,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subprograms",{"_index":3600,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":4114,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":373,"title":{},"body":{"interfaces/AppConfig.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{}}}],["subscribe((data",{"_index":938,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{}}}],["subscribe((error",{"_index":951,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((issuccess",{"_index":1063,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((members",{"_index":1525,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["subscribe((organization",{"_index":946,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["subscribe((projects",{"_index":2269,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["subscribe((status",{"_index":1746,"title":{},"body":{"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["subscribe((user",{"_index":1055,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribes",{"_index":1867,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subscribing",{"_index":1820,"title":{},"body":{"injectables/MenuService.html":{}}}],["subscription",{"_index":902,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["subscriptions",{"_index":1919,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subsection",{"_index":3746,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":3797,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":3476,"title":{},"body":{"license.html":{}}}],["success",{"_index":657,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/RoleState.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["successful",{"_index":1624,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["successsubscription",{"_index":1020,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":243,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["sue",{"_index":3968,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":3806,"title":{},"body":{"license.html":{}}}],["summary",{"_index":958,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["supplement",{"_index":3836,"title":{},"body":{"license.html":{}}}],["support",{"_index":3007,"title":{},"body":{"components/SupportComponent.html":{},"license.html":{}}}],["support'},{'name",{"_index":144,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["support.component.html",{"_index":3008,"title":{},"body":{"components/SupportComponent.html":{}}}],["support.component.scss",{"_index":3009,"title":{},"body":{"components/SupportComponent.html":{}}}],["supportcomponent",{"_index":143,"title":{"components/SupportComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["supports",{"_index":3753,"title":{},"body":{"license.html":{}}}],["sure",{"_index":3354,"title":{},"body":{"index.html":{},"license.html":{}}}],["surrender",{"_index":3420,"title":{},"body":{"license.html":{}}}],["survive",{"_index":3876,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4065,"title":{},"body":{"license.html":{}}}],["svelte",{"_index":3232,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["switchmap",{"_index":541,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["switchmap((args",{"_index":2906,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["switchmap((request",{"_index":514,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/TeamEffects.html":{}}}],["symbol",{"_index":1880,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["system",{"_index":724,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["systematic",{"_index":3463,"title":{},"body":{"license.html":{}}}],["t",{"_index":3325,"title":{},"body":{"index.html":{}}}],["table",{"_index":1675,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table'},{'name",{"_index":94,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["table.actions",{"_index":1782,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.avatar",{"_index":1781,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component",{"_index":1586,"title":{},"body":{"components/MembersComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["table.component.html",{"_index":1679,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.scss",{"_index":1680,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts",{"_index":1673,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:100",{"_index":1723,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:102",{"_index":1727,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:103",{"_index":1725,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:105",{"_index":1710,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:107",{"_index":2426,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:109",{"_index":1716,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:111",{"_index":2428,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:112",{"_index":2431,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:113",{"_index":2430,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:114",{"_index":2434,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:115",{"_index":1715,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:116",{"_index":2432,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:118",{"_index":2421,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:129",{"_index":2422,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:133",{"_index":2417,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:137",{"_index":2424,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:143",{"_index":2420,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:151",{"_index":1714,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:159",{"_index":1718,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:182",{"_index":1713,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:183",{"_index":2425,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:188",{"_index":2423,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:195",{"_index":2419,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:222",{"_index":1711,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:230",{"_index":1719,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:61",{"_index":1699,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:70",{"_index":1721,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:72",{"_index":1700,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:74",{"_index":2414,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:75",{"_index":1707,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:78",{"_index":1701,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:81",{"_index":1706,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:83",{"_index":2427,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:84",{"_index":1702,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:85",{"_index":2415,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.component.ts:87",{"_index":1704,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:90",{"_index":1703,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:93",{"_index":1705,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:95",{"_index":1729,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.component.ts:96",{"_index":1722,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.component.ts:99",{"_index":2416,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.delete_confirmation",{"_index":1762,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.delete_confirmation_message",{"_index":1760,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.email",{"_index":1779,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.email_is_required",{"_index":1790,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.email_label",{"_index":1789,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.error",{"_index":1748,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table.failed_to_create_project",{"_index":2450,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.failed_to_remove_member",{"_index":1773,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.failed_to_send_invite",{"_index":1749,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.first_name",{"_index":1777,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.invalid_email",{"_index":1791,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.invite_sent",{"_index":1751,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.last_name",{"_index":1778,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.name",{"_index":2459,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.name_is_required",{"_index":2466,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.name_label",{"_index":2465,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.no_members_found",{"_index":1788,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.no_projects_found",{"_index":2464,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.platform",{"_index":2460,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.platform_is_required",{"_index":2470,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.platform_label",{"_index":2467,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.project_created",{"_index":2451,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["table.removed_memeber",{"_index":1774,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.role",{"_index":1780,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.role_is_required",{"_index":1793,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.role_label",{"_index":1792,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["table.success",{"_index":1750,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["table/members",{"_index":1585,"title":{},"body":{"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["table/projects",{"_index":2402,"title":{},"body":{"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["table/teams",{"_index":3125,"title":{},"body":{"components/TeamsComponent.html":{}}}],["tablemodule",{"_index":1676,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["tablet",{"_index":423,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["tabviewmodule",{"_index":2798,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["tailwind",{"_index":851,"title":{},"body":{"components/ConfigComponent.html":{}}}],["take",{"_index":1500,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{},"license.html":{}}}],["take(1",{"_index":1522,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["takes",{"_index":712,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["tangible",{"_index":3776,"title":{},"body":{"license.html":{}}}],["tap",{"_index":566,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["target",{"_index":1757,"title":{},"body":{"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/SingleTeamComponent.html":{}}}],["team",{"_index":988,"title":{"interfaces/Team.html":{}},"body":{"interfaces/CreateTeamRequestDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"miscellaneous/enumerations.html":{}}}],["team'},{'name",{"_index":140,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["team.actions",{"_index":2859,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{}}}],["team.component.html",{"_index":2799,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.scss",{"_index":2800,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts",{"_index":2796,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:100",{"_index":2812,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:110",{"_index":2826,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:113",{"_index":2825,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:116",{"_index":2827,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:119",{"_index":2829,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:120",{"_index":2831,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:121",{"_index":2833,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:122",{"_index":2834,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:123",{"_index":2846,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:124",{"_index":2836,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:127",{"_index":2842,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:130",{"_index":2843,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:132",{"_index":2844,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:134",{"_index":2818,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:140",{"_index":2816,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:154",{"_index":2817,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:160",{"_index":2820,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:180",{"_index":2821,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:185",{"_index":2815,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:202",{"_index":2814,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:214",{"_index":2823,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:240",{"_index":2837,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:249",{"_index":2839,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:258",{"_index":2838,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:267",{"_index":2840,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.component.ts:98",{"_index":2813,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.delete",{"_index":2898,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.delete_confirmation",{"_index":2881,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.delete_confirmation_message",{"_index":2879,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.delete_description",{"_index":2899,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.effects",{"_index":484,"title":{},"body":{"interfaces/AppState.html":{}}}],["team.effects.ts",{"_index":2901,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:111",{"_index":2916,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:123",{"_index":2942,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:33",{"_index":2904,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:39",{"_index":2922,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:51",{"_index":2927,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:63",{"_index":2932,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:75",{"_index":2948,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:87",{"_index":2911,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.effects.ts:99",{"_index":2937,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["team.error",{"_index":2885,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.failed_to_delete_team",{"_index":2886,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.failed_to_update_team",{"_index":2889,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.id",{"_index":2894,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.id_description",{"_index":2895,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.reducer",{"_index":486,"title":{},"body":{"interfaces/AppState.html":{}}}],["team.reducer.ts",{"_index":2958,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["team.selectors",{"_index":2866,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.slug",{"_index":2896,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.slug_description",{"_index":2897,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["team.teamid",{"_index":2390,"title":{},"body":{"components/ProjectsComponent.html":{},"interfaces/TeamState.html":{}}}],["team/single",{"_index":483,"title":{},"body":{"interfaces/AppState.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["team/team.effects",{"_index":475,"title":{},"body":{"interfaces/AppState.html":{}}}],["team/team.reducer",{"_index":477,"title":{},"body":{"interfaces/AppState.html":{}}}],["teamdto",{"_index":3011,"title":{"interfaces/TeamDto.html":{}},"body":{"interfaces/TeamDto.html":{},"injectables/TeamService.html":{}}}],["teameffects",{"_index":474,"title":{"injectables/TeamEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/TeamEffects.html":{}}}],["teamid",{"_index":2309,"title":{},"body":{"injectables/ProjectService.html":{},"components/SingleTeamComponent.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{}}}],["teamids",{"_index":2298,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{}}}],["teamid}/members",{"_index":3081,"title":{},"body":{"injectables/TeamService.html":{}}}],["teamid}/projects",{"_index":3082,"title":{},"body":{"injectables/TeamService.html":{}}}],["teamreducer",{"_index":476,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/TeamState.html":{}}}],["teams",{"_index":148,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"injectables/TeamEffects.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teams'},{'name",{"_index":146,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teams.component.html",{"_index":3110,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.component.scss",{"_index":3111,"title":{},"body":{"components/TeamsComponent.html":{}}}],["teams.map((team",{"_index":2389,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["teams?.length",{"_index":2388,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["teamscomponent",{"_index":145,"title":{"components/TeamsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teamservice",{"_index":2811,"title":{"injectables/TeamService.html":{}},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{}}}],["teamstablecomponent",{"_index":147,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["teamstate",{"_index":453,"title":{"interfaces/TeamState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/TeamState.html":{}}}],["technological",{"_index":3647,"title":{},"body":{"license.html":{}}}],["technologies",{"_index":3301,"title":{},"body":{"index.html":{}}}],["tells",{"_index":3553,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1806,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["templateurl",{"_index":25,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["term",{"_index":3610,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":4098,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":3881,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":3903,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":3890,"title":{},"body":{"license.html":{}}}],["termination",{"_index":3878,"title":{},"body":{"license.html":{}}}],["terms",{"_index":3432,"title":{},"body":{"license.html":{}}}],["test",{"_index":3336,"title":{},"body":{"index.html":{}}}],["testing",{"_index":3343,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3335,"title":{},"body":{"index.html":{}}}],["text",{"_index":1129,"title":{},"body":{"components/HomeComponent.html":{},"components/MembersTableComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{}}}],["theme",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["themelink",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.clonenode(true",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.nextsibling",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.parentnode!.insertbefore(clonelinkelement",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["themelink.remove",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["therefore",{"_index":3421,"title":{},"body":{"license.html":{}}}],["things",{"_index":3414,"title":{},"body":{"license.html":{}}}],["third",{"_index":3674,"title":{},"body":{"license.html":{}}}],["this.actions$.pipe",{"_index":512,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/MembersEffects.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"injectables/RoleEffects.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{}}}],["this.active",{"_index":1954,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.applyscale",{"_index":838,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.appsidebar.el.nativeelement.contains(event.target",{"_index":1181,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.appsidebar.el.nativeelement.issamenode(event.target",{"_index":1180,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.contains(event.target",{"_index":1187,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.issamenode(event.target",{"_index":1186,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.contains(event.target",{"_index":1183,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.issamenode",{"_index":1182,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.contains",{"_index":1189,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.issamenode",{"_index":1188,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice",{"_index":530,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.forgotpassword(request.username).pipe",{"_index":547,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.me().pipe",{"_index":542,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.register(request).pipe",{"_index":555,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.resetpassword(request).pipe",{"_index":561,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.availablemembers",{"_index":1528,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.availableprojects",{"_index":2270,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.blockbodyscroll",{"_index":1192,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.changeslugandcheckvalidity(data",{"_index":941,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.chartdata",{"_index":2756,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.checkname(data",{"_index":2443,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.checkslug(data",{"_index":939,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.checkslug(slug",{"_index":973,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.checkusername(data",{"_index":1051,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.config",{"_index":438,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.config.menumode",{"_index":415,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.asobservable",{"_index":396,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.next(this.config",{"_index":433,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.confirmationservice.confirm",{"_index":1756,"title":{},"body":{"components/MembersTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.createbreadcrumbs(child",{"_index":1225,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createbreadcrumbs(this.route.root",{"_index":1198,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createnewprojectform",{"_index":2455,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createnewprojectform.get('name')?.value",{"_index":2452,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createnewprojectform.get('platform')?.value?.platformid",{"_index":2453,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.createorganizationform.get('name')?.value",{"_index":966,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createorganizationform.get('slug')?.setvalue(slug",{"_index":972,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createorganizationform.get('slug')?.value",{"_index":967,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.currentusererrorsubscription?.unsubscribe",{"_index":1205,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data",{"_index":1808,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.data[key",{"_index":1809,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.datepipe.transform(enddate",{"_index":2774,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.datepipe.transform(startdate",{"_index":2770,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.deleteteam",{"_index":2882,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.document",{"_index":1178,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist",{"_index":1230,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.add('blocked",{"_index":1231,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.remove('blocked",{"_index":1233,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classname",{"_index":1232,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.documentelement.style.fontsize",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.document.getelementbyid('theme",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.dt?.filterglobal(($event.target",{"_index":1741,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["this.errorsubscription",{"_index":949,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errorsubscription?.unsubscribe",{"_index":948,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.filteredprojects",{"_index":2391,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.filtervalue",{"_index":2363,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.forgotpasswordform.get('username')?.value",{"_index":1073,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formbuilder.group",{"_index":899,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.getchartlabel(hourlystat.startinterval",{"_index":2759,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.hidemenu",{"_index":1184,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.hideprofilemenu",{"_index":1190,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.home",{"_index":1199,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.delete(api.membersurl",{"_index":1647,"title":{},"body":{"injectables/MembersService.html":{}}}],["this.http.delete(api.teamurl",{"_index":3084,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.get",{"_index":1327,"title":{},"body":{"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{},"injectables/ProjectService.html":{},"injectables/TeamService.html":{}}}],["this.http.get(api.authurl",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.get(api.membersurl",{"_index":1646,"title":{},"body":{"injectables/MembersService.html":{}}}],["this.http.get(api.organizationurl",{"_index":2137,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.http.get(api.platformurl",{"_index":2188,"title":{},"body":{"injectables/PlatformService.html":{}}}],["this.http.get(api.projecturl",{"_index":2308,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.http.get(api.roleurl",{"_index":2570,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.http.get(api.teamurl",{"_index":3079,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.patch",{"_index":2141,"title":{},"body":{"injectables/OrganizationService.html":{},"injectables/TeamService.html":{}}}],["this.http.post",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InvitationService.html":{},"injectables/OrganizationService.html":{}}}],["this.http.post(api.projecturl",{"_index":2312,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this.http.post(api.teamurl",{"_index":3083,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.http.put",{"_index":3085,"title":{},"body":{"injectables/TeamService.html":{}}}],["this.index",{"_index":1963,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.invitationhash",{"_index":1291,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.invitationservice.acceptinvitation(request.invitationhash",{"_index":515,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.invitationservice.getinvitationdetails(this.invitationhash",{"_index":1278,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.invitationservice.invitemember(request).pipe",{"_index":1602,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.invitenewuserform",{"_index":1755,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.invitenewuserform.get('email')?.value",{"_index":1752,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.invitenewuserform.get('role')?.value?.roleid",{"_index":1753,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.isaddnewprojectdialogvisible",{"_index":2447,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.isdesktop",{"_index":402,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.isinvitedialogvisible",{"_index":1744,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.isloading",{"_index":2753,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.isnametaken",{"_index":2458,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.isoverlay",{"_index":399,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.ispickerdialogvisible",{"_index":1533,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["this.isslugtaken",{"_index":977,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.isusernametaken",{"_index":1075,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.item",{"_index":1980,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.command",{"_index":1978,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.disabled",{"_index":1976,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.items",{"_index":1981,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.routerlink",{"_index":1960,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.items",{"_index":1197,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.jwtservice.clear",{"_index":567,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.saverefreshtoken(token.refreshtoken",{"_index":536,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.savetoken(token.accesstoken",{"_index":535,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.key",{"_index":1956,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.languages[0",{"_index":3166,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.layoutservice.config.colorscheme",{"_index":832,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.inputstyle",{"_index":826,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.menumode",{"_index":824,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.ripple",{"_index":828,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.scale",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.layoutservice.config.theme",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.layoutservice.onconfigupdate",{"_index":833,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.overlayopen$.subscribe",{"_index":1175,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.restoreconfig",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["this.layoutservice.saveconfig",{"_index":823,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.showconfigsidebar",{"_index":830,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.configsidebarvisible",{"_index":820,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.menuhoveractive",{"_index":1227,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.overlaymenuactive",{"_index":1226,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.profilesidebarvisible",{"_index":1229,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenudesktopinactive",{"_index":1239,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenumobileactive",{"_index":1191,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.localstorage.getitem(\"ui_config",{"_index":436,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.localstorage.setitem(\"ui_config",{"_index":442,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.loginform.get('password')?.value",{"_index":1433,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":1432,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.membersservice.getactivemembers().pipe",{"_index":1608,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.membersservice.getmembers().pipe",{"_index":1614,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.membersservice.removemember(request.memberid).pipe",{"_index":1619,"title":{},"body":{"injectables/MembersEffects.html":{}}}],["this.menuoutsideclicklistener",{"_index":1176,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.menuresetsubscription",{"_index":1958,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuresetsubscription.unsubscribe",{"_index":1985,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.menusource$.subscribe",{"_index":1951,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.onmenustatechange",{"_index":1973,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.resetsource$.subscribe",{"_index":1959,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusource.asobservable",{"_index":1840,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusource.next(event",{"_index":1847,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusourcesubscription",{"_index":1950,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusourcesubscription.unsubscribe",{"_index":1984,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.messageservice.add",{"_index":956,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.model",{"_index":2632,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.model.push",{"_index":2634,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.myprojects.pipe",{"_index":2360,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.namechecksubscription",{"_index":2456,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.namechecksubscription?.unsubscribe",{"_index":2444,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.onconfigupdate",{"_index":440,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.onmemberspicked",{"_index":1536,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.onmemberspicked(event.items",{"_index":1537,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.onmembersremoved",{"_index":1534,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.onmembersremoved(event.items",{"_index":1535,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.onprojectspicked",{"_index":2277,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.onprojectspicked(event.items",{"_index":2278,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.onprojectsremoved",{"_index":2275,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.onprojectsremoved(event.items",{"_index":2276,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.organizationerrorsubscription",{"_index":1203,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.organizationerrorsubscription?.unsubscribe",{"_index":1206,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.organizationservice",{"_index":975,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{}}}],["this.organizationservice.createorganization(request).pipe",{"_index":2101,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationservice.getorganization().pipe",{"_index":2107,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationservice.updateorganizationpicture(request.file).pipe",{"_index":2111,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationsubscription",{"_index":943,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.organizationsubscription?.unsubscribe",{"_index":965,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.overlaymenuopensubscription",{"_index":1174,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlaymenuopensubscription.unsubscribe",{"_index":1207,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlayopen.asobservable",{"_index":397,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.overlayopen.next(null",{"_index":401,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.parentkey",{"_index":1962,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.platformservice.getplatforms().pipe",{"_index":2175,"title":{},"body":{"injectables/PlatformEffects.html":{}}}],["this.primefileupload.clear",{"_index":2077,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.primefileupload.progress",{"_index":2072,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.primefileupload.uploading",{"_index":2071,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.profilemenuoutsideclicklistener",{"_index":1185,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.project?.projectid",{"_index":2777,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.projectservice",{"_index":2457,"title":{},"body":{"components/ProjectsTableComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["this.projectservice.createproject(request).pipe",{"_index":2212,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.projectservice.getallprojects().pipe",{"_index":2218,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.projectservice.getmyprojects(request.teamids).pipe",{"_index":2224,"title":{},"body":{"injectables/ProjectEffects.html":{}}}],["this.projectstat",{"_index":2754,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.registerform.get('email')?.setvalue(details.email",{"_index":1279,"title":{},"body":{"components/InvitationComponent.html":{}}}],["this.registerform.get('email')?.value",{"_index":1288,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('firstname')?.value",{"_index":1289,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('lastname')?.value",{"_index":1290,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('password')?.value",{"_index":1287,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registerform.get('username')?.value",{"_index":1286,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{}}}],["this.registeronce",{"_index":2876,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.removemember(member",{"_index":1770,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.renderer.listen",{"_index":1177,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.replacethemelink(newhref",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{}}}],["this.resetinviteform",{"_index":1742,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.resetpasswordform.get('password')?.value",{"_index":2536,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetprojectsform",{"_index":2445,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.resetsource.asobservable",{"_index":1843,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.resetsource.next(true",{"_index":1848,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.restorescale",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["this.restoretheme",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["this.roleservice.getroles().pipe",{"_index":2559,"title":{},"body":{"injectables/RoleEffects.html":{}}}],["this.root",{"_index":1982,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.events",{"_index":1193,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["this.router.isactive(this.item.routerlink[0",{"_index":1966,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":1280,"title":{},"body":{"components/InvitationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":2491,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/create",{"_index":1204,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigate(['/home",{"_index":947,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/home/settings/account",{"_index":3168,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.router.navigate(['/home/settings/teams",{"_index":2884,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.router.navigate(['/settings/projects",{"_index":2776,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.saveconfig",{"_index":432,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.scale",{"_index":837,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.secret",{"_index":2534,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.selectedlanguage",{"_index":3165,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.selectedmembers.some((selected",{"_index":1530,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.selectedprojects.some",{"_index":2272,"title":{},"body":{"components/ProjectPickerComponent.html":{}}}],["this.setupchartdata(result",{"_index":2755,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["this.setupsidenavitems(sidenav",{"_index":2633,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.slugchecksubscription",{"_index":974,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.slugchecksubscription?.unsubscribe",{"_index":964,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.sluginput",{"_index":2877,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.state.configsidebarvisible",{"_index":408,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.overlaymenuactive",{"_index":400,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.profilesidebarvisible",{"_index":406,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenudesktopinactive",{"_index":403,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenumobileactive",{"_index":404,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.storage",{"_index":1397,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.clear",{"_index":1400,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(key",{"_index":1401,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(refresh_token_key",{"_index":1355,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.getitem(token_key",{"_index":1353,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.key(index",{"_index":1402,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.length",{"_index":1399,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(key",{"_index":1403,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(refresh_token_key",{"_index":1351,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.removeitem(token_key",{"_index":1350,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(key",{"_index":1404,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.setitem(refresh_token_key",{"_index":1354,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(token_key",{"_index":1352,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.store",{"_index":944,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.dispatch",{"_index":1072,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(createorganization(dto",{"_index":968,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.store.dispatch(createproject(dto",{"_index":2454,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.dispatch(invitemember(dto",{"_index":1754,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(loadactivemembers",{"_index":1519,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.store.dispatch(loadallprojects",{"_index":2266,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["this.store.dispatch(loadcurrentorganization",{"_index":942,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["this.store.dispatch(loadcurrentuser",{"_index":1052,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(loadmyprojects",{"_index":2386,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.store.dispatch(loadmyteams",{"_index":2385,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.dispatch(loadorganizationmembers",{"_index":1587,"title":{},"body":{"components/MembersComponent.html":{}}}],["this.store.dispatch(loadorganizationteams",{"_index":3127,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.store.dispatch(loadplatforms",{"_index":2446,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.dispatch(loadroles",{"_index":1743,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(loadteambyid",{"_index":2872,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(loadteammembers",{"_index":2874,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(loadteamprojects",{"_index":2875,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(registernewuser(dto",{"_index":2495,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.store.dispatch(removemember",{"_index":1776,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.dispatch(resetsingleteamstate",{"_index":2878,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.dispatch(signout",{"_index":3167,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.store.dispatch(updateorganizationpicture",{"_index":2073,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.store.select",{"_index":1557,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent-1.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.select(isloadingactivemembers",{"_index":1494,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["this.store.select(isloadingallprojects",{"_index":2260,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsComponent-1.html":{}}}],["this.store.select(isloadingauthstate",{"_index":1036,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(isloadingcreateproject",{"_index":2429,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.select(isloadingmembers",{"_index":1567,"title":{},"body":{"components/MembersComponent.html":{}}}],["this.store.select(isloadingmyprojects",{"_index":2367,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.store.select(isloadingmyteams",{"_index":2369,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TeamsComponent.html":{}}}],["this.store.select(isloadingorganization",{"_index":904,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.store.select(isloadingorganizationteams",{"_index":3119,"title":{},"body":{"components/TeamsComponent.html":{}}}],["this.store.select(isloadingremovemembers",{"_index":1724,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(isloadingsendinvitation",{"_index":1726,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(isloadingteammembers",{"_index":2828,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.select(isloadingteamprojects",{"_index":2830,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.select(isloadingupdateteam",{"_index":2832,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.store.select(isupdateorganizationpictureloading",{"_index":2045,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.store.select(selectcurrentorganization",{"_index":2047,"title":{},"body":{"components/OrganizationComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.select(selectcurrentuser",{"_index":1154,"title":{},"body":{"components/HomeComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.select(selectplatforms",{"_index":2433,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.store.select(selectroles",{"_index":1728,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.store.select(selectsingleteam",{"_index":2845,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.successsubscription",{"_index":1061,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.successsubscription?.unsubscribe",{"_index":1067,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.teamid",{"_index":2873,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.teamservice.addteammembers(args.teamid",{"_index":2907,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.addteamprojects(args.teamid",{"_index":2913,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.createnewteam(request).pipe",{"_index":3018,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.deleteteam(request.teamid).pipe",{"_index":3023,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.deleteteam(this.teamid",{"_index":2883,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.teamservice.getmyteams().pipe",{"_index":3029,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.getorganizationteams().pipe",{"_index":3035,"title":{},"body":{"injectables/TeamEffects.html":{}}}],["this.teamservice.getteambyid(args.teamid).pipe",{"_index":2918,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.getteammembers(args.teamid).pipe",{"_index":2924,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.getteamprojects(args.teamid).pipe",{"_index":2929,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.isslugtaken(slug).subscribe",{"_index":2887,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.teamservice.removeteammembers(args.teamid",{"_index":2934,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.removeteamprojects(args.teamid",{"_index":2939,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.teamservice.updateteam(args.teamid",{"_index":2944,"title":{},"body":{"injectables/SingleTeamEffects.html":{}}}],["this.toslugvalue(organizationname",{"_index":971,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.translateservice.instant",{"_index":962,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["this.translateservice.instant('auth.reset",{"_index":2530,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant('create",{"_index":959,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.translateservice.instant('members",{"_index":1747,"title":{},"body":{"components/MembersTableComponent.html":{}}}],["this.translateservice.instant('organization.error",{"_index":2075,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["this.translateservice.instant('projects",{"_index":2449,"title":{},"body":{"components/ProjectsTableComponent.html":{}}}],["this.translateservice.instant('single",{"_index":2880,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["this.translateservice.stream('sidenav').subscribe",{"_index":1196,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["this.translateservice.use(language.value",{"_index":3169,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.unblockbodyscroll",{"_index":1228,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updateactivestatefromroute",{"_index":1961,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.usernamechecksubscription",{"_index":1074,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usernamechecksubscription?.unsubscribe",{"_index":1068,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usersubscription",{"_index":1053,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.usersubscription?.unsubscribe",{"_index":1066,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["those",{"_index":3474,"title":{},"body":{"license.html":{}}}],["though",{"_index":3839,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":3485,"title":{},"body":{"license.html":{}}}],["three",{"_index":3734,"title":{},"body":{"license.html":{}}}],["through",{"_index":352,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["throw",{"_index":2062,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["thus",{"_index":3629,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":2715,"title":{},"body":{"components/SidebarComponent.html":{}}}],["time",{"_index":3900,"title":{},"body":{"license.html":{}}}],["titlecase",{"_index":2281,"title":{},"body":{"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["toastmodule",{"_index":863,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleTeamComponent.html":{}}}],["todo",{"_index":356,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MemoryStorage.html":{}}}],["toggle",{"_index":323,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["toggles",{"_index":398,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["toggling",{"_index":1908,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["token",{"_index":637,"title":{"interfaces/Token.html":{}},"body":{"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{}}}],["token_key",{"_index":1348,"title":{},"body":{"injectables/JwtService.html":{}}}],["tokendto",{"_index":613,"title":{"interfaces/TokenDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/TokenDto.html":{}}}],["tools",{"_index":3593,"title":{},"body":{"license.html":{}}}],["topbar",{"_index":3134,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar'},{'name",{"_index":150,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["topbar.component.html",{"_index":3135,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":3136,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbarcomponent",{"_index":149,"title":{"components/TopbarComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["topbarmenubutton",{"_index":3139,"title":{},"body":{"components/TopbarComponent.html":{}}}],["toslugvalue",{"_index":880,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["toslugvalue(slug",{"_index":897,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["totalcrashfreesessions",{"_index":2317,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["totalerrors",{"_index":2318,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["totalsessions",{"_index":2319,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["totaltransactions",{"_index":2320,"title":{},"body":{"interfaces/ProjectStatDto.html":{}}}],["track",{"_index":328,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/ProjectsComponent.html":{},"components/SingleProjectCardComponent.html":{}}}],["trade",{"_index":3862,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3861,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":3863,"title":{},"body":{"license.html":{}}}],["trail",{"_index":1127,"title":{},"body":{"components/HomeComponent.html":{}}}],["transaction",{"_index":3812,"title":{},"body":{"license.html":{}}}],["transactions",{"_index":2247,"title":{},"body":{"interfaces/ProjectHourByHourStatDto.html":{},"components/SingleProjectCardComponent.html":{}}}],["transfer",{"_index":3543,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":3814,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":3921,"title":{},"body":{"license.html":{}}}],["transition",{"_index":1937,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["translate",{"_index":41,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{}}}],["translate.addlangs(['en",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('en",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":35,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":3193,"title":{},"body":{"dependencies.html":{}}}],["translatemodule",{"_index":24,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/NotFoundComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{}}}],["translateservice",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{}}}],["translating",{"_index":2614,"title":{},"body":{"components/SidebarComponent.html":{}}}],["transmission",{"_index":3766,"title":{},"body":{"license.html":{}}}],["treated",{"_index":3838,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":3654,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["trigger",{"_index":1869,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["trigger('children",{"_index":1943,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["triggered",{"_index":1830,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["troubleshooting",{"_index":3286,"title":{},"body":{"index.html":{}}}],["true",{"_index":18,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["tslib",{"_index":3212,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":713,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["type",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/CreateProjectRequestDto.html":{},"interfaces/CreateTeamRequestDto.html":{},"interfaces/FileDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Invitation.html":{},"components/InvitationComponent.html":{},"interfaces/InvitationDto.html":{},"interfaces/InvitationRequestDto.html":{},"injectables/InvitationService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"interfaces/MembersDto.html":{},"injectables/MembersEffects.html":{},"injectables/MembersService.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"injectables/PlatformEffects.html":{},"injectables/PlatformService.html":{},"interfaces/PlatformState.html":{},"interfaces/Project.html":{},"interfaces/ProjectDto.html":{},"injectables/ProjectEffects.html":{},"interfaces/ProjectHourByHourStatDto.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectReleaseDto.html":{},"injectables/ProjectService.html":{},"interfaces/ProjectStatDto.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Role.html":{},"injectables/RoleEffects.html":{},"injectables/RoleService.html":{},"interfaces/RoleState.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"injectables/TeamEffects.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TeamsComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["type.enum",{"_index":1576,"title":{},"body":{"components/MembersComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"components/ProjectsComponent-1.html":{},"interfaces/Role.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["type.enum.ts",{"_index":3220,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types",{"_index":835,"title":{},"body":{"components/ConfigComponent.html":{}}}],["typescript",{"_index":240,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"interfaces/ProjectState.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RoleState.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{}}}],["typical",{"_index":3791,"title":{},"body":{"license.html":{}}}],["typically",{"_index":776,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["ui",{"_index":289,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{}}}],["unacceptable",{"_index":3471,"title":{},"body":{"license.html":{}}}],["unblock",{"_index":1150,"title":{},"body":{"components/HomeComponent.html":{}}}],["unblockbodyscroll",{"_index":1108,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":1218,"title":{},"body":{"components/HomeComponent.html":{},"components/MemberPickerComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"interfaces/OrganizationState.html":{},"interfaces/PlatformState.html":{},"components/ProjectPickerComponent.html":{},"interfaces/ProjectState.html":{},"components/ProjectsComponent.html":{},"components/ProjectsTableComponent.html":{},"interfaces/RoleState.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{}}}],["under",{"_index":3509,"title":{},"body":{"license.html":{}}}],["unique",{"_index":1884,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["uniquely",{"_index":1895,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["unit",{"_index":3334,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":2751,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["unless",{"_index":3800,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":3615,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":3521,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":3641,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":3834,"title":{},"body":{"license.html":{}}}],["unsubscribe",{"_index":1523,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsTableComponent.html":{},"components/SingleTeamComponent.html":{}}}],["unsubscribes",{"_index":1918,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["until",{"_index":3889,"title":{},"body":{"license.html":{}}}],["unused",{"_index":2079,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["up",{"_index":2623,"title":{},"body":{"components/SidebarComponent.html":{}}}],["update",{"_index":756,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["updateactivestatefromroute",{"_index":1858,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["updated",{"_index":370,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["updatedat",{"_index":2006,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/Role.html":{},"interfaces/Team.html":{},"interfaces/TeamDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["updateorganizationnameandslug",{"_index":2020,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["updateorganizationnameandslug(name",{"_index":2031,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["updateorganizationpicture",{"_index":2059,"title":{},"body":{"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{}}}],["updateorganizationpicture(picture",{"_index":2130,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["updateorganizationpicturefailure",{"_index":2120,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["updateorganizationpicturesuccess",{"_index":2121,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["updateorganizationpicturesuccess(result",{"_index":2113,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["updatepictureerror",{"_index":2144,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["updatepicturestatus",{"_index":2145,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["updates",{"_index":430,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["updateteam",{"_index":2857,"title":{},"body":{"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{}}}],["updateteam(teamid",{"_index":3076,"title":{},"body":{"injectables/TeamService.html":{}}}],["updateteamerror",{"_index":2974,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["updateteamfailure",{"_index":2957,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["updateteamslug",{"_index":2810,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["updateteamslug(slug",{"_index":2822,"title":{},"body":{"components/SingleTeamComponent.html":{}}}],["updateteamstatus",{"_index":2975,"title":{},"body":{"interfaces/SingleTeamState.html":{}}}],["updateteamsuccess",{"_index":2946,"title":{},"body":{"injectables/SingleTeamEffects.html":{},"interfaces/SingleTeamState.html":{}}}],["updating",{"_index":728,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["uploadnewavatar",{"_index":2021,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["uploadnewavatar($event",{"_index":2033,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["url",{"_index":780,"title":{},"body":{"components/ConfigComponent.html":{},"interfaces/FileDto.html":{},"components/HomeComponent.html":{},"index.html":{}}}],["use",{"_index":1890,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":254,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["useful",{"_index":4093,"title":{},"body":{"license.html":{}}}],["user",{"_index":345,"title":{"interfaces/User.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"interfaces/MembersState.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Role.html":{},"components/SidebarComponent.html":{},"components/SingleTeamComponent.html":{},"interfaces/SingleTeamState.html":{},"injectables/TeamService.html":{},"interfaces/TeamState.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["user's",{"_index":2617,"title":{},"body":{"components/SidebarComponent.html":{}}}],["user.dto",{"_index":1594,"title":{},"body":{"interfaces/MembersDto.html":{}}}],["user.email",{"_index":1541,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["user.entity",{"_index":1245,"title":{},"body":{"interfaces/Invitation.html":{}}}],["user.firstname",{"_index":1539,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["user.lastname",{"_index":1540,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["user.pictureurl",{"_index":1538,"title":{},"body":{"components/MemberPickerComponent.html":{}}}],["userdto",{"_index":617,"title":{"interfaces/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/MembersDto.html":{},"injectables/MembersService.html":{},"injectables/TeamService.html":{},"interfaces/UserDto.html":{}}}],["userid",{"_index":2551,"title":{},"body":{"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username",{"_index":518,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username/taken",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernamecheckerror",{"_index":638,"title":{},"body":{"interfaces/AuthState.html":{}}}],["usernamechecksubscription",{"_index":1021,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["usernameinput",{"_index":1022,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["users",{"_index":1592,"title":{},"body":{"interfaces/MembersDto.html":{},"interfaces/MembersState.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["userservice",{"_index":2631,"title":{},"body":{"components/SidebarComponent.html":{}}}],["userstorageservice",{"_index":2619,"title":{},"body":{"components/SidebarComponent.html":{}}}],["usersubscription",{"_index":1023,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uses",{"_index":3794,"title":{},"body":{"license.html":{}}}],["using",{"_index":374,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["utc",{"_index":2775,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["utilizes",{"_index":3292,"title":{},"body":{"index.html":{}}}],["valid",{"_index":3733,"title":{},"body":{"license.html":{}}}],["validators",{"_index":915,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.email",{"_index":1264,"title":{},"body":{"components/InvitationComponent.html":{},"components/MembersTableComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":1034,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":1262,"title":{},"body":{"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.pattern(securepasswordregex",{"_index":1263,"title":{},"body":{"components/InvitationComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":900,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["value",{"_index":301,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"injectables/MembersEffects.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/PlatformEffects.html":{},"injectables/ProjectEffects.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/RoleEffects.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"injectables/SingleTeamEffects.html":{},"injectables/TeamEffects.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["value.charat(0",{"_index":2068,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["value.filter((project",{"_index":2362,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["value.key",{"_index":1955,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.key.startswith(this.key",{"_index":1957,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.routeevent",{"_index":1953,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.tostring(16).padstart(2",{"_index":1518,"title":{},"body":{"components/MemberPickerComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{}}}],["values",{"_index":269,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/Role.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["var",{"_index":47,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["varaibles",{"_index":3367,"title":{},"body":{"index.html":{}}}],["variable",{"_index":393,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["variables",{"_index":3355,"title":{},"body":{"index.html":{}}}],["various",{"_index":250,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["vars",{"_index":2080,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["verbatim",{"_index":3383,"title":{},"body":{"license.html":{}}}],["vercel/analytics",{"_index":3196,"title":{},"body":{"dependencies.html":{}}}],["vercel/speed",{"_index":3198,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":2163,"title":{},"body":{"interfaces/Platform.html":{},"interfaces/PlatformDto.html":{},"interfaces/ProjectReleaseDto.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":3399,"title":{},"body":{"license.html":{}}}],["via",{"_index":3337,"title":{},"body":{"index.html":{}}}],["view",{"_index":2611,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["viewchild",{"_index":914,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MembersTableComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/SingleTeamComponent.html":{},"components/TopbarComponent.html":{}}}],["viewchild('dt",{"_index":1720,"title":{},"body":{"components/MembersTableComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["viewchild('fileupload",{"_index":2050,"title":{},"body":{"components/OrganizationComponent.html":{}}}],["viewchild('menubutton",{"_index":3158,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('name",{"_index":909,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ProjectsTableComponent.html":{}}}],["viewchild('slug",{"_index":912,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/OrganizationComponent.html":{},"components/SingleTeamComponent.html":{}}}],["viewchild('topbarmenu",{"_index":3157,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('topbarmenubutton",{"_index":3162,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('username",{"_index":1041,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewchild(sidebarcomponent",{"_index":1151,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild(topbarcomponent",{"_index":1153,"title":{},"body":{"components/HomeComponent.html":{}}}],["violates",{"_index":3828,"title":{},"body":{"license.html":{}}}],["violation",{"_index":3885,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":324,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["visible",{"_index":342,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["visible(_val",{"_index":821,"title":{},"body":{"components/ConfigComponent.html":{}}}],["vitals",{"_index":152,"title":{},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["vitals.component.html",{"_index":3176,"title":{},"body":{"components/VitalsComponent.html":{}}}],["vitals.component.scss",{"_index":3177,"title":{},"body":{"components/VitalsComponent.html":{}}}],["vitalscomponent",{"_index":151,"title":{"components/VitalsComponent.html":{}},"body":{"components/AccessDeniedComponent.html":{},"components/AlertsComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CloseComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/GuidesComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/IssuesComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"components/MenuitemComponent.html":{},"components/MessagesComponent.html":{},"components/NotFoundComponent.html":{},"components/NotificationsComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/QueriesComponent.html":{},"components/RegisterComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResetPasswordComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"components/VitalsComponent.html":{}}}],["void",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MemberPickerComponent.html":{},"components/MembersComponent.html":{},"components/MembersTableComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/OrganizationComponent.html":{},"components/ProjectPickerComponent.html":{},"components/ProjectsComponent.html":{},"components/ProjectsComponent-1.html":{},"components/ProjectsTableComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/SingleProjectCardComponent.html":{},"components/SingleTeamComponent.html":{},"components/TeamsComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["volume",{"_index":3710,"title":{},"body":{"license.html":{}}}],["vue",{"_index":3231,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["w",{"_index":4102,"title":{},"body":{"license.html":{}}}],["waive",{"_index":3663,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4077,"title":{},"body":{"license.html":{}}}],["want",{"_index":3411,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":3554,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3445,"title":{},"body":{"license.html":{}}}],["way",{"_index":3404,"title":{},"body":{"license.html":{}}}],["ways",{"_index":3723,"title":{},"body":{"license.html":{}}}],["web",{"_index":2607,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["webpage",{"_index":752,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["welcome",{"_index":4103,"title":{},"body":{"license.html":{}}}],["well",{"_index":730,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["whatever",{"_index":3925,"title":{},"body":{"license.html":{}}}],["whether",{"_index":286,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["whole",{"_index":3573,"title":{},"body":{"license.html":{}}}],["whose",{"_index":3773,"title":{},"body":{"license.html":{}}}],["widely",{"_index":3569,"title":{},"body":{"license.html":{}}}],["width",{"_index":417,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window",{"_index":416,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["window.innerwidth",{"_index":427,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window.localstorage",{"_index":1398,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["window.sessionstorage",{"_index":2592,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["window?.localstorage",{"_index":1396,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["wipo",{"_index":3653,"title":{},"body":{"license.html":{}}}],["wish",{"_index":3368,"title":{},"body":{"index.html":{},"license.html":{}}}],["within",{"_index":1876,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["without",{"_index":1915,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["work",{"_index":3402,"title":{},"body":{"license.html":{}}}],["work's",{"_index":3592,"title":{},"body":{"license.html":{}}}],["working",{"_index":3570,"title":{},"body":{"license.html":{}}}],["works",{"_index":161,"title":{},"body":{"components/AlertsComponent.html":{},"components/CloseComponent.html":{},"components/DetailsComponent.html":{},"components/DevicesComponent.html":{},"components/DocumentationComponent.html":{},"components/GuidesComponent.html":{},"components/IssuesComponent.html":{},"components/LogsComponent.html":{},"components/MessagesComponent.html":{},"components/NotificationsComponent.html":{},"components/ProjectDetailsComponent.html":{},"components/QueriesComponent.html":{},"components/ReleasesComponent.html":{},"components/ReplaysComponent.html":{},"components/ResourcesComponent.html":{},"components/ScreenLoadsComponent.html":{},"components/SdksComponent.html":{},"components/SecurityComponent.html":{},"components/SessionsComponent.html":{},"components/SettingsComponent.html":{},"components/StatsComponent.html":{},"components/SupportComponent.html":{},"components/VitalsComponent.html":{},"license.html":{}}}],["worldwide",{"_index":3958,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":2620,"title":{},"body":{"components/SidebarComponent.html":{}}}],["wrench",{"_index":2709,"title":{},"body":{"components/SidebarComponent.html":{}}}],["writing",{"_index":4040,"title":{},"body":{"license.html":{}}}],["written",{"_index":3732,"title":{},"body":{"license.html":{}}}],["x",{"_index":2743,"title":{},"body":{"components/SingleProjectCardComponent.html":{}}}],["years",{"_index":3735,"title":{},"body":{"license.html":{}}}],["yes",{"_index":2299,"title":{},"body":{"injectables/ProjectService.html":{}}}],["yourself",{"_index":3975,"title":{},"body":{"license.html":{}}}],["zone.js",{"_index":3214,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccessDeniedComponent.html":{"url":"components/AccessDeniedComponent.html","title":"component - AccessDeniedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessDeniedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/access-denied/access-denied.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-access-denied\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RouterModule\n                            RippleModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./access-denied.component.html\n            \n\n\n\n            \n                styleUrl\n                ./access-denied.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\n\n@Component({\n  selector: 'app-access-denied',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RouterModule,\n    RippleModule,\n    TranslateModule\n  ],\n  templateUrl: './access-denied.component.html',\n  styleUrl: './access-denied.component.scss'\n})\nexport class AccessDeniedComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n          \n            \n          \n          \n            {{'access-denied.access_denied' | translate}}\n          \n          {{'access-denied.insufficient_permission' | translate}}\n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{\\'access-denied.access_denied\\' | translate}}                    {{\\'access-denied.insufficient_permission\\' | translate}}                                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccessDeniedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AlertsComponent.html":{"url":"components/AlertsComponent.html","title":"component - AlertsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AlertsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/alerts/alerts.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-alerts\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./alerts.component.html\n            \n\n\n\n            \n                styleUrl\n                ./alerts.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-alerts',\n  standalone: true,\n  imports: [],\n  templateUrl: './alerts.component.html',\n  styleUrl: './alerts.component.scss'\n})\nexport class AlertsComponent {\n\n}\n\n    \n\n    \n        alerts works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'alerts works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AlertsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                replaceThemeLink\n                            \n                            \n                                    Private\n                                restoreScale\n                            \n                            \n                                    Private\n                                restoreTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, layoutService: LayoutService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        replaceThemeLink\n                        \n                    \n                \n            \n            \n                \n                        \n                    replaceThemeLink(href: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        restoreScale\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        restoreTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    restoreTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, Inject, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LayoutService } from './core/services/layout.service';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent implements OnInit, AfterViewInit {\n  constructor(\n    translate: TranslateService,\n    private layoutService: LayoutService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {\n    translate.setDefaultLang('en');\n    translate.addLangs(['en']);\n    translate.use('en');\n  }\n  ngOnInit(): void {\n    this.layoutService.restoreConfig();\n    this.restoreScale();\n  }\n\n  ngAfterViewInit() {\n    this.restoreTheme();\n  }\n\n  private restoreScale() {\n    this.document.documentElement.style.fontSize =\n      this.layoutService.config.scale + 'px';\n  }\n\n  private restoreTheme() {\n    const themeLink = (\n      this.document.getElementById('theme-css')\n    );\n    const newHref = themeLink\n      .getAttribute('href')!\n      .replace('lara-light-blue', this.layoutService.config.theme);\n    this.replaceThemeLink(newHref);\n  }\n\n  private replaceThemeLink(href: string) {\n    const id = 'theme-css';\n    const themeLink = (\n      this.document.getElementById('theme-css')\n    );\n    const cloneLinkElement = themeLink.cloneNode(true);\n\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n\n    themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n    themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppConfig.html":{"url":"interfaces/AppConfig.html","title":"interface - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The above code is defining an interface named AppConfig in TypeScript. This interface has several\nproperties such as inputStyle, colorScheme, theme, ripple, menuMode, and scale. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe LayoutService class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colorScheme\n                                        \n                                \n                                \n                                        \n                                            inputStyle\n                                        \n                                \n                                \n                                        \n                                            menuMode\n                                        \n                                \n                                \n                                        \n                                            ripple\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorScheme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    colorScheme: string; is declaring a property named colorScheme of type string in the\nAppConfig interface. This property represents the color scheme of the layout and can have values\nsuch as 'light' or 'dark'. It is used in various functions of the LayoutService class to\ndetermine the current color scheme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputStyle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    inputStyle: string; is declaring a property named inputStyle of type string in the\nAppConfig interface. This property represents the style of the input elements in the layout and\ncan have values such as 'outlined' or 'filled'. It is used in various functions of the\nLayoutService class to determine the current input style of the layout and apply appropriate\nstyles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuMode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuMode: string; is declaring a property named menuMode of type string in the AppConfig\ninterface. This property represents the mode of the menu and can have values such as 'static',\n'overlay', or 'horizontal'. It is used in various functions of the LayoutService class to\ndetermine the behavior of the menu based on the selected mode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ripple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ripple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ripple: boolean; property in the AppConfig interface represents a configuration option for\nwhether or not to enable ripple effects on UI elements. If ripple is set to true, then UI\nelements such as buttons and links will have a ripple effect when clicked. If ripple is set to\nfalse, then no ripple effect will be applied.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    scale: number; is declaring a property named scale of type number in the AppConfig\ninterface. This property represents the scale of the layout and is used to adjust the size of\nvarious elements in the layout. The default value of scale is set to 14 in the config object\nof the LayoutService class.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    theme: string; is declaring a property named theme of type string in the AppConfig\ninterface. This property represents the theme of the layout and can have values such as\n'lara-light-blue', 'lara-dark-blue', or 'lara-green'. It is used in various functions of the\nLayoutService class to determine the current theme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/app.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authState\n                                        \n                                \n                                \n                                        \n                                            membersState\n                                        \n                                \n                                \n                                        \n                                            organizationState\n                                        \n                                \n                                \n                                        \n                                            platformState\n                                        \n                                \n                                \n                                        \n                                            projectState\n                                        \n                                \n                                \n                                        \n                                            roleState\n                                        \n                                \n                                \n                                        \n                                            singleTeamState\n                                        \n                                \n                                \n                                        \n                                            teamState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authState:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        membersState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        membersState:         MembersState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MembersState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationState:         OrganizationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganizationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformState:         PlatformState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectState:         ProjectState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProjectState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleState:         RoleState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RoleState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleTeamState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleTeamState:         SingleTeamState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SingleTeamState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamState:         TeamState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TeamState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthEffects } from './auth/auth.effects';\nimport { AuthState, authReducer } from './auth/auth.reducer';\nimport { MembersEffects } from './members/members.effects';\nimport { MembersState, membersReducer } from './members/members.reducer';\nimport { OrganizationEffects } from './organization/organization.effects';\nimport {\n  OrganizationState,\n  organizationReducer,\n} from './organization/organization.reducer';\nimport { ProjectEffects } from './project/project.effects';\nimport { ProjectState, projectReducer } from './project/project.reducer';\nimport { RoleEffects } from './role/role.effects';\nimport { RoleState, roleReducer } from './role/role.reducer';\nimport { TeamEffects } from './team/team.effects';\nimport { TeamState, teamReducer } from './team/team.reducer';\nimport { PlatformState, platformReducer } from './platform/platform.reducer';\nimport { PlatformEffects } from './platform/platform.effects';\nimport { SingleTeamEffects } from './single-team/single-team.effects';\nimport { SingleTeamState, singleTeamReducer } from './single-team/single-team.reducer';\n\nexport interface AppState {\n  authState: AuthState;\n  organizationState: OrganizationState;\n  membersState: MembersState;\n  roleState: RoleState;\n  teamState: TeamState;\n  projectState: ProjectState;\n  platformState: PlatformState;\n  singleTeamState: SingleTeamState;\n}\n\nexport const appEfects = [\n  AuthEffects,\n  OrganizationEffects,\n  MembersEffects,\n  RoleEffects,\n  TeamEffects,\n  ProjectEffects,\n  PlatformEffects,\n  SingleTeamEffects\n];\n\nexport const appStore = {\n  authState: authReducer,\n  organizationState: organizationReducer,\n  membersState: membersReducer,\n  roleState: roleReducer,\n  teamState: teamReducer,\n  projectState: projectReducer,\n  platformState: platformReducer,\n  singleTeamState: singleTeamReducer,\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n})\nexport class AuthComponent {}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInvitation$\n                            \n                            \n                                acceptInvitationSuccess$\n                            \n                            \n                                authenticate$\n                            \n                            \n                                authenticationSuccess$\n                            \n                            \n                                forgotPassword$\n                            \n                            \n                                loadCurrentUser$\n                            \n                            \n                                registerNewUser$\n                            \n                            \n                                registerNewUserSuccess$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signOut$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, jwtService: JwtService, invitationService: InvitationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/auth/auth.effects.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitation$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitation),\n      switchMap((request) =>\n        this.invitationService.acceptInvitation(request.invitationHash, request.dto).pipe(\n          map(() => {\n            return acceptInvitationSuccess({\n              username: request.dto.username,\n              password: request.dto.password,\n            });\n          }),\n          catchError((error) => of(acceptInvitationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitationSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:111\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../../services/api/auth.api.service';\nimport { JwtService } from '../../services/token-storage.service';\nimport {\n  acceptInvitation,\n  acceptInvitationFailure,\n  acceptInvitationSuccess,\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  signOut,\n} from './auth.actions';\nimport { InvitationService } from '../../services/api/invitation.api.service';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private invitationService: InvitationService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticate$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  );\n\n  forgotPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  resetPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  signOut$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  registerNewUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  registerNewUserSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n\n  acceptInvitation$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitation),\n      switchMap((request) =>\n        this.invitationService.acceptInvitation(request.invitationHash, request.dto).pipe(\n          map(() => {\n            return acceptInvitationSuccess({\n              username: request.dto.username,\n              password: request.dto.password,\n            });\n          }),\n          catchError((error) => of(acceptInvitationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  acceptInvitationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(acceptInvitationSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/auth.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                me\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/auth.api.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: AuthenticateRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            AuthenticateRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n            \n                \nisUsernameTaken(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(dto: ResetPasswordRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ResetPasswordRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { api } from './api';\nimport { TokenDto } from '../../domain/dto/token.dto';\nimport { Observable } from 'rxjs';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { ResetPasswordRequestDto } from '../../domain/dto/requests/reset-password-request.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  refreshToken(refreshToken: string): Observable {\n    return this.http.post(\n      api.authUrl + '/refreshToken',\n      { refreshToken: refreshToken },\n      api.noAuthOptions\n    );\n  }\n\n  authenticate(request: AuthenticateRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/authenticate',\n      request,\n      api.noAuthOptions\n    );\n  }\n\n  me(): Observable {\n    return this.http.get(api.authUrl + '/me', api.authOptions);\n  }\n\n  isUsernameTaken(username: string): Observable {\n    const params = new HttpParams().set('username', username);\n    return this.http.get(api.authUrl + '/username/taken', {\n      ...api.noAuthOptions,\n      params,\n    });\n  }\n\n  forgotPassword(username: string): Observable {\n    return this.http.post(\n      api.authUrl + '/forgot-password',\n      { username: username },\n      api.noAuthOptions\n    );\n  }\n\n  resetPassword(dto: ResetPasswordRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/reset-password',\n      dto,\n      api.noAuthOptions\n    );\n  }\n\n  register(dto: RegisterRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/register',\n      dto,\n      api.noAuthOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            acceptInvitationError\n                                        \n                                \n                                \n                                        \n                                            credentials\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            forgotPasswordError\n                                        \n                                \n                                \n                                        \n                                            isUsernameAvialable\n                                        \n                                \n                                \n                                        \n                                            registrationError\n                                        \n                                \n                                \n                                        \n                                            resetPasswordError\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            usernameCheckError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acceptInvitationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acceptInvitationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:         AuthenticateRequestDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticateRequestDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forgotPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUsernameAvialable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isUsernameAvialable:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         Token | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Token | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usernameCheckError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usernameCheckError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Token } from '../../domain/models/token.entity';\nimport { User } from '../../domain/models/user.entity';\nimport {\n  acceptInvitation,\n  acceptInvitationFailure,\n  acceptInvitationSuccess,\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  setCurrentUser,\n  setToken,\n  signOut,\n} from './auth.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface AuthState {\n  user: User | null;\n  error: any | null;\n  forgotPasswordError: null | any;\n  resetPasswordError: null | any;\n  registrationError: null | any;\n  acceptInvitationError: null | any;\n  usernameCheckError: null | any;\n  isUsernameAvialable: boolean | null;\n  token: Token | null;\n  credentials: AuthenticateRequestDto | null;\n  status: StateStatus;\n}\n\nexport const initialState: AuthState = {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  acceptInvitationError: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n};\n\nexport const authReducer = createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, { error }) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Reset Password\n  on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, { error }) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Register new user\n  on(registerNewUser, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Register new user success\n  on(registerNewUserSuccess, (state) => ({\n    ...state,\n    registrationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Register new user failure\n  on(registerNewUserFailure, (state, { error }) => ({\n    ...state,\n    registrationError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Accept Invitation\n  on(acceptInvitation, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Accept invitation success\n  on(acceptInvitationSuccess, (state) => ({\n    ...state,\n    acceptInvitationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Accept invitation failure\n  on(acceptInvitationFailure, (state, { error }) => ({\n    ...state,\n    acceptInvitationError: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticateRequestDto.html":{"url":"interfaces/AuthenticateRequestDto.html","title":"interface - AuthenticateRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticateRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/authenticate-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticateRequestDto {\n    username: string,\n    password: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CloseComponent.html":{"url":"components/CloseComponent.html","title":"component - CloseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CloseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/close/close.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-close\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./close.component.html\n            \n\n\n\n            \n                styleUrl\n                ./close.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-close',\n  standalone: true,\n  imports: [],\n  templateUrl: './close.component.html',\n  styleUrl: './close.component.scss'\n})\nexport class CloseComponent {\n\n}\n\n    \n\n    \n        close works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'close works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CloseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigComponent.html":{"url":"components/ConfigComponent.html","title":"component - ConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/config/config.component.ts\n\n\n\n    \n        Description\n    \n    \n        The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            SidebarModule\n                            RadioButtonModule\n                            TranslateModule\n                            InputSwitchModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n\n            \n                styleUrl\n                ./config.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    Public\n                                menuService\n                            \n                            \n                                scales\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyScale\n                            \n                            \n                                changeTheme\n                            \n                            \n                                decrementScale\n                            \n                            \n                                incrementScale\n                            \n                            \n                                onConfigButtonClick\n                            \n                            \n                                replaceThemeLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minimal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    visible\n                                \n                                \n                                    scale\n                                \n                                \n                                    menuMode\n                                \n                                \n                                    inputStyle\n                                \n                                \n                                    ripple\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, menuService: MenuService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes two parameters, a LayoutService and a MenuService.\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n\n                                                        \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        minimal\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/config/config.component.ts:37\n                            \n                        \n                \n                    \n                        @Input() minimal: boolean = false; is a decorator that marks the minimal property as an input\nproperty, which means that it can be passed as a value from a parent component to this component.\nThe minimal property is of type boolean and is initialized to false by default. This\nproperty can be used in the component's template to conditionally render certain elements or apply\ndifferent styles based on its value.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyScale\n                        \n                    \n                \n            \n            \n                \napplyScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:179\n                        \n                    \n\n\n            \n                \n                        This function sets the font size of the HTML document to a specified scale.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeTheme\n                        \n                    \n                \n            \n            \n                \nchangeTheme(theme: string, colorScheme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:121\n                        \n                    \n\n\n            \n                \n                        This function changes the theme and color scheme of a webpage by replacing the theme link and\nupdating the layout service configuration.\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \na string representing the new theme to be applied.\n\n\n                                            \n                                        \n                                        \n                                                colorScheme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe colorScheme parameter is a string that represents the color\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decrementScale\n                        \n                    \n                \n            \n            \n                \ndecrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:163\n                        \n                    \n\n\n            \n                \n                        This function decrements the scale property and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementScale\n                        \n                    \n                \n            \n            \n                \nincrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:171\n                        \n                    \n\n\n            \n                \n                        The function increments the scale property by 1 and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigButtonClick\n                        \n                    \n                \n            \n            \n                \nonConfigButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:109\n                        \n                    \n\n\n            \n                \n                        This function shows the configuration sidebar when the config button is clicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceThemeLink\n                        \n                    \n                \n            \n            \n                \nreplaceThemeLink(href: string, onComplete: Function)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:143\n                        \n                    \n\n\n            \n                \n                        This function replaces the href attribute of a link element with a new value and removes the\noriginal link element once the new one has loaded.\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA string representing the URL of the new theme CSS file to be loaded.\n\n\n                                            \n                                        \n                                        \n                                                onComplete\n                                            \n                                                            Function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nonComplete is a callback function that will be executed once\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:57\n                        \n                    \n\n            \n                \n                    - The layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:58\n                        \n                    \n\n            \n                \n                    - The `menuService` parameter is an instance of the\n`MenuService` class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [12, 13, 14, 15, 16]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                        \n                    \n\n            \n                \n                    scales is an array of numbers that represents the available font sizes that can be applied to\nthe HTML document. The default values are [12, 13, 14, 15, 16]. These values are used in\nconjunction with the incrementScale() and decrementScale() methods to adjust the font size of\nthe document.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n\n                \n                    \n                        getvisible()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:62\n                                \n                            \n\n                \n                    \n                        setvisible(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n\n                \n                    \n                        getscale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:70\n                                \n                            \n\n                \n                    \n                        setscale(_val: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:74\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        menuMode\n                    \n                \n\n                \n                    \n                        getmenuMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:79\n                                \n                            \n\n                \n                    \n                        setmenuMode(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:83\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        inputStyle\n                    \n                \n\n                \n                    \n                        getinputStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:88\n                                \n                            \n\n                \n                    \n                        setinputStyle(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:92\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ripple\n                    \n                \n\n                \n                    \n                        getripple()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:97\n                                \n                            \n\n                \n                    \n                        setripple(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:101\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\n\n/** The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings. */\n@Component({\n  selector: 'app-config',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    SidebarModule,\n    RadioButtonModule,\n    TranslateModule,\n    InputSwitchModule,\n    FormsModule\n  ],\n  styleUrl: './config.component.scss',\n  templateUrl: './config.component.html',\n})\nexport class ConfigComponent {\n  /** `@Input() minimal: boolean = false;` is a decorator that marks the `minimal` property as an input\n  property, which means that it can be passed as a value from a parent component to this component.\n  The `minimal` property is of type `boolean` and is initialized to `false` by default. This\n  property can be used in the component's template to conditionally render certain elements or apply\n  different styles based on its value. */\n  @Input() minimal: boolean = false;\n\n  /** `scales` is an array of numbers that represents the available font sizes that can be applied to\n  the HTML document. The default values are `[12, 13, 14, 15, 16]`. These values are used in\n  conjunction with the `incrementScale()` and `decrementScale()` methods to adjust the font size of\n  the document. */\n  scales: number[] = [12, 13, 14, 15, 16];\n\n  /**\n   * This is a constructor function that takes two parameters, a LayoutService and a MenuService.\n   * @param {LayoutService} layoutService - The layoutService parameter is a dependency injection of\n   * a service that provides functionality related to the layout of the application, such as managing\n   * the theme, language, and other UI-related settings. It is likely used to control the overall\n   * look and feel of the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the\n   * `MenuService` class, which is likely used to manage and manipulate the application's menu or\n   * navigation system. It may contain methods for adding, removing, or updating menu items, as well\n   * as handling user interactions with the menu.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public menuService: MenuService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {}\n\n  get visible(): boolean {\n    return this.layoutService.state.configSidebarVisible;\n  }\n\n  set visible(_val: boolean) {\n    this.layoutService.state.configSidebarVisible = _val;\n  }\n\n  get scale(): number {\n    return this.layoutService.config.scale;\n  }\n\n  set scale(_val: number) {\n    this.layoutService.config.scale = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get menuMode(): string {\n    return this.layoutService.config.menuMode;\n  }\n\n  set menuMode(_val: string) {\n    this.layoutService.config.menuMode = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get inputStyle(): string {\n    return this.layoutService.config.inputStyle;\n  }\n\n  set inputStyle(_val: string) {\n    this.layoutService.config.inputStyle = _val;\n    this.layoutService.saveConfig();\n  }\n\n  get ripple(): boolean {\n    return this.layoutService.config.ripple;\n  }\n\n  set ripple(_val: boolean) {\n    this.layoutService.config.ripple = _val;\n    this.layoutService.saveConfig();\n  }\n\n  /**\n   * This function shows the configuration sidebar when the config button is clicked.\n   */\n  onConfigButtonClick() {\n    this.layoutService.showConfigSidebar();\n  }\n\n  /**\n   * This function changes the theme and color scheme of a webpage by replacing the theme link and\n   * updating the layout service configuration.\n   * @param {string} theme - a string representing the new theme to be applied.\n   * @param {string} colorScheme - The `colorScheme` parameter is a string that represents the color\n   * scheme to be applied to the theme. It is used in conjunction with the `theme` parameter to\n   * update the theme of the application.\n   */\n  changeTheme(theme: string, colorScheme: string) {\n    const themeLink = this.document.getElementById('theme-css');\n    const newHref = themeLink\n      .getAttribute('href')!\n      .replace(this.layoutService.config.theme, theme);\n    this.layoutService.config.colorScheme;\n    this.replaceThemeLink(newHref, () => {\n      this.layoutService.config.theme = theme;\n      this.layoutService.config.colorScheme = colorScheme;\n      this.layoutService.onConfigUpdate();\n    });\n  }\n\n  /**\n   * This function replaces the href attribute of a link element with a new value and removes the\n   * original link element once the new one has loaded.\n   * @param {string} href - A string representing the URL of the new theme CSS file to be loaded.\n   * @param {Function} onComplete - `onComplete` is a callback function that will be executed once\n   * the new theme link has been loaded and applied. It is typically used to perform additional\n   * actions or update the UI after the theme has been changed.\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  replaceThemeLink(href: string, onComplete: Function) {\n    const id = 'theme-css';\n    const themeLink = this.document.getElementById('theme-css');\n    const cloneLinkElement = themeLink.cloneNode(true);\n\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n\n    themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n\n    cloneLinkElement.addEventListener('load', () => {\n      themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n      onComplete();\n    });\n  }\n\n  /**\n   * This function decrements the scale property and applies the new scale value.\n   */\n  decrementScale() {\n    this.scale--;\n    this.applyScale();\n  }\n\n  /**\n   * The function increments the scale property by 1 and applies the new scale value.\n   */\n  incrementScale() {\n    this.scale++;\n    this.applyScale();\n  }\n\n  /**\n   * This function sets the font size of the HTML document to a specified scale.\n   */\n  applyScale() {\n    this.document.documentElement.style.fontSize = this.scale + 'px';\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  {{ \"config.scale\" | translate }}\n  \n    \n    \n      \n    \n    \n  \n\n  \n    {{ \"config.menu_type\" | translate }}\n    \n      \n      {{ \"config.static\" | translate }}\n    \n    \n      \n      {{ \"config.overlay\" | translate }}\n    \n  \n\n  \n    {{ \"config.input_style\" | translate }}\n    \n      \n        \n        {{\n          \"config.outlined\" | translate\n        }}\n      \n      \n        \n        {{\n          \"config.filled\" | translate\n        }}\n      \n    \n\n    {{ \"config.ripple_effect\" | translate }}\n    \n  \n\n  Bootstrap\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design Compact\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Tailwind\n  \n    \n      \n        \n      \n    \n  \n\n  Fluent UI\n  \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2022\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2021\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \"config.scale\" | translate }}                                {{ \"config.menu_type\" | translate }}                {{ \"config.static\" | translate }}                    {{ \"config.overlay\" | translate }}            {{ \"config.input_style\" | translate }}                          {{          \"config.outlined\" | translate        }}                            {{          \"config.filled\" | translate        }}              {{ \"config.ripple_effect\" | translate }}        Bootstrap                                                                                                                      Material Design                                                                                                                      Material Design Compact                                                                                                                      Tailwind                                  Fluent UI                                  PrimeOne Design - 2022                                                                                                                                                                                                                                      PrimeOne Design - 2021                                                                                                                                                                                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateOrganizationComponent.html":{"url":"components/CreateOrganizationComponent.html","title":"component - CreateOrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateOrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/create-organization/create-organization.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-create-organization\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            ToastModule\n                            InputTextModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./create-organization.component.html\n            \n\n\n\n            \n                styleUrl\n                ./create-organization.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganizationForm\n                            \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                    \n                                nameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                organizationSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeSlugAndCheckValidity\n                            \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                createOrganization\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService, store: Store, formBuilder: FormBuilder, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/create-organization/create-organization.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeSlugAndCheckValidity\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeSlugAndCheckValidity(organizationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organizationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganizationForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: ['', [Validators.required]],\n    slug: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        organizationSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { CreateOrganizationRequestDto } from '../../core/domain/dto/requests/create-organization-request.dto';\nimport { OrganizationService } from '../../core/services/api/organization.api.service';\nimport { AppState } from '../../core/state/app.state';\nimport {\n  createOrganization,\n  loadCurrentOrganization,\n} from '../../core/state/organization/organization.actions';\nimport {\n  isLoadingOrganization,\n  selectCurrentOrganization,\n  selectOrganizationError,\n} from '../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-create-organization',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    ToastModule,\n    InputTextModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './create-organization.component.html',\n  styleUrl: './create-organization.component.scss',\n})\nexport class CreateOrganizationComponent\n  implements AfterViewInit, OnInit, OnDestroy\n{\n  @ViewChild('slug') slugInput!: ElementRef;\n  @ViewChild('name') nameInput!: ElementRef;\n\n  constructor(\n    private organizationService: OrganizationService,\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  createOrganizationForm = this.formBuilder.group({\n    name: ['', [Validators.required]],\n    slug: ['', [Validators.required]],\n  });\n\n  isSlugTaken: boolean | null = null;\n  isLoading = this.store.select(isLoadingOrganization);\n\n  private slugCheckSubscription?: Subscription;\n  private organizationSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.slugInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkSlug(data));\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.nameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.changeSlugAndCheckValidity(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentOrganization());\n\n    this.organizationSubscription = this.store\n      .select(selectCurrentOrganization)\n      .subscribe((organization) => {\n        if (organization != null) {\n          this.router.navigate(['/home']);\n          this.errorSubscription?.unsubscribe();\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectOrganizationError)\n      .subscribe((error) => {\n        if (\n          error != null &&\n          error.status !== 0 &&\n          error.status !== 404 &&\n          error.status !== 401\n        ) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('create-organization.error'),\n            detail: this.translateService.instant(\n              'create-organization.error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.slugCheckSubscription?.unsubscribe();\n    this.organizationSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n  }\n\n  createOrganization() {\n    const dto: CreateOrganizationRequestDto = {\n      name: this.createOrganizationForm.get('name')?.value ?? '',\n      slug: this.createOrganizationForm.get('slug')?.value ?? '',\n    };\n    this.store.dispatch(createOrganization(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private changeSlugAndCheckValidity(organizationName: string) {\n    const slug = this.toSlugValue(organizationName);\n    this.createOrganizationForm.get('slug')?.setValue(slug);\n    this.checkSlug(slug);\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.organizationService\n      .isSlugTaken(slug)\n      .subscribe({\n        next: (result) => {\n          this.isSlugTaken = result;\n        },\n        error: () => {\n          this.isSlugTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n        \n          \n            {{ \"create-organization.welcome_message\" | translate }}\n          \n          {{\n            \"create-organization.welcome_description\" | translate\n          }}\n        \n        \n          \n            {{ \"create-organization.name_label\" | translate }}\n            \n              \n              \n            \n            {{ \"create-organization.name_is_required\" | translate }}\n\n            {{ \"create-organization.slug_label\" | translate }}\n            \n              @if (isSlugTaken !== null && !isSlugTaken) {\n                \n              } @else {\n                \n              }\n              \n            \n            {{ \"create-organization.slug_is_required\" | translate }}\n\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{ \"create-organization.welcome_message\" | translate }}                    {{            \"create-organization.welcome_description\" | translate          }}                                      {{ \"create-organization.name_label\" | translate }}                                                                {{ \"create-organization.name_is_required\" | translate }}            {{ \"create-organization.slug_label\" | translate }}                          @if (isSlugTaken !== null && !isSlugTaken) {                              } @else {                              }                                      {{ \"create-organization.slug_is_required\" | translate }}                                          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateOrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateOrganizationRequestDto.html":{"url":"interfaces/CreateOrganizationRequestDto.html","title":"interface - CreateOrganizationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateOrganizationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-organization-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateOrganizationRequestDto {\n  slug: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateProjectRequestDto.html":{"url":"interfaces/CreateProjectRequestDto.html","title":"interface - CreateProjectRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateProjectRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-project-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateProjectRequestDto {\n    name: string;\n    platformId: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateTeamRequestDto.html":{"url":"interfaces/CreateTeamRequestDto.html","title":"interface - CreateTeamRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateTeamRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-team-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateTeamRequestDto {\n    slug: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/details/details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-details',\n  standalone: true,\n  imports: [],\n  templateUrl: './details.component.html',\n  styleUrl: './details.component.scss'\n})\nexport class DetailsComponent {\n\n}\n\n    \n\n    \n        details works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'details works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DevicesComponent.html":{"url":"components/DevicesComponent.html","title":"component - DevicesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DevicesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/devices/devices.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-devices\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./devices.component.html\n            \n\n\n\n            \n                styleUrl\n                ./devices.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-devices',\n  standalone: true,\n  imports: [],\n  templateUrl: './devices.component.html',\n  styleUrl: './devices.component.scss'\n})\nexport class DevicesComponent {\n\n}\n\n    \n\n    \n        devices works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'devices works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DevicesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DocumentationComponent.html":{"url":"components/DocumentationComponent.html","title":"component - DocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/documentation/documentation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-documentation\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./documentation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./documentation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-documentation',\n  standalone: true,\n  imports: [],\n  templateUrl: './documentation.component.html',\n  styleUrl: './documentation.component.scss'\n})\nexport class DocumentationComponent {\n\n}\n\n    \n\n    \n        documentation works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'documentation works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileDto.html":{"url":"interfaces/FileDto.html","title":"interface - FileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/file.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contentType\n                                        \n                                \n                                \n                                        \n                                            createdTime\n                                        \n                                \n                                \n                                        \n                                            fileName\n                                        \n                                \n                                \n                                        \n                                            fileSize\n                                        \n                                \n                                \n                                        \n                                            stream\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contentType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stream\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stream:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FileDto {\n  fileName: string;\n  url: string;\n  contentType: string;\n  fileSize: number;\n  createdTime: Date;\n  stream: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n  by\n  DRadman\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  by  DRadman'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputTextModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                forgotPasswordForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AppState } from '../../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router, RouterModule } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectForgotPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  forgotPassword,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputTextModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n})\nexport class ForgotPasswordComponent implements AfterViewInit, OnInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService\n  ) {}\n\n  forgotPasswordForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectForgotPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 404) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.user_does_not_exist'\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.error_description'\n              ),\n            });\n          }\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.forgot-password.success'\n            ),\n            detail: this.translateService.instant(\n              'auth.forgot-password.check_your_email'\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  // eslint-disable no-non-null-asserted-optional-chain\n  forgotPassword() {\n    this.store.dispatch(\n      forgotPassword({\n        username: this.forgotPasswordForm.get('username')?.value ?? '',\n      })\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.forgot-password.welcome_message\" | translate }}\n  \n  {{\n    \"auth.forgot-password.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n      \n      } @else if (isUsernameTaken) {\n      \n      } @else {\n      \n      }\n      \n    \n    {{ \"auth.forgot-password.username_is_required\" | translate }}\n    {{ \"auth.forgot-password.username_length\" | translate }}\n\n    \n      {{ \"auth.forgot-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.forgot-password.welcome_message\" | translate }}    {{    \"auth.forgot-password.welcome_description\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {            } @else if (isUsernameTaken) {            } @else {            }              {{ \"auth.forgot-password.username_is_required\" | translate }}    {{ \"auth.forgot-password.username_length\" | translate }}          {{ \"auth.forgot-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForgotPasswordRequestDto.html":{"url":"interfaces/ForgotPasswordRequestDto.html","title":"interface - ForgotPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForgotPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForgotPasswordRequestDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GuidesComponent.html":{"url":"components/GuidesComponent.html","title":"component - GuidesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GuidesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/guides/guides.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-guides\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./guides.component.html\n            \n\n\n\n            \n                styleUrl\n                ./guides.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-guides',\n  standalone: true,\n  imports: [],\n  templateUrl: './guides.component.html',\n  styleUrl: './guides.component.scss'\n})\nexport class GuidesComponent {\n\n}\n\n    \n\n    \n        guides works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'guides works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GuidesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                SidebarComponent\n                                ConfigComponent\n                                FooterComponent\n                            BreadcrumbModule\n                                TopbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                appSidebar\n                            \n                            \n                                    \n                                appTopbar\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Private\n                                    Optional\n                                currentUserErrorSubscription\n                            \n                            \n                                home\n                            \n                            \n                                items\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuOutsideClickListener\n                            \n                            \n                                    Private\n                                    Optional\n                                organizationErrorSubscription\n                            \n                            \n                                    Private\n                                overlayMenuOpenSubscription\n                            \n                            \n                                profileMenuOutsideClickListener\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockBodyScroll\n                            \n                            \n                                    Private\n                                createBreadcrumbs\n                            \n                            \n                                hideMenu\n                            \n                            \n                                hideProfileMenu\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                unblockBodyScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    containerClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, layoutService: LayoutService, renderer: Renderer2, document: Document, translateService: TranslateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockBodyScroll\n                        \n                    \n                \n            \n            \n                \nblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:243\n                        \n                    \n\n\n            \n                \n                        This function adds a class to the body element of a webpage to block scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBreadcrumbs\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBreadcrumbs(route: ActivatedRoute, url: string, breadcrumbs: MenuItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:177\n                        \n                    \n\n\n            \n                \n                        This function creates breadcrumbs for a given route in a TypeScript application.\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRoute\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe current activated route in the Angular application.\n\n\n                                            \n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe current URL being constructed for the breadcrumb trail.\n\n\n                                            \n                                        \n                                        \n                                                breadcrumbs\n                                            \n                                                        MenuItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    \nbreadcrumbs is an array of MenuItem objects that represent\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     MenuItem[]\n\n                        \n                            \n                                an array of MenuItem objects, which represent the breadcrumbs for a given route.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideMenu\n                        \n                    \n                \n            \n            \n                \nhideMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:218\n                        \n                    \n\n\n            \n                \n                        This function hides the menu and resets related layout service states.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideProfileMenu\n                        \n                    \n                \n            \n            \n                \nhideProfileMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:232\n                        \n                    \n\n\n            \n                \n                        This function hides the profile sidebar menu and removes the outside click listener.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:155\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unblockBodyScroll\n                        \n                    \n                \n            \n            \n                \nunblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:254\n                        \n                    \n\n\n            \n                \n                        This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appSidebar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SidebarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(SidebarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appTopbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TopbarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(TopbarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        currentUserErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        home\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        organizationErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayMenuOpenSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileMenuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        containerClass\n                    \n                \n\n                \n                    \n                        getcontainerClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/home.component.ts:268\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\nimport { Subscription, filter } from 'rxjs';\nimport { LayoutService } from '../../core/services/layout.service';\nimport { AppState } from '../../core/state/app.state';\nimport { loadCurrentUser } from '../../core/state/auth/auth.actions';\nimport { selectCurrentUser } from '../../core/state/auth/auth.selectors';\nimport { loadCurrentOrganization } from '../../core/state/organization/organization.actions';\nimport { selectOrganizationError } from '../../core/state/organization/organization.selectors';\nimport { ConfigComponent } from './components/config/config.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { TopbarComponent } from './components/topbar/topbar.component';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [\n    CommonModule,\n    SidebarComponent,\n    ConfigComponent,\n    FooterComponent,\n    BreadcrumbModule,\n    TopbarComponent,\n  ],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild(SidebarComponent) appSidebar!: SidebarComponent;\n  @ViewChild(TopbarComponent) appTopbar!: TopbarComponent;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    public layoutService: LayoutService,\n    public renderer: Renderer2,\n    @Inject(DOCUMENT) private document: Document,\n    private translateService: TranslateService,\n    private route: ActivatedRoute,\n  ) {\n    this.overlayMenuOpenSubscription =\n      this.layoutService.overlayOpen$.subscribe(() => {\n        if (!this.menuOutsideClickListener) {\n          this.menuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appSidebar.el.nativeElement.isSameNode(event.target) ||\n                this.appSidebar.el.nativeElement.contains(event.target) ||\n                this.appTopbar.menuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.menuButton.nativeElement.contains(event.target)\n              );\n\n              if (isOutsideClicked) {\n                this.hideMenu();\n              }\n            },\n          );\n        }\n\n        if (!this.profileMenuOutsideClickListener) {\n          this.profileMenuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appTopbar.menu.nativeElement.isSameNode(event.target) ||\n                this.appTopbar.menu.nativeElement.contains(event.target) ||\n                this.appTopbar.topbarMenuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.topbarMenuButton.nativeElement.contains(\n                  event.target,\n                )\n              );\n\n              if (isOutsideClicked) {\n                this.hideProfileMenu();\n              }\n            },\n          );\n        }\n\n        if (this.layoutService.state.staticMenuMobileActive) {\n          this.blockBodyScroll();\n        }\n      });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.hideMenu();\n        this.hideProfileMenu();\n\n        this.translateService.stream('sidenav').subscribe({\n          next: () => {\n            this.items = this.createBreadcrumbs(this.route.root) ?? [];\n          },\n        });\n      });\n  }\n\n  currentUser = this.store.select(selectCurrentUser);\n\n  home!: MenuItem;\n  items!: MenuItem[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  menuOutsideClickListener: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  profileMenuOutsideClickListener: any;\n\n  private currentUserErrorSubscription?: Subscription;\n  private overlayMenuOpenSubscription: Subscription;\n  private organizationErrorSubscription?: Subscription;\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n    this.store.dispatch(loadCurrentOrganization());\n\n    this.home = { icon: 'pi pi-home', routerLink: '/home' };\n  }\n\n  ngAfterViewInit() {\n    this.organizationErrorSubscription = this.store\n      .select(selectOrganizationError)\n      .subscribe((error) => {\n        if (\n          error &&\n          error != null &&\n          error.status !== 0 &&\n          error.status !== 401\n        ) {\n          this.router.navigate(['/create-organization']);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.currentUserErrorSubscription?.unsubscribe();\n    this.organizationErrorSubscription?.unsubscribe();\n\n    if (this.overlayMenuOpenSubscription) {\n      this.overlayMenuOpenSubscription.unsubscribe();\n    }\n\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n    }\n  }\n  /**\n   * This function creates breadcrumbs for a given route in a TypeScript application.\n   * @param {ActivatedRoute} route - The current activated route in the Angular application.\n   * @param {string} [url] - The current URL being constructed for the breadcrumb trail.\n   * @param {MenuItem[]} breadcrumbs - `breadcrumbs` is an array of `MenuItem` objects that represent\n   * the breadcrumb trail for a given route. Each `MenuItem` object has a `label` property that\n   * represents the text to display for the breadcrumb, and a `url` property that represents the URL\n   * for the breadcrumb.\n   * @returns an array of MenuItem objects, which represent the breadcrumbs for a given route.\n   */\n  private createBreadcrumbs(\n    route: ActivatedRoute,\n    url: string = '',\n    breadcrumbs: MenuItem[] = [],\n  ): MenuItem[] {\n    const children: ActivatedRoute[] = route.children;\n\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n\n    for (const child of children) {\n      const routeURL: string = child.snapshot.url\n        .map((segment) => segment.path)\n        .join('/');\n      if (routeURL !== '') {\n        url += `/${routeURL}`;\n      }\n\n      const label = child.snapshot.data['breadcrumb'];\n      if (!(label === null || label === undefined)) {\n        const localizedLabel: string = this.translateService.instant(\n          'sidenav.' + label,\n        );\n        if (breadcrumbs.length == 0) {\n          breadcrumbs.push({ label: localizedLabel, url });\n        } else if (\n          breadcrumbs[breadcrumbs.length - 1].label !== localizedLabel\n        ) {\n          breadcrumbs.push({ label: localizedLabel, routerLink: [url] });\n        }\n      }\n\n      return this.createBreadcrumbs(child, url, breadcrumbs);\n    }\n    return breadcrumbs;\n  }\n\n  /**\n   * This function hides the menu and resets related layout service states.\n   */\n  hideMenu() {\n    this.layoutService.state.overlayMenuActive = false;\n    this.layoutService.state.staticMenuMobileActive = false;\n    this.layoutService.state.menuHoverActive = false;\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n      this.menuOutsideClickListener = null;\n    }\n    this.unblockBodyScroll();\n  }\n\n  /**\n   * This function hides the profile sidebar menu and removes the outside click listener.\n   */\n  hideProfileMenu() {\n    this.layoutService.state.profileSidebarVisible = false;\n    if (this.profileMenuOutsideClickListener) {\n      this.profileMenuOutsideClickListener();\n      this.profileMenuOutsideClickListener = null;\n    }\n  }\n\n  /**\n   * This function adds a class to the body element of a webpage to block scrolling.\n   */\n  blockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.add('blocked-scroll');\n    } else {\n      this.document.body.className += ' blocked-scroll';\n    }\n  }\n\n  /**\n   * This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n   */\n  unblockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.remove('blocked-scroll');\n    } else {\n      this.document.body.className = document.body.className.replace(\n        new RegExp(\n          '(^|\\\\b)' + 'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)',\n          'gi',\n        ),\n        ' ',\n      );\n    }\n  }\n\n  get containerClass() {\n    return {\n      'layout-theme-light': this.layoutService.config.colorScheme === 'light',\n      'layout-theme-dark': this.layoutService.config.colorScheme === 'dark',\n      'layout-overlay': this.layoutService.config.menuMode === 'overlay',\n      'layout-static': this.layoutService.config.menuMode === 'static',\n      'layout-static-inactive':\n        this.layoutService.state.staticMenuDesktopInactive &&\n        this.layoutService.config.menuMode === 'static',\n      'layout-overlay-active': this.layoutService.state.overlayMenuActive,\n      'layout-mobile-active': this.layoutService.state.staticMenuMobileActive,\n      'p-input-filled': this.layoutService.config.inputStyle === 'filled',\n      'p-ripple-disabled': !this.layoutService.config.ripple,\n    };\n  }\n}\n\n    \n\n    \n        \n    \n    \n      \n    \n    \n      \n        \n          \n        \n        \n      \n      \n    \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Invitation.html":{"url":"interfaces/Invitation.html","title":"interface - Invitation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Invitation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/invitation.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            invitationId\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"./user.entity\";\n\nexport interface Invitation {\n    invitationId: string,\n    email: string,\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitationComponent.html":{"url":"components/InvitationComponent.html","title":"component - InvitationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/invitation/invitation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-invitation\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./invitation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./invitation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                invitationHash\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService, invitationService: InvitationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:62\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        invitationHash\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/invitation/invitation.component.ts:62\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:177\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/invitation/invitation.component.ts:164\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: [\n      { value: '', disabled: true },\n      [Validators.required, Validators.email],\n    ],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/invitation/invitation.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { AfterViewInit, Component, ElementRef, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  isLoadingAuthState,\n  selectAcceptInvitationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../core/state/app.state';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport {\n  acceptInvitation,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { InvitationService } from '../../../../core/services/api/invitation.api.service';\n\n@Component({\n  selector: 'app-invitation',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './invitation.component.html',\n  styleUrl: './invitation.component.scss',\n})\nexport class InvitationComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n  @Input()\n  private invitationHash?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n    private invitationService: InvitationService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: [\n      { value: '', disabled: true },\n      [Validators.required, Validators.email],\n    ],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    this.invitationService.getInvitationDetails(this.invitationHash ?? '').subscribe({\n      next: (details) => {\n        this.registerForm.get('email')?.setValue(details.email);\n      },\n      error: () => {\n        this.router.navigate(['/auth'])\n      }\n    })\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAcceptInvitationError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 409) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.invitation.registration_error',\n              ),\n              detail: this.translateService.instant(\n                'auth.invitation.registration_error_username_exists',\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.invitation.registration_error',\n              ),\n              detail: this.translateService.instant(\n                'auth.invitation.registration_error_wrong_hash',\n              ),\n            });\n          }\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(\n      acceptInvitation({ dto: dto, invitationHash: this.invitationHash ?? '' }),\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.invitation.welcome_message\" | translate }}\n  \n  {{\n    \"auth.invitation.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.invitation.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.invitation.username_is_required\" | translate }}\n    {{ \"auth.invitation.username_length\" | translate }}\n\n    {{ \"auth.invitation.password_label\" | translate }}\n    \n    {{ \"auth.invitation.password_length\" | translate }}\n    {{ \"auth.invitation.password_not_strong\" | translate }}\n\n    {{\n      \"auth.invitation.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.invitation.email_is_required\" | translate }}\n\n    {{ \"auth.invitation.first_name_label\" | translate }}\n    \n    {{ \"auth.invitation.first_name_is_required\" | translate }}\n\n    {{ \"auth.invitation.last_name_label\" | translate }}\n    \n    {{ \"auth.invitation.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.invitation.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.invitation.welcome_message\" | translate }}    {{    \"auth.invitation.welcome_description\" | translate  }}      {{ \"auth.invitation.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.invitation.username_is_required\" | translate }}    {{ \"auth.invitation.username_length\" | translate }}    {{ \"auth.invitation.password_label\" | translate }}        {{ \"auth.invitation.password_length\" | translate }}    {{ \"auth.invitation.password_not_strong\" | translate }}    {{      \"auth.invitation.email_label\" | translate    }}                        {{ \"auth.invitation.email_is_required\" | translate }}    {{ \"auth.invitation.first_name_label\" | translate }}        {{ \"auth.invitation.first_name_is_required\" | translate }}    {{ \"auth.invitation.last_name_label\" | translate }}        {{ \"auth.invitation.last_name_is_required\" | translate }}          {{ \"auth.invitation.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationDto.html":{"url":"interfaces/InvitationDto.html","title":"interface - InvitationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvitationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/invitation.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            invitationId\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from \"../models/user.entity\";\n\nexport interface InvitationDto {\n    invitationId: string,\n    email: string,\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvitationRequestDto.html":{"url":"interfaces/InvitationRequestDto.html","title":"interface - InvitationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvitationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/invitation-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            roleId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface InvitationRequestDto {\n    email: string,\n    roleId: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvitationService.html":{"url":"injectables/InvitationService.html","title":"injectable - InvitationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvitationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/invitation.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptInvitation\n                            \n                            \n                                getInvitationDetails\n                            \n                            \n                                inviteMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/invitation.api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        acceptInvitation\n                        \n                    \n                \n            \n            \n                \nacceptInvitation(invitationHash: string, dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                invitationHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInvitationDetails\n                        \n                    \n                \n            \n            \n                \ngetInvitationDetails(invitationHash: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                invitationHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviteMember\n                        \n                    \n                \n            \n            \n                \ninviteMember(dto: InvitationRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/invitation.api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            InvitationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { InvitationDto } from '../../domain/dto/invitation.dto';\nimport { InvitationRequestDto } from '../../domain/dto/requests/invitation-request.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InvitationService {\n  constructor(private http: HttpClient) {}\n\n  inviteMember(dto: InvitationRequestDto) {\n    return this.http.post(\n      api.invitationUrl + '/send',\n      dto,\n      api.authOptions,\n    );\n  }\n\n  getInvitationDetails(invitationHash: string): Observable {\n    return this.http.get(\n      api.invitationUrl + '/details/' + invitationHash,\n      api.noAuthOptions,\n    );\n  }\n\n  acceptInvitation(invitationHash: string, dto: RegisterRequestDto) {\n    return this.http.post(\n      api.invitationUrl + '/accept/' + invitationHash,\n      dto,\n      api.noAuthOptions,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IssuesComponent.html":{"url":"components/IssuesComponent.html","title":"component - IssuesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IssuesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/issues/issues.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-issues\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./issues.component.html\n            \n\n\n\n            \n                styleUrl\n                ./issues.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-issues',\n  standalone: true,\n  imports: [],\n  templateUrl: './issues.component.html',\n  styleUrl: './issues.component.scss'\n})\nexport class IssuesComponent {\n\n}\n\n    \n\n    \n        issues works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'issues works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IssuesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/token-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getRefreshToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveRefreshToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/token-storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveRefreshToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { LocalStorage } from \"./local-storage.service\";\n\nconst TOKEN_KEY = 'auth-token';\nconst REFRESH_TOKEN_KEY = 'auth-refreshtoken';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class JwtService {\n\n  constructor(private storage: LocalStorage) {}\n\n  public clear(): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n  }\n\n  public saveToken(token: string): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return this.storage.getItem(TOKEN_KEY);\n  }\n\n  public saveRefreshToken(token: string): void {\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n   this.storage.setItem(REFRESH_TOKEN_KEY, token);\n  }\n\n  public getRefreshToken(): string | null {\n    return this.storage.getItem(REFRESH_TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The LayoutService class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Private\n                                configUpdate\n                            \n                            \n                                configUpdate$\n                            \n                            \n                                    Private\n                                overlayOpen\n                            \n                            \n                                overlayOpen$\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isDesktop\n                            \n                            \n                                isMobile\n                            \n                            \n                                isOverlay\n                            \n                            \n                                onConfigUpdate\n                            \n                            \n                                onMenuToggle\n                            \n                            \n                                restoreConfig\n                            \n                            \n                                saveConfig\n                            \n                            \n                                showConfigSidebar\n                            \n                            \n                                showProfileSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/layout.service.ts:92\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isDesktop\n                        \n                    \n                \n            \n            \n                \nisDesktop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:211\n                        \n                    \n\n\n            \n                \n                        This function checks if the current window width is greater than 991 pixels, indicating if the\nuser is on a desktop device.\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isDesktop() returns a boolean value true if the width of the window is\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n            \n                \nisMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:220\n                        \n                    \n\n\n            \n                \n                        The function checks if the device is not a desktop and returns a boolean value.\nwill return true if the device is not a desktop and false if it is a desktop.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The isMobile() function is returning the opposite of the isDesktop() function. It\nwill return true if the device is not a desktop and false if it is a desktop.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOverlay\n                        \n                    \n                \n            \n            \n                \nisOverlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:199\n                        \n                    \n\n\n            \n                \n                        This function checks if the menu mode is set to 'overlay'.\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isOverlay() is returning a boolean value that indicates whether the\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigUpdate\n                        \n                    \n                \n            \n            \n                \nonConfigUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:227\n                        \n                    \n\n\n            \n                \n                        The function updates the configuration and emits the updated configuration through a subject.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuToggle\n                        \n                    \n                \n            \n            \n                \nonMenuToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:156\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a menu based on the device type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreConfig\n                        \n                    \n                \n            \n            \n                \nrestoreConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:232\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveConfig\n                        \n                    \n                \n            \n            \n                \nsaveConfig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:240\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfigSidebar\n                        \n                    \n                \n            \n            \n                \nshowConfigSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:190\n                        \n                    \n\n\n            \n                \n                        This function sets the state of the configSidebarVisible property to true.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showProfileSidebar\n                        \n                    \n                \n            \n            \n                \nshowProfileSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:180\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\nvisible.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:100\n                        \n                    \n\n            \n                \n                    The config property is initializing an object of type AppConfig with default values for\nvarious configuration options. These options include ripple, inputStyle, menuMode,\ncolorScheme, theme, and scale. The = operator is assigning this object to the config\nproperty of the LayoutService class. This object represents the default configuration for the\nlayout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:130\n                        \n                    \n\n            \n                \n                    private configUpdate = new Subject(); is creating a new instance of the Subject\nclass from the rxjs library and assigning it to the configUpdate property of the\nLayoutService class. This Subject instance is used to emit events when the configuration is\nupdated. Other parts of the application can subscribe to these events using the configUpdate$\nobservable created from this Subject. The AppConfig type parameter in Subject\nindicates that the Subject can emit values of type AppConfig.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configUpdate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configUpdate.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:145\n                        \n                    \n\n            \n                \n                    configUpdate$ is creating an observable from the configUpdate subject. This allows other parts\nof the application to subscribe to changes in the configUpdate subject and react accordingly.\nThe $ at the end of the variable name is a convention in RxJS to indicate that the variable is\nan observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:139\n                        \n                    \n\n            \n                \n                    private overlayOpen = new Subject(); is creating a new instance of the Subject class from\nthe rxjs library and assigning it to the overlayOpen property of the LayoutService class.\nThis Subject instance is used to emit events when the overlay menu is opened or closed. Other\nparts of the application can subscribe to these events using the overlayOpen$ observable created\nfrom this Subject. The any type parameter in Subject indicates that the Subject can\nemit values of any type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlayOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.overlayOpen.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:151\n                        \n                    \n\n            \n                \n                    overlayOpen$ is creating an observable from the overlayOpen subject. This allows other parts\nof the application to subscribe to changes in the overlayOpen subject and react accordingly. The\n$ at the end of the variable name is a convention in RxJS to indicate that the variable is an\nobservable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutState\n\n                    \n                \n                \n                    \n                        Default value : {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:115\n                        \n                    \n\n            \n                \n                    state: LayoutState is declaring a property named state of type LayoutState. LayoutState is\nan interface that defines the shape of an object with boolean properties\nstaticMenuDesktopInactive, overlayMenuActive, profileSidebarVisible, configSidebarVisible,\nstaticMenuMobileActive, and menuHoverActive. The = operator is initializing the state\nproperty with an object that has all of these boolean properties set to false. This object\nrepresents the initial state of the layout.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutState.html":{"url":"interfaces/LayoutState.html","title":"interface - LayoutState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LayoutState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The interface LayoutState is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as staticMenuDesktopInactive,\noverlayMenuActive, profileSidebarVisible, configSidebarVisible, staticMenuMobileActive, and\nmenuHoverActive. These properties are used in various functions of the LayoutService class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            menuHoverActive\n                                        \n                                \n                                \n                                        \n                                            overlayMenuActive\n                                        \n                                \n                                \n                                        \n                                            profileSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            staticMenuDesktopInactive\n                                        \n                                \n                                \n                                        \n                                            staticMenuMobileActive\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    configSidebarVisible: boolean; is declaring a boolean property named configSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the configuration\nsidebar is currently visible or not. It is used in the showConfigSidebar() function to set the\nstate of the configSidebarVisible property to true when the configuration sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuHoverActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuHoverActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuHoverActive: boolean; is declaring a boolean property named menuHoverActive in the\nLayoutState interface. This property represents the state of whether the user is currently\nhovering over the menu.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayMenuActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overlayMenuActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    overlayMenuActive: boolean; is declaring a boolean property named overlayMenuActive in the\nLayoutState interface. This property represents the state of whether the overlay menu is\ncurrently active or not. It is used in the onMenuToggle() function to toggle the visibility of\nthe overlay menu and set the state of the overlayMenuActive property to true when the overlay\nmenu is shown. It is also used in the showProfileSidebar() function to close the overlay menu\nwhen the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    profileSidebarVisible: boolean; is declaring a boolean property named profileSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the profile sidebar is\ncurrently visible or not. It is used in the showProfileSidebar() function to toggle the\nvisibility of the profile sidebar and set the state of the profileSidebarVisible property to\ntrue when the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuDesktopInactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuDesktopInactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuDesktopInactive: boolean; is declaring a boolean property named\nstaticMenuDesktopInactive in the LayoutState interface. This property represents the state of\nwhether the static menu is currently inactive on a desktop device. It is used in the\nonMenuToggle() function to toggle the visibility of the static menu and set the state of the\nstaticMenuDesktopInactive property to true when the static menu is hidden.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuMobileActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuMobileActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuMobileActive: boolean; is declaring a boolean property named staticMenuMobileActive\nin the LayoutState interface. This property represents the state of whether the static menu is\ncurrently active on a mobile device.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LocalStorage } from './local-storage.service';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  constructor(private localStorage: LocalStorage) {}\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.saveConfig();\n    this.configUpdate.next(this.config);\n  }\n\n  restoreConfig() {\n    const localStorageConfig = this.localStorage.getItem(\"UI_CONFIG\");\n    if (localStorageConfig && localStorageConfig != null) {\n      this.config = JSON.parse(localStorageConfig);\n      this.onConfigUpdate();\n    }\n  }\n\n  saveConfig() {\n    this.localStorage.setItem(\"UI_CONFIG\", JSON.stringify(this.config));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorage.html":{"url":"injectables/LocalStorage.html","title":"injectable - LocalStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/local-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.localStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                getApplicationName\n                            \n                            \n                                isRegistrationEnabled\n                            \n                            \n                                login\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApplicationName\n                        \n                    \n                \n            \n            \n                \ngetApplicationName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRegistrationEnabled\n                        \n                    \n                \n            \n            \n                \nisRegistrationEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  authenticate,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectAuthorizationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  loginForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAuthorizationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.login.authorization_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.login.wrong_username_or_password',\n            ),\n          });\n        }\n      });\n  }\n\n  login() {\n    this.store.dispatch(\n      authenticate({\n        username: this.loginForm.get('username')?.value ?? '',\n        password: this.loginForm.get('password')?.value ?? '',\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  getApplicationName() {\n    return environment.appName;\n  }\n\n  isRegistrationEnabled() {\n    return environment.enableRegistration;\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},\n  \n  {{\n    \"auth.login.sign_in_to_continue\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n        \n        } @else if (isUsernameTaken) {\n        \n        } @else {\n        \n        }\n      \n    \n    {{ \"auth.login.username_is_required\" | translate }}\n    {{ \"auth.login.username_length\" | translate }}\n\n    {{ \"auth.login.password_label\" | translate }}\n    \n    {{ \"auth.login.password_is_required\" | translate }}\n    {{ \"auth.login.password_length\" | translate }}\n\n    \n      {{ \"auth.login.forgot_password\" | translate }}\n      {{ \"auth.login.register\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},    {{    \"auth.login.sign_in_to_continue\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {                } @else if (isUsernameTaken) {                } @else {                }              {{ \"auth.login.username_is_required\" | translate }}    {{ \"auth.login.username_length\" | translate }}    {{ \"auth.login.password_label\" | translate }}        {{ \"auth.login.password_is_required\" | translate }}    {{ \"auth.login.password_length\" | translate }}          {{ \"auth.login.forgot_password\" | translate }}      {{ \"auth.login.register\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogsComponent.html":{"url":"components/LogsComponent.html","title":"component - LogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/logs/logs.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logs\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./logs.component.html\n            \n\n\n\n            \n                styleUrl\n                ./logs.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-logs',\n  standalone: true,\n  imports: [],\n  templateUrl: './logs.component.html',\n  styleUrl: './logs.component.scss'\n})\nexport class LogsComponent {\n\n}\n\n    \n\n    \n        logs works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'logs works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MemberPickerComponent.html":{"url":"components/MemberPickerComponent.html","title":"component - MemberPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MemberPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/member-picker/member-picker.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-member-picker\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            TranslateModule\n                            DialogModule\n                            PickListModule\n                            AvatarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./member-picker.component.html\n            \n\n\n\n            \n                styleUrl\n                ./member-picker.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableMembers\n                            \n                            \n                                isLoadingMembers\n                            \n                            \n                                isPickerDialogVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserInitials\n                            \n                            \n                                onMoveAllToSource\n                            \n                            \n                                onMoveAllToTarget\n                            \n                            \n                                onMoveToSource\n                            \n                            \n                                onMoveToTarget\n                            \n                            \n                                showPickerDialog\n                            \n                            \n                                stringToColour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onMembersPicked\n                            \n                            \n                                onMembersRemoved\n                            \n                            \n                                selectedMembers\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/member-picker/member-picker.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onMembersPicked\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/member-picker/member-picker.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onMembersRemoved\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/member-picker/member-picker.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedMembers\n                    \n                \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/member-picker/member-picker.component.ts:47\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitials\n                        \n                    \n                \n            \n            \n                \ngetUserInitials(member: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToSource\n                        \n                    \n                \n            \n            \n                \nonMoveAllToSource(event: PickListMoveAllToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveAllToTarget(event: PickListMoveAllToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToSource\n                        \n                    \n                \n            \n            \n                \nonMoveToSource(event: PickListMoveToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveToTarget(event: PickListMoveToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPickerDialog\n                        \n                    \n                \n            \n            \n                \nshowPickerDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/member-picker/member-picker.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableMembers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/member-picker/member-picker.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingActiveMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/member-picker/member-picker.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPickerDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/member-picker/member-picker.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport {\n  PickListModule,\n  PickListMoveAllToSourceEvent,\n  PickListMoveAllToTargetEvent,\n  PickListMoveToSourceEvent,\n  PickListMoveToTargetEvent,\n} from 'primeng/picklist';\nimport { RippleModule } from 'primeng/ripple';\nimport { filter, take } from 'rxjs';\nimport { User } from '../../../core/domain/models/user.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport { loadActiveMembers } from '../../../core/state/members/members.actions';\nimport {\n  isLoadingActiveMembers,\n  selectActiveMembers,\n} from '../../../core/state/members/members.selectors';\n\n@Component({\n  selector: 'app-member-picker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    TranslateModule,\n    DialogModule,\n    PickListModule,\n    AvatarModule,\n  ],\n  templateUrl: './member-picker.component.html',\n  styleUrl: './member-picker.component.scss',\n})\nexport class MemberPickerComponent {\n  constructor(private store: Store) {}\n  isLoadingMembers = this.store.select(isLoadingActiveMembers);\n  availableMembers: User[] = [];\n  isPickerDialogVisible = false;\n\n  @Input()\n  selectedMembers: User[] = [];\n\n  @Input()\n  onMembersPicked?: (member: User[]) => void;\n\n  @Input()\n  onMembersRemoved?: (member: User[]) => void;\n\n  getUserInitials(member: User): string | undefined {\n    if (member.lastName || member.firstName) {\n      return member.firstName?.charAt(0) + member.lastName?.charAt(0);\n    } else {\n      return member.email.charAt(0);\n    }\n  }\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n\n  showPickerDialog() {\n    this.store.dispatch(loadActiveMembers());\n    this.store\n      .select(selectActiveMembers)\n      .pipe(\n        filter((members) => members !== undefined && members !== null),\n        take(1) // unsubscribe after one emitted value\n      )\n      .subscribe((members) => {\n        // Filter out members that are also present in selectedMembers\n        this.availableMembers = members?.filter(\n          (member) => !this.selectedMembers.some((selected) => selected.userId === member.userId)\n        ) ?? [];\n\n        this.isPickerDialogVisible = true;\n      });\n  }\n\n  onMoveToSource(event: PickListMoveToSourceEvent) {\n    if (this.onMembersRemoved) {\n      this.onMembersRemoved(event.items);\n    }\n  }\n\n  onMoveToTarget(event: PickListMoveToTargetEvent) {\n    if (this.onMembersPicked) {\n      this.onMembersPicked(event.items);\n    }\n  }\n\n  onMoveAllToSource(event: PickListMoveAllToSourceEvent) {\n    if (this.onMembersRemoved) {\n      this.onMembersRemoved(event.items);\n    }\n  }\n\n  onMoveAllToTarget(event: PickListMoveAllToTargetEvent) {\n    if (this.onMembersPicked) {\n      this.onMembersPicked(event.items);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        @if (!user.pictureUrl || user.pictureUrl === null) {\n          \n        } @else {\n          \n        }\n        \n          {{ user.firstName }} {{ user.lastName }}\n          \n            {{ user.email }}\n          \n        \n      \n    \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    @if (!user.pictureUrl || user.pictureUrl === null) {                  } @else {                  }                  {{ user.firstName }} {{ user.lastName }}                      {{ user.email }}                                      '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MemberPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MembersComponent.html":{"url":"components/MembersComponent.html","title":"component - MembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/members/members.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-members\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ToastModule\n                                MembersTableComponent\n                                AccessDeniedComponent\n                            TranslateModule\n                            PanelModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./members.component.html\n            \n\n\n\n            \n                styleUrl\n                ./members.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeMembers\n                            \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                invitedMembers\n                            \n                            \n                                isLoadingMembers\n                            \n                            \n                                owner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/members/members.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/members/members.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOrganizationMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invitedMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectInvitedMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOwnerAsArray)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/members/members.component.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { PanelModule } from 'primeng/panel';\nimport { ToastModule } from 'primeng/toast';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { loadOrganizationMembers } from '../../../core/state/members/members.actions';\nimport {\n  isLoadingMembers,\n  selectOrganizationMembers,\n  selectInvitedMembers,\n  selectOwnerAsArray,\n} from '../../../core/state/members/members.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { MembersTableComponent } from '../../../shared/components/members-table/members-table.component';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'app-members',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ToastModule,\n    MembersTableComponent,\n    AccessDeniedComponent,\n    TranslateModule,\n    PanelModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './members.component.html',\n  styleUrl: './members.component.scss',\n})\nexport class MembersComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.DELETE),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.USER, Permission.CREATE),\n  );\n  isLoadingMembers = this.store.select(isLoadingMembers);\n  activeMembers = this.store\n    .select(selectOrganizationMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  invitedMembers = this.store\n    .select(selectInvitedMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  owner = this.store\n    .select(selectOwnerAsArray)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit() {\n    this.store.dispatch(loadOrganizationMembers());\n  }\n}\n\n    \n\n    \n        \n@if (hasReadPermission | async) {\n   -->\n    \n      \n    \n\n    \n      \n    \n\n    \n      \n    \n   -->\n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {   -->                                             -->} @else {  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MembersDto.html":{"url":"interfaces/MembersDto.html","title":"interface - MembersDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MembersDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/members.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            invitations\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        invitations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitations:     InvitationDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     InvitationDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         UserDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     UserDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InvitationDto } from \"./invitation.dto\";\nimport { UserDto } from \"./user.dto\";\n\nexport interface MembersDto {\n    users: UserDto[];\n    invitations: InvitationDto[];\n    owner: UserDto;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MembersEffects.html":{"url":"injectables/MembersEffects.html","title":"injectable - MembersEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MembersEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/members/members.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                inviteMember$\n                            \n                            \n                                loadActiveMembers$\n                            \n                            \n                                loadOrganizationMembers$\n                            \n                            \n                                removeMember$\n                            \n                            \n                                removeMemberSuccess$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(membersService: MembersService, invitationService: InvitationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/members/members.effects.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        membersService\n                                                  \n                                                        \n                                                                        MembersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invitationService\n                                                  \n                                                        \n                                                                        InvitationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        inviteMember$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(inviteMember),\n      switchMap((request) =>\n        this.invitationService.inviteMember(request).pipe(\n          map((invitation) => inviteMemberSuccess(invitation)),\n          catchError((error) => of(inviteMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadActiveMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadActiveMembers),\n      switchMap(() =>\n        this.membersService.getActiveMembers().pipe(\n          map((members) => loadActiveMembersSuccess({members: members})),\n          catchError((error) => of(loadActiveMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadOrganizationMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationMembers),\n      switchMap(() =>\n        this.membersService.getMembers().pipe(\n          map((members) => loadOrganizationMembersSuccess(members)),\n          catchError((error) => of(loadOrganizationMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMember),\n      switchMap((request) =>\n        this.membersService.removeMember(request.memberId).pipe(\n          map(() => removeMemberSuccess()),\n          catchError((error) => of(removeMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMemberSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMemberSuccess),\n      switchMap(\n        () => of(loadOrganizationMembers()), // Dispatch loadOrganizationMembers action after successful removal\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/members/members.effects.ts:77\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport {\n  inviteMember,\n  inviteMemberFailure,\n  inviteMemberSuccess,\n  loadActiveMembers,\n  loadActiveMembersFailure,\n  loadActiveMembersSuccess,\n  loadOrganizationMembers,\n  loadOrganizationMembersFailure,\n  loadOrganizationMembersSuccess,\n  removeMember,\n  removeMemberFailure,\n  removeMemberSuccess,\n} from './members.actions';\nimport { MembersService } from '../../services/api/members.api.service';\nimport { Injectable } from '@angular/core';\nimport { InvitationService } from '../../services/api/invitation.api.service';\n\n@Injectable()\nexport class MembersEffects {\n  constructor(\n    private membersService: MembersService,\n    private invitationService: InvitationService,\n    private actions$: Actions,\n  ) {}\n\n  loadOrganizationMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationMembers),\n      switchMap(() =>\n        this.membersService.getMembers().pipe(\n          map((members) => loadOrganizationMembersSuccess(members)),\n          catchError((error) => of(loadOrganizationMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadActiveMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadActiveMembers),\n      switchMap(() =>\n        this.membersService.getActiveMembers().pipe(\n          map((members) => loadActiveMembersSuccess({members: members})),\n          catchError((error) => of(loadActiveMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  inviteMember$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(inviteMember),\n      switchMap((request) =>\n        this.invitationService.inviteMember(request).pipe(\n          map((invitation) => inviteMemberSuccess(invitation)),\n          catchError((error) => of(inviteMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeMember$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMember),\n      switchMap((request) =>\n        this.membersService.removeMember(request.memberId).pipe(\n          map(() => removeMemberSuccess()),\n          catchError((error) => of(removeMemberFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeMemberSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeMemberSuccess),\n      switchMap(\n        () => of(loadOrganizationMembers()), // Dispatch loadOrganizationMembers action after successful removal\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MembersService.html":{"url":"injectables/MembersService.html","title":"injectable - MembersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MembersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/members.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getActiveMembers\n                            \n                            \n                                getMembers\n                            \n                            \n                                removeMember\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/members.api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveMembers\n                        \n                    \n                \n            \n            \n                \ngetActiveMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMembers\n                        \n                    \n                \n            \n            \n                \ngetMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(memberId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/members.api.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MembersDto } from '../../domain/dto/members.dto';\nimport { api } from './api';\nimport { UserDto } from '../../domain/dto/user.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MembersService {\n  constructor(private http: HttpClient) {}\n\n  getMembers(): Observable {\n    return this.http.get(api.membersUrl, api.authOptions);\n  }\n\n  getActiveMembers(): Observable {\n    return this.http.get(api.membersUrl + '/active', api.authOptions);\n  }\n\n\n  removeMember(memberId: string) {\n    return this.http.delete(api.membersUrl + '/' + memberId, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MembersState.html":{"url":"interfaces/MembersState.html","title":"interface - MembersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MembersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/members/members.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeMembers\n                                        \n                                \n                                \n                                        \n                                            activeMembersError\n                                        \n                                \n                                \n                                        \n                                            activeMembersStatus\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            invitationStatus\n                                        \n                                \n                                \n                                        \n                                            invitedMember\n                                        \n                                \n                                \n                                        \n                                            inviteMemberError\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            removeMemberError\n                                        \n                                \n                                \n                                        \n                                            removeMemberStatus\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeMembers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeMembers:         User[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        activeMembersError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeMembersError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        activeMembersStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeMembersStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitationStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitationStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invitedMember\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invitedMember:         Invitation | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Invitation | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteMemberError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inviteMemberError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         MembersDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MembersDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMemberError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMemberError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMemberStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMemberStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { MembersDto } from '../../domain/dto/members.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Invitation } from '../../domain/models/invitation.entity';\nimport {\n  inviteMember,\n  inviteMemberFailure,\n  inviteMemberSuccess,\n  loadActiveMembers,\n  loadActiveMembersFailure,\n  loadActiveMembersSuccess,\n  loadOrganizationMembers,\n  loadOrganizationMembersFailure,\n  loadOrganizationMembersSuccess,\n  removeMember,\n  removeMemberFailure,\n  removeMemberSuccess,\n} from './members.actions';\nimport { User } from '../../domain/models/user.entity';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface MembersState {\n  members: MembersDto | null;\n  activeMembers: User[] | null;\n  error: any | null;\n  inviteMemberError: any | null;\n  activeMembersError: any | null;\n  removeMemberError: any | null;\n  invitedMember: Invitation | null;\n  status: StateStatus;\n  invitationStatus: StateStatus;\n  removeMemberStatus: StateStatus;\n  activeMembersStatus: StateStatus;\n}\n\nexport const initialState: MembersState = {\n  members: null,\n  activeMembers: null,\n  error: undefined,\n  inviteMemberError: null,\n  invitedMember: null,\n  removeMemberError: null,\n  activeMembersError: null,\n  status: StateStatus.PENDING,\n  invitationStatus: StateStatus.PENDING,\n  removeMemberStatus: StateStatus.PENDING,\n  activeMembersStatus: StateStatus.PENDING,\n};\n\nexport const membersReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization members\n  on(loadOrganizationMembers, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadOrganizationMembersSuccess, (state, members) => ({\n    ...state,\n    members: members,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationMembersFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  on(inviteMember, (state) => ({\n    ...state,\n    inviteMemberError: null,\n    invitedMember: null,\n    invitationStatus: StateStatus.LOADING,\n  })),\n\n  on(inviteMemberSuccess, (state, invitedMember) => ({\n    ...state,\n    invitedMember: invitedMember,\n    members: {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-asserted-optional-chain\n      owner: state.members?.owner!,\n      invitations: [...(state.members?.invitations || []), invitedMember],\n      users: state.members?.users || [],\n    },\n    inviteMemberError: null,\n    invitationStatus: StateStatus.SUCCESS,\n  })),\n\n  on(inviteMemberFailure, (state, { error }) => ({\n    ...state,\n    inviteMemberError: error,\n    invitationStatus: StateStatus.ERROR,\n  })),\n\n  on(removeMember, (state) => ({\n    ...state,\n    removeMemberError: null,\n    removeMemberStatus: StateStatus.LOADING,\n  })),\n\n  on(removeMemberSuccess, (state) => ({\n    ...state,\n    removeMemberError: null,\n    removeMemberStatus: StateStatus.SUCCESS,\n  })),\n\n  on(removeMemberFailure, (state, { error }) => ({\n    ...state,\n    removeMemberError: error,\n    removeMemberStatus: StateStatus.ERROR,\n  })),\n\n  on(loadActiveMembers, (state) => ({\n    ...state,\n    activeMembersError: null,\n    activeMembersStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadActiveMembersSuccess, (state, { members }) => ({\n    ...state,\n    activeMembers: members,\n    activeMembersError: null,\n    activeMembersStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadActiveMembersFailure, (state, { error }) => ({\n    ...state,\n    activeMembersError: error,\n    activeMembersStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MembersTableComponent.html":{"url":"components/MembersTableComponent.html","title":"component - MembersTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MembersTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/members-table/members-table.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-members-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TableModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            InputTextModule\n                            AvatarModule\n                            DialogModule\n                            DropdownModule\n                            FormsModule\n                            ReactiveFormsModule\n                            ToastModule\n                            ConfirmDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./members-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./members-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                dt\n                            \n                            \n                                inviteNewUserForm\n                            \n                            \n                                isInviteDialogVisible\n                            \n                            \n                                isLoadingRemoveMembers\n                            \n                            \n                                isLoadingSendInvitation\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                getUserInitials\n                            \n                            \n                                removeMember\n                            \n                            \n                                    Private\n                                resetInviteForm\n                            \n                            \n                                sendInvite\n                            \n                            \n                                showInviteDialog\n                            \n                            \n                                showRemoveMemberConfirmation\n                            \n                            \n                                stringToColour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enableInviteAction\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableRemoveAction\n                            \n                            \n                                enableSorting\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, formBuilder: FormBuilder, messageService: MessageService, confirmationService: ConfirmationService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     User[] | InvitationDto[]\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:78\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:84\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableInviteAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:90\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:87\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableRemoveAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:93\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:81\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/members-table/members-table.component.ts:75\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitials\n                        \n                    \n                \n            \n            \n                \ngetUserInitials(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:222\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeMember\n                        \n                    \n                \n            \n            \n                \nremoveMember(member: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetInviteForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetInviteForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendInvite\n                        \n                    \n                \n            \n            \n                \nsendInvite()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showInviteDialog\n                        \n                    \n                \n            \n            \n                \nshowInviteDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRemoveMemberConfirmation\n                        \n                    \n                \n            \n            \n                \nshowRemoveMemberConfirmation(member: any, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                member\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/members-table/members-table.component.ts:230\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        inviteNewUserForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    role: [undefined as Role | undefined, [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInviteDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingRemoveMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingRemoveMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:103\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingSendInvitation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingSendInvitation)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectRoles)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/members-table/members-table.component.ts:95\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport { filter, take } from 'rxjs';\nimport { InvitationDto } from '../../../core/domain/dto/invitation.dto';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Role, User } from '../../../core/domain/models/user.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport {\n  inviteMember,\n  removeMember,\n} from '../../../core/state/members/members.actions';\nimport {\n  isLoadingRemoveMembers,\n  isLoadingSendInvitation,\n  selectInvitationSendStatus,\n  selectRemoveMemberStatus,\n} from '../../../core/state/members/members.selectors';\nimport { loadRoles } from '../../../core/state/role/role.actions';\nimport { selectRoles } from '../../../core/state/role/role.selectors';\n\n@Component({\n  selector: 'app-members-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TableModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    InputTextModule,\n    AvatarModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ToastModule,\n    ConfirmDialogModule,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './members-table.component.html',\n  styleUrl: './members-table.component.scss',\n})\nexport class MembersTableComponent {\n  constructor(\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private messageService: MessageService,\n    private confirmationService: ConfirmationService,\n    private translateService: TranslateService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n  @Input()\n  data?: User[] | InvitationDto[] = undefined;\n\n  @Input()\n  isLoading: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableInviteAction: boolean = false;\n\n  @Input()\n  enableRemoveAction: boolean = false;\n\n  roles = this.store.select(selectRoles);\n  inviteNewUserForm = this.formBuilder.group({\n    role: [undefined as Role | undefined, [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n  });\n  isInviteDialogVisible: boolean = false;\n\n  isLoadingSendInvitation = this.store.select(isLoadingSendInvitation);\n  isLoadingRemoveMembers = this.store.select(isLoadingRemoveMembers);\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  showInviteDialog() {\n    this.resetInviteForm();\n    this.store.dispatch(loadRoles());\n    this.isInviteDialogVisible = true;\n  }\n\n  sendInvite() {\n    this.store\n      .select(selectInvitationSendStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('members-table.error'),\n            detail: this.translateService.instant(\n              'members-table.failed_to_send_invite',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('members-table.success'),\n            detail: this.translateService.instant('members-table.invite_sent'),\n          });\n          this.isInviteDialogVisible = !this.isInviteDialogVisible;\n        }\n      });\n\n    const dto = {\n      email: this.inviteNewUserForm.get('email')?.value ?? '',\n      roleId: this.inviteNewUserForm.get('role')?.value?.roleId ?? '',\n    };\n    this.store.dispatch(inviteMember(dto));\n  }\n\n  private resetInviteForm() {\n    this.inviteNewUserForm = this.formBuilder.group({\n      role: [undefined as Role | undefined, [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  showRemoveMemberConfirmation(member: any, event: Event) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'members-table.delete_confirmation_message',\n      ),\n      header: this.translateService.instant(\n        'members-table.delete_confirmation',\n      ),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.removeMember(member);\n      },\n      reject: () => {},\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  removeMember(member: any) {\n    this.store\n      .select(selectRemoveMemberStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('members-table.error'),\n            detail: this.translateService.instant(\n              'members-table.failed_to_remove_member',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('members-table.success'),\n            detail: this.translateService.instant(\n              'members-table.removed_memeber',\n            ),\n          });\n        }\n      });\n\n    let memberId = '';\n    if (member.userId) {\n      memberId = member.userId;\n    } else if (member.invitationId) {\n      memberId = member.invitationId;\n    }\n    this.store.dispatch(removeMember({ memberId: memberId }));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getUserInitials(member: any): string | undefined {\n    if (member.lastName || member.firstName) {\n      return member.firstName?.charAt(0) + member.lastName?.charAt(0);\n    } else {\n      return member.email.charAt(0);\n    }\n  }\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n        \n      \n      \n    \n  \n  \n    \n      \n        \n          {{ \"members-table.first_name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.last_name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.email\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.role\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"members-table.avatar\" | translate }}\n        \n      \n      \n        \n          {{ \"members-table.actions\" | translate }}\n        \n      \n    \n  \n  \n    \n      \n        {{ member?.firstName }}\n      \n      \n        {{ member?.lastName }}\n      \n      \n        {{ member.email }}\n      \n      \n        {{ member.role.name }}\n      \n      \n        @if (!member.pictureUrl || member.pictureUrl === null) {\n          \n        } @else {\n          \n        }\n      \n      \n        \n      \n    \n  \n  \n    \n      {{ \"members-table.no_members_found\" | translate }}\n    \n  \n\n\n\n  \n    \n      \n        {{ \"members-table.email_label\" | translate }}\n        \n          \n          \n        \n        {{ \"members-table.email_is_required\" | translate }}\n        {{ \"members-table.invalid_email\" | translate }}\n\n        {{ \"members-table.role_label\" | translate }}\n        \n        {{ \"members-table.role_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ \"members-table.first_name\" | translate }}                                                          {{ \"members-table.last_name\" | translate }}                                                          {{ \"members-table.email\" | translate }}                                                          {{ \"members-table.role\" | translate }}                                                          {{ \"members-table.avatar\" | translate }}                                      {{ \"members-table.actions\" | translate }}                                        {{ member?.firstName }}                    {{ member?.lastName }}                    {{ member.email }}                    {{ member.role.name }}                    @if (!member.pictureUrl || member.pictureUrl === null) {                  } @else {                  }                                            {{ \"members-table.no_members_found\" | translate }}                          {{ \"members-table.email_label\" | translate }}                                            {{ \"members-table.email_is_required\" | translate }}        {{ \"members-table.invalid_email\" | translate }}        {{ \"members-table.role_label\" | translate }}                {{ \"members-table.role_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MembersTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/memory-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/memory-storage.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/memory-storage.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n//TODO: Implement better server storage alongside server temp memory storage\n@Injectable()\nexport class MemoryStorage implements Storage {\n  private data: { [key: string]: string } = {};\n\n  get length(): number {\n    return Object.keys(this.data).length;\n  }\n\n  clear(): void {\n    this.data = {};\n  }\n\n  getItem(key: string): string | null {\n    return key in this.data ? this.data[key] : null;\n  }\n\n  key(index: number): string | null {\n    const keys = Object.keys(this.data);\n\n    return index >= 0 && keys.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuChangeEvent.html":{"url":"interfaces/MenuChangeEvent.html","title":"interface - MenuChangeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuChangeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/menu-change-event.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeEvent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuChangeEvent {\n  key: string;\n  routeEvent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/menu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuSource\n                            \n                            \n                                menuSource$\n                            \n                            \n                                    Private\n                                resetSource\n                            \n                            \n                                resetSource$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMenuStateChange\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuStateChange\n                        \n                    \n                \n            \n            \n                \nonMenuStateChange(event: MenuChangeEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:40\n                        \n                    \n\n\n            \n                \n                        The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            MenuChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMenuChangeEvent is a custom event type that is triggered when\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:47\n                        \n                    \n\n\n            \n                \n                        The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:16\n                        \n                    \n\n            \n                \n                    private menuSource = new Subject(); is creating a new instance of the\nSubject class and assigning it to the menuSource variable. This Subject will be used to\nemit MenuChangeEvent objects when the onMenuStateChange() function is called in the\nMenuService. Other components or services can subscribe to the menuSource$ observable to\nreceive notifications when the onMenuStateChange() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.menuSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:27\n                        \n                    \n\n            \n                \n                    menuSource$ is creating an observable from the menuSource subject. This allows other\ncomponents or services to subscribe to the menuSource$ observable and receive notifications\nwhen the onMenuStateChange() function is called in the MenuService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:22\n                        \n                    \n\n            \n                \n                    private resetSource = new Subject(); is creating a new instance of the Subject class and\nassigning it to the resetSource variable. This Subject will be used to emit a boolean value\nof true when the reset() function is called in the MenuService. Other components or\nservices can subscribe to the resetSource$ observable to receive notifications when the\nreset() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.resetSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:31\n                        \n                    \n\n            \n                \n                    resetSource$ is creating an observable from the resetSource subject. This allows other\ncomponents or services to subscribe to the resetSource$ observable and receive notifications\nwhen the reset() function is called in the MenuService.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MenuChangeEvent } from '../domain/models/menu-change-event.model';\n\n/** The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuService {\n  /** `private menuSource = new Subject();` is creating a new instance of the\n    `Subject` class and assigning it to the `menuSource` variable. This `Subject` will be used to\n    emit `MenuChangeEvent` objects when the `onMenuStateChange()` function is called in the\n    `MenuService`. Other components or services can subscribe to the `menuSource$` observable to\n    receive notifications when the `onMenuStateChange()` function is called. */\n  private menuSource = new Subject();\n  /** `private resetSource = new Subject();` is creating a new instance of the `Subject` class and\n    assigning it to the `resetSource` variable. This `Subject` will be used to emit a boolean value\n    of `true` when the `reset()` function is called in the `MenuService`. Other components or\n    services can subscribe to the `resetSource$` observable to receive notifications when the\n    `reset()` function is called. */\n  private resetSource = new Subject();\n\n  /** `menuSource$` is creating an observable from the `menuSource` subject. This allows other\n    components or services to subscribe to the `menuSource$` observable and receive notifications\n    when the `onMenuStateChange()` function is called in the `MenuService`. */\n  menuSource$ = this.menuSource.asObservable();\n  /** `resetSource$` is creating an observable from the `resetSource` subject. This allows other\n    components or services to subscribe to the `resetSource$` observable and receive notifications\n    when the `reset()` function is called in the `MenuService`. */\n  resetSource$ = this.resetSource.asObservable();\n\n  /**\n   * The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\n   * @param {MenuChangeEvent} event - MenuChangeEvent is a custom event type that is triggered when\n   * the state of a menu changes. It contains information about the menu that triggered the event,\n   * such as its current state (open or closed) and any additional data that may be relevant to the\n   * event. In this code snippet, the event is being\n   */\n  onMenuStateChange(event: MenuChangeEvent) {\n    this.menuSource.next(event);\n  }\n\n  /**\n   * The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n   */\n  reset() {\n    this.resetSource.next(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuitemComponent.html":{"url":"components/MenuitemComponent.html","title":"component - MenuitemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuitemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/menuitem/menuitem.component.ts\n\n\n\n    \n        Description\n    \n    \n        The MenuitemComponent class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [app-menuitem]\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            TranslateModule\n                            CommonModule\n                            RippleModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./menuitem.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menuitem.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                key\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuResetSubscription\n                            \n                            \n                                menuSourceSubscription\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateActiveStateFromRoute\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                item\n                            \n                            \n                                parentKey\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.active-menuitem\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    submenuAnimation\n                                \n                                \n                                    activeClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, cd: ChangeDetectorRef, router: Router, menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                            \n                        \n\n                \n                    \n                            This is a constructor function that subscribes to menu and router events to update the active\nstate of a menu item based on the current route.\nused to manage the layout of the application.\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\nAngular. It is used to handle navigation and routing within the application.\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe \"cd\" parameter is an instance of the ChangeDetectorRef class,\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe router parameter is an instance of the Router service provided by\nAngular. It is used to handle navigation and routing within the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the MenuService\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:69\n                            \n                        \n                \n                    \n                        @Input() index!: number; is defining an input property called index of type number. The !\nsymbol after the index variable indicates that it is non-null and initialized in the constructor\nor ngOnInit method. This input property is used to pass the index of the current menu item to the\nMenuitemComponent class. The index is used to construct the unique identifier of the menu item\nand to determine the order of the menu items in the menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:62\n                            \n                        \n                \n                    \n                        @Input() item: any; is defining an input property called item of type any. This input\nproperty is used to pass a menu item object to the MenuitemComponent class. The item object\ncontains information about the menu item, such as its label, icon, command, and sub-items. By\ndefining this input property, the MenuitemComponent class can receive the item object from its\nparent component and use it to render the menu item in the application menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parentKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:83\n                            \n                        \n                \n                    \n                        @Input() parentKey!: string; is declaring an input property called parentKey of type string.\nThis input property is used to pass the unique identifier of the parent menu item to the child\nmenu items. If a menu item has a parent, its key property is set to a value that includes the\nparent key and the index of the item, separated by a hyphen. This allows the MenuitemComponent\nclass to uniquely identify each menu item in the application menu. The parentKey input property\nis used to pass the parent key to the child menu items so that they can construct their own unique\nidentifiers based on the parent key and their own index.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:74\n                            \n                        \n                \n                    \n                        The @Input() @HostBinding('class.layout-root-menuitem') root!: boolean; decorator is defining an\ninput property called root of type boolean and also binding the class.layout-root-menuitem\nCSS class to the host element of the component.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.active-menuitem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemClick\n                        \n                    \n                \n            \n            \n                \nitemClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:209\n                        \n                    \n\n\n            \n                \n                        This function handles the click event on a menu item, executing its command and toggling its\nactive state if it has sub-items.\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event parameter is an object that represents the event that triggered\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                If the item is disabled, the function will return without executing any further code. If\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:241\n                        \n                    \n\n\n            \n                \n                        The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:171\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets the key and updates the active state from the route if the item has a\nrouterLink.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateActiveStateFromRoute\n                        \n                    \n                \n            \n            \n                \nupdateActiveStateFromRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:185\n                        \n                    \n\n\n            \n                \n                        This function updates the active state of a menu item based on the current route in a TypeScript\napplication.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:89\n                        \n                    \n\n            \n                \n                    active = false; is initializing the active property of the MenuitemComponent class to\nfalse. This property is used to track whether or not a menu item is currently active (i.e.\nselected or expanded). By default, when a new instance of the MenuitemComponent class is\ncreated, no menu item is active, so the active property is set to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                        \n                    \n\n            \n                \n                    key: string = \"\"; is declaring a property called key with an initial value of an empty string.\nThis property is used to uniquely identify each menu item in the application menu. It is set to a\nvalue that includes the parent key and the index of the item, separated by a hyphen, if the item\nhas a parent. Otherwise, it is set to the index of the item as a string. This property is used to\nupdate the active state of a menu item based on the current route and to toggle the active state\nof a menu item if it has sub-items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:129\n                        \n                    \n\n            \n                \n                    - An instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuResetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:103\n                        \n                    \n\n            \n                \n                    menuResetSubscription: Subscription; is declaring a property called menuResetSubscription of\ntype Subscription. This property is used to store a subscription to the resetSource$\nobservable of the MenuService class. This subscription is used to reset the active state of a\nmenu item when the menu is closed or reset. The unsubscribe() method is called on this\nsubscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSourceSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:96\n                        \n                    \n\n            \n                \n                    menuSourceSubscription: Subscription; is declaring a property called menuSourceSubscription of\ntype Subscription. This property is used to store a subscription to the menuSource$ observable\nof the MenuService class. This subscription is used to update the active state of a menu item\nbased on events emitted by the menuSource$ observable. The unsubscribe() method is called on\nthis subscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:131\n                        \n                    \n\n            \n                \n                    - The `router` parameter is an instance of the `Router` service provided by\nAngular. It is used to handle navigation and routing within the application.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        submenuAnimation\n                    \n                \n\n                \n                    \n                        getsubmenuAnimation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:229\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        activeClass\n                    \n                \n\n                \n                    \n                        getactiveClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RippleModule } from 'primeng/ripple';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\n\n/** The `MenuitemComponent` class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route. */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[app-menuitem]',\n  templateUrl: './menuitem.component.html',\n  styleUrls: ['./menuitem.component.scss'],\n  standalone: true,\n  imports: [TranslateModule, CommonModule, RippleModule, RouterModule],\n  animations: [\n    trigger('children', [\n      state(\n        'collapsed',\n        style({\n          height: '0',\n        }),\n      ),\n      state(\n        'expanded',\n        style({\n          height: '*',\n        }),\n      ),\n      transition(\n        'collapsed  expanded',\n        animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'),\n      ),\n    ]),\n  ],\n})\nexport class MenuitemComponent implements OnInit, OnDestroy {\n  /** `@Input() item: any;` is defining an input property called `item` of type `any`. This input\n  property is used to pass a menu item object to the `MenuitemComponent` class. The `item` object\n  contains information about the menu item, such as its label, icon, command, and sub-items. By\n  defining this input property, the `MenuitemComponent` class can receive the `item` object from its\n  parent component and use it to render the menu item in the application menu. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Input() item: any;\n\n  /** `@Input() index!: number;` is defining an input property called `index` of type `number`. The `!`\n  symbol after the `index` variable indicates that it is non-null and initialized in the constructor\n  or ngOnInit method. This input property is used to pass the index of the current menu item to the\n  `MenuitemComponent` class. The index is used to construct the unique identifier of the menu item\n  and to determine the order of the menu items in the menu. */\n  @Input() index!: number;\n\n  /** The `@Input() @HostBinding('class.layout-root-menuitem') root!: boolean;` decorator is defining an\n  input property called `root` of type `boolean` and also binding the `class.layout-root-menuitem`\n  CSS class to the host element of the component. */\n  @Input() @HostBinding('class.layout-root-menuitem') root!: boolean;\n\n  /** `@Input() parentKey!: string;` is declaring an input property called `parentKey` of type `string`.\n  This input property is used to pass the unique identifier of the parent menu item to the child\n  menu items. If a menu item has a parent, its `key` property is set to a value that includes the\n  parent key and the index of the item, separated by a hyphen. This allows the `MenuitemComponent`\n  class to uniquely identify each menu item in the application menu. The `parentKey` input property\n  is used to pass the parent key to the child menu items so that they can construct their own unique\n  identifiers based on the parent key and their own index. */\n  @Input() parentKey!: string;\n\n  /** `active = false;` is initializing the `active` property of the `MenuitemComponent` class to\n  `false`. This property is used to track whether or not a menu item is currently active (i.e.\n  selected or expanded). By default, when a new instance of the `MenuitemComponent` class is\n  created, no menu item is active, so the `active` property is set to `false`. */\n  active = false;\n\n  /** `menuSourceSubscription: Subscription;` is declaring a property called `menuSourceSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `menuSource$` observable\n  of the `MenuService` class. This subscription is used to update the active state of a menu item\n  based on events emitted by the `menuSource$` observable. The `unsubscribe()` method is called on\n  this subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuSourceSubscription: Subscription;\n\n  /** `menuResetSubscription: Subscription;` is declaring a property called `menuResetSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `resetSource$`\n  observable of the `MenuService` class. This subscription is used to reset the active state of a\n  menu item when the menu is closed or reset. The `unsubscribe()` method is called on this\n  subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuResetSubscription: Subscription;\n\n  /** `key: string = \"\";` is declaring a property called `key` with an initial value of an empty string.\n  This property is used to uniquely identify each menu item in the application menu. It is set to a\n  value that includes the parent key and the index of the item, separated by a hyphen, if the item\n  has a parent. Otherwise, it is set to the index of the item as a string. This property is used to\n  update the active state of a menu item based on the current route and to toggle the active state\n  of a menu item if it has sub-items. */\n  key: string = '';\n\n  /**\n   * This is a constructor function that subscribes to menu and router events to update the active\n   * state of a menu item based on the current route.\n   * @param {LayoutService} layoutService - An instance of the LayoutService class, which is likely\n   * used to manage the layout of the application.\n   * @param {ChangeDetectorRef} cd - The \"cd\" parameter is an instance of the ChangeDetectorRef class,\n   * which is used to manually trigger change detection in Angular. It is typically used when making\n   * changes to the component's state that may not be detected by Angular's default change detection\n   * mechanism.\n   * @param {Router} router - The `router` parameter is an instance of the `Router` service provided by\n   * Angular. It is used to handle navigation and routing within the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the `MenuService`\n   * class, which is used to manage the application menu. It is injected into the constructor using\n   * Angular's dependency injection mechanism.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    private cd: ChangeDetectorRef,\n    public router: Router,\n    private menuService: MenuService,\n  ) {\n    this.menuSourceSubscription = this.menuService.menuSource$.subscribe(\n      (value) => {\n        Promise.resolve(null).then(() => {\n          if (value.routeEvent) {\n            this.active =\n              value.key === this.key || value.key.startsWith(this.key + '-')\n                ? true\n                : false;\n          } else {\n            if (\n              value.key !== this.key &&\n              !value.key.startsWith(this.key + '-')\n            ) {\n              this.active = false;\n            }\n          }\n        });\n      },\n    );\n\n    this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\n      this.active = false;\n    });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        if (this.item.routerLink) {\n          this.updateActiveStateFromRoute();\n        }\n      });\n  }\n\n  /**\n   * The ngOnInit function sets the key and updates the active state from the route if the item has a\n   * routerLink.\n   */\n  ngOnInit() {\n    this.key = this.parentKey\n      ? this.parentKey + '-' + this.index\n      : String(this.index);\n\n    if (this.item.routerLink) {\n      this.updateActiveStateFromRoute();\n    }\n  }\n\n  /**\n   * This function updates the active state of a menu item based on the current route in a TypeScript\n   * application.\n   */\n  updateActiveStateFromRoute() {\n    const activeRoute = this.router.isActive(this.item.routerLink[0], {\n      paths: 'exact',\n      queryParams: 'ignored',\n      matrixParams: 'ignored',\n      fragment: 'ignored',\n    });\n\n    if (activeRoute) {\n      this.menuService.onMenuStateChange({ key: this.key, routeEvent: true });\n    }\n  }\n\n  /**\n   * This function handles the click event on a menu item, executing its command and toggling its\n   * active state if it has sub-items.\n   * @param {Event} event - The event parameter is an object that represents the event that triggered\n   * the itemClick function. It contains information such as the type of event (e.g. click, hover), the\n   * target element that triggered the event, and any additional data related to the event.\n   * @returns If the item is disabled, the function will return without executing any further code. If\n   * the item is not disabled, the function will execute the command associated with the item (if there\n   * is one), toggle the active state if the item has sub-items, and call the `onMenuStateChange`\n   * method of the `menuService`. However, the function does not explicitly return any value.\n   */\n  itemClick(event: Event) {\n    // avoid processing disabled items\n    if (this.item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    // execute command\n    if (this.item.command) {\n      this.item.command({ originalEvent: event, item: this.item });\n    }\n\n    // toggle active state\n    if (this.item.items) {\n      this.active = !this.active;\n    }\n\n    this.menuService.onMenuStateChange({ key: this.key });\n  }\n\n  get submenuAnimation() {\n    return this.root ? 'expanded' : this.active ? 'expanded' : 'collapsed';\n  }\n\n  @HostBinding('class.active-menuitem')\n  get activeClass() {\n    return this.active && !this.root;\n  }\n\n  /**\n   * The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n   */\n  ngOnDestroy() {\n    if (this.menuSourceSubscription) {\n      this.menuSourceSubscription.unsubscribe();\n    }\n\n    if (this.menuResetSubscription) {\n      this.menuResetSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ item.label | translate }}\n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menuitem.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ item.label | translate }}            {{ item.label | translate }}                {{ item.label | translate }}                        '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuitemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessagesComponent.html":{"url":"components/MessagesComponent.html","title":"component - MessagesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessagesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/messages/messages.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-messages\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./messages.component.html\n            \n\n\n\n            \n                styleUrl\n                ./messages.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  standalone: true,\n  imports: [],\n  templateUrl: './messages.component.html',\n  styleUrl: './messages.component.scss'\n})\nexport class MessagesComponent {\n\n}\n\n    \n\n    \n        messages works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'messages works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MessagesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            RouterModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\n\n@Component({\n  selector: 'app-not-found',\n  standalone: true,\n  imports: [CommonModule, ButtonModule, RippleModule, RouterModule, TranslateModule],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.scss'\n})\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        404\n        \n          {{ \"not-found.not_found\" | translate }}\n        \n        \n          {{ \"not-found.not_available\" | translate }}\n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        404                  {{ \"not-found.not_found\" | translate }}                          {{ \"not-found.not_available\" | translate }}                            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/notifications/notifications.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-notifications\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n            \n                styleUrl\n                ./notifications.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-notifications',\n  standalone: true,\n  imports: [],\n  templateUrl: './notifications.component.html',\n  styleUrl: './notifications.component.scss'\n})\nexport class NotificationsComponent {\n\n}\n\n    \n\n    \n        notifications works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'notifications works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Organization.html":{"url":"interfaces/Organization.html","title":"interface - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/organization.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organizationId\n                                        \n                                \n                                \n                                        \n                                            pictureUrl\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Organization {\n  organizationId: string;\n  pictureUrl: string;\n  slug: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OrganizationComponent.html":{"url":"components/OrganizationComponent.html","title":"component - OrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/organization/organization.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-organization\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            PanelModule\n                            TranslateModule\n                            DividerModule\n                            BadgeModule\n                            InputTextModule\n                            ButtonModule\n                            RippleModule\n                            InputNumberModule\n                            FormsModule\n                            AvatarModule\n                            FileUploadModule\n                            ToastModule\n                            ProgressSpinnerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./organization.component.html\n            \n\n\n\n            \n                styleUrl\n                ./organization.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                archivePeriod\n                            \n                            \n                                cleanupPeriod\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasUpdatePermission\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                isUploadInProgress\n                            \n                            \n                                organization\n                            \n                            \n                                    \n                                primeFileUpload\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                deleteOrganization\n                            \n                            \n                                getOrganizationInitials\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                stringToColour\n                            \n                            \n                                toSlugValue\n                            \n                            \n                                updateOrganizationNameAndSlug\n                            \n                            \n                                uploadNewAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, organizationService: OrganizationService, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/organization/organization.component.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteOrganization\n                        \n                    \n                \n            \n            \n                \ndeleteOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganizationInitials\n                        \n                    \n                \n            \n            \n                \ngetOrganizationInitials(organization: Organization | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organization\n                                            \n                                                            Organization | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrganizationNameAndSlug\n                        \n                    \n                \n            \n            \n                \nupdateOrganizationNameAndSlug(name: string, slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:182\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadNewAvatar\n                        \n                    \n                \n            \n            \n                \nuploadNewAvatar($event: FileUploadHandlerEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/organization/organization.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        FileUploadHandlerEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        archivePeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cleanupPeriod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 90\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUpdatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.UPDATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUploadInProgress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isUpdateOrganizationPictureLoading)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        primeFileUpload\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileUpload\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('fileUpload')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/organization/organization.component.ts:75\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { DividerModule } from 'primeng/divider';\nimport {\n  FileUpload,\n  FileUploadHandlerEvent,\n  FileUploadModule\n} from 'primeng/fileupload';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PanelModule } from 'primeng/panel';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Organization } from '../../../core/domain/models/organization.entity';\nimport { OrganizationService } from '../../../core/services/api/organization.api.service';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { updateOrganizationPicture } from '../../../core/state/organization/organization.actions';\nimport {\n  isUpdateOrganizationPictureLoading,\n  selectCurrentOrganization,\n  selectUpdateOrganizationPictureStatus,\n} from '../../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-organization',\n  standalone: true,\n  imports: [\n    CommonModule,\n    PanelModule,\n    TranslateModule,\n    DividerModule,\n    BadgeModule,\n    InputTextModule,\n    ButtonModule,\n    RippleModule,\n    InputNumberModule,\n    FormsModule,\n    AvatarModule,\n    FileUploadModule,\n    ToastModule,\n    ProgressSpinnerModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './organization.component.html',\n  styleUrl: './organization.component.scss',\n})\nexport class OrganizationComponent implements OnDestroy, AfterViewInit {\n  @ViewChild('slug') slugInput!: ElementRef;\n  @ViewChild('fileUpload') primeFileUpload!: FileUpload;\n\n  constructor(\n    private store: Store,\n    private organizationService: OrganizationService,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  organization = this.store.select(selectCurrentOrganization);\n  hasUpdatePermission = this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.UPDATE),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.ORGANIZATION, Permission.DELETE),\n  );\n  isSlugTaken: boolean | null = null;\n  archivePeriod: number = 30;\n  cleanupPeriod: number = 90;\n  isUploadInProgress = this.store.select(isUpdateOrganizationPictureLoading);\n\n  private slugCheckSubscription?: Subscription;\n\n  ngAfterViewInit() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.slugInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkSlug(data));\n  }\n\n  ngOnDestroy(): void {\n    this.slugCheckSubscription?.unsubscribe();\n  }\n\n  deleteOrganization() {\n    throw new Error('Method not implemented.');\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  getOrganizationInitials(organization: Organization | null): string {\n    if (organization == null) {\n      return 'NA';\n    } else {\n      let result = '';\n      organization.slug.split('-').forEach((value) => {\n        result += value.charAt(0);\n      });\n      return result;\n    }\n  }\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n\n  uploadNewAvatar($event: FileUploadHandlerEvent) {\n    if ($event.files.length > 0) {\n      const file = $event.files[0];\n      this.primeFileUpload.uploading = true;\n      this.primeFileUpload.progress = 0;\n      this.store.dispatch(updateOrganizationPicture({ file: file }));\n      this.store\n        .select(selectUpdateOrganizationPictureStatus)\n        .pipe(\n          filter(\n            (status) =>\n              status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n          ),\n          take(1), // unsubscribe after one emitted value\n        )\n        .subscribe((status) => {\n          if (status && status == StateStatus.ERROR) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant('organization.error'),\n              detail: this.translateService.instant(\n                'organization.failed_to_upload_picture',\n              ),\n            });\n          } else {\n            this.primeFileUpload.clear();\n          }\n          this.primeFileUpload.uploading = false;\n          this.primeFileUpload.progress = 100;\n        });\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  updateOrganizationNameAndSlug(name: string, slug: string) {\n    throw new Error('Method not implemented.');\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.organizationService\n      .isSlugTaken(slug)\n      .subscribe({\n        next: (result) => {\n          this.isSlugTaken = result;\n        },\n        error: () => {\n          this.isSlugTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    \n      \n        {{ \"organization.id\" | translate }}\n      \n      {{ \"organization.id_description\" | translate }}\n    \n    \n      \n    \n  \n  \n  \n    \n      \n        {{ \"organization.slug\" | translate }}\n      \n      {{ \"organization.slug_description\" | translate }}\n    \n    \n      \n        @if (!isSlugTaken) {\n          \n        } @else {\n          \n        }\n        \n      \n    \n  \n  \n  \n    \n      \n        {{ \"organization.name\" | translate }}\n      \n      {{ \"organization.name_description\" | translate }}\n    \n    \n      \n    \n  \n  \n  \n    \n      {{ \"organization.avatar\" | translate }}\n    \n    \n      @if (\n        !(organization | async)?.pictureUrl ||\n        (organization | async)?.pictureUrl === null\n      ) {\n        \n      } @else {\n        \n      }\n\n      \n      \n    \n  \n\n\n\n  \n    \n      \n        {{ \"organization.archive_period\" | translate }}\n      \n      {{ \"organization.archive_period_description\" | translate }}\n    \n    \n      \n      \n    \n  \n  \n  \n    \n      \n        {{ \"organization.cleanup_period\" | translate }}\n      \n      {{ \"organization.cleanup_period_description\" | translate }}\n    \n    \n      \n      \n    \n  \n\n\n\n  \n    \n      \n        {{ \"organization.delete\" | translate }}\n      \n      {{ \"organization.delete_description\" | translate }}\n    \n    \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ \"organization.id\" | translate }}            {{ \"organization.id_description\" | translate }}                                          {{ \"organization.slug\" | translate }}            {{ \"organization.slug_description\" | translate }}                      @if (!isSlugTaken) {                  } @else {                  }                                          {{ \"organization.name\" | translate }}            {{ \"organization.name_description\" | translate }}                                  {{ \"organization.avatar\" | translate }}              @if (        !(organization | async)?.pictureUrl ||        (organization | async)?.pictureUrl === null      ) {              } @else {              }                                      {{ \"organization.archive_period\" | translate }}            {{ \"organization.archive_period_description\" | translate }}                                                {{ \"organization.cleanup_period\" | translate }}            {{ \"organization.cleanup_period_description\" | translate }}                                              {{ \"organization.delete\" | translate }}            {{ \"organization.delete_description\" | translate }}                    '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationDto.html":{"url":"interfaces/OrganizationDto.html","title":"interface - OrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/organization.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organizationId\n                                        \n                                \n                                \n                                        \n                                            pictureUrl\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrganizationDto {\n  organizationId: string;\n  pictureUrl: string;\n  slug: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationEffects.html":{"url":"injectables/OrganizationEffects.html","title":"injectable - OrganizationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/organization/organization.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewOrganization$\n                            \n                            \n                                loadCurrentOrganization$\n                            \n                            \n                                updateOrganizationPicture$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/organization/organization.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewOrganization$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createOrganization),\n      switchMap((request) =>\n        this.organizationService.createOrganization(request).pipe(\n          map((organization) => createOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentOrganization$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentOrganization),\n      switchMap(() =>\n        this.organizationService.getOrganization().pipe(\n          map((organization) => loadCurrentOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrganizationPicture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateOrganizationPicture),\n      switchMap((request) =>\n        this.organizationService.updateOrganizationPicture(request.file).pipe(\n          map((result) => updateOrganizationPictureSuccess(result)),\n          catchError((error) => of(updateOrganizationPictureFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:38\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { OrganizationService } from \"../../services/api/organization.api.service\";\nimport { createOrganization, createOrganizationSuccess, loadCurrentOrganization, loadCurrentOrganizationFailure, loadCurrentOrganizationSuccess, updateOrganizationPicture, updateOrganizationPictureFailure, updateOrganizationPictureSuccess } from \"./organization.actions\";\nimport { catchError, map, of, switchMap } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class OrganizationEffects {\n  constructor(\n    private organizationService: OrganizationService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentOrganization$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentOrganization),\n      switchMap(() =>\n        this.organizationService.getOrganization().pipe(\n          map((organization) => loadCurrentOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createNewOrganization$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createOrganization),\n      switchMap((request) =>\n        this.organizationService.createOrganization(request).pipe(\n          map((organization) => createOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  updateOrganizationPicture$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateOrganizationPicture),\n      switchMap((request) =>\n        this.organizationService.updateOrganizationPicture(request.file).pipe(\n          map((result) => updateOrganizationPictureSuccess(result)),\n          catchError((error) => of(updateOrganizationPictureFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/organization.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganization\n                            \n                            \n                                getOrganization\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                updateOrganizationPicture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/organization.api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization(dto: CreateOrganizationRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateOrganizationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganization\n                        \n                    \n                \n            \n            \n                \ngetOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n            \n                \nisSlugTaken(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrganizationPicture\n                        \n                    \n                \n            \n            \n                \nupdateOrganizationPicture(picture: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CreateOrganizationRequestDto } from '../../domain/dto/requests/create-organization-request.dto';\nimport { OrganizationDto } from '../../domain/dto/organization.dto';\nimport { api } from './api';\nimport { FileDto } from '../../domain/dto/file.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationService {\n  constructor(private http: HttpClient) {}\n\n  createOrganization(\n    dto: CreateOrganizationRequestDto,\n  ): Observable {\n    return this.http.post(\n      api.organizationUrl,\n      dto,\n      api.authOptions,\n    );\n  }\n\n  getOrganization(): Observable {\n    return this.http.get(api.organizationUrl, api.authOptions);\n  }\n\n  isSlugTaken(slug: string): Observable {\n    return this.http.get(\n      api.organizationUrl + '/slug/taken?slug=' + slug,\n      api.authOptions,\n    );\n  }\n\n  updateOrganizationPicture(picture: File): Observable {\n    const data = new FormData();\n    data.append('picture', picture);\n    return this.http.patch(\n      api.organizationUrl + '/update-picture',\n      data,\n      api.authOptionsAutoContentType,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationState.html":{"url":"interfaces/OrganizationState.html","title":"interface - OrganizationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganizationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/organization/organization.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            organization\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            updatePictureError\n                                        \n                                \n                                \n                                        \n                                            updatePictureStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organization:         Organization | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Organization | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatePictureError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatePictureError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatePictureStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatePictureStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Organization } from '../../domain/models/organization.entity';\nimport {\n  createOrganization,\n  createOrganizationFailure,\n  createOrganizationSuccess,\n  loadCurrentOrganization,\n  loadCurrentOrganizationFailure,\n  loadCurrentOrganizationSuccess,\n  updateOrganizationPicture,\n  updateOrganizationPictureFailure,\n  updateOrganizationPictureSuccess,\n} from './organization.actions';\n\nexport interface OrganizationState {\n  organization: Organization | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  updatePictureError: any | null;\n  status: StateStatus;\n  updatePictureStatus: StateStatus;\n}\n\nexport const initialState: OrganizationState = {\n  organization: null,\n  error: undefined,\n  status: StateStatus.PENDING,\n  updatePictureError: undefined,\n  updatePictureStatus: StateStatus.PENDING\n};\n\nexport const organizationReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization\n  on(loadCurrentOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadCurrentOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadCurrentOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle create new organization\n  on(createOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle create new organization success\n  on(createOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new organization failure\n  on(createOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle update organization picture\n  on(updateOrganizationPicture, (state) => ({\n    ...state,\n    updatePictureError: null,\n    updatePictureStatus: StateStatus.LOADING,\n  })),\n\n  //Handle update organization picture success\n  on(updateOrganizationPictureSuccess, (state, fileDto) => ({\n    ...state,\n    organization: {...state.organization!, pictureUrl: fileDto.url},\n    updatePictureError: null,\n    updatePictureStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handleupdate organization picture failure\n  on(updateOrganizationPictureFailure, (state, { error }) => ({\n    ...state,\n    updatePictureError: error,\n    updatePictureStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Platform.html":{"url":"interfaces/Platform.html","title":"interface - Platform","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Platform\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/platform.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            iconUrl\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         PlatformType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformType } from \"./enums/platform-type.enum\";\n\nexport interface Platform {\n    platformId: string;\n    type: PlatformType;\n    version: string;\n    iconUrl: string | null;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlatformDto.html":{"url":"interfaces/PlatformDto.html","title":"interface - PlatformDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlatformDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/platform.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            iconUrl\n                                        \n                                \n                                \n                                        \n                                            platformId\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platformId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platformId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         PlatformType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformType } from \"../models/enums/platform-type.enum\";\n\nexport interface PlatformDto {\n  platformId: string;\n  type: PlatformType;\n  version: string;\n  iconUrl: string | null;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformEffects.html":{"url":"injectables/PlatformEffects.html","title":"injectable - PlatformEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlatformEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/platform/platform.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadPlatforms$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformService: PlatformService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/platform/platform.effects.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformService\n                                                  \n                                                        \n                                                                        PlatformService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadPlatforms$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadPlatforms),\n      switchMap(() =>\n        this.platformService.getPlatforms().pipe(\n          map((result) => loadPlatformsSuccess({ platforms: result })),\n          catchError((error) => of(loadPlatformsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/platform/platform.effects.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport { PlatformService } from '../../services/api/platform.api.service';\nimport {\n  loadPlatforms,\n  loadPlatformsFailure,\n  loadPlatformsSuccess,\n} from './platform.actions';\n\n@Injectable()\nexport class PlatformEffects {\n  constructor(\n    private platformService: PlatformService,\n    private actions$: Actions,\n  ) {}\n\n  loadPlatforms$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadPlatforms),\n      switchMap(() =>\n        this.platformService.getPlatforms().pipe(\n          map((result) => loadPlatformsSuccess({ platforms: result })),\n          catchError((error) => of(loadPlatformsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlatformService.html":{"url":"injectables/PlatformService.html","title":"injectable - PlatformService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlatformService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/platform.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPlatforms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/platform.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPlatforms\n                        \n                    \n                \n            \n            \n                \ngetPlatforms()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/platform.api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PlatformDto } from '../../domain/dto/platform.dto';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PlatformService {\n  constructor(private http: HttpClient) {}\n\n  getPlatforms(): Observable {\n    return this.http.get(api.platformUrl, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlatformState.html":{"url":"interfaces/PlatformState.html","title":"interface - PlatformState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlatformState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/platform/platform.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            platforms\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platforms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platforms:         Platform[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Platform[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Platform } from '../../domain/models/platform.entity';\nimport {\n  loadPlatforms,\n  loadPlatformsFailure,\n  loadPlatformsSuccess,\n} from './platform.actions';\n\nexport interface PlatformState {\n  platforms: Platform[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  status: StateStatus;\n}\n\nexport const initialState: PlatformState = {\n  platforms: null,\n  error: undefined,\n  status: StateStatus.PENDING,\n};\n\nexport const platformReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization members\n  on(loadPlatforms, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadPlatformsSuccess, (state, params) => ({\n    ...state,\n    platforms: params.platforms,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadPlatformsFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/project.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         Platform\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Platform\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Platform } from \"./platform.entity\"\n\nexport interface Project {\n    projectId: string,\n    name: string,\n    platform: Platform\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectDetailsComponent.html":{"url":"components/ProjectDetailsComponent.html","title":"component - ProjectDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/project-details/project-details.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-details\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./project-details.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-details.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-project-details',\n  standalone: true,\n  imports: [],\n  templateUrl: './project-details.component.html',\n  styleUrl: './project-details.component.scss'\n})\nexport class ProjectDetailsComponent {\n\n}\n\n    \n\n    \n        project-details works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'project-details works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectDto.html":{"url":"interfaces/ProjectDto.html","title":"interface - ProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         PlatformDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformDto } from \"./platform.dto\";\n\nexport interface ProjectDto {\n    projectId: string,\n    name: string,\n    platform: PlatformDto\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectEffects.html":{"url":"injectables/ProjectEffects.html","title":"injectable - ProjectEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/project/project.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createProject$\n                            \n                            \n                                loadAllProjects$\n                            \n                            \n                                loadMyProjects$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/project/project.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createProject$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createProject),\n      switchMap((request) =>\n        this.projectService.createProject(request).pipe(\n          map((project) => createProjectSuccess(project)),\n          catchError((error) => of(createProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAllProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadAllProjects),\n      switchMap(() =>\n        this.projectService.getAllProjects().pipe(\n          map((projects) => loadAllProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadAllProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMyProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyProjects),\n      switchMap((request) =>\n        this.projectService.getMyProjects(request.teamIds).pipe(\n          map((projects) => loadMyProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadMyProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/project/project.effects.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { ProjectService } from \"../../services/api/project.api.service\";\nimport { createProject, createProjectFailure, createProjectSuccess, loadAllProjects, loadAllProjectsFailure, loadAllProjectsSuccess, loadMyProjects, loadMyProjectsFailure, loadMyProjectsSuccess } from \"./project.actions\";\nimport { Injectable } from \"@angular/core\";\nimport { switchMap, map, catchError, of } from \"rxjs\";\n\n@Injectable()\nexport class ProjectEffects {\n  constructor(\n    private projectService: ProjectService,\n    private actions$: Actions,\n  ) {}\n\n  loadAllProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadAllProjects),\n      switchMap(() =>\n        this.projectService.getAllProjects().pipe(\n          map((projects) => loadAllProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadAllProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadMyProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyProjects),\n      switchMap((request) =>\n        this.projectService.getMyProjects(request.teamIds).pipe(\n          map((projects) => loadMyProjectsSuccess({projects: projects})),\n          catchError((error) => of(loadMyProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n\n  createProject$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createProject),\n      switchMap((request) =>\n        this.projectService.createProject(request).pipe(\n          map((project) => createProjectSuccess(project)),\n          catchError((error) => of(createProjectFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectHourByHourStatDto.html":{"url":"interfaces/ProjectHourByHourStatDto.html","title":"interface - ProjectHourByHourStatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectHourByHourStatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-hour-by-hour-stat.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            crashFreeGain\n                                        \n                                \n                                \n                                        \n                                            crashFreePercentage\n                                        \n                                \n                                \n                                        \n                                            endInterval\n                                        \n                                \n                                \n                                        \n                                            errors\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            numberOfCrashFreeSessions\n                                        \n                                \n                                \n                                        \n                                            numberOfSessions\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            startInterval\n                                        \n                                \n                                \n                                        \n                                            transactions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        crashFreeGain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFreeGain:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crashFreePercentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFreePercentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endInterval\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endInterval:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errors:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfCrashFreeSessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfCrashFreeSessions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        numberOfSessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        numberOfSessions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startInterval\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startInterval:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transactions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectHourByHourStatDto {\n  id: string;\n  name: string;\n  projectId: string;\n  startInterval: Date;\n  endInterval: Date;\n  numberOfSessions: number;\n  numberOfCrashFreeSessions: number;\n  crashFreePercentage: number;\n  crashFreeGain: number;\n  errors: number;\n  transactions: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectPickerComponent.html":{"url":"components/ProjectPickerComponent.html","title":"component - ProjectPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/project-picker/project-picker.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-picker\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            TranslateModule\n                            DialogModule\n                            PickListModule\n                            AvatarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./project-picker.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-picker.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                availableProjects\n                            \n                            \n                                isLoadingProjects\n                            \n                            \n                                isPickerDialogVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMoveAllToSource\n                            \n                            \n                                onMoveAllToTarget\n                            \n                            \n                                onMoveToSource\n                            \n                            \n                                onMoveToTarget\n                            \n                            \n                                showPickerDialog\n                            \n                            \n                                stringToColour\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                onProjectsPicked\n                            \n                            \n                                onProjectsRemoved\n                            \n                            \n                                selectedProjects\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/project-picker/project-picker.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        onProjectsPicked\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/project-picker/project-picker.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onProjectsRemoved\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/project-picker/project-picker.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedProjects\n                    \n                \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/project-picker/project-picker.component.ts:47\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToSource\n                        \n                    \n                \n            \n            \n                \nonMoveAllToSource(event: PickListMoveAllToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveAllToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveAllToTarget(event: PickListMoveAllToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveAllToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToSource\n                        \n                    \n                \n            \n            \n                \nonMoveToSource(event: PickListMoveToSourceEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToSourceEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMoveToTarget\n                        \n                    \n                \n            \n            \n                \nonMoveToTarget(event: PickListMoveToTargetEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        PickListMoveToTargetEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPickerDialog\n                        \n                    \n                \n            \n            \n                \nshowPickerDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stringToColour\n                        \n                    \n                \n            \n            \n                \nstringToColour(str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/project-picker/project-picker.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        availableProjects\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/project-picker/project-picker.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAllProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/project-picker/project-picker.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPickerDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/project-picker/project-picker.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport {\n  PickListModule,\n  PickListMoveAllToSourceEvent,\n  PickListMoveAllToTargetEvent,\n  PickListMoveToSourceEvent,\n  PickListMoveToTargetEvent,\n} from 'primeng/picklist';\nimport { RippleModule } from 'primeng/ripple';\nimport { filter, take } from 'rxjs';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport { AppState } from '../../../core/state/app.state';\nimport { loadAllProjects } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingAllProjects,\n  selectAllProjects,\n} from '../../../core/state/project/project.selectors';\n\n@Component({\n  selector: 'app-project-picker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    TranslateModule,\n    DialogModule,\n    PickListModule,\n    AvatarModule,\n  ],\n  templateUrl: './project-picker.component.html',\n  styleUrl: './project-picker.component.scss',\n})\nexport class ProjectPickerComponent {\n  constructor(private store: Store) {}\n  isLoadingProjects = this.store.select(isLoadingAllProjects);\n  availableProjects: Project[] = [];\n  isPickerDialogVisible = false;\n\n  @Input()\n  selectedProjects: Project[] = [];\n\n  @Input()\n  onProjectsPicked?: (projects: Project[]) => void;\n\n  @Input()\n  onProjectsRemoved?: (projects: Project[]) => void;\n\n  stringToColour(str: string): string {\n    let hash = 0;\n    str.split('').forEach((char) => {\n      hash = char.charCodeAt(0) + ((hash > (i * 8)) & 0xff;\n      colour += value.toString(16).padStart(2, '0');\n    }\n    return colour;\n  }\n\n  showPickerDialog() {\n    this.store.dispatch(loadAllProjects());\n    this.store\n      .select(selectAllProjects)\n      .pipe(\n        filter((projects) => projects !== undefined && projects !== null),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((projects) => {\n        // Filter out members that are also present in selectedProjects\n        this.availableProjects =\n          projects?.filter(\n            (project) =>\n              !this.selectedProjects.some(\n                (selected) => selected.projectId === project.projectId,\n              ),\n          ) ?? [];\n\n        this.isPickerDialogVisible = true;\n      });\n  }\n\n  onMoveToSource(event: PickListMoveToSourceEvent) {\n    if (this.onProjectsRemoved) {\n      this.onProjectsRemoved(event.items);\n    }\n  }\n\n  onMoveToTarget(event: PickListMoveToTargetEvent) {\n    if (this.onProjectsPicked) {\n      this.onProjectsPicked(event.items);\n    }\n  }\n\n  onMoveAllToSource(event: PickListMoveAllToSourceEvent) {\n    if (this.onProjectsRemoved) {\n      this.onProjectsRemoved(event.items);\n    }\n  }\n\n  onMoveAllToTarget(event: PickListMoveAllToTargetEvent) {\n    if (this.onProjectsPicked) {\n      this.onProjectsPicked(event.items);\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n        \n          {{ project.name }}\n          \n            {{ project.platform.type | titlecase }} {{project.platform.version}}\n          \n        \n      \n    \n  \n\n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ project.name }}                      {{ project.platform.type | titlecase }} {{project.platform.version}}                                      '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectReleaseDto.html":{"url":"interfaces/ProjectReleaseDto.html","title":"interface - ProjectReleaseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectReleaseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-release.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            releaseId\n                                        \n                                \n                                \n                                        \n                                            releaseTimestamp\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        releaseId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseTimestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseTimestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProjectReleaseDto {\n  releaseId: string;\n  version: string;\n  releaseTimestamp: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/project.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProject\n                            \n                            \n                                getAllProjects\n                            \n                            \n                                getMyProjects\n                            \n                            \n                                getProjectStats\n                            \n                            \n                                isNameTaken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/project.api.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createProject\n                        \n                    \n                \n            \n            \n                \ncreateProject(dto: CreateProjectRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/project.api.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateProjectRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProjects\n                        \n                    \n                \n            \n            \n                \ngetAllProjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/project.api.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMyProjects\n                        \n                    \n                \n            \n            \n                \ngetMyProjects(teamIds?: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/project.api.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProjectStats\n                        \n                    \n                \n            \n            \n                \ngetProjectStats(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/project.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNameTaken\n                        \n                    \n                \n            \n            \n                \nisNameTaken(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/project.api.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProjectDto } from '../../domain/dto/project.dto';\nimport { CreateProjectRequestDto } from '../../domain/dto/requests/create-project-request.dto';\nimport { api } from './api';\nimport { ProjectStatDto } from '../../domain/dto/project-stat.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProjectService {\n  constructor(private http: HttpClient) {}\n\n  getAllProjects(): Observable {\n    return this.http.get(api.projectUrl, api.authOptions);\n  }\n\n  getMyProjects(teamIds?: string[]): Observable {\n    if (teamIds) {\n      return this.http.get(api.projectUrl + '/my', {\n        ...api.authOptions,\n        params: { teamId: teamIds },\n      });\n    } else {\n      return this.http.get(\n        api.projectUrl + '/my',\n        api.authOptions,\n      );\n    }\n  }\n\n  getProjectStats(projectId: string): Observable {\n    return this.http.get(\n      api.projectUrl + `/${projectId}/stats`,\n      api.authOptions,\n    );\n  }\n\n  createProject(dto: CreateProjectRequestDto): Observable {\n    return this.http.post(api.projectUrl, dto, api.authOptions);\n  }\n\n  isNameTaken(name: string): Observable {\n    return this.http.get(\n      api.projectUrl + '/name/taken?name=' + name,\n      api.authOptions,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectStatDto.html":{"url":"interfaces/ProjectStatDto.html","title":"interface - ProjectStatDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectStatDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/project-stat.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            crashFreePercentage\n                                        \n                                \n                                \n                                        \n                                            crashFreePercentageGain\n                                        \n                                \n                                \n                                        \n                                            hourByHour\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            platform\n                                        \n                                \n                                \n                                        \n                                            projectId\n                                        \n                                \n                                \n                                        \n                                            releases\n                                        \n                                \n                                \n                                        \n                                            totalCrashFreeSessions\n                                        \n                                \n                                \n                                        \n                                            totalErrors\n                                        \n                                \n                                \n                                        \n                                            totalSessions\n                                        \n                                \n                                \n                                        \n                                            totalTransactions\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        crashFreePercentage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFreePercentage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        crashFreePercentageGain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        crashFreePercentageGain:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hourByHour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hourByHour:     ProjectHourByHourStatDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectHourByHourStatDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        platform\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        platform:         PlatformDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PlatformDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releases\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releases:     ProjectReleaseDto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ProjectReleaseDto[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalCrashFreeSessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalCrashFreeSessions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalErrors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalErrors:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalSessions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalSessions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalTransactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalTransactions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PlatformDto } from './platform.dto';\nimport { ProjectHourByHourStatDto } from './project-hour-by-hour-stat.dto';\nimport { ProjectReleaseDto } from './project-release.dto';\n\nexport interface ProjectStatDto {\n  projectId: string;\n  name: string;\n  platform: PlatformDto;\n  releases: ProjectReleaseDto[];\n  hourByHour: ProjectHourByHourStatDto[];\n  totalSessions: number;\n  totalCrashFreeSessions: number;\n  crashFreePercentage: number;\n  crashFreePercentageGain: number;\n  totalErrors: number;\n  totalTransactions: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProjectState.html":{"url":"interfaces/ProjectState.html","title":"interface - ProjectState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProjectState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/project/project.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            allProjects\n                                        \n                                \n                                \n                                        \n                                            allProjectsError\n                                        \n                                \n                                \n                                        \n                                            allProjectsStatus\n                                        \n                                \n                                \n                                        \n                                            createProjectError\n                                        \n                                \n                                \n                                        \n                                            createProjectStatus\n                                        \n                                \n                                \n                                        \n                                            myProjects\n                                        \n                                \n                                \n                                        \n                                            myProjectsError\n                                        \n                                \n                                \n                                        \n                                            myProjectsStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allProjects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjects:         Project[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Project[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createProjectError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createProjectError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createProjectStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createProjectStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myProjects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myProjects:         Project[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Project[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Project } from '../../domain/models/project.entity';\nimport { createProject, createProjectFailure, createProjectSuccess, loadAllProjects, loadAllProjectsFailure, loadAllProjectsSuccess, loadMyProjects, loadMyProjectsFailure, loadMyProjectsSuccess } from './project.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface ProjectState {\n  allProjects: Project[] | null;\n  myProjects: Project[] | null;\n  allProjectsError: any | null;\n  createProjectError: any | null;\n  myProjectsError: any | null;\n  allProjectsStatus: StateStatus;\n  createProjectStatus: StateStatus;\n  myProjectsStatus: StateStatus\n}\n\nexport const initialState: ProjectState = {\n  allProjects: null,\n  myProjects: null,\n  allProjectsError: undefined,\n  allProjectsStatus: StateStatus.PENDING,\n  createProjectError: undefined,\n  createProjectStatus: StateStatus.PENDING,\n  myProjectsError: undefined,\n  myProjectsStatus: StateStatus.PENDING,\n};\n\nexport const projectReducer = createReducer(\n  initialState,\n\n  //Handle loading all projects\n  on(loadAllProjects, (state) => ({\n    ...state,\n    allProjectsError: null,\n    allProjectsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadAllProjectsSuccess, (state, {projects}) => ({\n    ...state,\n    allProjects: projects,\n    allProjectsError: null,\n    allProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadAllProjectsFailure, (state, { error }) => ({\n    ...state,\n    allProjectsError: error,\n    allProjectsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle loading my projects\n  on(loadMyProjects, (state) => ({\n    ...state,\n    myProjectsError: null,\n    myProjectsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadMyProjectsSuccess, (state, {projects}) => ({\n    ...state,\n    myProjects: projects,\n    myProjectsError: null,\n    myProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadMyProjectsFailure, (state, { error }) => ({\n    ...state,\n    myProjectsError: error,\n    myProjectsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle create new team\n  on(createProject, (state) => ({\n    ...state,\n    createProjectError: null,\n    createProjectStatus: StateStatus.LOADING,\n  })),\n\n  //Handle create new team success\n  on(createProjectSuccess, (state, project) => ({\n    ...state,\n    allProjects: [...(state.allProjects || []), project],\n    createProjectError: null,\n    createProjectStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new team failure\n  on(createProjectFailure, (state, { error }) => ({\n    ...state,\n    createProjectError: error,\n    createProjectStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent.html":{"url":"components/ProjectsComponent.html","title":"component - ProjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/projects/projects.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            FilterService\n                \n            \n\n\n            \n                selector\n                app-projects\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TranslateModule\n                            MultiSelectModule\n                            InputTextModule\n                            FormsModule\n                            ReactiveFormsModule\n                            ProgressSpinnerModule\n                            ButtonModule\n                            RippleModule\n                                SingleProjectCardComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredProjects\n                            \n                            \n                                filterValue\n                            \n                            \n                                isLoadingMyProjects\n                            \n                            \n                                isLoadingMyTeams\n                            \n                            \n                                myProjects\n                            \n                            \n                                myTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterMyTeams\n                            \n                            \n                                filterProjects\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/projects/projects.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                    FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterMyTeams\n                        \n                    \n                \n            \n            \n                \nfilterMyTeams($event: MultiSelectChangeEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/projects.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        MultiSelectChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterProjects\n                        \n                    \n                \n            \n            \n                \nfilterProjects()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/projects.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/projects.component.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.myProjects.pipe(\n    map((value) =>\n      value.filter((project) =>\n        this.filterValue == '' ? true : project.name.includes(this.filterValue),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMyProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMyTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/projects.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FilterService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { MultiSelectChangeEvent, MultiSelectModule } from 'primeng/multiselect';\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\nimport { RippleModule } from 'primeng/ripple';\nimport { map } from 'rxjs';\nimport { Team } from '../../core/domain/models/team.entity';\nimport { AppState } from '../../core/state/app.state';\nimport { loadMyProjects } from '../../core/state/project/project.actions';\nimport {\n  isLoadingMyProjects,\n  selectMyProjects,\n} from '../../core/state/project/project.selectors';\nimport { loadMyTeams } from '../../core/state/team/team.actions';\nimport {\n  isLoadingMyTeams,\n  selectMyTeams,\n} from '../../core/state/team/team.selectors';\nimport { SingleProjectCardComponent } from './components/single-project-card/single-project-card.component';\n\n@Component({\n  selector: 'app-projects',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TranslateModule,\n    MultiSelectModule,\n    InputTextModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ProgressSpinnerModule,\n    ButtonModule,\n    RippleModule,\n    SingleProjectCardComponent,\n  ],\n  providers: [FilterService],\n  templateUrl: './projects.component.html',\n  styleUrl: './projects.component.scss',\n})\nexport class ProjectsComponent implements OnInit {\n  constructor(\n    private store: Store,\n    private filterService: FilterService,\n  ) {}\n\n  myTeams = this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n  isLoadingMyTeams = this.store.select(isLoadingMyTeams);\n\n  filterValue: string = '';\n\n  myProjects = this.store\n    .select(selectMyProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  filteredProjects = this.myProjects.pipe(\n    map((value) =>\n      value.filter((project) =>\n        this.filterValue == '' ? true : project.name.includes(this.filterValue),\n      ),\n    ),\n  );\n\n  isLoadingMyProjects = this.store.select(isLoadingMyProjects);\n\n  ngOnInit(): void {\n    this.store.dispatch(loadMyTeams());\n    this.store.dispatch(loadMyProjects({}));\n  }\n\n  filterMyTeams($event: MultiSelectChangeEvent) {\n    let teams: Team[] | undefined = $event.value ?? undefined;\n    if (teams?.length === 0) {\n      teams = undefined;\n    }\n\n    if (teams) {\n      this.store.dispatch(\n        loadMyProjects({ teamIds: teams.map((team) => team.teamId) }),\n      );\n    } else {\n      this.store.dispatch(loadMyTeams());\n    }\n  }\n\n  filterProjects() {\n    this.filteredProjects = this.myProjects.pipe(\n      map((value) =>\n        value.filter((project) =>\n          this.filterValue == '' ? true : project.name.includes(this.filterValue),\n        ),\n      ),\n    );\n  }\n}\n\n    \n\n    \n        {{ \"projects.projects\" | translate }}\n\n  \n  \n    \n    \n  \n\n\n@if ((isLoadingMyProjects | async) === true) {\n  \n    \n  \n} @else {\n  \n    @for (project of filteredProjects | async; track $index) {\n      \n    }\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ \"projects.projects\" | translate }}              @if ((isLoadingMyProjects | async) === true) {        } @else {      @for (project of filteredProjects | async; track $index) {          }  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent-1.html":{"url":"components/ProjectsComponent-1.html","title":"component - ProjectsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/projects/projects.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects-settings\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AccessDeniedComponent\n                            PanelModule\n                            TranslateModule\n                                ProjectsTableComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isLoadingAllProjects\n                            \n                            \n                                projects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/projects/projects.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/projects/projects.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingAllProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAllProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectAllProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/projects/projects.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { PanelModule } from 'primeng/panel';\nimport { map } from 'rxjs';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { loadAllProjects } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingAllProjects,\n  selectAllProjects,\n} from '../../../core/state/project/project.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { ProjectsTableComponent } from '../../../shared/components/projects-table/projects-table.component';\n\n@Component({\n  selector: 'app-projects-settings',\n  standalone: true,\n  imports: [\n    CommonModule,\n    AccessDeniedComponent,\n    PanelModule,\n    TranslateModule,\n    ProjectsTableComponent,\n  ],\n  templateUrl: './projects.component.html',\n  styleUrl: './projects.component.scss',\n})\nexport class ProjectsComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.READ),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.PROJECT, Permission.CREATE),\n  );\n\n  isLoadingAllProjects = this.store.select(isLoadingAllProjects);\n  projects = this.store\n    .select(selectAllProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit(): void {\n    this.store.dispatch(loadAllProjects());\n  }\n}\n\n    \n\n    \n        @if (hasReadPermission | async) {\n    \n      \n    \n  } @else {\n    \n  }\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {                } @else {      }  '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsTableComponent.html":{"url":"components/ProjectsTableComponent.html","title":"component - ProjectsTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/projects-table/projects-table.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-projects-table\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ToastModule\n                            ConfirmDialogModule\n                            TableModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            InputTextModule\n                            AvatarModule\n                            DialogModule\n                            DropdownModule\n                            FormsModule\n                            ReactiveFormsModule\n                            CalendarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects-table.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects-table.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewProjectForm\n                            \n                            \n                                    \n                                dt\n                            \n                            \n                                isAddNewProjectDialogVisible\n                            \n                            \n                                isLoadingCreateNewProject\n                            \n                            \n                                isNameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                nameCheckSubscription\n                            \n                            \n                                    \n                                nameInput\n                            \n                            \n                                platforms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilterGlobal\n                            \n                            \n                                    Private\n                                checkName\n                            \n                            \n                                createNewProject\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                resetProjectsForm\n                            \n                            \n                                showAddDialog\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                enableAddAction\n                            \n                            \n                                enableFiltering\n                            \n                            \n                                enableGlobalSearch\n                            \n                            \n                                enablePagination\n                            \n                            \n                                enableSorting\n                            \n                            \n                                isLoading\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, messageService: MessageService, translateService: TranslateService, projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:74\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Default value : undefined\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:85\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableAddAction\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:105\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableFiltering\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:93\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableGlobalSearch\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:99\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enablePagination\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:102\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        enableSorting\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:96\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/projects-table/projects-table.component.ts:90\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilterGlobal\n                        \n                    \n                \n            \n            \n                \napplyFilterGlobal($event: Event, stringVal: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                $event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stringVal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkName\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewProject\n                        \n                    \n                \n            \n            \n                \ncreateNewProject()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:118\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetProjectsForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetProjectsForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:188\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAddDialog\n                        \n                    \n                \n            \n            \n                \nshowAddDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:137\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/projects-table/projects-table.component.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewProjectForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: ['', [Validators.required]],\n    platform: [undefined as Platform | undefined, [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Table | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('dt')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAddNewProjectDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingCreateNewProject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingCreateProject)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:112\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        nameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        platforms\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectPlatforms)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/projects-table/projects-table.component.ts:114\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { CalendarModule } from 'primeng/calendar';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DialogModule } from 'primeng/dialog';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { Table, TableModule } from 'primeng/table';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { StateStatus } from '../../../core/domain/models/enums/state-status.enum';\nimport { Platform } from '../../../core/domain/models/platform.entity';\nimport { Project } from '../../../core/domain/models/project.entity';\nimport { ProjectService } from '../../../core/services/api/project.api.service';\nimport { AppState } from '../../../core/state/app.state';\nimport { loadPlatforms } from '../../../core/state/platform/platform.actions';\nimport { selectPlatforms } from '../../../core/state/platform/platform.selectors';\nimport { createProject } from '../../../core/state/project/project.actions';\nimport {\n  isLoadingCreateProject,\n  selectCreateProjectStatus,\n} from '../../../core/state/project/project.selectors';\n\n@Component({\n  selector: 'app-projects-table',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ToastModule,\n    ConfirmDialogModule,\n    TableModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    InputTextModule,\n    AvatarModule,\n    DialogModule,\n    DropdownModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CalendarModule,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './projects-table.component.html',\n  styleUrl: './projects-table.component.scss',\n})\nexport class ProjectsTableComponent implements AfterViewInit, OnDestroy {\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private projectService: ProjectService,\n  ) {}\n\n  @ViewChild('dt') dt: Table | undefined;\n  @Input()\n  data?: Project[] = undefined;\n\n  @ViewChild('name') nameInput!: ElementRef;\n\n  @Input()\n  isLoading: boolean = true;\n\n  @Input()\n  enableFiltering: boolean = true;\n\n  @Input()\n  enableSorting: boolean = true;\n\n  @Input()\n  enableGlobalSearch: boolean = true;\n\n  @Input()\n  enablePagination: boolean = true;\n\n  @Input()\n  enableAddAction: boolean = false;\n\n  createNewProjectForm = this.formBuilder.group({\n    name: ['', [Validators.required]],\n    platform: [undefined as Platform | undefined, [Validators.required]],\n  });\n  isAddNewProjectDialogVisible: boolean = false;\n  isNameTaken: boolean | null = null;\n  isLoadingCreateNewProject = this.store.select(isLoadingCreateProject);\n  platforms = this.store.select(selectPlatforms);\n\n  private nameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.nameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkName(data));\n  }\n\n  ngOnDestroy() {\n    this.nameCheckSubscription?.unsubscribe();\n  }\n\n  applyFilterGlobal($event: Event, stringVal: string) {\n    this.dt?.filterGlobal(($event.target as HTMLInputElement).value, stringVal);\n  }\n\n  showAddDialog() {\n    this.resetProjectsForm();\n    this.store.dispatch(loadPlatforms());\n    this.isAddNewProjectDialogVisible = true;\n  }\n\n  createNewProject() {\n    this.store\n      .select(selectCreateProjectStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('projects-table.error'),\n            detail: this.translateService.instant(\n              'projects-table.failed_to_create_project',\n            ),\n          });\n        } else if (status && status == StateStatus.SUCCESS) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant('projects-table.success'),\n            detail: this.translateService.instant(\n              'projects-table.project_created',\n            ),\n          });\n          this.isAddNewProjectDialogVisible =\n            !this.isAddNewProjectDialogVisible;\n        }\n      });\n\n    const dto = {\n      name: this.createNewProjectForm.get('name')?.value ?? '',\n      platformId:\n        this.createNewProjectForm.get('platform')?.value?.platformId ?? '',\n    };\n    this.store.dispatch(createProject(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private resetProjectsForm() {\n    this.createNewProjectForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      platform: [undefined as Platform | undefined, [Validators.required]],\n    });\n  }\n\n  private checkName(name: string) {\n    this.nameCheckSubscription?.unsubscribe();\n    this.nameCheckSubscription = this.projectService\n      .isNameTaken(name)\n      .subscribe({\n        next: (result) => {\n          this.isNameTaken = result;\n        },\n        error: () => {\n          this.isNameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n    \n      \n        \n        \n      \n      \n    \n  \n  \n    \n      \n        \n          {{ \"projects-table.name\" | translate }}\n          \n          \n        \n      \n      \n        \n          {{ \"projects-table.platform\" | translate }}\n          \n          \n        \n      \n    \n  \n  \n    \n      \n        {{ project?.name }}\n      \n      \n        \n          \n          {{ project?.platform?.type | titlecase }}\n          {{ project?.platform?.version }}\n        \n      \n    \n  \n  \n    \n      {{ \"projects-table.no_projects_found\" | translate }}\n    \n  \n\n\n\n  \n    \n      \n        {{ \"projects-table.name_label\" | translate }}\n        \n          @if (isNameTaken !== null && !isNameTaken) {\n            \n          } @else {\n            \n          }\n          \n        \n        {{ \"projects-table.name_is_required\" | translate }}\n\n        {{ \"projects-table.platform_label\" | translate }}\n        \n          \n            \n              \n              {{ platform.type | titlecase }} {{ platform.version }}\n            \n          \n          \n            \n              \n              {{ platform.type | titlecase }} {{ platform.version }}\n            \n          \n        \n        {{ \"projects-table.platform_is_required\" | translate }}\n\n        \n          \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{ \"projects-table.name\" | translate }}                                                          {{ \"projects-table.platform\" | translate }}                                                            {{ project?.name }}                                        {{ project?.platform?.type | titlecase }}          {{ project?.platform?.version }}                                {{ \"projects-table.no_projects_found\" | translate }}                          {{ \"projects-table.name_label\" | translate }}                  @if (isNameTaken !== null && !isNameTaken) {                      } @else {                      }                          {{ \"projects-table.name_is_required\" | translate }}        {{ \"projects-table.platform_label\" | translate }}                                                          {{ platform.type | titlecase }} {{ platform.version }}                                                                        {{ platform.type | titlecase }} {{ platform.version }}                                      {{ \"projects-table.platform_is_required\" | translate }}                                                '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QueriesComponent.html":{"url":"components/QueriesComponent.html","title":"component - QueriesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QueriesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/queries/queries.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-queries\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./queries.component.html\n            \n\n\n\n            \n                styleUrl\n                ./queries.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-queries',\n  standalone: true,\n  imports: [],\n  templateUrl: './queries.component.html',\n  styleUrl: './queries.component.scss'\n})\nexport class QueriesComponent {\n\n}\n\n    \n\n    \n        queries works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'queries works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QueriesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-register\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  registerNewUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectCurrentUser,\n  selectRegistrationError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss',\n})\nexport class RegisterComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    if (!environment.enableRegistration) {\n      this.router.navigate(['/auth/login']);\n    }\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectRegistrationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.register.registration_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.register.registration_error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(registerNewUser(dto));\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.register.welcome_message\" | translate }}\n  \n  {{\n    \"auth.register.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.register.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.register.username_is_required\" | translate }}\n    {{ \"auth.register.username_length\" | translate }}\n\n    {{ \"auth.register.password_label\" | translate }}\n    \n    {{ \"auth.register.password_length\" | translate }}\n    {{ \"auth.register.password_not_strong\" | translate }}\n\n    {{\n      \"auth.register.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.register.email_is_required\" | translate }}\n\n    {{ \"auth.register.first_name_label\" | translate }}\n    \n    {{ \"auth.register.first_name_is_required\" | translate }}\n\n    {{ \"auth.register.last_name_label\" | translate }}\n    \n    {{ \"auth.register.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.register.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.register.welcome_message\" | translate }}    {{    \"auth.register.welcome_description\" | translate  }}      {{ \"auth.register.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.register.username_is_required\" | translate }}    {{ \"auth.register.username_length\" | translate }}    {{ \"auth.register.password_label\" | translate }}        {{ \"auth.register.password_length\" | translate }}    {{ \"auth.register.password_not_strong\" | translate }}    {{      \"auth.register.email_label\" | translate    }}                        {{ \"auth.register.email_is_required\" | translate }}    {{ \"auth.register.first_name_label\" | translate }}        {{ \"auth.register.first_name_is_required\" | translate }}    {{ \"auth.register.last_name_label\" | translate }}        {{ \"auth.register.last_name_is_required\" | translate }}          {{ \"auth.register.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequestDto.html":{"url":"interfaces/RegisterRequestDto.html","title":"interface - RegisterRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/register-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterRequestDto {\n  username: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReleasesComponent.html":{"url":"components/ReleasesComponent.html","title":"component - ReleasesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReleasesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/releases/releases.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-releases\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./releases.component.html\n            \n\n\n\n            \n                styleUrl\n                ./releases.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-releases',\n  standalone: true,\n  imports: [],\n  templateUrl: './releases.component.html',\n  styleUrl: './releases.component.scss'\n})\nexport class ReleasesComponent {\n\n}\n\n    \n\n    \n        releases works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'releases works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReleasesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReplaysComponent.html":{"url":"components/ReplaysComponent.html","title":"component - ReplaysComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ReplaysComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/replays/replays.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-replays\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./replays.component.html\n            \n\n\n\n            \n                styleUrl\n                ./replays.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-replays',\n  standalone: true,\n  imports: [],\n  templateUrl: './replays.component.html',\n  styleUrl: './replays.component.scss'\n})\nexport class ReplaysComponent {\n\n}\n\n    \n\n    \n        replays works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'replays works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ReplaysComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                secret\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        secret\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { Subscription } from 'rxjs';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  resetPassword,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectResetPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss',\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input()\n  private secret?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  resetPasswordForm = this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectResetPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('auth.reset-password.error'),\n            detail: this.translateService.instant(\n              'auth.reset-password.wrong_hash',\n            ),\n          });\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.reset-password.success',\n            ),\n            detail: this.translateService.instant(\n              'auth.reset-password.success_message',\n            ),\n          });\n          this.router.navigate(['/auth']);\n        }\n      });\n  }\n\n  resetPassword() {\n    if (this.secret) {\n      const newPassword = this.resetPasswordForm.get('password')?.value ?? '';\n      this.store.dispatch(\n        resetPassword({ newPassword: newPassword, hash: this.secret }),\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.reset-password.welcome_message\" | translate }}\n  \n\n\n  \n    {{ \"auth.reset-password.new_password_label\" | translate }}\n    \n    {{ \"auth.reset-password.password_is_required\" | translate }}\n    {{ \"auth.reset-password.password_length\" | translate }}\n    {{ \"auth.reset-password.password_not_strong\" | translate }}\n\n    \n      {{ \"auth.reset-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.reset-password.welcome_message\" | translate }}        {{ \"auth.reset-password.new_password_label\" | translate }}        {{ \"auth.reset-password.password_is_required\" | translate }}    {{ \"auth.reset-password.password_length\" | translate }}    {{ \"auth.reset-password.password_not_strong\" | translate }}          {{ \"auth.reset-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordRequestDto.html":{"url":"interfaces/ResetPasswordRequestDto.html","title":"interface - ResetPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/reset-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPasswordRequestDto {\n    newPassword: string,\n    hash: string, \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourcesComponent.html":{"url":"components/ResourcesComponent.html","title":"component - ResourcesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResourcesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/resources/resources.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-resources\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./resources.component.html\n            \n\n\n\n            \n                styleUrl\n                ./resources.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-resources',\n  standalone: true,\n  imports: [],\n  templateUrl: './resources.component.html',\n  styleUrl: './resources.component.scss'\n})\nexport class ResourcesComponent {\n\n}\n\n    \n\n    \n        resources works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'resources works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResourcesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Role.html":{"url":"interfaces/Role.html","title":"interface - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            internal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            roleId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        internal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        internal:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     [literal type]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [literal type]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: Role;\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n\n  export interface Role {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleEffects.html":{"url":"injectables/RoleEffects.html","title":"injectable - RoleEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/role/role.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadRoles$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/role/role.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadRoles$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRoles),\n      switchMap(() =>\n        this.roleService.getRoles().pipe(\n          map((result) => loadRolesSuccess({ roles: result })),\n          catchError((error) => of(loadRolesFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/role/role.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap } from 'rxjs';\nimport { RoleService } from '../../services/api/role.api.service';\nimport { loadRoles, loadRolesFailure, loadRolesSuccess } from './role.actions';\n\n@Injectable()\nexport class RoleEffects {\n  constructor(\n    private roleService: RoleService,\n    private actions$: Actions,\n  ) {}\n\n  loadRoles$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRoles),\n      switchMap(() =>\n        this.roleService.getRoles().pipe(\n          map((result) => loadRolesSuccess({ roles: result })),\n          catchError((error) => of(loadRolesFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/role.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/role.api.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRoles\n                        \n                    \n                \n            \n            \n                \ngetRoles()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/role.api.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Role } from '../../domain/models/user.entity';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RoleService {\n  constructor(private http: HttpClient) {}\n\n  getRoles(): Observable {\n    return this.http.get(api.roleUrl, api.authOptions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleState.html":{"url":"interfaces/RoleState.html","title":"interface - RoleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/role/role.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Role[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Role } from '../../domain/models/user.entity';\nimport { loadRoles, loadRolesFailure, loadRolesSuccess } from './role.actions';\n\nexport interface RoleState {\n  roles: Role[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  status: StateStatus;\n}\n\nexport const initialState: RoleState = {\n    roles: null,\n    error: undefined,\n    status: StateStatus.PENDING\n}\n\nexport const roleReducer = createReducer(\n    initialState,\n\n    //Handle loading current organization members\n  on(loadRoles, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadRolesSuccess, (state, params) => ({\n    ...state,\n    roles: params.roles,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadRolesFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n)\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ScreenLoadsComponent.html":{"url":"components/ScreenLoadsComponent.html","title":"component - ScreenLoadsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ScreenLoadsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/screen-loads/screen-loads.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-screen-loads\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./screen-loads.component.html\n            \n\n\n\n            \n                styleUrl\n                ./screen-loads.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-screen-loads',\n  standalone: true,\n  imports: [],\n  templateUrl: './screen-loads.component.html',\n  styleUrl: './screen-loads.component.scss'\n})\nexport class ScreenLoadsComponent {\n\n}\n\n    \n\n    \n        screen-loads works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'screen-loads works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ScreenLoadsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SdksComponent.html":{"url":"components/SdksComponent.html","title":"component - SdksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SdksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/sdks/sdks.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sdks\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./sdks.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sdks.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sdks',\n  standalone: true,\n  imports: [],\n  templateUrl: './sdks.component.html',\n  styleUrl: './sdks.component.scss'\n})\nexport class SdksComponent {\n\n}\n\n    \n\n    \n        sdks works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sdks works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SdksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SecurityComponent.html":{"url":"components/SecurityComponent.html","title":"component - SecurityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SecurityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/account/security/security.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-security\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./security.component.html\n            \n\n\n\n            \n                styleUrl\n                ./security.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-security',\n  standalone: true,\n  imports: [],\n  templateUrl: './security.component.html',\n  styleUrl: './security.component.scss'\n})\nexport class SecurityComponent {\n\n}\n\n    \n\n    \n        security works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'security works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SecurityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionStorage.html":{"url":"injectables/SessionStorage.html","title":"injectable - SessionStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/session-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/session-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.sessionStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SessionsComponent.html":{"url":"components/SessionsComponent.html","title":"component - SessionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SessionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/sessions/sessions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sessions\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./sessions.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sessions.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-sessions',\n  standalone: true,\n  imports: [],\n  templateUrl: './sessions.component.html',\n  styleUrl: './sessions.component.scss'\n})\nexport class SessionsComponent {\n\n}\n\n    \n\n    \n        sessions works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'sessions works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SessionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/settings.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n            \n                styleUrl\n                ./settings.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  standalone: true,\n  imports: [],\n  templateUrl: './settings.component.html',\n  styleUrl: './settings.component.scss'\n})\nexport class SettingsComponent {\n\n}\n\n    \n\n    \n        settings works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'settings works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                MenuitemComponent\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setupSideNavItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, el: ElementRef, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes in several services as parameters.\nsuch as managing the layout of a web page or application.\na native element inside a View. It is used to access the properties and methods of the native\nelement.\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\nUserStorageService class, which is likely used to manage user data and authentication. It is\ninjected into the constructor using Angular's dependency injection system.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIt is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n\n\n                                                        \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nel is an instance of the ElementRef class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe translateService parameter is an instance of\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:44\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets up the side navigation based on the user's role.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupSideNavItems\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupSideNavItems(sidenav: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sidenav\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:37\n                        \n                    \n\n            \n                \n                    - `el` is an instance of the `ElementRef` class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:36\n                        \n                    \n\n            \n                \n                    - It is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                        \n                    \n\n            \n                \n                    model: MenuItem[] = []; is declaring a property called model of type MenuItem[] (an array of\nMenuItem objects) and initializing it to an empty array. This property is likely used to store\nthe items that will be displayed in the side navigation menu.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuitemComponent } from '../menuitem/menuitem.component';\n\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule, MenuitemComponent],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  /** `model: MenuItem[] = [];` is declaring a property called `model` of type `MenuItem[]` (an array of\n  `MenuItem` objects) and initializing it to an empty array. This property is likely used to store\n  the items that will be displayed in the side navigation menu. */\n  model: MenuItem[] = [];\n  /**\n   * This is a constructor function that takes in several services as parameters.\n   * @param {LayoutService} layoutService - It is a service that provides layout-related functionality,\n   * such as managing the layout of a web page or application.\n   * @param {ElementRef} el - `el` is an instance of the `ElementRef` class, which is a wrapper around\n   * a native element inside a View. It is used to access the properties and methods of the native\n   * element.\n   * @param {TranslateService} translateService - The `translateService` parameter is an instance of\n   * the `TranslateService` class, which is used for internationalization and localization of the\n   * application. It provides methods for translating text strings into different languages based on\n   * the user's language preference.\n   * @param {UserStorageService} userService - The `userService` parameter is an instance of the\n   * `UserStorageService` class, which is likely used to manage user data and authentication. It is\n   * injected into the constructor using Angular's dependency injection system.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public el: ElementRef,\n    private translateService: TranslateService,\n  ) {}\n\n  /**\n   * The ngOnInit function sets up the side navigation based on the user's role.\n   */\n  ngOnInit() {\n    this.translateService.stream('sidenav').subscribe({\n      next: (sidenav) => {\n        this.model = [];\n        this.setupSideNavItems(sidenav);\n      },\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private setupSideNavItems(sidenav: any) {\n    this.model.push({\n      label: sidenav.General,\n      items: [\n        // {\n        //   label: sidenav.Home,\n        //   icon: 'pi pi-fw pi-home',\n        //   routerLink: ['/home'],\n        // },\n        {\n          label: sidenav.Projects,\n          icon: 'pi pi-fw pi-code',\n          routerLink: ['/home/projects'],\n        },\n        {\n          label: sidenav.Logs,\n          icon: 'pi pi-fw pi-list',\n          routerLink: ['/home/logs'],\n        },\n        {\n          label: sidenav.Issues,\n          icon: 'pi pi-fw pi-inbox',\n          routerLink: ['/home/issues'],\n        },\n        {\n          label: sidenav.Messages,\n          icon: 'pi pi-fw pi-envelope',\n          routerLink: ['/home/messages'],\n        },\n        {\n          label: sidenav.Devices,\n          icon: 'pi pi-fw pi-mobile',\n          routerLink: ['/home/devices'],\n        },\n        {\n          label: sidenav.Sessions,\n          icon: 'pi pi-fw pi-clock',\n          routerLink: ['/home/sessions'],\n        },\n        {\n          label: sidenav.Performance,\n          icon: 'pi pi-fw pi-chart-line',\n          routerLink: ['/home/performance'],\n          expanded: true,\n          items: [\n            {\n              label: sidenav.Queries,\n              icon: 'pi pi-fw pi-database',\n              routerLink: ['/home/queries'],\n            },\n            {\n              label: sidenav.Vitals,\n              icon: 'pi pi-fw pi-heart',\n              routerLink: ['/home/vitals'],\n            },\n            {\n              label: sidenav.Screen_Loads,\n              icon: 'pi pi-fw pi-stopwatch',\n              routerLink: ['/home/screen-loads'],\n            },\n            {\n              label: sidenav.Resources,\n              icon: 'pi pi-fw pi-server',\n              routerLink: ['/home/resources'],\n            },\n          ],\n        },\n        {\n          label: sidenav.Replays,\n          icon: 'pi pi-fw pi-play',\n          routerLink: ['/home/replays'],\n        },\n        {\n          label: sidenav.Releases,\n          icon: 'pi pi-fw pi-box',\n          routerLink: ['/home/releases'],\n        },\n        {\n          label: sidenav.Stats,\n          icon: 'pi pi-fw pi-chart-bar',\n          routerLink: ['/home/stats'],\n        },\n      ],\n    });\n    this.model.push({\n      label: sidenav.Settings,\n      routerLink: ['/home/settings'],\n      items: [\n        {\n          label: sidenav.Settings_Account,\n          icon: 'pi pi-fw pi-user',\n          expanded: false,\n          routerLink: ['/home/settings/account'],\n          items: [\n            {\n              label: sidenav.Settings_Account_Details,\n              routerLink: ['/home/settings/account/details'],\n              icon: 'pi pi-fw pi-list'\n            },\n            {\n              label: sidenav.Settings_Account_Security,\n              routerLink: ['/home/settings/account/security'],\n              icon: 'pi pi-fw pi-shield'\n            },\n            {\n              label: sidenav.Settings_Account_Notifications,\n              routerLink: ['/home/settings/account/notifications'],\n              icon: 'pi pi-fw pi-envelope'\n            },\n            {\n              label: sidenav.Settings_Account_Close,\n              routerLink: ['/home/settings/account/close'],\n              icon: 'pi pi-fw pi-exclamation-circle'\n            }\n          ]\n        },\n        {\n          label: sidenav.Settings_Organization,\n          icon: 'pi pi-fw pi-building',\n          routerLink: ['/home/settings/organization']\n        },\n        {\n          label: sidenav.Settings_Projects,\n          icon: 'pi pi-fw pi-box',\n          routerLink: ['/home/settings/projects']\n        },\n        {\n          label: sidenav.Settings_Teams,\n          icon: 'pi pi-fw pi-sitemap',\n          routerLink: ['/home/settings/teams']\n        },\n        {\n          label: sidenav.Settings_Members,\n          icon: 'pi pi-fw pi-users',\n          routerLink: ['/home/settings/members']\n        },\n        {\n          label: sidenav.Settings_Alerts,\n          icon: 'pi pi-fw pi-bell',\n          routerLink: ['/home/settings/alerts']\n        }\n      ]\n    })\n    this.model.push({\n      label: sidenav.Help,\n      items: [\n        {\n          label: sidenav.Help_Documentation,\n          icon: 'pi pi-fw pi-book',\n          routerLink: ['/home/help/documentation']\n        },\n        {\n          label: sidenav.Help_SDKS,\n          icon: 'pi pi-fw pi-wrench',\n          routerLink: ['/home/help/sdks']\n        },\n        {\n          label: sidenav.Help_Guides,\n          icon: 'pi pi-fw pi-question-circle',\n          routerLink: ['/home/help/guides']\n        },\n        {\n          label: sidenav.Help_Support,\n          icon: 'pi pi-fw pi-ticket',\n          routerLink: ['/home/help/support']\n        },\n      ]\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SingleProjectCardComponent.html":{"url":"components/SingleProjectCardComponent.html","title":"component - SingleProjectCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SingleProjectCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/projects/components/single-project-card/single-project-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            DatePipe\n                \n            \n\n\n            \n                selector\n                app-single-project-card\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            TranslateModule\n                            CommonModule\n                            ButtonModule\n                            ChartModule\n                            RippleModule\n                            CardModule\n                            AvatarModule\n                            SkeletonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./single-project-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./single-project-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                chartData\n                            \n                            \n                                chartOptions\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Optional\n                                projectStat\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getChartLabel\n                            \n                            \n                                navigateToProjectSettings\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Private\n                                setupChartData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(projectService: ProjectService, datePipe: DatePipe, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        datePipe\n                                                  \n                                                        \n                                                                    DatePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:35\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getChartLabel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChartLabel(startDate: Date, endDate: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                startDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToProjectSettings\n                        \n                    \n                \n            \n            \n                \nnavigateToProjectSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupChartData\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupChartData(result: ProjectStatDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                result\n                                            \n                                                            ProjectStatDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        chartData\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chartOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    scales: {\n      x: {\n        display: false,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        projectStat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectStatDto\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/projects/components/single-project-card/single-project-card.component.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule, DatePipe } from '@angular/common';\nimport { AfterViewInit, Component, Input } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { CardModule } from 'primeng/card';\nimport { ChartModule } from 'primeng/chart';\nimport { RippleModule } from 'primeng/ripple';\nimport { SkeletonModule } from 'primeng/skeleton';\nimport { Project } from '../../../../core/domain/models/project.entity';\nimport { ProjectService } from '../../../../core/services/api/project.api.service';\nimport { ProjectStatDto } from '../../../../core/domain/dto/project-stat.dto';\nimport { Router, RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'app-single-project-card',\n  standalone: true,\n  imports: [\n    TranslateModule,\n    CommonModule,\n    ButtonModule,\n    ChartModule,\n    RippleModule,\n    CardModule,\n    AvatarModule,\n    SkeletonModule,\n    RouterModule,\n  ],\n  providers: [DatePipe],\n  templateUrl: './single-project-card.component.html',\n  styleUrl: './single-project-card.component.scss',\n})\nexport class SingleProjectCardComponent implements AfterViewInit {\n  @Input()\n  project?: Project;\n\n  projectStat?: ProjectStatDto;\n\n  chartData?: unknown;\n  chartOptions = {\n    scales: {\n      x: {\n        display: false,\n      },\n    },\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n  };\n\n  isLoading: boolean = true;\n\n  constructor(\n    private projectService: ProjectService,\n    private datePipe: DatePipe,\n    private router: Router,\n  ) {}\n\n  ngAfterViewInit(): void {\n    this.projectService\n      .getProjectStats(this.project?.projectId ?? '')\n      .subscribe({\n        next: (result) => {\n          this.isLoading = false;\n          this.projectStat = result;\n          this.setupChartData(result);\n        },\n        error: () => {\n          this.isLoading = false;\n        },\n      });\n  }\n\n  private setupChartData(result: ProjectStatDto) {\n    this.chartData = {\n      labels: result.hourByHour.map((hourlyStat) =>\n        this.getChartLabel(hourlyStat.startInterval, hourlyStat.endInterval),\n      ),\n      datasets: [\n        {\n          type: 'bar',\n          label: 'Transactions',\n          data: result.hourByHour.map((hourlyStat) => hourlyStat.transactions),\n        },\n        {\n          type: 'bar',\n          label: 'Errors',\n          data: result.hourByHour.map((hourlyStat) => hourlyStat.errors),\n        },\n        {\n          type: 'bar',\n          label: 'Crash Free Sessions',\n          data: result.hourByHour.map(\n            (hourlyStat) => hourlyStat.numberOfCrashFreeSessions,\n          ),\n        },\n        {\n          type: 'bar',\n          label: 'Sessions',\n          data: result.hourByHour.map(\n            (hourlyStat) => hourlyStat.numberOfSessions,\n          ),\n        },\n      ],\n    };\n  }\n\n  private getChartLabel(startDate: Date, endDate: Date): string {\n    let result = '';\n    result += this.datePipe.transform(startDate, 'MMM d h:mm a');\n    result += ' - ';\n    result += this.datePipe.transform(endDate, 'h:mm a');\n    result += ' (UTC)';\n    return result;\n  }\n\n  navigateToProjectSettings() {\n    this.router.navigate(['/settings/projects/' + this.project?.projectId])\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        \n        {{ project?.name }}\n        \n        @if (isLoading) {\n          \n        } @else {\n          \n            {{ \"projects.transactions\" | translate }}\n              {{ projectStat?.totalTransactions }} |\n              {{ \"projects.errors\" | translate }}\n              {{ projectStat?.totalErrors }} |\n              {{ \"projects.sessions\" | translate }}\n              {{ projectStat?.totalSessions }}\n            \n          \n        }\n      \n      \n    \n  \n  @if (isLoading) {\n    \n  } @else {\n    \n  }\n  \n    \n      \n        {{ \"projects.crash_free_sessions\" | translate }}\n      \n      @if (isLoading) {\n        \n      } @else {\n        \n          {{ projectStat?.crashFreePercentage | number: \".1-3\" }}%\n        \n        @if (projectStat?.crashFreePercentageGain === 0) {\n          \n            \n            \n              {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%\n            \n          \n        } @else if (projectStat?.crashFreePercentageGain ?? 0 > 0) {\n          \n            \n            \n              {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%\n            \n          \n        } @else if (projectStat?.crashFreePercentageGain ?? 0 \n            \n            \n              {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%\n            \n          \n        }\n      }\n    \n    \n      \n        {{ \"projects.latest_deploys\" | translate }}\n      \n      @if (isLoading) {\n        \n      } @else {\n        @if (!projectStat?.releases || projectStat?.releases?.length === 0) {\n          -\n        } @else {\n          @for (\n            release of projectStat?.releases?.constructor(3);\n            track $index\n          ) {\n            \n              {{ release.version }} -\n              {{ release.releaseTimestamp | date: \"MMM d h:mm a\" }}\n            \n          }\n        }\n      }\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ project?.name }}                @if (isLoading) {                  } @else {                      {{ \"projects.transactions\" | translate }}              {{ projectStat?.totalTransactions }} |              {{ \"projects.errors\" | translate }}              {{ projectStat?.totalErrors }} |              {{ \"projects.sessions\" | translate }}              {{ projectStat?.totalSessions }}                              }                    @if (isLoading) {      } @else {      }                    {{ \"projects.crash_free_sessions\" | translate }}            @if (isLoading) {              } @else {                  {{ projectStat?.crashFreePercentage | number: \".1-3\" }}%                @if (projectStat?.crashFreePercentageGain === 0) {                                                {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%                              } @else if (projectStat?.crashFreePercentageGain ?? 0 > 0) {                                                {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%                              } @else if (projectStat?.crashFreePercentageGain ?? 0                                       {{ projectStat?.crashFreePercentageGain | number: \".1-3\" }}%                              }      }                      {{ \"projects.latest_deploys\" | translate }}            @if (isLoading) {              } @else {        @if (!projectStat?.releases || projectStat?.releases?.length === 0) {          -        } @else {          @for (            release of projectStat?.releases?.constructor(3);            track $index          ) {                          {{ release.version }} -              {{ release.releaseTimestamp | date: \"MMM d h:mm a\" }}                      }        }      }      '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SingleProjectCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SingleTeamComponent.html":{"url":"components/SingleTeamComponent.html","title":"component - SingleTeamComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SingleTeamComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/teams/components/single-team/single-team.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                AfterViewChecked\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                            ConfirmationService\n                \n            \n\n\n            \n                selector\n                app-single-team\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            TabViewModule\n                            PanelModule\n                                AccessDeniedComponent\n                            ToastModule\n                            TranslateModule\n                                MembersTableComponent\n                                ProjectsTableComponent\n                            ButtonModule\n                            RippleModule\n                            ConfirmDialogModule\n                                NotFoundComponent\n                            InputTextModule\n                            DividerModule\n                            BadgeModule\n                                MemberPickerComponent\n                                ProjectPickerComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./single-team.component.html\n            \n\n\n\n            \n                styleUrl\n                ./single-team.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                hasUpdatePermission\n                            \n                            \n                                isLoadingMembers\n                            \n                            \n                                isLoadingProjects\n                            \n                            \n                                isLoadingUpdateTeam\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                members\n                            \n                            \n                                onAddMembers\n                            \n                            \n                                onAddProjects\n                            \n                            \n                                onRemoveMembers\n                            \n                            \n                                onRemoveProjects\n                            \n                            \n                                projects\n                            \n                            \n                                registerOnce\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                            \n                                team\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                    Private\n                                deleteTeam\n                            \n                            \n                                ngAfterViewChecked\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showDeleteTeamConfirmation\n                            \n                            \n                                toSlugValue\n                            \n                            \n                                updateTeamSlug\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                teamId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, confirmationService: ConfirmationService, messageService: MessageService, teamService: TeamService, router: Router, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:100\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        confirmationService\n                                                  \n                                                        \n                                                                    ConfirmationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        teamId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:98\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deleteTeam\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteTeam()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:185\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewChecked\n                        \n                    \n                \n            \n            \n                \nngAfterViewChecked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteTeamConfirmation\n                        \n                    \n                \n            \n            \n                \nshowDeleteTeamConfirmation(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:180\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTeamSlug\n                        \n                    \n                \n            \n            \n                \nupdateTeamSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:214\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasUpdatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:116\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingTeamMembers)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingTeamProjects)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:120\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingUpdateTeam\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingUpdateTeam)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:121\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        members\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectSingleTeamMembers)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:240\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAddProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:258\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveMembers\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:249\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveProjects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:267\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projects\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectSingleTeamProjects)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnce\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:130\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        team\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectSingleTeam)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/components/single-team/single-team.component.ts:123\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewChecked,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { BadgeModule } from 'primeng/badge';\nimport { ButtonModule } from 'primeng/button';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { DividerModule } from 'primeng/divider';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PanelModule } from 'primeng/panel';\nimport { RippleModule } from 'primeng/ripple';\nimport { TabViewModule } from 'primeng/tabview';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  fromEvent,\n  map,\n  take,\n} from 'rxjs';\nimport { Permission } from '../../../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../../../core/domain/models/enums/resource-type.enum';\nimport { StateStatus } from '../../../../../core/domain/models/enums/state-status.enum';\nimport { Project } from '../../../../../core/domain/models/project.entity';\nimport { User } from '../../../../../core/domain/models/user.entity';\nimport { TeamService } from '../../../../../core/services/api/team.api.service';\nimport { AppState } from '../../../../../core/state/app.state';\nimport { selectHasPermission } from '../../../../../core/state/auth/auth.selectors';\nimport {\n  addTeamMembers,\n  addTeamProjects,\n  loadTeamById,\n  loadTeamMembers,\n  loadTeamProjects,\n  removeTeamMembers,\n  removeTeamProjects,\n  resetSingleTeamState,\n  updateTeam,\n} from '../../../../../core/state/single-team/single-team.actions';\nimport {\n  isLoadingTeamMembers,\n  isLoadingTeamProjects,\n  isLoadingUpdateTeam,\n  selectSingleTeam,\n  selectSingleTeamMembers,\n  selectSingleTeamProjects,\n  selectUpdateTeamStatus,\n} from '../../../../../core/state/single-team/single-team.selectors';\nimport { AccessDeniedComponent } from '../../../../../shared/components/access-denied/access-denied.component';\nimport { MemberPickerComponent } from '../../../../../shared/components/member-picker/member-picker.component';\nimport { MembersTableComponent } from '../../../../../shared/components/members-table/members-table.component';\nimport { NotFoundComponent } from '../../../../../shared/components/not-found/not-found.component';\nimport { ProjectPickerComponent } from '../../../../../shared/components/project-picker/project-picker.component';\nimport { ProjectsTableComponent } from '../../../../../shared/components/projects-table/projects-table.component';\n\n@Component({\n  selector: 'app-single-team',\n  standalone: true,\n  imports: [\n    CommonModule,\n    TabViewModule,\n    PanelModule,\n    AccessDeniedComponent,\n    ToastModule,\n    TranslateModule,\n    MembersTableComponent,\n    ProjectsTableComponent,\n    ButtonModule,\n    RippleModule,\n    ConfirmDialogModule,\n    NotFoundComponent,\n    InputTextModule,\n    DividerModule,\n    BadgeModule,\n    MemberPickerComponent,\n    ProjectPickerComponent,\n  ],\n  providers: [MessageService, ConfirmationService],\n  templateUrl: './single-team.component.html',\n  styleUrl: './single-team.component.scss',\n})\nexport class SingleTeamComponent\n  implements OnInit, OnDestroy, AfterViewChecked\n{\n  @Input()\n  private teamId?: string;\n\n  @ViewChild('slug') slugInput!: ElementRef;\n  constructor(\n    private store: Store,\n    private confirmationService: ConfirmationService,\n    private messageService: MessageService,\n    private teamService: TeamService,\n    private router: Router,\n    private translateService: TranslateService,\n  ) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  );\n  hasUpdatePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  );\n  isLoadingMembers = this.store.select(isLoadingTeamMembers);\n  isLoadingProjects = this.store.select(isLoadingTeamProjects);\n  isLoadingUpdateTeam = this.store.select(isLoadingUpdateTeam);\n  isSlugTaken: boolean | null = null;\n  team = this.store.select(selectSingleTeam);\n  members = this.store\n    .select(selectSingleTeamMembers)\n    .pipe(map((value) => [...(value ?? [])]));\n  projects = this.store\n    .select(selectSingleTeamProjects)\n    .pipe(map((value) => [...(value ?? [])]));\n  registerOnce: boolean = false;\n\n  private slugCheckSubscription?: Subscription;\n\n  ngOnInit(): void {\n    this.store.dispatch(loadTeamById({ teamId: this.teamId ?? '' }));\n    this.store.dispatch(loadTeamMembers({ teamId: this.teamId ?? '' }));\n    this.store.dispatch(loadTeamProjects({ teamId: this.teamId ?? '' }));\n  }\n\n  ngAfterViewChecked() {\n    if (!this.registerOnce && this.slugInput) {\n      this.registerOnce = true;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      fromEvent(this.slugInput.nativeElement, 'input')\n        .pipe(\n          map((event: Event) => (event.target as HTMLInputElement).value),\n          debounceTime(500),\n          distinctUntilChanged(),\n        )\n        .subscribe((data) => this.checkSlug(data));\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.slugCheckSubscription?.unsubscribe();\n    this.store.dispatch(resetSingleTeamState());\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  showDeleteTeamConfirmation(event: any) {\n    this.confirmationService.confirm({\n      target: event.target as EventTarget,\n      message: this.translateService.instant(\n        'single-team.delete_confirmation_message',\n      ),\n      header: this.translateService.instant('single-team.delete_confirmation'),\n      icon: 'pi pi-info-circle',\n      acceptButtonStyleClass: 'p-button-danger p-button-text',\n      rejectButtonStyleClass: 'p-button-text p-button-text',\n      acceptIcon: 'none',\n      rejectIcon: 'none',\n\n      accept: () => {\n        this.deleteTeam();\n      },\n      reject: () => {},\n    });\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    return result;\n  }\n\n  private deleteTeam() {\n    this.teamService.deleteTeam(this.teamId ?? '').subscribe({\n      next: () => {\n        this.router.navigate(['/home/settings/teams']);\n      },\n      error: () => {\n        this.messageService.add({\n          severity: 'error',\n          summary: this.translateService.instant('single-team.error'),\n          detail: this.translateService.instant(\n            'single-team.failed_to_delete_team',\n          ),\n        });\n      },\n    });\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.teamService.isSlugTaken(slug).subscribe({\n      next: (result) => {\n        this.isSlugTaken = result;\n      },\n      error: () => {\n        this.isSlugTaken = null;\n      },\n    });\n  }\n\n  updateTeamSlug(slug: string) {\n    this.store.dispatch(\n      updateTeam({ teamId: this.teamId ?? '', dto: { slug: slug } }),\n    );\n    this.store\n      .select(selectUpdateTeamStatus)\n      .pipe(\n        filter(\n          (status) =>\n            status == StateStatus.ERROR || status == StateStatus.SUCCESS,\n        ),\n        take(1), // unsubscribe after one emitted value\n      )\n      .subscribe((status) => {\n        if (status && status == StateStatus.ERROR) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('single-team.error'),\n            detail: this.translateService.instant(\n              'single-team.failed_to_update_team',\n            ),\n          });\n        }\n      });\n  }\n\n  onAddMembers = (members: User[]) => {\n    this.store.dispatch(\n      addTeamMembers({\n        teamId: this.teamId ?? '',\n        ids: members.map((member) => member.userId),\n      }),\n    );\n  };\n\n  onRemoveMembers = (members: User[]) => {\n    this.store.dispatch(\n      removeTeamMembers({\n        teamId: this.teamId ?? '',\n        ids: members.map((member) => member.userId),\n      }),\n    );\n  };\n\n  onAddProjects = (projects: Project[]) => {\n    this.store.dispatch(\n      addTeamProjects({\n        teamId: this.teamId ?? '',\n        ids: projects.map((project) => project.projectId),\n      }),\n    );\n  };\n\n  onRemoveProjects = (projects: Project[]) => {\n    this.store.dispatch(\n      removeTeamProjects({\n        teamId: this.teamId ?? '',\n        ids: projects.map((project) => project.projectId),\n      }),\n    );\n  };\n}\n\n    \n\n    \n        \n\n@if ((team | async) === null || (team | async) === undefined) {\n  \n} @else {\n  #{{ (team | async)?.slug }}\n  @if ((hasReadPermission | async) === false) {\n    \n  } @else {\n    \n      \n        \n          \n        \n        \n      \n      \n        \n          \n        \n        \n      \n      \n        \n          \n            \n          \n          \n            \n              \n                {{ \"single-team.id\" | translate }}\n              \n              {{ \"single-team.id_description\" | translate }}\n            \n            \n              \n            \n          \n          \n          \n            \n              \n                {{ \"single-team.slug\" | translate }}\n              \n              {{ \"single-team.slug_description\" | translate }}\n            \n            \n              \n                @if (!isSlugTaken) {\n                  \n                } @else {\n                  \n                }\n                \n              \n            \n          \n        \n        \n          \n            \n              \n                {{ \"single-team.delete\" | translate }}\n              \n              {{ \"single-team.delete_description\" | translate }}\n            \n            \n              \n            \n          \n        \n      \n    \n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if ((team | async) === null || (team | async) === undefined) {  } @else {  #{{ (team | async)?.slug }}  @if ((hasReadPermission | async) === false) {      } @else {                                                                                                                                                                                                  {{ \"single-team.id\" | translate }}                            {{ \"single-team.id_description\" | translate }}                                                                                                                          {{ \"single-team.slug\" | translate }}                            {{ \"single-team.slug_description\" | translate }}                                                      @if (!isSlugTaken) {                                  } @else {                                  }                                                                                                                        {{ \"single-team.delete\" | translate }}                            {{ \"single-team.delete_description\" | translate }}                                                                                }}'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SingleTeamComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SingleTeamEffects.html":{"url":"injectables/SingleTeamEffects.html","title":"injectable - SingleTeamEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SingleTeamEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/single-team/single-team.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addTeamMembers$\n                            \n                            \n                                addTeamProjects$\n                            \n                            \n                                loadTeamById$\n                            \n                            \n                                loadTeamMembers$\n                            \n                            \n                                loadTeamProjects$\n                            \n                            \n                                removeTeamMembers$\n                            \n                            \n                                removeTeamProjectss$\n                            \n                            \n                                updateTeam$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addTeamMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addTeamMembers),\n      switchMap((args) =>\n        this.teamService.addTeamMembers(args.teamId, args.ids).pipe(\n          map((members) => addTeamMembersSuccess({ members: members })),\n          catchError((error) => of(addTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTeamProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(addTeamProjects),\n      switchMap((args) =>\n        this.teamService.addTeamProjects(args.teamId, args.ids).pipe(\n          map((projects) => addTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(addTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTeamById$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamById),\n      switchMap((args) =>\n        this.teamService.getTeamById(args.teamId).pipe(\n          map((team) => loadTeamByIdSuccess({ team: team })),\n          catchError((error) => of(loadTeamByIdFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTeamMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamMembers),\n      switchMap((args) =>\n        this.teamService.getTeamMembers(args.teamId).pipe(\n          map((members) => loadTeamMembersSuccess({ members: members })),\n          catchError((error) => of(loadTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTeamProjects$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamProjects),\n      switchMap((args) =>\n        this.teamService.getTeamProjects(args.teamId).pipe(\n          map((projects) => loadTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(loadTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTeamMembers$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeTeamMembers),\n      switchMap((args) =>\n        this.teamService.removeTeamMembers(args.teamId, args.ids).pipe(\n          map((members) => removeTeamMembersSuccess({ members: members })),\n          catchError((error) => of(removeTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTeamProjectss$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeTeamProjects),\n      switchMap((args) =>\n        this.teamService.removeTeamProjects(args.teamId, args.ids).pipe(\n          map((projects) => removeTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(removeTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:123\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateTeam),\n      switchMap((args) =>\n        this.teamService.updateTeam(args.teamId, args.dto).pipe(\n          map((team) => updateTeamSuccess({ team: team })),\n          catchError((error) => of(updateTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/single-team/single-team.effects.ts:75\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TeamService } from '../../services/api/team.api.service';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport {\n  addTeamMembers,\n  addTeamMembersFailure,\n  addTeamMembersSuccess,\n  addTeamProjects,\n  addTeamProjectsFailure,\n  addTeamProjectsSuccess,\n  loadTeamById,\n  loadTeamByIdFailure,\n  loadTeamByIdSuccess,\n  loadTeamMembers,\n  loadTeamMembersFailure,\n  loadTeamMembersSuccess,\n  loadTeamProjects,\n  loadTeamProjectsFailure,\n  loadTeamProjectsSuccess,\n  removeTeamMembers,\n  removeTeamMembersFailure,\n  removeTeamMembersSuccess,\n  removeTeamProjects,\n  removeTeamProjectsFailure,\n  removeTeamProjectsSuccess,\n  updateTeam,\n  updateTeamFailure,\n  updateTeamSuccess,\n} from './single-team.actions';\nimport { catchError, map, of, switchMap } from 'rxjs';\n\n@Injectable()\nexport class SingleTeamEffects {\n  constructor(\n    private teamService: TeamService,\n    private actions$: Actions,\n  ) {}\n\n  loadTeamById$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamById),\n      switchMap((args) =>\n        this.teamService.getTeamById(args.teamId).pipe(\n          map((team) => loadTeamByIdSuccess({ team: team })),\n          catchError((error) => of(loadTeamByIdFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadTeamMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamMembers),\n      switchMap((args) =>\n        this.teamService.getTeamMembers(args.teamId).pipe(\n          map((members) => loadTeamMembersSuccess({ members: members })),\n          catchError((error) => of(loadTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadTeamProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadTeamProjects),\n      switchMap((args) =>\n        this.teamService.getTeamProjects(args.teamId).pipe(\n          map((projects) => loadTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(loadTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  updateTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(updateTeam),\n      switchMap((args) =>\n        this.teamService.updateTeam(args.teamId, args.dto).pipe(\n          map((team) => updateTeamSuccess({ team: team })),\n          catchError((error) => of(updateTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addTeamMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addTeamMembers),\n      switchMap((args) =>\n        this.teamService.addTeamMembers(args.teamId, args.ids).pipe(\n          map((members) => addTeamMembersSuccess({ members: members })),\n          catchError((error) => of(addTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeTeamMembers$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeTeamMembers),\n      switchMap((args) =>\n        this.teamService.removeTeamMembers(args.teamId, args.ids).pipe(\n          map((members) => removeTeamMembersSuccess({ members: members })),\n          catchError((error) => of(removeTeamMembersFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  addTeamProjects$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(addTeamProjects),\n      switchMap((args) =>\n        this.teamService.addTeamProjects(args.teamId, args.ids).pipe(\n          map((projects) => addTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(addTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  removeTeamProjectss$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(removeTeamProjects),\n      switchMap((args) =>\n        this.teamService.removeTeamProjects(args.teamId, args.ids).pipe(\n          map((projects) => removeTeamProjectsSuccess({ projects: projects })),\n          catchError((error) => of(removeTeamProjectsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SingleTeamState.html":{"url":"interfaces/SingleTeamState.html","title":"interface - SingleTeamState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SingleTeamState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/single-team/single-team.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            addMembersError\n                                        \n                                \n                                \n                                        \n                                            addMembersStatus\n                                        \n                                \n                                \n                                        \n                                            addProjectsError\n                                        \n                                \n                                \n                                        \n                                            addProjectsStatus\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            membersError\n                                        \n                                \n                                \n                                        \n                                            membersStatus\n                                        \n                                \n                                \n                                        \n                                            projects\n                                        \n                                \n                                \n                                        \n                                            projectsError\n                                        \n                                \n                                \n                                        \n                                            projectsStatus\n                                        \n                                \n                                \n                                        \n                                            removeMembersError\n                                        \n                                \n                                \n                                        \n                                            removeMembersStatus\n                                        \n                                \n                                \n                                        \n                                            removeProjectsError\n                                        \n                                \n                                \n                                        \n                                            removeProjectsStatus\n                                        \n                                \n                                \n                                        \n                                            singleTeam\n                                        \n                                \n                                \n                                        \n                                            singleTeamError\n                                        \n                                \n                                \n                                        \n                                            singleTeamStatus\n                                        \n                                \n                                \n                                        \n                                            updateTeamError\n                                        \n                                \n                                \n                                        \n                                            updateTeamStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addMembersError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addMembersError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addMembersStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addMembersStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:         User[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        membersError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        membersError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        membersStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        membersStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projects:         Project[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Project[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMembersError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMembersError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeMembersStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeMembersStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeProjectsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeProjectsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeProjectsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removeProjectsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleTeam\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleTeam:         Team | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singleTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        singleTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updateTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Team } from '../../domain/models/team.entity';\nimport {\n    addTeamMembers,\n  addTeamMembersFailure,\n  addTeamMembersSuccess,\n  addTeamProjects,\n  addTeamProjectsFailure,\n  addTeamProjectsSuccess,\n  loadTeamById,\n  loadTeamByIdFailure,\n  loadTeamByIdSuccess,\n  loadTeamMembers,\n  loadTeamMembersFailure,\n  loadTeamMembersSuccess,\n  loadTeamProjects,\n  loadTeamProjectsFailure,\n  loadTeamProjectsSuccess,\n  removeTeamMembers,\n  removeTeamMembersFailure,\n  removeTeamMembersSuccess,\n  removeTeamProjects,\n  removeTeamProjectsFailure,\n  removeTeamProjectsSuccess,\n  resetSingleTeamState,\n  updateTeam,\n  updateTeamFailure,\n  updateTeamSuccess,\n} from './single-team.actions';\nimport { User } from '../../domain/models/user.entity';\nimport { Project } from '../../domain/models/project.entity';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface SingleTeamState {\n  singleTeam: Team | null;\n  members: User[] | null;\n  projects: Project[] | null;\n  singleTeamError: any | null;\n  membersError: any | null;\n  updateTeamError: any | null;\n  projectsError: any | null;\n  addMembersError: any | null;\n  removeMembersError: any | null;\n  addProjectsError: any | null;\n  removeProjectsError: any | null;\n  singleTeamStatus: StateStatus;\n  membersStatus: StateStatus;\n  projectsStatus: StateStatus;\n  updateTeamStatus: StateStatus;\n  addMembersStatus: StateStatus;\n  removeMembersStatus: StateStatus;\n  addProjectsStatus: StateStatus;\n  removeProjectsStatus: StateStatus;\n}\n\nexport const initialState: SingleTeamState = {\n    singleTeam: null,\n    singleTeamError: undefined,\n    updateTeamError: undefined,\n    singleTeamStatus: StateStatus.PENDING,\n    updateTeamStatus: StateStatus.PENDING,\n    members: null,\n    membersError: undefined,\n    membersStatus: StateStatus.PENDING,\n    projects: null,\n    projectsError: undefined,\n    projectsStatus: StateStatus.PENDING,\n    addMembersError: undefined,\n    removeMembersError: undefined,\n    addProjectsError: undefined,\n    removeProjectsError: undefined,\n    addMembersStatus: StateStatus.PENDING,\n    removeMembersStatus: StateStatus.PENDING,\n    addProjectsStatus: StateStatus.PENDING,\n    removeProjectsStatus: StateStatus.PENDING\n};\n\nexport const singleTeamReducer = createReducer(\n  initialState,\n\n  on(resetSingleTeamState, () => (initialState)),\n\n  on(loadTeamById, (state) => ({\n    ...state,\n    singleTeamError: null,\n    singleTeamStatus: StateStatus.LOADING,\n  })),\n\n  on(loadTeamByIdSuccess, (state, { team }) => ({\n    ...state,\n    singleTeam: team,\n    singleTeamError: null,\n    singleTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  on(loadTeamByIdFailure, (state, { error }) => ({\n    ...state,\n    singleTeamError: error,\n    singleTeamStatus: StateStatus.ERROR,\n  })),\n\n  on(loadTeamMembers, (state) => ({\n    ...state,\n    membersError: null,\n    membersStatus: StateStatus.LOADING,\n  })),\n\n  on(loadTeamMembersSuccess, (state, { members }) => ({\n    ...state,\n    members: members,\n    membersError: null,\n    membersStatus: StateStatus.SUCCESS,\n  })),\n\n  on(loadTeamMembersFailure, (state, { error }) => ({\n    ...state,\n    membersError: error,\n    membersStatus: StateStatus.ERROR,\n  })),\n  \n  on(loadTeamProjects, (state) => ({\n    ...state,\n    projectsError: null,\n    projectsStatus: StateStatus.LOADING,\n  })),\n\n  on(loadTeamProjectsSuccess, (state, { projects }) => ({\n    ...state,\n    projects: projects,\n    projectsError: null,\n    projectsStatus: StateStatus.SUCCESS,\n  })),\n\n  on(loadTeamProjectsFailure, (state, { error }) => ({\n    ...state,\n    projectsError: error,\n    projectsStatus: StateStatus.ERROR,\n  })),\n\n  on(updateTeam, (state) => ({\n    ...state,\n    updateTeamError: null,\n    updateTeamStatus: StateStatus.LOADING,\n  })),\n\n  on(updateTeamSuccess, (state, { team }) => ({\n    ...state,\n    singleTeam: team,\n    updateTeamError: null,\n    updateTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  on(updateTeamFailure, (state, { error }) => ({\n    ...state,\n    updateTeamError: error,\n    updateTeamStatus: StateStatus.ERROR,\n  })),\n\n  on(addTeamMembers, (state) => ({\n    ...state,\n    addMembersError: null,\n    addMembersStatus: StateStatus.LOADING,\n  })),\n\n  on(addTeamMembersSuccess, (state, { members }) => ({\n    ...state,\n    members: members,\n    addMembersError: null,\n    addMembersStatus: StateStatus.SUCCESS,\n  })),\n\n  on(addTeamMembersFailure, (state, { error }) => ({\n    ...state,\n    addMembersError: error,\n    addMembersStatus: StateStatus.ERROR,\n  })),\n\n  on(removeTeamMembers, (state) => ({\n    ...state,\n    removeMembersError: null,\n    removeMembersStatus: StateStatus.LOADING,\n  })),\n\n  on(removeTeamMembersSuccess, (state, { members }) => ({\n    ...state,\n    members: members,\n    removeMembersError: null,\n    removeMembersStatus: StateStatus.SUCCESS,\n  })),\n\n  on(removeTeamMembersFailure, (state, { error }) => ({\n    ...state,\n    removeMembersError: error,\n    removeMembersStatus: StateStatus.ERROR,\n  })),\n\n\n  on(addTeamProjects, (state) => ({\n    ...state,\n    addProjectsError: null,\n    addProjectsStatus: StateStatus.LOADING,\n  })),\n\n  on(addTeamProjectsSuccess, (state, { projects }) => ({\n    ...state,\n    projects: projects,\n    addProjectsError: null,\n    addProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  on(addTeamProjectsFailure, (state, { error }) => ({\n    ...state,\n    addProjectsError: error,\n    addProjectsStatus: StateStatus.ERROR,\n  })),\n\n  on(removeTeamProjects, (state) => ({\n    ...state,\n    removeProjectsError: null,\n    removeProjectsStatus: StateStatus.LOADING,\n  })),\n\n  on(removeTeamProjectsSuccess, (state, { projects }) => ({\n    ...state,\n    projects: projects,\n    removeProjectsError: null,\n    removeProjectsStatus: StateStatus.SUCCESS,\n  })),\n\n  on(removeTeamProjectsFailure, (state, { error }) => ({\n    ...state,\n    removeProjectsError: error,\n    removeProjectsStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatsComponent.html":{"url":"components/StatsComponent.html","title":"component - StatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/stats/stats.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stats\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n            \n                styleUrl\n                ./stats.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-stats',\n  standalone: true,\n  imports: [],\n  templateUrl: './stats.component.html',\n  styleUrl: './stats.component.scss'\n})\nexport class StatsComponent {\n\n}\n\n    \n\n    \n        stats works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'stats works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SupportComponent.html":{"url":"components/SupportComponent.html","title":"component - SupportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SupportComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/help/support/support.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-support\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./support.component.html\n            \n\n\n\n            \n                styleUrl\n                ./support.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-support',\n  standalone: true,\n  imports: [],\n  templateUrl: './support.component.html',\n  styleUrl: './support.component.scss'\n})\nexport class SupportComponent {\n\n}\n\n    \n\n    \n        support works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'support works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SupportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Team.html":{"url":"interfaces/Team.html","title":"interface - Team","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Team\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/team.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            teamId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Team {\n    teamId: string;\n    slug: string;\n    createdAt: Date;\n    updatedAt: Date;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamDto.html":{"url":"interfaces/TeamDto.html","title":"interface - TeamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/team.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            teamId\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teamId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TeamDto {\n  teamId: string;\n  slug: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamEffects.html":{"url":"injectables/TeamEffects.html","title":"injectable - TeamEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/team/team.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createTeam$\n                            \n                            \n                                deleteTeam$\n                            \n                            \n                                loadMyTeams$\n                            \n                            \n                                loadOrganizationTeams$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(teamService: TeamService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/team/team.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        teamService\n                                                  \n                                                        \n                                                                        TeamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createTeam),\n      switchMap((request) =>\n        this.teamService.createNewTeam(request).pipe(\n          map((team) => createTeamSuccess(team)),\n          catchError((error) => of(createTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTeam$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(deleteTeam),\n      switchMap((request) =>\n        this.teamService.deleteTeam(request.teamId).pipe(\n          map(() => deleteTeamSuccess({teamId: request.teamId})),\n          catchError((error) => of(deleteTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMyTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyTeams),\n      switchMap(() =>\n        this.teamService.getMyTeams().pipe(\n          map((teams) => loadMyTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadMyTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadOrganizationTeams$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationTeams),\n      switchMap(() =>\n        this.teamService.getOrganizationTeams().pipe(\n          map((teams) => loadOrganizationTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadOrganizationTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/team/team.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { switchMap, map, catchError, of } from \"rxjs\";\nimport { TeamService } from \"../../services/api/team.api.service\";\nimport { createTeam, createTeamFailure, createTeamSuccess, deleteTeam, deleteTeamFailure, deleteTeamSuccess, loadMyTeams, loadMyTeamsFailure, loadMyTeamsSuccess, loadOrganizationTeams, loadOrganizationTeamsFailure, loadOrganizationTeamsSuccess } from \"./team.actions\";\n\n@Injectable()\nexport class TeamEffects {\n  constructor(\n    private teamService: TeamService,\n    private actions$: Actions,\n  ) {}\n\n  loadOrganizationTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadOrganizationTeams),\n      switchMap(() =>\n        this.teamService.getOrganizationTeams().pipe(\n          map((teams) => loadOrganizationTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadOrganizationTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  loadMyTeams$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadMyTeams),\n      switchMap(() =>\n        this.teamService.getMyTeams().pipe(\n          map((teams) => loadMyTeamsSuccess({teams: teams})),\n          catchError((error) => of(loadMyTeamsFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createTeam),\n      switchMap((request) =>\n        this.teamService.createNewTeam(request).pipe(\n          map((team) => createTeamSuccess(team)),\n          catchError((error) => of(createTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  deleteTeam$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(deleteTeam),\n      switchMap((request) =>\n        this.teamService.deleteTeam(request.teamId).pipe(\n          map(() => deleteTeamSuccess({teamId: request.teamId})),\n          catchError((error) => of(deleteTeamFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamService.html":{"url":"injectables/TeamService.html","title":"injectable - TeamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/team.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTeamMembers\n                            \n                            \n                                addTeamProjects\n                            \n                            \n                                createNewTeam\n                            \n                            \n                                deleteTeam\n                            \n                            \n                                getMyTeams\n                            \n                            \n                                getOrganizationTeams\n                            \n                            \n                                getTeamById\n                            \n                            \n                                getTeamMembers\n                            \n                            \n                                getTeamProjects\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                removeTeamMembers\n                            \n                            \n                                removeTeamProjects\n                            \n                            \n                                updateTeam\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/team.api.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTeamMembers\n                        \n                    \n                \n            \n            \n                \naddTeamMembers(teamId: string, ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTeamProjects\n                        \n                    \n                \n            \n            \n                \naddTeamProjects(teamId: string, ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createNewTeam\n                        \n                    \n                \n            \n            \n                \ncreateNewTeam(dto: CreateTeamRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateTeamRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteTeam\n                        \n                    \n                \n            \n            \n                \ndeleteTeam(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMyTeams\n                        \n                    \n                \n            \n            \n                \ngetMyTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganizationTeams\n                        \n                    \n                \n            \n            \n                \ngetOrganizationTeams()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeamById\n                        \n                    \n                \n            \n            \n                \ngetTeamById(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeamMembers\n                        \n                    \n                \n            \n            \n                \ngetTeamMembers(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeamProjects\n                        \n                    \n                \n            \n            \n                \ngetTeamProjects(teamId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n            \n                \nisSlugTaken(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTeamMembers\n                        \n                    \n                \n            \n            \n                \nremoveTeamMembers(teamId: string, ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeTeamProjects\n                        \n                    \n                \n            \n            \n                \nremoveTeamProjects(teamId: string, ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTeam\n                        \n                    \n                \n            \n            \n                \nupdateTeam(teamId: string, dto: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/team.api.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teamId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dto\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ProjectDto } from '../../domain/dto/project.dto';\nimport { CreateTeamRequestDto } from '../../domain/dto/requests/create-team-request.dto';\nimport { TeamDto } from '../../domain/dto/team.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { Project } from '../../domain/models/project.entity';\nimport { User } from '../../domain/models/user.entity';\nimport { api } from './api';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TeamService {\n  constructor(private http: HttpClient) {}\n\n  getOrganizationTeams(): Observable {\n    return this.http.get(api.teamUrl, api.authOptions);\n  }\n\n  getMyTeams(): Observable {\n    return this.http.get(api.teamUrl + '/my', api.authOptions);\n  }\n\n  getTeamById(teamId: string): Observable {\n    return this.http.get(api.teamUrl + '/' + teamId, api.authOptions);\n  }\n\n  getTeamMembers(teamId: string): Observable {\n    return this.http.get(\n      api.teamUrl + `/${teamId}/members`,\n      api.authOptions,\n    );\n  }\n\n  getTeamProjects(teamId: string): Observable {\n    return this.http.get(\n      api.teamUrl + `/${teamId}/projects`,\n      api.authOptions,\n    );\n  }\n\n  isSlugTaken(slug: string): Observable {\n    return this.http.get(\n      api.teamUrl + '/slug/taken?slug=' + slug,\n      api.authOptions,\n    );\n  }\n\n  createNewTeam(dto: CreateTeamRequestDto): Observable {\n    return this.http.post(api.teamUrl, dto, api.authOptions);\n  }\n\n  deleteTeam(teamId: string) {\n    return this.http.delete(api.teamUrl + '/' + teamId, api.authOptions);\n  }\n\n  updateTeam(teamId: string, dto: { slug: string }): Observable {\n    return this.http.patch(\n      api.teamUrl + '/' + teamId,\n      dto,\n      api.authOptions,\n    );\n  }\n\n  addTeamMembers(teamId: string, ids: string[]): Observable {\n    return this.http.put(\n      api.teamUrl + `/${teamId}/members`,\n      undefined,\n      {\n        ...api.authOptions,\n        params: { ids: ids },\n      },\n    );\n  }\n\n  removeTeamMembers(teamId: string, ids: string[]): Observable {\n    return this.http.delete(api.teamUrl + `/${teamId}/members`, {\n      ...api.authOptions,\n      params: { ids: ids },\n    });\n  }\n\n  addTeamProjects(teamId: string, ids: string[]): Observable {\n    return this.http.put(\n      api.teamUrl + `/${teamId}/projects`,\n      undefined,\n      {\n        ...api.authOptions,\n        params: { ids: ids },\n      },\n    );\n  }\n\n  removeTeamProjects(teamId: string, ids: string[]): Observable {\n    return this.http.delete(api.teamUrl + `/${teamId}/projects`, {\n      ...api.authOptions,\n      params: { ids: ids },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TeamState.html":{"url":"interfaces/TeamState.html","title":"interface - TeamState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TeamState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/team/team.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createOrganizationTeamError\n                                        \n                                \n                                \n                                        \n                                            createOrganizationTeamStatus\n                                        \n                                \n                                \n                                        \n                                            deleteTeamError\n                                        \n                                \n                                \n                                        \n                                            deleteTeamStatus\n                                        \n                                \n                                \n                                        \n                                            myTeams\n                                        \n                                \n                                \n                                        \n                                            myTeamsError\n                                        \n                                \n                                \n                                        \n                                            myTeamsStatus\n                                        \n                                \n                                \n                                        \n                                            organizationTeams\n                                        \n                                \n                                \n                                        \n                                            organizationTeamsError\n                                        \n                                \n                                \n                                        \n                                            organizationTeamsStatus\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createOrganizationTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createOrganizationTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createOrganizationTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createOrganizationTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteTeamError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteTeamError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteTeamStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleteTeamStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeams:         Team[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeamsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeamsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        myTeamsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        myTeamsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeams:         Team[] | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Team[] | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeamsError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeamsError:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationTeamsStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationTeamsStatus:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Team } from '../../domain/models/team.entity';\nimport {\n  createTeam,\n  createTeamFailure,\n  createTeamSuccess,\n  deleteTeam,\n  deleteTeamFailure,\n  deleteTeamSuccess,\n  loadMyTeams,\n  loadMyTeamsSuccess,\n  loadOrganizationTeams,\n  loadOrganizationTeamsFailure,\n  loadOrganizationTeamsSuccess,\n} from './team.actions';\n\nexport interface TeamState {\n  organizationTeams: Team[] | null;\n  myTeams: Team[] | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  organizationTeamsError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  myTeamsError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createOrganizationTeamError: any | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  deleteTeamError: any | null;\n  organizationTeamsStatus: StateStatus;\n  myTeamsStatus: StateStatus;\n  createOrganizationTeamStatus: StateStatus;\n  deleteTeamStatus: StateStatus;\n}\n\nexport const initialState: TeamState = {\n  organizationTeams: null,\n  organizationTeamsError: undefined,\n  organizationTeamsStatus: StateStatus.PENDING,\n  myTeams: null,\n  myTeamsError: undefined,\n  myTeamsStatus: StateStatus.PENDING,\n  createOrganizationTeamError: undefined,\n  createOrganizationTeamStatus: StateStatus.PENDING,\n  deleteTeamError: undefined,\n  deleteTeamStatus: StateStatus.PENDING,\n};\n\nexport const teamReducer = createReducer(\n  initialState,\n\n  //Handle loading organization teams\n  on(loadOrganizationTeams, (state) => ({\n    ...state,\n    organizationTeamsError: null,\n    organizationTeamsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadOrganizationTeamsSuccess, (state, { teams }) => ({\n    ...state,\n    organizationTeams: teams,\n    organizationTeamsError: null,\n    organizationTeamsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationTeamsFailure, (state, { error }) => ({\n    ...state,\n    organizationTeamsError: error,\n    organizationTeamsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle loading current user teams\n  on(loadMyTeams, (state) => ({\n    ...state,\n    myTeamsError: null,\n    myTeamsStatus: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadMyTeamsSuccess, (state, { teams }) => ({\n    ...state,\n    myTeams: teams,\n    myTeamsError: null,\n    myTeamsStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadOrganizationTeamsFailure, (state, { error }) => ({\n    ...state,\n    myTeamsError: error,\n    myTeamsStatus: StateStatus.ERROR,\n  })),\n\n  //Handle create new team\n  on(createTeam, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle create new team success\n  on(createTeamSuccess, (state, team) => ({\n    ...state,\n    organizationTeams: [...(state.organizationTeams || []), team],\n    createOrganizationTeamError: null,\n    createOrganizationTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new team failure\n  on(createTeamFailure, (state, { error }) => ({\n    ...state,\n    createOrganizationTeamError: error,\n    createOrganizationTeamStatus: StateStatus.ERROR,\n  })),\n\n  on(deleteTeam, (state) => ({\n    ...state,\n    deleteTeamError: null,\n    deleteTeamStatus: StateStatus.LOADING,\n  })),\n\n  on(deleteTeamSuccess, (state, { teamId }) => ({\n    ...state,\n    organizationTeams:\n      state.organizationTeams?.filter((team) => team.teamId !== teamId) ?? null,\n    deleteTeamError: null,\n    deleteTeamStatus: StateStatus.SUCCESS,\n  })),\n\n  on(deleteTeamFailure, (state, { error }) => ({\n    ...state,\n    deleteTeamError: error,\n    deleteTeamStatus: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamsComponent.html":{"url":"components/TeamsComponent.html","title":"component - TeamsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TeamsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/teams/teams.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teams\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                AccessDeniedComponent\n                            PanelModule\n                                TeamsTableComponent\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./teams.component.html\n            \n\n\n\n            \n                styleUrl\n                ./teams.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasCreatePermission\n                            \n                            \n                                hasDeletePermission\n                            \n                            \n                                hasReadPermission\n                            \n                            \n                                isLoadingMyTeams\n                            \n                            \n                                isLoadingOrganizationTeams\n                            \n                            \n                                myTeams\n                            \n                            \n                                organizationTeams\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/teams/teams.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/settings/teams/teams.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hasCreatePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.CREATE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDeletePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasReadPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingMyTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingMyTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingOrganizationTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganizationTeams)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        myTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organizationTeams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store\n    .select(selectOrganizationTeams)\n    .pipe(map((value) => [...(value ?? [])]))\n                    \n                \n                    \n                        \n                                Defined in src/app/features/settings/teams/teams.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Permission } from '../../../core/domain/models/enums/permission.enum';\nimport { ResourceType } from '../../../core/domain/models/enums/resource-type.enum';\nimport { AppState } from '../../../core/state/app.state';\nimport { selectHasPermission } from '../../../core/state/auth/auth.selectors';\nimport { AccessDeniedComponent } from '../../../shared/components/access-denied/access-denied.component';\nimport { PanelModule } from 'primeng/panel';\nimport { TeamsTableComponent } from '../../../shared/components/teams-table/teams-table.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport {\n  isLoadingMyTeams,\n  isLoadingOrganizationTeams,\n  selectMyTeams,\n  selectOrganizationTeams,\n} from '../../../core/state/team/team.selectors';\nimport {\n  loadMyTeams,\n  loadOrganizationTeams,\n} from '../../../core/state/team/team.actions';\nimport { map } from 'rxjs';\n\n@Component({\n  selector: 'app-teams',\n  standalone: true,\n  templateUrl: './teams.component.html',\n  styleUrl: './teams.component.scss',\n  imports: [\n    CommonModule,\n    AccessDeniedComponent,\n    PanelModule,\n    TeamsTableComponent,\n    TranslateModule,\n  ],\n})\nexport class TeamsComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  hasReadPermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.READ),\n  );\n  hasDeletePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.DELETE),\n  );\n  hasCreatePermission = this.store.select(\n    selectHasPermission(ResourceType.TEAM, Permission.CREATE),\n  );\n\n  isLoadingOrganizationTeams = this.store.select(isLoadingOrganizationTeams);\n  isLoadingMyTeams = this.store.select(isLoadingMyTeams);\n  organizationTeams = this.store\n    .select(selectOrganizationTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n  myTeams = this.store\n    .select(selectMyTeams)\n    .pipe(map((value) => [...(value ?? [])]));\n\n  ngOnInit(): void {\n    this.store.dispatch(loadOrganizationTeams());\n    this.store.dispatch(loadMyTeams());\n  }\n}\n\n    \n\n    \n        @if (hasReadPermission | async) {\n  \n    \n  \n\n  \n    \n  \n} @else {\n  \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (hasReadPermission | async) {                } @else {  }'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TeamsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/token.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n    accessToken: string;\n    refreshToken: string;\n    expiresIn: 0;\n    refreshExpiresIn: 0;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenDto.html":{"url":"interfaces/TokenDto.html","title":"interface - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenDto {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: 0;\n  refreshExpiresIn: 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/topbar/topbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            DropdownModule\n                            AvatarModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./topbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                languages\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    \n                                menu\n                            \n                            \n                                    \n                                menuButton\n                            \n                            \n                                organization\n                            \n                            \n                                selectedLanguage\n                            \n                            \n                                    \n                                topbarMenuButton\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getAppName\n                            \n                            \n                                goToProfilePage\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, router: Router, store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(language: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToProfilePage\n                        \n                    \n                \n            \n            \n                \ngoToProfilePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [{ flag: 'gb', label: 'English', value: 'en' }]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('menubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        topbarMenuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { RippleModule } from 'primeng/ripple';\nimport { environment } from '../../../../../environments/environment';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport { signOut } from '../../../../core/state/auth/auth.actions';\nimport { selectCurrentUser } from '../../../../core/state/auth/auth.selectors';\nimport { selectCurrentOrganization } from '../../../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-topbar',\n  standalone: true,\n  imports: [\n    CommonModule,\n    DropdownModule,\n    AvatarModule,\n    TranslateModule,\n    ButtonModule,\n    RippleModule,\n    FormsModule,\n  ],\n  templateUrl: './topbar.component.html',\n  styleUrl: './topbar.component.scss',\n})\nexport class TopbarComponent {\n  @ViewChild('menubutton') menuButton!: ElementRef;\n  @ViewChild('topbarmenubutton') topbarMenuButton!: ElementRef;\n  @ViewChild('topbarmenu') menu!: ElementRef;\n\n  constructor(\n    public layoutService: LayoutService,\n    private router: Router,\n    private store: Store,\n    private translateService: TranslateService,\n  ) {\n    this.selectedLanguage = this.languages[0];\n  }\n\n  items: MenuItem[] = [];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  languages: any[] = [{ flag: 'gb', label: 'English', value: 'en' }];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  selectedLanguage: any;\n\n  organization = this.store.select(selectCurrentOrganization);\n  user = this.store.select(selectCurrentUser);\n\n  logout() {\n    this.store.dispatch(signOut());\n    this.router.navigate(['/auth']);\n  }\n\n  goToProfilePage() {\n    this.router.navigate(['/home/settings/account']);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  changeLanguage(language: any) {\n    this.translateService.use(language.value);\n  }\n\n  getAppName() {\n    return environment.appName;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{ getAppName() }}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n      \n        \n          \n            \n            {{ selectedLanguage.label }}\n          \n        \n        \n          \n            \n            {{ language.label }}\n          \n        \n      \n      \n        \n        Logout\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ getAppName() }}                                                                        {{ selectedLanguage.label }}                                                            {{ language.label }}                                              Logout            '\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: Role;\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n\n  export interface Role {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from '../models/enums/permission.enum';\nimport { ResourceType } from '../models/enums/resource-type.enum';\n\nexport interface UserDto {\n  userId: string;\n  username: string;\n  lastLoginTime: Date;\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileIconUrl: string | null;\n  role: {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission[];\n      }\n    ];\n    internal: boolean;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n  activated: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VitalsComponent.html":{"url":"components/VitalsComponent.html","title":"component - VitalsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VitalsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/peformance/vitals/vitals.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-vitals\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./vitals.component.html\n            \n\n\n\n            \n                styleUrl\n                ./vitals.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-vitals',\n  standalone: true,\n  imports: [],\n  templateUrl: './vitals.component.html',\n  styleUrl: './vitals.component.scss'\n})\nexport class VitalsComponent {\n\n}\n\n    \n\n    \n        vitals works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'vitals works!'\n    var COMPONENTS = [{'name': 'AccessDeniedComponent', 'selector': 'app-access-denied'},{'name': 'AlertsComponent', 'selector': 'app-alerts'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CloseComponent', 'selector': 'app-close'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'DevicesComponent', 'selector': 'app-devices'},{'name': 'DocumentationComponent', 'selector': 'app-documentation'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'GuidesComponent', 'selector': 'app-guides'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'IssuesComponent', 'selector': 'app-issues'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MemberPickerComponent', 'selector': 'app-member-picker'},{'name': 'MembersComponent', 'selector': 'app-members'},{'name': 'MembersTableComponent', 'selector': 'app-members-table'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'MessagesComponent', 'selector': 'app-messages'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'NotificationsComponent', 'selector': 'app-notifications'},{'name': 'OrganizationComponent', 'selector': 'app-organization'},{'name': 'ProjectDetailsComponent', 'selector': 'app-project-details'},{'name': 'ProjectPickerComponent', 'selector': 'app-project-picker'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ProjectsComponent', 'selector': 'app-projects-settings'},{'name': 'ProjectsTableComponent', 'selector': 'app-projects-table'},{'name': 'QueriesComponent', 'selector': 'app-queries'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ReleasesComponent', 'selector': 'app-releases'},{'name': 'ReplaysComponent', 'selector': 'app-replays'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'ResourcesComponent', 'selector': 'app-resources'},{'name': 'ScreenLoadsComponent', 'selector': 'app-screen-loads'},{'name': 'SdksComponent', 'selector': 'app-sdks'},{'name': 'SecurityComponent', 'selector': 'app-security'},{'name': 'SessionsComponent', 'selector': 'app-sessions'},{'name': 'SettingsComponent', 'selector': 'app-settings'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'SingleProjectCardComponent', 'selector': 'app-single-project-card'},{'name': 'SingleTeamComponent', 'selector': 'app-single-team'},{'name': 'StatsComponent', 'selector': 'app-stats'},{'name': 'SupportComponent', 'selector': 'app-support'},{'name': 'TeamsComponent', 'selector': 'app-teams'},{'name': 'TeamsTableComponent', 'selector': 'app-teams-table'},{'name': 'TopbarComponent', 'selector': 'app-topbar'},{'name': 'VitalsComponent', 'selector': 'app-vitals'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VitalsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            - : ^0.0.1\n        \n            @angular/animations : ^17.2.3\n        \n            @angular/cdk : ^17.2.1\n        \n            @angular/common : ^17.2.3\n        \n            @angular/compiler : ^17.2.3\n        \n            @angular/core : ^17.2.3\n        \n            @angular/forms : ^17.2.3\n        \n            @angular/platform-browser : ^17.2.3\n        \n            @angular/platform-browser-dynamic : ^17.2.3\n        \n            @angular/platform-server : ^17.2.3\n        \n            @angular/router : ^17.2.3\n        \n            @angular/ssr : ^17.2.2\n        \n            @ngrx/effects : ^17.1.1\n        \n            @ngrx/store : ^17.1.1\n        \n            @ngrx/store-devtools : ^17.1.1\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @vercel/analytics : ^1.2.2\n        \n            @vercel/speed-insights : ^1.0.9\n        \n            chart.js : ^4.4.2\n        \n            express : ^4.18.2\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^17.6.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            PlatformType   (src/.../platform-type.enum.ts)\n                        \n                        \n                            ResourceType   (src/.../resource-type.enum.ts)\n                        \n                        \n                            StateStatus   (src/.../state-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/domain/models/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                Value : CREATE\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                Value : READ\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                Value : UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n                        \n                            \n                                Value : DELETE\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/platform-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PlatformType\n                    \n                \n                        \n                            \n                                 ANDROID\n                            \n                        \n                        \n                            \n                                Value : ANDROID\n                            \n                        \n                        \n                            \n                                 WEB\n                            \n                        \n                        \n                            \n                                Value : WEB\n                            \n                        \n                        \n                            \n                                 IOS\n                            \n                        \n                        \n                            \n                                Value : IOS\n                            \n                        \n                        \n                            \n                                 SERVER\n                            \n                        \n                        \n                            \n                                Value : SERVER\n                            \n                        \n                        \n                            \n                                 NODE\n                            \n                        \n                        \n                            \n                                Value : NODE\n                            \n                        \n                        \n                            \n                                 REACT\n                            \n                        \n                        \n                            \n                                Value : REACT\n                            \n                        \n                        \n                            \n                                 ANGULAR\n                            \n                        \n                        \n                            \n                                Value : ANGULAR\n                            \n                        \n                        \n                            \n                                 VUE\n                            \n                        \n                        \n                            \n                                Value : VUE\n                            \n                        \n                        \n                            \n                                 SVELTE\n                            \n                        \n                        \n                            \n                                Value : SVELTE\n                            \n                        \n                        \n                            \n                                 SPRING\n                            \n                        \n                        \n                            \n                                Value : SPRING\n                            \n                        \n                        \n                            \n                                 GO\n                            \n                        \n                        \n                            \n                                Value : GO\n                            \n                        \n                        \n                            \n                                 JAVA\n                            \n                        \n                        \n                            \n                                Value : JAVA\n                            \n                        \n                        \n                            \n                                 C\n                            \n                        \n                        \n                            \n                                Value : C\n                            \n                        \n                        \n                            \n                                 CPP\n                            \n                        \n                        \n                            \n                                Value : CPP\n                            \n                        \n                        \n                            \n                                 JS\n                            \n                        \n                        \n                            \n                                Value : JS\n                            \n                        \n                        \n                            \n                                 PYTHON\n                            \n                        \n                        \n                            \n                                Value : PYTHON\n                            \n                        \n                        \n                            \n                                 RUST\n                            \n                        \n                        \n                            \n                                Value : RUST\n                            \n                        \n                        \n                            \n                                 RUBY\n                            \n                        \n                        \n                            \n                                Value : RUBY\n                            \n                        \n                        \n                            \n                                 LARAVEL\n                            \n                        \n                        \n                            \n                                Value : LARAVEL\n                            \n                        \n                        \n                            \n                                 PHP\n                            \n                        \n                        \n                            \n                                Value : PHP\n                            \n                        \n                        \n                            \n                                 EXPRESS\n                            \n                        \n                        \n                            \n                                Value : EXPRESS\n                            \n                        \n                        \n                            \n                                 NEST\n                            \n                        \n                        \n                            \n                                Value : NEST\n                            \n                        \n                        \n                            \n                                 CS\n                            \n                        \n                        \n                            \n                                Value : CS\n                            \n                        \n                        \n                            \n                                 OTHER\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/resource-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 COMMENT\n                            \n                        \n                        \n                            \n                                Value : COMMENT\n                            \n                        \n                        \n                            \n                                 DEBUG_FILE\n                            \n                        \n                        \n                            \n                                Value : DEBUG_FILE\n                            \n                        \n                        \n                            \n                                 DEVICE_STATE\n                            \n                        \n                        \n                            \n                                Value : DEVICE_STATE\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                Value : ISSUE\n                            \n                        \n                        \n                            \n                                 LOG_ENTRY\n                            \n                        \n                        \n                            \n                                Value : LOG_ENTRY\n                            \n                        \n                        \n                            \n                                 LOG_SESSION\n                            \n                        \n                        \n                            \n                                Value : LOG_SESSION\n                            \n                        \n                        \n                            \n                                 LOG_SOURCE\n                            \n                        \n                        \n                            \n                                Value : LOG_SOURCE\n                            \n                        \n                        \n                            \n                                 ORGANIZATION\n                            \n                        \n                        \n                            \n                                Value : ORGANIZATION\n                            \n                        \n                        \n                            \n                                 PLATFORM\n                            \n                        \n                        \n                            \n                                Value : PLATFORM\n                            \n                        \n                        \n                            \n                                 PROJECT\n                            \n                        \n                        \n                            \n                                Value : PROJECT\n                            \n                        \n                        \n                            \n                                 PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                Value : PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                Value : ROLE\n                            \n                        \n                        \n                            \n                                 TEAM\n                            \n                        \n                        \n                            \n                                Value : TEAM\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n                        \n                            \n                                 PERMISSION\n                            \n                        \n                        \n                            \n                                Value : PERMISSION\n                            \n                        \n                        \n                            \n                                 INVITATION\n                            \n                        \n                        \n                            \n                                Value : INVITATION\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/state-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StateStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : loading\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            convertToDate   (src/.../date.interceptor.ts)\n                        \n                        \n                            hasPermission   (src/.../auth.selectors.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.config.ts)\n                        \n                        \n                            isIso8601   (src/.../date.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/interceptors/date.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        convertToDate\n                        \n                    \n                \n            \n            \n                \nconvertToDate(body: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isIso8601\n                        \n                    \n                \n            \n            \n                \nisIso8601(value: any)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/state/auth/auth.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        hasPermission\n                        \n                    \n                \n            \n            \n                \nhasPermission(user: User, permissionType: ResourceType, permissionValue: Permission)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                permissionType\n                                            \n                                                            ResourceType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                permissionValue\n                                            \n                                                            Permission\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\nLogHub - Remote Centralized Logging Solution (CMS)\nThis project is a Angular CMS application that provides an UI for LogHub (remote centralized logging solution). It allows you to collect and manage logs from distributed applications in a centralized location, enhancing troubleshooting and monitoring capabilities.\nThis project was generated with Angular CLI version 17.1.3.\nThis project utilizes next features of angular:\n\nAngular 17\nSSR (Server Side Rendering)\nStandalone Components\nRouter (For url routing)\nHTTP Client (For api calls)\nNGRX (For state management)\nPrimeNG (For UI Components)\n\nTechnologies Used\n\n\n\n\n\n\n\n\n\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nBuild Docker Image\nYou can deploy the application using Docker. First, build your own image:\nExample :docker build -t your-domain/your-image-name:your-version .Here is the full example:\nExample :docker build -t dradman/loghub-cms:1 .\nThen you can run your own image with command:\nExample :docker run -p 80:4000 your-full-image-name Here is the full example:\nExample :docker run -p 80:4000 dradman/loghub-cms:1 . Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nDeploying with Docker\nYou can deploy the application using Docker. First, pull the latest Docker image from the GitHub Container Registry:\nExample :docker pull ghcr.io/dradman/loghub-cms:latestThen, run the Docker container:\nExample :docker run -p 80:4000 ghcr.io/dradman/loghub-cms:latestImportant: Make sure that all environment variables are set correctly.\nDocker-Compose\nYou can also run application using docker compose. See an example here\nEnvironment Variables\nImportant: Due to angular & general limitation since application is served to local browser you can't use standard .env to update environment varaibles.\nIf you wish to change any of the variables you will have to build your own version of application where will change these files\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    51 Components\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    40 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
