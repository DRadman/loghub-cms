var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.515,1,1.179]],["body/components/AppComponent.html",[0,0.916,1,2.19,2,1.834,3,0.308,4,0.243,5,1.742,6,1.742,7,1.742,8,0.243,9,4.14,10,1.742,11,2.706,12,2.706,13,2.541,14,2.038,15,1.652,16,2.151,17,5.544,18,2.151,19,5.971,20,2.401,21,5.971,22,1.41,23,4.836,24,3.455,25,1.143,26,4.836,27,1.205,28,0.021,29,0.803,30,0.275,31,1.143,32,2.863,33,0.859,34,0.869,35,2.058,36,1.944,37,1.944,38,0.308,39,0.869,40,3.338,41,4.836,42,4.836,43,4.836,44,1.742,45,2.151,46,2.151,47,1.742,48,2.436,49,1.742,50,1.742,51,1.566,52,1.742,53,1.566,54,1.742,55,1.566,56,1.485,57,1.742,58,1.566,59,1.742,60,1.566,61,1.485,62,2.151,63,1.566,64,1.742,65,1.566,66,1.742,67,1.566,68,1.742,69,1.566,70,1.742,71,1.566,72,1.742,73,1.566,74,1.41,75,1.566,76,1.742,77,1.566,78,1.742,79,1.742,80,1.742,81,0.016,82,0.016]],["title/interfaces/AppConfig.html",[83,0.336,84,2.136]],["body/interfaces/AppConfig.html",[3,0.13,4,0.103,8,0.103,13,0.869,15,1.683,28,0.021,29,0.401,30,0.395,33,0.429,34,0.367,38,0.206,39,1.228,81,0.009,82,0.009,83,0.649,84,4.009,85,0.565,86,1.409,87,2.336,88,3.441,89,2.053,90,2.774,91,5.169,92,1.561,93,2.774,94,0.607,95,3.274,96,4.359,97,4.359,98,4.201,99,4.331,100,4.423,101,4.577,102,2.05,103,5.047,104,4.481,105,3.157,106,3.828,107,3.331,108,4.001,109,3.043,110,4.199,111,2.917,112,3.653,113,3.98,114,3.382,115,3.059,116,2.357,117,3.783,118,2.547,119,4.093,120,0.13,121,1.07,122,4.239,123,3.157,124,3.157,125,3.641,126,3.662,127,3.157,128,3.157,129,1.946,130,3.98,131,3.059,132,2.233,133,3.522,134,3.019,135,3.837,136,4.285,137,2.462,138,2.462,139,2.195,140,2.233,141,2.56,142,2.233,143,3.763,144,2.233,145,2.462,146,2.898,147,3.226,148,2.462,149,2.462,150,3.157,151,2.233,152,3.028,153,2.05,154,2.508,155,2.233,156,2.233,157,1.453,158,1.242,159,2.547,160,3.26,161,3.243,162,4.231,163,3.795,164,2.462,165,0.725,166,4.331,167,1.614,168,4.001,169,2.462,170,3.065,171,1.553,172,4.231,173,4.231,174,4.231,175,4.389,176,4.038,177,4.038,178,3.441,179,4.231,180,1.553,181,1.553,182,1.409,183,1.409,184,3.662,185,1.409,186,4.038,187,4.389,188,3.059,189,3.179,190,1.553,191,2.05,192,3.481,193,3.059,194,1.553,195,2.924,196,3.483,197,2.547,198,2.462,199,2.05,200,0.994,201,1.553,202,1.553,203,2.462,204,1.115,205,2.462,206,3.159,207,2.05,208,1.553,209,0.978,210,1.293,211,1.553,212,1.197,213,1.043,214,2.05,215,1.409,216,2.462,217,2.774,218,1.409,219,1.201,220,4.389,221,1.718,222,3.157,223,2.498,224,2.233,225,3.157,226,2.462,227,3.157,228,2.336,229,2.064,230,1.767,231,2.71,232,2.233,233,1.897,234,2.774,235,4.389,236,1.553,237,1.293,238,0.697,239,0.697,240,0.661,241,0.697,242,0.735,243,0.735,244,1.897,245,1.897,246,2.462,247,2.462,248,2.05,249,2.682,250,2.462,251,2.233,252,1.553,253,1.553,254,2.462,255,1.553,256,3.059,257,3.059,258,2.462,259,2.462,260,3.059,261,1.553,262,3.059,263,1.197,264,1.553,265,3.059,266,1.393,267,2.462,268,2.462,269,1.553,270,1.553,271,1.333,272,1.553,273,2.233,274,2.462,275,2.462,276,3.059,277,2.462,278,2.774,279,3.059,280,2.462,281,1.553,282,1.293,283,1.553,284,1.553,285,2.462,286,1.553,287,1.293,288,1.553,289,1.553]],["title/interfaces/AppState.html",[83,0.336,290,1.55]],["body/interfaces/AppState.html",[3,0.344,4,0.272,8,0.272,28,0.021,30,0.363,33,0.931,38,0.432,81,0.017,82,0.017,83,0.498,85,1.494,94,0.637,120,0.344,290,2.716,291,4.111,292,4.71,293,4.71,294,4.044,295,5.402,296,4.405,297,5.402,298,4.044,299,5.402,300,4.405,301,5.402,302,2.179,303,4.111,304,4.111]],["title/components/AuthComponent.html",[0,0.515,51,1.179]],["body/components/AuthComponent.html",[0,0.929,1,1.617,2,1.871,3,0.318,4,0.251,5,1.799,6,1.799,7,1.799,8,0.251,10,1.799,11,2.714,12,2.714,14,2.079,15,1.685,16,2.194,17,5.624,18,2.194,20,2.448,28,0.02,29,0.755,33,0.807,34,0.897,35,2.126,38,0.318,39,0.897,44,1.799,45,2.194,46,2.194,47,1.799,48,2.464,49,1.799,50,1.799,51,2.214,52,1.799,53,1.617,54,1.799,55,1.617,56,1.534,57,1.799,58,1.617,59,1.799,60,1.617,61,1.534,62,2.194,63,1.617,64,1.799,65,1.617,66,1.799,67,1.617,68,1.799,69,1.617,70,1.799,71,1.617,72,1.799,73,1.617,74,1.456,75,1.617,76,1.799,77,1.617,78,1.799,79,1.799,80,1.799,81,0.017,82,0.017,305,4.275,306,4.635,307,6.09,308,6.09]],["title/injectables/AuthEffects.html",[165,0.816,294,2.307]],["body/injectables/AuthEffects.html",[3,0.22,4,0.174,8,0.174,22,1.395,25,1.617,27,0.86,28,0.021,29,0.428,30,0.196,31,0.816,33,0.855,34,0.62,38,0.22,39,0.62,81,0.013,82,0.013,94,0.478,120,0.22,152,2.295,157,1.964,158,1.679,165,1.072,167,1.118,219,1.442,271,1.964,294,3.033,309,1.469,310,2.955,311,3.781,312,4.094,313,3.479,314,2.844,315,3.759,316,4.45,317,3.479,318,3.759,319,3.452,320,3.293,321,4.189,322,4.563,323,3.452,324,6.216,325,6.19,326,4.786,327,5.93,328,3.303,329,2.844,330,5.933,331,2.137,332,5.933,333,3.033,334,4.786,335,4.786,336,4.786,337,4.786,338,5.373,339,5.933,340,2.838,341,3.452,342,4.786,343,5.333,344,5.933,345,5.933,346,5.933,347,3.452,348,4.786,349,4.786,350,3.877,351,3.792,352,4.786,353,3.452,354,4.786,355,4.786,356,3.452,357,4.786,358,4.786,359,4.786,360,3.452,361,4.786,362,4.786,363,3.452,364,4.786,365,4.786,366,3.792,367,4.786,368,3.452,369,4.786,370,5.494,371,4.786,372,4.786,373,3.452,374,2.955,375,2.627,376,2.955,377,3.452,378,3.452,379,2.383,380,2.383,381,2.383,382,2.383,383,2.383,384,2.383,385,2.383,386,2.955]],["title/injectables/AuthService.html",[165,0.816,320,1.86]],["body/injectables/AuthService.html",[3,0.268,4,0.212,8,0.212,13,1.794,22,1.229,25,1.666,27,1.733,28,0.021,29,0.863,30,0.396,31,1.643,33,0.945,34,0.758,38,0.268,39,0.758,40,2.91,61,1.295,74,1.229,81,0.015,82,0.015,120,0.268,121,1.072,165,1.226,167,1.365,209,2.022,221,1.365,231,3.771,266,1.826,271,2.027,302,1.439,309,1.794,311,3.565,313,3.21,317,3.21,320,2.796,329,3.197,331,2.189,387,3.609,388,1.514,389,3.778,390,4.329,391,4.195,392,3.609,393,4.44,394,4.217,395,3.778,396,5.474,397,4.076,398,4.217,399,4.686,400,5.474,401,4.217,402,3.778,403,4.217,404,4.217,405,5.474,406,4.217,407,5.474,408,4.076,409,4.217,410,4.44,411,5.474,412,4.44,413,4.217,414,4.217,415,3.609,416,3.468,417,2.91,418,4.217,419,3.609,420,3.851,421,2.91,422,4.217,423,4.217,424,4.217,425,5.707,426,6.667,427,6.833,428,5.474,429,3.609,430,5.474,431,4.217,432,4.217]],["title/interfaces/AuthState.html",[83,0.336,292,2.307]],["body/interfaces/AuthState.html",[3,0.217,4,0.172,8,0.172,28,0.021,30,0.393,33,0.852,38,0.348,61,1.678,74,1.593,81,0.013,82,0.013,83,0.315,85,0.945,92,1.167,94,0.474,111,2.832,120,0.217,141,1.968,147,2.428,170,3.392,200,2.269,221,1.769,238,1.167,239,1.167,242,1.231,243,1.231,292,3.462,296,2.359,302,1.623,311,2.788,312,2.359,313,2.004,314,1.639,315,2.166,316,2.359,317,2.004,318,3.011,331,2.315,340,2.956,351,2.359,366,2.359,380,2.359,381,2.359,382,2.359,383,2.359,384,2.359,385,2.359,386,2.926,391,3.772,397,3.743,419,2.926,420,2.166,433,2.601,434,5.844,435,5.643,436,5.314,437,5.643,438,5.643,439,5.087,440,4.254,441,5.314,442,2.457,443,4.496,444,3.617,445,1.542,446,2.926,447,2.926,448,3.418,449,3.418,450,2.601,451,2.601,452,3.772,453,2.601,454,5.026,455,2.359,456,2.926,457,4.725,458,2.926,459,2.926,460,3.617,461,3.641,462,2.926,463,4.725,464,4.285,465,2.926,466,5.018,467,3.617,468,2.926,469,2.926,470,2.926,471,2.926,472,2.926,473,2.926,474,2.926,475,2.926,476,2.926,477,2.926,478,2.926,479,2.926,480,2.926,481,2.926]],["title/interfaces/AuthenticateRequestDto.html",[83,0.336,397,2.307]],["body/interfaces/AuthenticateRequestDto.html",[3,0.361,4,0.286,8,0.286,28,0.02,30,0.374,38,0.361,81,0.018,82,0.018,83,0.523,85,1.571,94,0.656,120,0.361,121,1.105,329,3.42,331,2.569,397,4.164,482,4.86,483,3.33]],["title/components/ConfigComponent.html",[0,0.515,53,1.179]],["body/components/ConfigComponent.html",[0,0.775,1,0.637,2,0.966,3,0.125,4,0.099,5,1.414,6,0.709,7,0.709,8,0.198,10,0.709,11,2.371,12,2.371,14,1.073,15,0.87,16,1.132,18,1.132,20,1.264,22,1.306,25,1.615,27,1.499,28,0.021,29,0.746,30,0.366,31,1.345,32,3.156,33,0.815,34,0.354,36,0.791,37,0.791,38,0.125,39,1.054,44,0.709,45,1.881,46,1.881,47,0.709,48,1.614,49,0.709,50,0.709,51,0.637,52,0.709,53,1.691,54,0.709,55,0.637,56,0.605,57,0.709,58,0.637,59,0.709,60,0.637,61,0.605,62,1.132,63,0.637,64,0.709,65,0.637,66,0.709,67,0.637,68,0.709,69,0.637,70,0.709,71,0.637,72,0.709,73,0.637,74,0.574,75,0.637,76,0.709,77,0.637,78,0.709,79,0.709,80,0.709,81,0.009,82,0.009,87,2.289,92,1.34,94,0.314,95,2.289,96,2.709,97,3.783,98,4.524,99,2.487,100,2.709,101,4.385,104,3.604,106,3.109,107,3.211,109,2.97,112,1.992,114,1.844,117,3.196,119,2.628,120,0.125,121,1.054,123,3.093,124,3.381,125,2.628,129,2.222,130,2.17,134,2.905,139,1.717,141,2.319,146,3.718,147,2.502,151,2.17,152,2.504,153,3.813,154,2.356,155,2.17,156,3.093,157,1.522,158,1.558,159,2.839,160,2.628,189,3.257,196,1.844,197,2.487,200,1.376,204,2.852,219,0.517,221,2.109,223,2.143,228,3.139,233,3.604,238,0.672,239,0.672,240,0.637,241,0.672,245,1.844,263,1.844,266,1.613,271,1.428,302,1.672,322,2.709,388,1.575,484,1.685,485,3.974,486,3.813,487,5.222,488,5.222,489,1.771,490,2.143,491,2.709,492,3.925,493,3.925,494,2.005,495,3.925,496,2.143,497,3.144,498,3.144,499,2.852,500,4.331,501,4.898,502,4.482,503,3.144,504,5.222,505,5.222,506,4.482,507,3.144,508,2.393,509,5.869,510,1.844,511,1.359,512,4.835,513,3.144,514,2.691,515,2.393,516,3.309,517,3.836,518,3.093,519,3.836,520,4.482,521,4.482,522,4.482,523,3.093,524,4.482,525,3.411,526,3.411,527,3.836,528,4.482,529,4.482,530,4.47,531,2.839,532,3.836,533,4.482,534,4.482,535,2.987,536,2.987,537,1.969,538,2.691,539,2.691,540,2.691,541,3.144,542,2.691,543,2.691,544,2.691,545,3.144,546,2.393,547,2.691,548,2.393,549,1.969,550,5.222,551,2.691,552,1.888,553,3.144,554,1.969,555,2.691,556,3.144,557,5.023,558,4.898,559,3.604,560,4.482,561,1.969,562,3.144,563,3.836,564,1.969,565,3.144,566,2.393,567,1.969,568,3.144,569,3.144,570,3.144,571,5.481,572,1.969,573,3.144,574,4.898,575,3.144,576,2.691,577,2.691,578,4.482,579,2.393,580,5.481,581,3.359,582,3.925,583,2.709,584,3.359,585,2.17,586,4.193,587,3.144,588,3.144,589,1.969,590,1.969,591,4.482,592,3.836,593,3.836,594,3.836,595,2.393,596,3.144,597,2.691,598,3.144,599,1.969,600,1.969,601,1.969,602,1.969,603,6.018,604,1.969,605,1.969,606,1.969,607,1.969,608,1.969,609,1.969,610,1.969,611,1.969,612,1.969,613,1.969,614,1.969,615,1.969,616,1.969,617,1.969,618,1.969,619,1.969,620,0.749,621,1.247,622,1.075,623,1.969,624,1.359,625,1.969,626,1.969,627,1.247,628,1.685,629,1.006,630,3.309,631,1.685,632,3.144,633,1.969,634,3.144,635,1.969,636,2.691,637,1.969,638,2.691,639,1.969,640,2.691,641,1.969,642,1.969,643,3.925,644,3.144,645,1.969,646,1.969,647,1.969,648,2.691,649,1.969,650,1.969,651,1.969,652,1.969,653,1.969,654,3.925,655,1.969,656,1.969,657,1.969,658,3.144,659,1.969,660,1.969,661,1.969,662,1.969,663,1.969,664,3.925,665,3.144,666,1.969,667,1.969,668,3.144,669,3.144,670,3.144,671,3.144,672,3.144,673,3.144,674,3.144,675,3.144,676,2.393,677,3.836,678,5.693,679,3.144,680,3.144,681,3.144,682,4.482,683,3.144,684,3.144]],["title/components/CreateOrganizationComponent.html",[0,0.515,55,1.179]],["body/components/CreateOrganizationComponent.html",[0,0.687,1,0.896,2,1.255,3,0.176,4,0.139,5,0.997,6,0.997,7,0.997,8,0.139,10,0.997,11,2.523,12,2.523,14,1.395,15,1.13,16,1.471,18,1.471,20,1.642,22,1.191,25,1.655,27,1.336,28,0.021,29,0.805,30,0.376,31,1.559,32,3.248,33,0.934,34,0.497,35,1.178,36,1.113,37,1.113,38,0.176,39,0.497,44,0.997,45,1.471,46,1.471,47,0.997,48,1.931,49,0.997,50,0.997,51,0.896,52,0.997,53,0.896,54,0.997,55,1.736,56,2.187,57,0.997,58,0.896,59,0.997,60,0.896,61,0.85,62,1.471,63,0.896,64,0.997,65,0.896,66,0.997,67,0.896,68,0.997,69,0.896,70,0.997,71,0.896,72,0.997,73,0.896,74,0.807,75,0.896,76,0.997,77,0.896,78,0.997,79,0.997,80,0.997,81,0.011,82,0.011,92,1.395,94,0.408,120,0.176,121,1.007,129,1.738,141,1.471,157,1.415,158,1.21,167,0.896,219,1.869,229,1.249,238,1.395,239,1.395,240,1.572,241,1.395,242,1.471,243,1.471,266,1.625,271,0.807,290,1.178,302,1.658,333,2.588,340,1.642,350,1.623,388,1.13,410,1.91,420,1.753,442,2.058,445,1.249,489,2.191,490,2.652,491,3.352,494,2.481,496,2.652,552,1.902,620,1.052,622,1.511,624,1.91,629,1.414,685,6.032,686,6.032,687,2.369,688,1.642,689,3.352,690,2.481,691,2.652,692,2.396,693,3.077,694,2.156,695,3.077,696,3.352,697,3.077,698,4.085,699,4.085,700,4.856,701,3.077,702,3.077,703,5.3,704,4.856,705,4.856,706,4.856,707,4.856,708,4.085,709,4.085,710,3.354,711,3.701,712,2.928,713,2.739,714,4.085,715,2.369,716,3.793,717,2.794,718,3.923,719,2.794,720,4.085,721,4.085,722,2.767,723,2.767,724,4.085,725,2.767,726,3.793,727,2.767,728,2.767,729,2.767,730,2.767,731,4.085,732,2.767,733,2.588,734,3.397,735,2.767,736,3.381,737,2.767,738,4.085,739,2.767,740,2.767,741,3.354,742,2.396,743,4.085,744,2.767,745,2.767,746,4.085,747,2.767,748,1.623,749,1.753,750,1.414,751,1.91,752,1.753,753,1.91,754,3.352,755,1.91,756,2.767,757,1.511,758,1.623,759,2.369,760,2.106,761,1.91,762,1.91,763,2.106,764,2.588,765,2.767,766,2.767,767,2.82,768,2.087,769,2.588,770,2.82,771,2.82,772,2.82,773,2.767,774,2.767,775,2.767,776,2.369,777,2.767,778,2.396,779,2.767,780,2.767,781,1.753,782,1.753,783,2.767,784,1.623,785,2.106,786,2.369,787,1.91,788,4.085,789,2.767,790,1.753,791,2.767,792,2.767,793,2.767,794,3.397,795,2.767,796,2.767,797,2.767,798,2.767,799,2.767,800,2.767,801,2.767,802,2.369,803,4.085,804,4.085,805,4.085,806,4.085,807,4.085,808,4.085,809,4.085]],["title/interfaces/CreateOrganizationRequestDto.html",[83,0.336,764,2.307]],["body/interfaces/CreateOrganizationRequestDto.html",[3,0.361,4,0.285,8,0.285,28,0.02,29,0.884,30,0.374,38,0.361,81,0.018,82,0.018,83,0.523,85,1.568,94,0.655,120,0.361,121,1.105,483,3.325,694,2.279,726,4.518,764,4.16,810,4.853]],["title/components/FooterComponent.html",[0,0.515,58,1.179]],["body/components/FooterComponent.html",[0,0.931,1,1.627,2,1.878,3,0.32,4,0.253,5,1.81,6,1.81,7,1.81,8,0.253,10,1.81,11,2.716,12,2.716,14,2.087,15,1.691,16,1.81,18,2.202,20,2.458,28,0.02,29,0.758,33,0.666,34,0.903,38,0.32,39,0.903,44,1.81,45,2.202,46,2.202,47,1.81,48,2.469,49,1.81,50,1.81,51,1.627,52,1.81,53,1.627,54,1.81,55,1.627,56,1.544,57,1.81,58,2.219,59,1.81,60,1.627,61,1.544,62,2.202,63,1.627,64,1.81,65,1.627,66,1.81,67,1.627,68,1.81,69,1.627,70,1.81,71,1.627,72,1.81,73,1.627,74,1.465,75,1.627,76,1.81,77,1.627,78,1.81,79,1.81,80,1.81,81,0.017,82,0.017,811,4.302,812,6.113,813,6.113,814,6.113,815,6.113]],["title/components/ForgotPasswordComponent.html",[0,0.515,60,1.179]],["body/components/ForgotPasswordComponent.html",[0,0.692,1,0.909,2,1.268,3,0.179,4,0.141,5,1.011,6,1.011,7,1.011,8,0.141,10,1.011,11,2.528,12,2.528,14,1.409,15,1.142,16,1.487,18,1.487,20,1.66,22,1.203,24,3.177,25,1.635,27,1.028,28,0.021,29,0.67,30,0.363,31,1.586,32,3.257,33,0.924,34,0.504,35,1.194,36,1.128,37,1.128,38,0.179,39,0.504,44,1.011,45,1.487,46,1.487,47,1.011,48,1.945,49,1.011,50,1.011,51,0.909,52,1.011,53,0.909,54,1.011,55,0.909,56,0.862,57,1.011,58,0.909,59,1.011,60,1.748,61,1.91,62,1.487,63,0.909,64,1.011,65,0.909,66,1.011,67,0.909,68,1.011,69,0.909,70,1.011,71,0.909,72,1.011,73,0.909,74,0.818,75,0.909,76,1.011,77,0.909,78,1.011,79,1.011,80,1.011,81,0.011,82,0.011,92,0.958,94,0.412,120,0.179,121,0.737,129,1.194,141,1.487,157,1.427,158,1.22,167,0.909,200,0.862,219,1.888,229,1.266,238,1.409,239,1.409,240,1.336,241,0.958,242,1.011,243,1.011,266,1.51,290,1.194,313,3.529,314,1.346,320,3.177,328,1.937,329,2.589,331,1.487,333,1.778,340,2.171,350,1.646,388,1.142,389,3.971,402,1.937,442,2.174,445,1.266,461,1.646,489,2.209,490,2.674,494,2.501,496,2.674,552,1.848,620,1.068,622,1.533,629,1.434,688,1.66,689,3.38,690,2.501,691,2.674,692,2.421,693,4.127,695,3.102,696,3.38,697,3.102,701,3.102,702,3.102,711,3.726,712,2.949,713,2.758,717,2.806,718,3.812,719,2.806,733,2.616,734,2.616,736,3.557,741,2.872,742,1.646,748,1.646,749,1.778,750,1.434,751,1.937,752,1.778,753,1.937,754,2.849,755,1.937,757,1.533,767,1.937,768,1.434,769,1.778,770,1.937,771,1.937,772,1.937,778,2.872,781,1.778,782,1.778,784,1.646,785,2.136,790,1.778,794,2.616,816,5.969,817,5.969,818,2.136,819,3.102,820,3.534,821,3.534,822,4.897,823,4.191,824,3.727,825,3.727,826,3.38,827,3.142,828,1.937,829,4.128,830,3.142,831,2.807,832,2.807,833,2.807,834,2.807,835,2.807,836,2.403,837,3.142,838,2.807,839,2.849,840,2.807,841,2.403,842,2.403,843,2.807,844,3.142,845,2.403,846,1.646,847,3.38,848,1.434,849,2.136,850,1.646,851,1.646,852,2.136,853,2.136,854,2.136,855,1.778,856,1.937,857,1.937,858,1.937,859,2.807,860,2.807,861,3.38,862,3.38,863,3.38,864,3.812,865,7.02,866,3.534,867,3.102,868,2.807,869,2.807,870,2.403,871,2.403,872,2.403,873,2.403,874,2.807,875,1.937,876,2.403,877,3.142,878,2.136,879,2.807,880,2.807,881,2.136,882,2.807,883,2.136,884,3.142,885,3.534,886,4.128,887,3.534,888,3.534,889,4.128,890,4.128,891,3.534]],["title/interfaces/ForgotPasswordRequestDto.html",[83,0.336,892,2.771]],["body/interfaces/ForgotPasswordRequestDto.html",[3,0.365,4,0.289,8,0.289,28,0.02,30,0.327,38,0.365,81,0.018,82,0.018,83,0.529,85,1.588,94,0.66,120,0.365,121,1.048,331,2.068,483,3.367,892,5.034,893,4.914,894,4.535]],["title/components/HomeComponent.html",[0,0.515,63,1.179]],["body/components/HomeComponent.html",[0,0.604,1,0.726,2,1.07,3,0.143,4,0.113,5,0.808,6,0.808,7,0.808,8,0.113,10,0.808,11,2.433,12,2.433,14,1.189,15,0.964,16,1.255,18,1.255,20,1.4,22,1.015,24,2.943,25,1.648,27,0.868,28,0.021,29,0.597,30,0.373,31,1.304,33,0.909,34,0.403,35,0.954,36,0.901,37,0.901,38,0.143,39,0.937,44,0.808,45,1.255,46,1.988,47,0.808,48,1.735,49,0.808,50,0.808,51,0.726,52,0.808,53,1.559,54,0.808,55,0.726,56,0.689,57,0.808,58,1.559,59,0.808,60,0.726,61,0.689,62,1.255,63,1.559,64,0.808,65,0.726,66,0.808,67,0.726,68,0.808,69,0.726,70,0.808,71,0.726,72,0.808,73,0.726,74,0.654,75,1.787,76,0.808,77,1.787,78,0.808,79,0.808,80,0.808,81,0.009,82,0.009,87,1.145,92,1.644,94,0.348,98,2.207,99,1.421,102,3.051,106,3.34,109,2.821,111,2.309,116,2.505,117,2.82,119,3.237,120,0.143,121,0.831,126,2.404,127,2.404,129,0.954,132,2.404,134,2.173,135,3.324,136,2.948,152,2.309,157,1.015,158,0.868,161,2.333,167,0.726,185,1.548,189,2.997,191,2.207,195,2.043,196,2.043,199,1.421,219,1.787,221,0.726,228,2.46,229,1.012,238,1.189,239,1.189,240,1.383,241,1.189,242,1.255,243,1.255,266,1.563,271,1.404,290,0.954,302,1.967,314,1.075,340,1.936,388,0.964,442,1.688,445,1.012,486,2.207,489,1.927,499,3.015,510,2.043,512,4.384,516,2.207,531,2.706,552,1.829,555,2.982,576,4.122,585,4.662,595,3.665,620,0.853,621,1.421,627,1.421,630,2.706,631,1.919,636,3.656,638,1.919,640,1.919,648,2.982,688,1.4,690,2.182,691,2.333,694,0.901,712,2.63,713,2.46,717,2.491,719,2.599,736,3.146,742,2.043,748,1.315,750,1.145,757,1.225,758,1.315,759,1.919,762,1.548,763,1.706,768,2.182,769,2.706,776,1.919,778,1.315,784,1.315,787,1.548,848,1.145,850,1.315,851,1.315,855,1.421,864,1.421,895,1.919,896,4.725,897,4.271,898,3.483,899,3.483,900,4.271,901,4.271,902,4.271,903,4.271,904,4.271,905,4.271,906,4.271,907,4.271,908,5.215,909,4.816,910,4.271,911,4.816,912,4.816,913,4.816,914,4.271,915,2.242,916,5.215,917,5.73,918,6.116,919,3.483,920,2.242,921,3.483,922,4.725,923,3.483,924,4.816,925,2.242,926,6.551,927,4.732,928,2.242,929,3.483,930,4.931,931,6.366,932,5.215,933,4.221,934,3.656,935,3.656,936,2.651,937,2.651,938,2.651,939,3.483,940,3.665,941,2.242,942,4.816,943,3.483,944,2.982,945,2.242,946,2.982,947,4.122,948,3.483,949,2.242,950,2.242,951,2.242,952,4.816,953,5.215,954,3.483,955,3.483,956,2.242,957,3.483,958,2.982,959,2.242,960,2.242,961,2.242,962,2.242,963,2.242,964,2.242,965,2.242,966,2.242,967,2.242,968,2.242,969,2.242,970,2.242,971,2.982,972,2.242,973,1.919,974,1.706,975,2.242,976,2.242,977,2.242,978,2.242,979,3.483,980,2.242,981,5.761,982,3.483,983,3.483,984,4.816,985,2.242,986,2.242,987,2.242,988,2.242,989,3.483,990,5.215,991,2.242,992,2.242,993,2.242,994,2.242,995,3.483,996,4.271,997,2.242,998,1.919,999,1.919,1000,1.706,1001,1.919,1002,2.242,1003,2.242,1004,2.242,1005,2.242,1006,2.242,1007,2.242,1008,2.242,1009,2.242,1010,1.706,1011,2.982,1012,1.706,1013,2.242,1014,2.242,1015,2.242,1016,2.242,1017,3.483,1018,2.242,1019,2.242,1020,1.902,1021,1.919,1022,4.271,1023,2.242,1024,2.242,1025,2.242,1026,3.483,1027,2.242,1028,1.706,1029,4.816,1030,1.919,1031,2.242,1032,3.483,1033,2.242,1034,2.242,1035,2.242,1036,3.483,1037,2.242,1038,2.242,1039,2.242,1040,3.483,1041,2.242,1042,3.483,1043,2.242,1044,2.242,1045,2.242,1046,2.982,1047,2.242,1048,2.242,1049,2.242,1050,2.982,1051,1.919]],["title/components/InvitationComponent.html",[0,0.515,65,1.179]],["body/components/InvitationComponent.html",[0,0.931,1,1.625,2,1.876,3,0.319,4,0.253,5,1.808,6,1.808,7,1.808,8,0.253,10,1.808,11,2.716,12,2.716,14,2.085,15,1.69,16,1.808,18,2.2,20,2.456,28,0.02,29,0.757,33,0.665,34,0.902,38,0.319,39,0.902,44,1.808,45,2.2,46,2.2,47,1.808,48,2.468,49,1.808,50,1.808,51,1.625,52,1.808,53,1.625,54,1.808,55,1.625,56,1.542,57,1.808,58,1.625,59,1.808,60,1.625,61,1.542,62,2.2,63,1.625,64,1.808,65,2.218,66,1.808,67,1.625,68,1.808,69,1.625,70,1.808,71,1.625,72,1.808,73,1.625,74,1.463,75,1.625,76,1.808,77,1.625,78,1.808,79,1.808,80,1.808,81,0.017,82,0.017,1052,4.296,1053,5.865,1054,6.108,1055,6.108,1056,5.228]],["title/injectables/JwtService.html",[165,0.816,321,2.307]],["body/injectables/JwtService.html",[3,0.302,4,0.239,8,0.239,13,2.02,22,1.384,25,1.665,27,1.6,28,0.021,29,0.797,30,0.365,31,1.518,33,0.782,34,0.853,38,0.302,39,0.853,40,3.276,81,0.016,82,0.016,120,0.302,121,1.103,165,1.322,209,2.276,212,2.784,213,3.015,266,1.814,271,1.72,302,2.015,306,4.492,309,2.02,321,3.74,379,3.276,388,1.633,390,3.008,440,4.053,442,2.176,499,4.085,552,2.164,1057,5.437,1058,2.784,1059,4.258,1060,6.72,1061,6.72,1062,5.902,1063,5.902,1064,4.747,1065,4.638,1066,4.747,1067,4.747,1068,4.747,1069,3.613,1070,5.902,1071,3.613,1072,5.902,1073,4.747,1074,3.613,1075,3.613,1076,5.902,1077,5.902,1078,4.747,1079,4.747,1080,4.747,1081,4.747]],["title/injectables/LayoutService.html",[109,1.643,165,0.816]],["body/injectables/LayoutService.html",[3,0.117,4,0.092,8,0.092,13,0.781,15,1.726,25,1.474,28,0.021,29,0.534,30,0.384,33,0.394,34,0.33,38,0.189,39,1.205,81,0.008,82,0.008,83,0.614,84,3.802,86,1.266,87,1.912,88,2.583,89,1.517,90,2.05,91,4.817,92,1.469,93,2.05,94,0.588,95,2.721,96,3.828,97,3.828,98,3.729,99,3.888,100,4.155,101,4.062,102,1.162,103,4.48,104,4.519,105,3.262,106,3.608,107,3.168,108,3.514,109,2.954,110,3.262,111,2.553,112,2.726,113,2.969,114,2.523,115,2.26,116,1.742,117,3.746,118,1.882,119,3.906,120,0.117,121,0.965,122,3.953,123,2.05,124,2.05,125,3.452,126,3.491,127,2.05,128,2.05,129,1.264,130,2.969,131,2.848,132,1.266,133,3.729,134,3.005,135,3.676,136,4.424,137,1.396,138,1.396,139,2.044,140,1.266,141,2.564,142,1.266,143,3.63,144,1.266,145,1.396,146,1.882,147,3.075,148,1.396,149,1.396,150,2.05,151,1.266,152,3.277,153,1.162,154,1.689,155,1.266,156,1.266,157,1.819,158,1.554,159,2.371,160,3.599,161,3.457,162,3.597,163,3.274,164,1.396,165,0.665,166,4.562,167,1.855,168,4.107,169,2.848,170,3.141,171,1.396,172,4.361,173,4.361,174,4.361,175,4.582,176,4.221,177,4.221,178,3.491,179,4.48,180,1.396,181,1.396,182,1.266,183,1.266,184,3.491,185,1.266,186,4.817,187,4.983,188,3.85,189,3.338,190,1.396,191,1.882,192,3.274,193,3.85,194,1.396,195,2.967,196,3.599,197,2.726,198,3.597,199,2.726,200,1.15,201,1.396,202,1.396,203,3.274,204,1.622,205,3.274,206,3.729,207,2.726,208,2.26,209,0.879,210,1.162,211,1.396,212,1.076,213,0.937,214,2.726,215,2.05,216,3.274,217,3.491,218,2.05,219,1.545,220,5.028,221,1.987,222,3.828,223,3.029,224,2.969,225,3.828,226,3.274,227,3.828,228,2.833,229,2.502,230,2.349,231,3.135,232,2.969,233,2.523,234,3.491,235,5.028,236,2.26,237,1.882,238,0.626,239,0.626,240,0.594,241,0.626,242,0.661,243,0.661,244,2.523,245,2.523,246,3.274,247,3.274,248,2.726,249,3.252,250,3.274,251,2.969,252,2.26,253,2.26,254,3.274,255,1.396,256,2.848,257,2.848,258,2.26,259,2.26,260,2.848,261,2.26,262,2.848,263,1.742,264,1.396,265,3.85,266,1.719,267,3.85,268,3.274,269,2.848,270,2.848,271,1.474,272,1.396,273,2.969,274,3.274,275,3.597,276,3.85,277,3.597,278,3.828,279,4.221,280,3.85,281,2.848,282,2.371,283,2.848,284,1.396,285,3.85,286,2.26,287,1.882,288,3.274,289,1.396,309,0.781,388,0.822,552,1.321,1082,1.834,1083,1.834,1084,1.834,1085,1.834,1086,1.834,1087,1.834,1088,1.834,1089,1.834,1090,1.834,1091,1.834,1092,1.834,1093,1.834,1094,1.834]],["title/interfaces/LayoutState.html",[83,0.336,168,2.307]],["body/interfaces/LayoutState.html",[3,0.131,4,0.104,8,0.104,13,0.877,15,1.777,28,0.021,29,0.404,30,0.384,33,0.432,34,0.37,38,0.207,39,1.182,81,0.009,82,0.009,83,0.647,84,3.713,85,0.57,86,1.422,87,2.349,88,3.173,89,2.066,90,2.791,91,5.177,92,1.381,93,2.791,94,0.609,95,2.955,96,3.677,97,3.677,98,3.666,99,3.865,100,3.851,101,3.993,102,1.305,103,4.643,104,4.434,105,2.791,106,3.66,107,3.336,108,3.666,109,2.899,110,3.457,111,2.675,112,2.913,113,3.173,114,2.697,115,3.078,116,2.372,117,3.802,118,2.563,119,4.116,120,0.131,121,0.967,122,4.28,123,2.25,124,2.25,125,3.272,126,3.173,127,2.25,128,2.25,129,1.387,130,3.173,131,2.481,132,1.422,133,3.174,134,3.154,135,4.211,136,4.49,137,1.568,138,1.568,139,1.78,140,1.422,141,2.664,142,1.422,143,4.122,144,1.422,145,1.568,146,2.065,147,3.281,148,1.568,149,1.568,150,2.25,151,1.422,152,2.984,153,1.305,154,1.825,155,1.422,156,1.422,157,1.34,158,1.145,159,2.065,160,3.124,161,3.253,162,3.499,163,3.078,164,1.568,165,0.73,166,4.338,167,1.622,168,4.338,169,3.078,170,3.229,171,2.481,172,4.951,173,4.951,174,4.951,175,5.007,176,4.818,177,4.818,178,4.111,179,4.737,180,2.481,181,2.481,182,2.25,183,2.25,184,4.369,185,2.25,186,4.247,187,4.643,188,3.812,189,3.302,190,2.481,191,2.913,192,4.403,193,3.812,194,2.481,195,3.493,196,3.858,197,3.174,198,3.078,199,2.563,200,1.242,201,2.481,202,2.481,203,2.481,204,1.125,205,2.481,206,3.174,207,2.065,208,1.568,209,0.988,210,1.305,211,1.568,212,1.208,213,1.052,214,2.065,215,1.422,216,2.481,217,2.791,218,1.422,219,1.207,220,4.403,221,1.725,222,3.173,223,2.511,224,2.25,225,3.173,226,2.481,227,3.173,228,2.349,229,2.075,230,1.78,231,2.721,232,2.25,233,1.912,234,2.791,235,4.403,236,1.568,237,1.305,238,0.703,239,0.703,240,0.667,241,0.703,242,0.742,243,0.742,244,1.912,245,1.912,246,2.481,247,2.481,248,2.065,249,2.697,250,2.481,251,2.25,252,1.568,253,1.568,254,2.481,255,1.568,256,3.078,257,3.078,258,2.481,259,2.481,260,3.078,261,1.568,262,3.078,263,1.208,264,1.568,265,3.078,266,1.398,267,2.481,268,2.481,269,1.568,270,1.568,271,1.34,272,1.568,273,2.25,274,2.481,275,2.481,276,3.078,277,2.481,278,2.791,279,3.078,280,2.481,281,1.568,282,1.305,283,1.568,284,1.568,285,2.481,286,1.568,287,1.305,288,1.568,289,1.568]],["title/injectables/LocalStorage.html",[165,0.816,1065,2.513]],["body/injectables/LocalStorage.html",[3,0.287,4,0.227,8,0.227,13,1.92,22,1.829,25,1.689,27,1.644,28,0.021,29,0.818,30,0.387,31,1.559,33,0.832,34,0.811,38,0.287,39,0.811,81,0.016,82,0.016,94,0.571,120,0.364,121,1.123,154,2.977,158,1.644,165,1.281,209,2.164,213,3.553,219,1.648,221,1.461,266,1.787,271,1.829,302,1.541,309,1.92,379,3.115,388,1.582,442,2.136,510,3.353,552,2.136,620,1.716,621,2.859,688,1.814,1058,2.647,1059,4.181,1065,3.946,1069,3.434,1071,3.434,1095,6.177,1096,5.372,1097,4.351,1098,3.993,1099,4.351,1100,4.351,1101,4.777,1102,4.894,1103,4.351,1104,4.351,1105,3.863,1106,4.351,1107,3.863,1108,4.351,1109,3.863,1110,3.434,1111,3.434,1112,3.863,1113,3.623,1114,3.115,1115,3.863,1116,3.863,1117,3.863,1118,3.863,1119,3.863,1120,4.894,1121,4.513,1122,3.863,1123,3.863,1124,3.863,1125,3.863,1126,3.863,1127,3.863]],["title/components/LoginComponent.html",[0,0.515,67,1.179]],["body/components/LoginComponent.html",[0,0.699,1,0.923,2,1.283,3,0.181,4,0.144,5,1.027,6,1.027,7,1.027,8,0.144,10,1.027,11,2.535,12,2.535,14,1.426,15,1.155,16,1.504,18,1.504,20,1.679,22,1.217,24,3.193,25,1.652,27,1.04,28,0.021,29,0.675,30,0.356,31,1.514,32,3.441,33,0.943,34,0.512,35,1.214,36,1.146,37,1.146,38,0.181,39,0.512,44,1.027,45,1.504,46,1.504,47,1.027,48,1.959,49,1.027,50,1.027,51,0.923,52,1.027,53,0.923,54,1.027,55,0.923,56,0.876,57,1.027,58,0.923,59,1.027,60,0.923,61,0.876,62,1.504,63,0.923,64,1.027,65,0.923,66,1.027,67,1.761,68,1.027,69,0.923,70,1.027,71,0.923,72,1.027,73,0.923,74,0.831,75,0.923,76,1.027,77,0.923,78,1.027,79,1.027,80,1.027,81,0.011,82,0.011,92,0.973,94,0.417,120,0.181,121,0.744,129,1.214,141,1.504,157,1.44,158,1.231,167,0.923,200,0.876,219,1.868,229,1.287,238,0.973,239,0.973,240,1.352,241,0.973,242,1.027,243,1.027,266,1.641,271,1.217,290,1.214,311,2.449,314,1.367,320,3.193,328,1.968,329,2.608,331,1.78,333,1.807,340,1.987,350,1.672,388,1.155,389,3.997,402,1.968,442,2.117,445,1.287,489,2.23,490,2.699,494,2.524,496,2.699,552,1.858,620,1.085,622,1.557,629,1.457,688,1.679,689,3.411,690,2.524,691,2.699,692,2.449,693,4.143,695,3.131,696,3.411,697,3.131,701,3.131,702,3.131,711,3.755,712,2.971,713,2.779,717,2.82,718,3.833,719,2.82,733,2.646,734,3.447,736,3.414,741,2.898,742,1.672,748,1.672,749,1.807,750,1.457,751,1.968,752,1.807,753,1.968,754,2.882,755,1.968,757,1.557,767,1.968,768,1.457,769,1.807,770,1.968,771,1.968,772,1.968,778,2.449,781,1.807,782,1.807,784,1.672,790,1.807,794,2.646,819,3.131,824,3.761,825,3.761,826,3.411,827,3.179,828,1.968,830,3.179,837,3.179,839,2.882,844,3.179,846,1.672,848,1.457,850,1.672,851,1.672,852,2.17,853,2.17,854,2.17,855,1.807,856,1.968,857,1.968,858,1.968,861,1.968,862,1.968,863,1.968,864,2.646,867,1.807,875,1.968,877,3.179,881,2.17,883,2.17,884,3.179,887,3.575,888,3.575,1128,2.441,1129,5.179,1130,4.23,1131,3.761,1132,4.177,1133,4.177,1134,4.942,1135,6.051,1136,5.44,1137,4.177,1138,2.852,1139,2.852,1140,2.852,1141,2.852,1142,2.852,1143,2.852,1144,2.852,1145,2.852,1146,2.852,1147,2.852,1148,3.179,1149,2.852,1150,2.852,1151,2.852,1152,2.441,1153,2.17,1154,1.672,1155,2.17,1156,2.17,1157,2.852,1158,2.852,1159,2.852,1160,2.852,1161,2.852,1162,2.441,1163,2.17,1164,4.177,1165,4.177,1166,4.177,1167,4.177,1168,4.177,1169,4.177,1170,4.177,1171,4.177,1172,4.177]],["title/injectables/MemoryStorage.html",[165,0.816,1113,2.307]],["body/injectables/MemoryStorage.html",[3,0.295,4,0.234,8,0.234,25,1.68,27,1.661,28,0.021,29,0.827,30,0.399,31,1.575,33,0.616,34,0.835,38,0.295,39,0.835,81,0.016,82,0.016,94,0.581,120,0.405,121,1.123,154,3.009,157,1.354,158,1.584,165,1.304,210,2.943,213,3.249,219,1.67,266,1.803,271,1.854,302,1.586,309,1.977,388,1.611,442,2.223,510,3.415,552,2.048,688,1.868,1020,2.537,1058,2.724,1059,4.225,1097,4.432,1098,4.17,1099,4.432,1100,4.432,1101,4.841,1103,4.432,1104,4.432,1106,3.535,1108,3.535,1110,3.535,1111,3.535,1113,3.689,1114,3.206,1173,6.154,1174,4.03,1175,4.645,1176,4.645,1177,4.645,1178,4.645,1179,3.535,1180,4.645,1181,4.645,1182,3.976,1183,4.645,1184,3.689,1185,4.645,1186,4.645,1187,4.645,1188,5.823,1189,4.645,1190,3.976,1191,4.645,1192,4.645]],["title/interfaces/MenuChangeEvent.html",[83,0.336,1193,2.513]],["body/interfaces/MenuChangeEvent.html",[3,0.36,4,0.285,8,0.285,28,0.02,30,0.373,31,1.549,38,0.36,81,0.018,82,0.018,83,0.521,85,1.564,94,0.654,120,0.36,121,1.042,141,2.494,1098,4.178,1193,4.525,1194,4.84,1195,3.316,1196,4.84,1197,6.098]],["title/injectables/MenuService.html",[165,0.816,500,2.307]],["body/injectables/MenuService.html",[2,2.081,3,0.225,4,0.178,8,0.178,13,1.502,15,1.657,25,1.534,27,0.879,28,0.021,29,0.438,30,0.316,31,0.834,33,0.737,34,0.634,38,0.225,39,1.195,74,2.065,81,0.013,82,0.013,87,2.482,89,2.839,94,0.485,95,2.839,107,2.871,111,2.665,120,0.225,134,3.057,141,2.157,157,1.746,158,1.688,165,1.089,166,4.695,167,1.143,170,3.057,189,3.477,204,2.654,206,3.079,207,3.079,209,1.692,217,4.133,219,1.827,221,2.294,222,4.676,223,3.27,225,4.133,229,3.057,231,3.62,237,3.522,244,3.512,245,3.683,249,3.512,266,1.276,309,1.502,388,1.344,485,3.699,486,3.079,500,4.49,552,1.493,583,3.836,630,2.236,768,3.645,938,4.23,940,3.699,1174,3.522,1193,4.85,1195,2.07,1198,3.021,1199,4.86,1200,4.86,1201,5.989,1202,6.296,1203,6.296,1204,5.956,1205,4.86,1206,3.529,1207,5.989,1208,4.23,1209,4.23,1210,5.376,1211,5.558,1212,4.758,1213,5.558,1214,3.529,1215,4.955,1216,3.529,1217,5.8,1218,5.157,1219,6.776,1220,4.86,1221,3.529,1222,3.529,1223,4.86,1224,3.529,1225,3.529,1226,3.529,1227,3.529,1228,3.529]],["title/components/MenuitemComponent.html",[0,0.515,69,1.179]],["body/components/MenuitemComponent.html",[0,0.709,1,0.517,2,0.814,3,0.102,4,0.08,5,0.575,6,0.575,7,0.575,8,0.08,10,0.575,11,2.287,12,2.26,13,2.507,14,0.905,15,1.094,16,0.954,18,0.954,22,1.588,25,1.516,27,0.66,28,0.021,29,0.491,30,0.388,31,0.626,32,2.269,33,0.745,34,0.287,35,0.679,36,0.642,37,0.642,38,0.102,39,1.236,44,0.575,45,0.954,46,1.806,47,0.575,48,1.425,49,0.575,50,0.575,51,0.517,52,0.575,53,0.517,54,0.575,55,0.517,56,0.49,57,0.575,58,0.517,59,0.575,60,0.517,61,0.49,62,0.954,63,0.517,64,0.575,65,0.517,66,0.575,67,0.517,68,0.575,69,2.077,70,0.575,71,0.517,72,0.575,73,0.517,74,1.279,75,0.517,76,0.575,77,0.517,78,0.575,79,0.575,80,0.575,81,0.007,82,0.007,87,1.735,89,1.354,90,3.623,92,1.16,94,0.264,95,2.562,106,2.16,107,3.43,109,2.755,110,1.829,111,2.693,114,0.936,116,2.32,117,3.632,119,1.554,120,0.422,121,0.919,122,3.326,128,2.345,129,2.95,134,3.302,139,3.218,140,1.829,141,1.806,143,1.679,147,2.681,152,2.763,154,2.136,157,1.462,158,1.468,161,2.867,167,0.517,170,3.091,178,3.267,183,1.829,184,1.829,189,3.156,191,4.448,206,2.999,214,1.679,218,1.829,219,0.696,221,0.858,223,3.218,228,3.362,229,0.72,230,1.855,231,2.418,232,1.829,233,3.195,234,1.829,237,1.679,238,0.905,239,0.905,240,0.858,241,0.905,242,0.575,243,0.575,244,1.554,245,1.993,249,1.554,263,1.554,266,1.152,271,1.53,282,1.679,287,2.506,302,0.545,388,0.733,442,0.858,454,3.267,486,2.153,489,1.533,491,2.345,494,1.735,499,2.585,500,4.138,508,2.017,510,1.554,511,1.101,515,2.017,516,2.153,523,3.461,525,3.011,530,2.268,531,3.976,535,2.586,536,2.586,538,2.268,542,5.372,543,2.268,544,2.908,546,3.011,552,1.215,559,3.267,566,1.215,579,2.586,581,2.908,583,2.345,586,2.268,620,0.607,624,1.101,627,1.011,628,1.366,630,2.78,688,1.065,690,1.735,691,1.855,712,3.067,713,2.681,717,1.785,719,2.947,736,3.687,768,3.408,819,2.153,878,2.017,917,4.808,927,3.877,933,1.829,937,4.275,947,3.756,971,2.268,973,1.366,998,1.366,999,1.366,1000,1.215,1010,2.017,1012,2.017,1020,1.447,1021,3.386,1051,4.052,1098,3.86,1114,2.73,1174,2.153,1195,2.776,1197,1.366,1202,3.386,1203,2.268,1204,2.908,1208,3.34,1209,3.34,1210,3.756,1215,4.427,1218,2.017,1229,1.366,1230,6.33,1231,2.65,1232,2.268,1233,3.398,1234,2.65,1235,5.015,1236,5.015,1237,4.388,1238,3.956,1239,5.448,1240,2.65,1241,2.65,1242,3.398,1243,3.398,1244,4.734,1245,5.015,1246,2.65,1247,2.65,1248,3.398,1249,3.956,1250,4.734,1251,2.908,1252,3.398,1253,4.052,1254,4.734,1255,3.386,1256,3.386,1257,2.908,1258,2.908,1259,1.596,1260,2.65,1261,6.005,1262,4.493,1263,3.956,1264,4.734,1265,3.386,1266,2.268,1267,1.596,1268,4.493,1269,5.448,1270,2.017,1271,1.596,1272,3.386,1273,3.956,1274,3.956,1275,3.956,1276,3.956,1277,2.65,1278,1.596,1279,3.398,1280,2.65,1281,2.65,1282,2.268,1283,2.65,1284,2.65,1285,1.596,1286,2.65,1287,3.386,1288,2.65,1289,3.398,1290,3.398,1291,3.398,1292,3.011,1293,2.908,1294,3.398,1295,2.908,1296,2.268,1297,2.268,1298,1.596,1299,2.65,1300,2.65,1301,2.65,1302,1.596,1303,1.596,1304,1.596,1305,2.65,1306,4.052,1307,2.268,1308,1.596,1309,1.596,1310,3.956,1311,3.386,1312,3.956,1313,1.596,1314,2.65,1315,1.596,1316,1.596,1317,1.596,1318,1.596,1319,1.596,1320,2.65,1321,1.366,1322,1.596,1323,1.596,1324,1.596,1325,1.596,1326,1.596,1327,3.398,1328,2.65,1329,1.596,1330,1.596,1331,1.596,1332,1.596,1333,2.65,1334,1.596,1335,1.596,1336,1.596,1337,5.015,1338,2.65,1339,4.388,1340,2.65,1341,2.65,1342,1.596,1343,2.65,1344,2.65,1345,2.65,1346,1.596,1347,1.596,1348,2.65,1349,1.596,1350,1.596,1351,1.366,1352,1.596,1353,3.398,1354,1.596,1355,1.596,1356,2.65,1357,1.366,1358,1.596,1359,1.596,1360,1.596,1361,2.65,1362,1.596,1363,1.596,1364,1.596,1365,2.65,1366,1.596,1367,1.596,1368,1.596,1369,4.734]],["title/interfaces/Organization.html",[83,0.336,694,1.464]],["body/interfaces/Organization.html",[3,0.345,4,0.273,8,0.273,28,0.02,29,0.871,30,0.413,38,0.345,81,0.017,82,0.017,83,0.499,85,1.498,94,0.638,120,0.345,121,1.132,694,2.57,726,4.452,1370,4.636,1371,4.85,1372,6.015,1373,6.015,1374,4.85,1375,4.604]],["title/interfaces/OrganizationDto.html",[83,0.336,1376,2.513]],["body/interfaces/OrganizationDto.html",[3,0.345,4,0.273,8,0.273,28,0.02,29,0.871,30,0.413,38,0.345,81,0.017,82,0.017,83,0.499,85,1.498,94,0.638,120,0.345,121,1.132,726,4.452,1371,4.85,1372,6.015,1373,6.015,1374,4.85,1375,4.604,1376,4.412,1377,4.636]],["title/injectables/OrganizationEffects.html",[165,0.816,298,2.307]],["body/injectables/OrganizationEffects.html",[3,0.305,4,0.241,8,0.241,22,1.73,25,1.524,27,1.193,28,0.021,29,0.594,30,0.273,31,1.132,33,0.919,34,0.861,38,0.305,39,0.861,81,0.016,82,0.016,94,0.593,120,0.305,157,1.73,158,1.479,165,1.33,167,1.551,219,1.558,298,3.761,309,2.039,322,4.94,324,5.932,325,5.771,327,5.081,338,5.131,340,2.711,343,5.521,350,2.81,374,4.101,375,3.646,376,4.101,710,2.81,715,4.101,716,4.474,758,3.954,1378,4.101,1379,6.45,1380,4.791,1381,5.936,1382,5.936,1383,6.742,1384,5.936,1385,6.742,1386,4.791,1387,5.936,1388,5.936,1389,5.936,1390,4.791,1391,4.791,1392,3.307,1393,3.307,1394,3.307,1395,4.101]],["title/injectables/OrganizationService.html",[165,0.816,716,2.307]],["body/injectables/OrganizationService.html",[3,0.315,4,0.249,8,0.249,13,2.105,22,1.442,25,1.611,27,1.63,28,0.021,29,0.811,30,0.372,31,1.546,33,0.943,34,0.889,38,0.315,39,0.889,40,3.414,81,0.016,82,0.016,120,0.315,121,0.984,165,1.356,167,1.602,209,2.372,231,3.681,266,1.718,271,1.907,309,2.105,388,1.675,392,4.234,393,4.705,395,4.179,410,4.179,415,4.234,416,3.836,420,3.134,425,4.234,429,5.6,694,1.989,703,5.182,710,3.551,716,3.836,726,3.836,764,4.319,802,5.182,1376,3.414,1396,4.234,1397,6.818,1398,4.947,1399,6.054,1400,4.947,1401,4.947,1402,4.947,1403,4.947,1404,4.947,1405,6.543,1406,6.054,1407,4.947]],["title/interfaces/OrganizationState.html",[83,0.336,293,2.307]],["body/interfaces/OrganizationState.html",[3,0.294,4,0.232,8,0.232,28,0.021,30,0.361,33,0.882,38,0.403,56,1.948,81,0.016,82,0.016,83,0.425,85,1.276,92,1.575,94,0.579,111,2.212,120,0.294,170,3.328,221,2.053,238,1.575,239,1.575,240,1.494,241,1.575,242,1.662,243,1.662,293,4.017,300,3.184,302,1.979,340,2.998,439,5.066,442,2.376,443,5.063,444,4.413,445,2.082,446,3.949,447,3.949,452,4.002,453,3.511,454,4.828,455,3.184,457,4.413,461,3.401,463,4.413,464,4.002,466,4.413,467,4.413,694,3.026,710,2.706,758,2.706,1028,3.511,1392,3.184,1393,3.184,1394,3.184,1395,3.949,1408,3.511,1409,4.614,1410,3.511,1411,3.949,1412,3.949,1413,3.949,1414,3.949,1415,3.949,1416,3.949]],["title/components/RegisterComponent.html",[0,0.515,71,1.179]],["body/components/RegisterComponent.html",[0,0.676,1,0.874,2,1.232,3,0.172,4,0.136,5,0.972,6,0.972,7,0.972,8,0.136,10,0.972,11,2.513,12,2.513,14,1.369,15,1.109,16,1.444,18,1.444,20,1.612,22,1.169,24,3.137,25,1.609,27,0.999,28,0.021,29,0.657,30,0.349,31,1.491,32,3.518,33,0.945,34,0.485,35,1.148,36,1.085,37,1.085,38,0.172,39,0.485,44,0.972,45,1.444,46,1.444,47,0.972,48,1.908,49,0.972,50,0.972,51,0.874,52,0.972,53,0.874,54,0.972,55,0.874,56,0.829,57,0.972,58,0.874,59,0.972,60,0.874,61,0.829,62,1.444,63,0.874,64,0.972,65,0.874,66,0.972,67,0.874,68,0.972,69,0.874,70,0.972,71,1.715,72,0.972,73,0.874,74,0.786,75,0.874,76,0.972,77,0.874,78,0.972,79,0.972,80,0.972,81,0.011,82,0.011,92,0.921,94,0.4,120,0.172,121,0.72,129,1.148,141,1.444,157,1.395,158,1.192,167,0.874,200,0.829,219,1.853,229,1.217,238,0.921,239,0.921,240,1.298,241,0.921,242,0.972,243,0.972,266,1.486,290,1.148,302,0.921,314,1.294,315,1.71,320,3.137,328,1.862,329,2.539,331,1.723,333,1.71,340,1.924,350,1.582,388,1.109,389,4.239,391,4.094,402,1.862,408,2.54,410,1.862,420,1.71,442,2.087,445,1.217,489,2.159,490,2.613,494,2.444,496,2.613,552,1.822,620,1.026,622,1.474,629,1.378,688,1.612,689,3.302,690,2.444,691,2.613,692,2.351,693,4.084,695,3.031,696,3.302,697,3.031,701,3.031,702,3.031,711,3.656,712,2.893,713,2.706,717,2.771,718,3.758,719,2.771,733,2.54,734,4.156,736,3.354,741,2.806,742,1.582,748,1.582,749,1.71,750,1.378,751,1.862,752,1.71,753,1.862,754,2.767,755,1.862,757,1.474,767,1.862,768,1.378,769,1.71,770,1.862,771,1.862,772,1.862,778,2.351,781,1.71,782,1.71,784,1.582,790,1.71,794,2.54,819,3.031,824,3.641,825,3.641,826,3.302,827,3.051,828,1.862,830,3.051,837,3.051,839,2.767,844,3.051,846,1.582,848,1.378,850,1.582,851,1.582,852,2.053,853,2.053,854,2.053,855,1.71,856,1.862,857,1.862,858,1.862,861,1.862,862,1.862,863,1.862,864,2.54,867,1.71,875,1.862,877,3.051,883,2.053,884,3.051,894,3.031,1130,4.095,1131,3.641,1148,3.051,1152,2.31,1153,2.053,1154,1.582,1155,2.053,1163,2.053,1417,2.31,1418,4.01,1419,4.01,1420,4.785,1421,4.01,1422,2.698,1423,2.698,1424,2.698,1425,2.698,1426,2.698,1427,2.698,1428,2.698,1429,2.698,1430,3.432,1431,4.01,1432,3.302,1433,3.302,1434,2.698,1435,2.698,1436,2.698,1437,2.698,1438,2.053,1439,1.862,1440,2.31,1441,2.698,1442,2.698,1443,2.698,1444,2.698,1445,2.698,1446,2.698,1447,2.698,1448,2.698,1449,2.698,1450,2.698,1451,4.01,1452,4.01,1453,4.01,1454,4.01,1455,4.01,1456,4.01,1457,4.01,1458,4.01,1459,4.01,1460,4.01,1461,4.01,1462,4.01,1463,4.01,1464,4.01,1465,4.01]],["title/interfaces/RegisterRequestDto.html",[83,0.336,408,2.307]],["body/interfaces/RegisterRequestDto.html",[3,0.348,4,0.276,8,0.276,28,0.02,30,0.409,38,0.348,81,0.018,82,0.018,83,0.505,85,1.514,94,0.642,120,0.348,121,1.141,329,3.381,331,2.54,408,4.076,483,3.21,894,4.467,1432,4.867,1433,4.867,1466,4.685]],["title/components/ResetPasswordComponent.html",[0,0.515,73,1.179]],["body/components/ResetPasswordComponent.html",[0,0.741,1,1.025,2,1.383,3,0.201,4,0.159,5,1.14,6,1.14,7,1.14,8,0.159,10,1.14,11,2.574,12,2.574,14,1.537,15,1.246,16,1.622,18,1.622,20,1.811,22,1.313,24,3.295,25,1.608,27,0.788,28,0.021,29,0.65,30,0.343,31,1.524,32,3.333,33,0.942,34,0.569,35,1.347,36,1.273,37,1.273,38,0.201,39,0.569,44,1.14,45,1.622,46,1.622,47,1.14,48,2.057,49,1.14,50,1.14,51,1.025,52,1.14,53,1.025,54,1.14,55,1.025,56,0.972,57,1.14,58,1.025,59,1.14,60,1.025,61,0.972,62,1.622,63,1.025,64,1.14,65,1.025,66,1.14,67,1.025,68,1.14,69,1.025,70,1.14,71,1.025,72,1.14,73,1.849,74,1.88,75,1.025,76,1.14,77,1.025,78,1.14,79,1.14,80,1.14,81,0.012,82,0.012,94,0.45,120,0.201,121,0.678,129,1.916,157,1.313,158,1.122,167,1.025,200,0.972,219,1.866,266,1.376,290,1.347,302,1.081,314,1.518,317,3.677,331,2.057,340,1.811,388,1.246,442,1.697,445,1.428,461,1.856,489,2.365,490,2.863,494,2.678,496,2.863,508,3.427,552,1.61,620,1.204,622,1.729,629,1.617,688,1.811,690,2.678,691,2.863,692,2.641,693,4.251,695,3.321,697,3.321,701,3.321,702,3.321,712,3.118,713,2.917,717,2.911,718,3.973,719,2.911,733,2.853,734,2.853,736,3.523,749,2.006,750,1.617,752,2.006,757,1.729,778,3.074,781,2.006,782,2.006,784,1.856,787,2.185,790,2.006,818,2.409,819,3.321,820,3.855,821,3.855,823,4.487,826,3.618,828,2.185,836,2.709,839,3.108,841,2.709,842,2.709,845,2.709,846,1.856,847,3.618,848,1.617,850,1.856,851,1.856,855,2.006,856,2.185,857,2.185,858,2.185,861,3.108,862,3.108,863,3.108,864,3.321,866,2.709,867,2.853,870,2.709,871,2.709,872,2.709,873,2.709,875,2.185,876,2.709,881,2.409,885,3.855,891,3.855,1131,3.989,1148,3.427,1153,2.409,1430,3.855,1439,2.185,1440,2.709,1467,5.892,1468,5.892,1469,5.242,1470,5.242,1471,4.503,1472,3.165,1473,3.165,1474,3.165,1475,3.165,1476,2.409,1477,3.165,1478,3.165,1479,7.107,1480,3.165,1481,3.165,1482,4.503,1483,4.487,1484,3.165,1485,2.709,1486,4.503,1487,4.503,1488,4.503,1489,4.503]],["title/interfaces/ResetPasswordRequestDto.html",[83,0.336,412,2.513]],["body/interfaces/ResetPasswordRequestDto.html",[3,0.361,4,0.285,8,0.285,28,0.02,30,0.374,38,0.361,81,0.018,82,0.018,83,0.523,85,1.568,94,0.655,120,0.361,121,1.105,331,2.042,412,4.532,483,3.325,1483,6.103,1485,6.103,1490,4.853]],["title/injectables/SessionStorage.html",[165,0.816,1491,2.771]],["body/injectables/SessionStorage.html",[3,0.287,4,0.227,8,0.227,13,1.92,22,1.829,25,1.689,27,1.644,28,0.021,29,0.818,30,0.387,31,1.559,33,0.832,34,0.811,38,0.287,39,0.811,81,0.016,82,0.016,94,0.571,120,0.364,121,1.123,154,2.977,158,1.644,165,1.281,209,2.164,213,3.553,219,1.648,221,1.461,266,1.787,271,1.829,302,1.541,309,1.92,379,3.115,388,1.582,442,2.136,510,3.353,552,2.136,620,1.716,621,2.859,688,1.814,1058,2.647,1059,4.181,1069,3.434,1071,3.434,1096,5.372,1097,4.351,1098,3.993,1099,4.351,1100,4.351,1101,4.777,1102,4.894,1103,4.351,1104,4.351,1105,3.863,1106,4.351,1107,3.863,1108,4.351,1109,3.863,1110,3.434,1111,3.434,1112,3.863,1113,3.623,1114,3.115,1115,3.863,1116,3.863,1117,3.863,1118,3.863,1119,3.863,1120,4.894,1122,3.863,1123,3.863,1124,3.863,1125,3.863,1126,3.863,1127,3.863,1491,4.351,1492,6.177,1493,4.513]],["title/components/SidebarComponent.html",[0,0.515,75,1.179]],["body/components/SidebarComponent.html",[0,0.642,1,0.801,2,1.154,3,0.157,4,0.125,5,0.892,6,0.892,7,0.892,8,0.125,10,0.892,11,2.477,12,2.477,14,1.283,15,1.257,16,1.354,18,1.354,22,1.674,24,3.454,25,1.357,27,1.264,28,0.021,29,0.629,30,0.34,31,0.888,33,0.761,34,0.445,36,0.995,37,0.995,38,0.157,39,1.131,44,0.892,45,1.354,46,2.312,47,0.892,48,1.827,49,0.892,50,0.892,51,0.801,52,0.892,53,0.801,54,0.892,55,0.801,56,0.76,57,0.892,58,0.801,59,0.892,60,0.801,61,0.76,62,1.354,63,0.801,64,0.892,65,0.801,66,0.892,67,0.801,68,0.892,69,1.642,70,0.892,71,0.801,72,0.892,73,0.801,74,0.722,75,1.642,76,0.892,77,0.801,78,0.892,79,0.892,80,0.892,81,0.01,82,0.01,87,1.265,89,1.265,92,0.845,93,2.594,94,0.573,95,2.591,106,3.259,107,3.128,109,2.944,114,1.452,117,2.591,120,0.157,122,2.381,134,1.696,139,2.979,152,1.187,157,0.722,158,0.617,189,2.432,196,2.204,199,1.569,200,1.395,204,3.136,214,2.381,219,1.332,223,3.136,228,3.048,230,2.053,233,2.665,238,0.845,239,0.845,240,1.217,241,1.283,242,0.892,243,0.892,263,2.204,266,0.987,388,1.742,460,2.86,485,3.458,486,2.879,489,2.05,499,3.136,511,1.709,514,3.217,516,2.879,517,4.342,518,3.136,523,2.594,525,3.861,526,2.86,531,3.781,535,2.86,536,2.86,548,3.458,552,1.154,595,3.861,620,0.942,627,1.569,630,3.214,688,1.511,690,2.321,713,2.933,717,1.696,741,3.692,750,1.265,896,3.217,927,4.345,933,5.045,934,3.889,940,2.86,1001,2.119,1010,5.527,1011,6.516,1012,5.527,1030,3.217,1174,2.381,1184,1.569,1215,2.594,1217,3.217,1232,3.217,1253,3.217,1257,3.217,1306,3.217,1307,3.217,1494,2.119,1495,4.543,1496,3.759,1497,6.296,1498,5.108,1499,3.759,1500,3.759,1501,5.073,1502,4.342,1503,6.148,1504,4.342,1505,4.342,1506,4.342,1507,4.543,1508,4.543,1509,4.543,1510,4.543,1511,3.889,1512,5.454,1513,4.543,1514,4.543,1515,4.543,1516,4.543,1517,2.476,1518,3.759,1519,4.342,1520,2.594,1521,3.759,1522,2.476,1523,2.476,1524,2.476,1525,3.217,1526,2.476,1527,3.759,1528,2.476,1529,2.476,1530,4.543,1531,2.476,1532,2.476,1533,7.262,1534,2.476,1535,2.476,1536,2.476,1537,3.217,1538,2.476,1539,2.476,1540,2.476,1541,2.476,1542,2.476,1543,3.759,1544,2.476,1545,2.476,1546,2.476,1547,2.476,1548,2.476,1549,2.476,1550,2.476,1551,3.759,1552,2.476,1553,2.476,1554,2.476,1555,2.476,1556,2.476,1557,2.476,1558,2.476,1559,2.476,1560,2.476,1561,2.476,1562,2.476,1563,2.476,1564,2.476,1565,2.476,1566,2.476,1567,2.476,1568,2.476,1569,3.217,1570,2.476,1571,2.476,1572,2.476,1573,2.476,1574,2.476,1575,2.476,1576,2.476,1577,2.476,1578,2.476,1579,2.476,1580,2.476,1581,2.476,1582,2.476,1583,2.476,1584,2.476,1585,2.476,1586,2.476,1587,2.476,1588,3.759,1589,2.476,1590,2.476,1591,2.476,1592,2.476,1593,2.476,1594,2.476,1595,2.476,1596,2.476,1597,2.476,1598,2.119,1599,2.476,1600,2.476,1601,2.476,1602,2.476,1603,2.476,1604,2.476,1605,2.476,1606,2.476,1607,2.476,1608,2.476,1609,2.476,1610,2.476,1611,2.476,1612,2.476,1613,2.476,1614,2.476,1615,2.476]],["title/interfaces/Token.html",[83,0.336,440,2.136]],["body/interfaces/Token.html",[3,0.357,4,0.282,8,0.282,28,0.02,30,0.371,38,0.357,81,0.018,82,0.018,83,0.517,85,1.551,94,0.651,120,0.357,121,1.102,390,4.502,440,3.827,1020,3.563,1616,4.8,1617,5.408,1618,6.082,1619,6.082]],["title/interfaces/TokenDto.html",[83,0.336,417,2.513]],["body/interfaces/TokenDto.html",[3,0.357,4,0.282,8,0.282,28,0.02,30,0.371,38,0.357,81,0.018,82,0.018,83,0.517,85,1.551,94,0.651,120,0.357,121,1.102,390,4.502,417,4.503,1020,3.563,1617,5.408,1618,6.082,1619,6.082,1620,4.8]],["title/components/TopbarComponent.html",[0,0.515,77,1.179]],["body/components/TopbarComponent.html",[0,0.779,1,1.124,2,1.476,3,0.221,4,0.175,5,1.251,6,1.251,7,1.251,8,0.175,10,1.251,11,2.607,12,2.607,14,1.641,15,1.329,16,1.731,18,1.731,20,1.932,22,1.401,24,3.382,25,1.692,27,1.197,28,0.021,29,0.738,30,0.39,31,1.135,32,2.304,33,0.963,34,0.624,35,1.478,36,1.396,37,1.396,38,0.221,39,0.624,44,1.251,45,1.731,46,1.731,47,1.251,48,2.142,49,1.251,50,1.251,51,1.124,52,1.251,53,1.124,54,1.251,55,1.124,56,1.067,57,1.251,58,1.124,59,1.251,60,1.124,61,1.067,62,1.731,63,1.124,64,1.251,65,1.124,66,1.251,67,1.124,68,1.251,69,1.124,70,1.251,71,1.124,72,1.251,73,1.124,74,1.012,75,1.124,76,1.251,77,1.925,78,1.985,79,1.251,80,1.251,81,0.013,82,0.013,92,1.881,94,0.48,109,3.092,120,0.221,134,2.487,157,1.734,158,1.609,195,3.232,200,1.693,219,1.447,238,1.881,239,1.881,240,1.784,241,1.881,242,1.985,243,1.985,266,1.561,271,1.012,290,1.478,318,2.2,388,1.329,445,1.567,489,2.487,490,3.01,491,3.804,494,2.815,496,3.01,499,3.01,511,2.397,518,2.397,531,3.492,552,1.693,620,1.321,622,1.896,624,2.397,627,2.2,629,1.774,694,2.216,717,2.988,719,2.988,741,3.883,742,3.232,748,2.037,750,1.774,757,1.896,761,2.397,763,2.643,787,2.397,848,1.774,850,2.037,851,2.037,927,3.804,933,3.317,958,4.114,1154,2.037,1155,2.643,1162,2.972,1511,4.717,1621,2.972,1622,5.511,1623,5.511,1624,4.806,1625,4.806,1626,5.511,1627,5.511,1628,5.511,1629,4.806,1630,6.459,1631,5.948,1632,6.459,1633,4.806,1634,4.806,1635,3.473,1636,3.473,1637,3.473,1638,3.473,1639,3.473,1640,4.806,1641,4.806,1642,4.806,1643,4.114,1644,3.473,1645,3.473,1646,4.806,1647,4.806,1648,3.473,1649,4.806,1650,3.473,1651,3.473,1652,4.806,1653,3.473,1654,3.473,1655,3.473,1656,3.473,1657,3.473,1658,3.473,1659,3.473,1660,3.473,1661,3.473,1662,4.806,1663,4.806]],["title/interfaces/User.html",[83,0.336,200,1.118]],["body/interfaces/User.html",[3,0.312,4,0.247,8,0.247,28,0.021,29,0.608,30,0.426,33,0.798,38,0.312,81,0.016,82,0.016,83,0.452,85,1.355,94,0.601,120,0.312,121,1.14,125,2.874,141,2.447,200,1.849,329,3.258,442,2.109,894,4.305,936,5.171,1179,4.581,1371,4.69,1374,4.69,1375,4.637,1432,4.69,1433,4.69,1520,4.69,1664,4.194,1665,5.816,1666,5.816,1667,5.816,1668,4.154,1669,4.9,1670,4.581,1671,4.9,1672,4.194,1673,4.194,1674,3.729,1675,4.194]],["title/interfaces/UserDto.html",[83,0.336,421,2.513]],["body/interfaces/UserDto.html",[3,0.312,4,0.247,8,0.247,28,0.021,29,0.608,30,0.426,33,0.798,38,0.312,81,0.016,82,0.016,83,0.452,85,1.355,94,0.601,120,0.312,121,1.14,125,2.874,141,2.447,329,3.258,421,4.154,442,2.109,894,4.305,936,5.171,1179,4.581,1371,4.69,1374,4.69,1375,4.637,1432,4.69,1433,4.69,1520,4.69,1665,5.816,1666,5.816,1667,5.816,1668,4.154,1670,4.581,1672,4.194,1673,4.194,1674,3.729,1675,4.194,1676,4.194,1677,4.9,1678,4.9]],["title/coverage.html",[1679,3.779]],["body/coverage.html",[0,0.994,1,0.998,8,0.155,9,2.638,28,0.021,30,0.175,51,0.998,53,0.998,55,0.998,58,0.998,60,0.998,63,0.998,65,0.998,67,0.998,69,0.998,71,0.998,73,0.998,75,0.998,77,0.998,81,0.012,82,0.012,83,0.66,84,2.591,86,3.565,109,1.391,160,1.808,165,1.515,168,1.953,189,1.478,200,0.947,221,0.998,249,4.461,290,1.312,291,3.931,292,1.953,293,1.953,294,1.953,296,2.127,298,1.953,300,2.127,303,2.346,304,2.346,305,2.638,310,2.638,311,2.591,312,2.127,313,1.808,314,1.478,315,1.953,316,2.127,317,1.808,318,1.953,320,1.575,321,1.953,331,1.592,351,2.127,366,2.127,380,2.127,381,2.127,382,2.127,383,2.127,384,2.127,385,2.127,387,2.638,397,1.953,408,1.953,412,2.127,416,1.953,417,2.127,421,2.127,433,3.931,440,1.808,450,2.346,451,2.346,452,3.05,482,2.638,483,3.503,484,2.638,500,1.953,676,2.346,685,2.638,686,2.638,687,2.638,694,1.776,710,1.808,716,1.953,758,1.808,760,2.346,761,2.127,762,2.127,764,1.953,810,2.638,811,2.638,816,2.638,817,2.638,818,3.363,846,1.808,847,2.127,848,1.575,849,2.346,892,2.346,893,2.638,895,2.638,974,2.346,1020,4.192,1052,2.638,1057,3.931,1058,3.645,1065,2.127,1074,2.346,1075,2.346,1095,2.638,1113,1.953,1128,2.638,1154,3.029,1156,2.346,1173,2.638,1193,2.127,1194,2.638,1195,1.808,1196,2.638,1198,2.638,1229,2.638,1265,2.638,1370,2.638,1376,2.127,1377,2.638,1378,2.638,1392,2.127,1393,2.127,1394,2.127,1396,2.638,1408,3.931,1410,2.346,1417,2.638,1438,2.346,1439,2.127,1466,2.638,1467,2.638,1468,2.638,1476,2.346,1490,2.638,1491,2.346,1492,2.638,1494,2.638,1616,2.638,1620,2.638,1621,2.638,1664,2.638,1676,2.638,1679,2.346,1680,3.082,1681,3.082,1682,4.419,1683,3.782,1684,7.618,1685,2.638,1686,3.363,1687,2.346,1688,5.642,1689,5.972,1690,3.082,1691,5.165,1692,4.419,1693,2.638,1694,2.638,1695,3.782,1696,2.638,1697,2.638,1698,3.782,1699,3.082,1700,5.972,1701,3.082,1702,5.165,1703,4.419,1704,6.154,1705,3.082,1706,4.419,1707,5.706,1708,2.638,1709,5.32,1710,4.419,1711,4.829,1712,2.638,1713,4.421,1714,2.638,1715,2.638,1716,4.419,1717,3.082,1718,3.082,1719,3.082,1720,3.082,1721,3.082,1722,3.082,1723,3.082,1724,3.082,1725,3.082,1726,3.082,1727,2.638,1728,2.638,1729,2.638,1730,2.638,1731,3.082,1732,3.082]],["title/dependencies.html",[1733,2.316,1734,3.748]],["body/dependencies.html",[28,0.021,34,0.953,35,2.257,36,2.539,37,2.132,81,0.017,82,0.017,167,1.717,375,4.037,445,2.849,620,2.017,629,2.709,1184,3.361,1321,4.54,1734,4.54,1735,5.304,1736,7.506,1737,5.304,1738,6.743,1739,4.806,1740,5.304,1741,5.304,1742,4.54,1743,5.304,1744,5.304,1745,5.304,1746,4.54,1747,5.304,1748,5.304,1749,5.304,1750,5.304,1751,5.304,1752,5.304,1753,4.54,1754,5.304,1755,5.304,1756,5.304,1757,5.304,1758,5.304,1759,4.54,1760,5.304,1761,5.304,1762,5.304,1763,5.304,1764,5.304,1765,5.304]],["title/miscellaneous/enumerations.html",[1766,1.785,1767,3.748]],["body/miscellaneous/enumerations.html",[28,0.02,56,1.692,81,0.018,82,0.018,120,0.351,158,1.76,200,1.692,340,2.596,443,4.915,455,4.457,461,3.788,559,3.803,694,2.215,1053,4.716,1520,3.803,1668,4.729,1670,4.915,1766,3.232,1767,4.716,1768,5.51,1769,5.51,1770,6.458,1771,5.51,1772,6.458,1773,5.51,1774,4.716,1775,5.51,1776,5.51,1777,5.51,1778,5.51,1779,5.51,1780,5.51,1781,5.51,1782,5.51,1783,5.51,1784,4.716,1785,4.716,1786,5.51,1787,5.51,1788,5.51,1789,6.458]],["title/miscellaneous/functions.html",[108,2.774,1766,1.785]],["body/miscellaneous/functions.html",[27,1.448,28,0.019,29,0.721,30,0.331,31,1.374,81,0.018,82,0.018,108,3.684,120,0.37,393,4.598,395,4.013,1686,4.425,1687,5.07,1766,3.41,1790,4.976,1791,5.814]],["title/index.html",[120,0.194,1792,2.605,1793,2.605]],["body/index.html",[0,0.869,2,1.706,4,0.217,14,1.473,28,0.018,29,0.689,81,0.015,82,0.015,89,2.204,107,2.068,146,3.52,147,2.204,170,1.947,204,2.356,212,2.53,221,1.397,228,3.572,230,3.356,240,1.397,244,2.53,248,4.356,395,2.977,416,2.733,523,2.977,559,2.977,585,2.977,688,1.734,719,1.947,937,5.111,1050,5.26,1154,3.604,1184,3.893,1195,3.604,1255,3.693,1268,4.755,1270,4.677,1292,4.228,1519,3.693,1733,3.283,1739,3.283,1742,3.693,1759,3.693,1784,3.693,1785,5.555,1794,4.755,1795,5.556,1796,6.145,1797,5.556,1798,5.556,1799,5.556,1800,3.693,1801,4.314,1802,3.693,1803,3.693,1804,4.314,1805,4.314,1806,4.314,1807,4.314,1808,5.556,1809,4.314,1810,4.314,1811,4.677,1812,4.314,1813,4.314,1814,3.693,1815,4.314,1816,4.314,1817,4.314,1818,4.314,1819,4.314,1820,4.314,1821,4.314,1822,3.283,1823,6.22,1824,6.875,1825,4.314,1826,4.314,1827,4.314,1828,4.314,1829,3.693,1830,4.314,1831,4.755,1832,4.314,1833,5.26,1834,4.314,1835,7.158,1836,4.314,1837,4.314,1838,4.314,1839,4.314,1840,7.375,1841,6.875,1842,5.556,1843,5.26,1844,6.127,1845,5.556,1846,4.314,1847,4.314,1848,6.145,1849,5.26,1850,5.556,1851,5.556,1852,6.145,1853,4.755,1854,5.556,1855,6.489,1856,4.314,1857,5.556,1858,4.314,1859,4.314,1860,4.314,1861,3.693,1862,3.693,1863,4.314,1864,4.314,1865,5.556,1866,4.314,1867,4.314,1868,5.556,1869,4.314,1870,5.556,1871,4.314,1872,4.314,1873,3.693,1874,3.693,1875,4.677,1876,4.314,1877,5.556,1878,3.693,1879,4.314,1880,4.314,1881,3.693,1882,3.693,1883,4.314,1884,4.314,1885,3.693,1886,4.314,1887,4.314,1888,3.693]],["title/license.html",[1792,2.605,1793,2.605,1889,2.605]],["body/license.html",[0,0.502,4,0.344,8,0.098,25,0.264,28,0.012,30,0.111,33,0.148,39,0.201,81,0.007,82,0.005,83,0.388,85,0.721,88,1.798,89,3.388,95,3.101,102,0.708,105,0.771,107,2.496,112,3.463,113,3.08,116,2.862,117,0.571,118,2.25,133,1.238,134,0.504,139,2.133,142,1.798,143,2.25,144,0.771,150,0.771,153,0.708,154,0.882,161,3.315,166,0.708,170,0.504,182,1.798,197,0.708,200,1.713,207,1.98,212,1.146,213,0.571,215,2.696,219,0.293,221,1.362,224,1.798,227,2.696,230,1.707,240,0.362,241,0.381,248,0.708,251,0.771,271,0.326,273,0.771,278,0.771,282,2.475,287,0.708,322,0.771,331,0.402,388,0.309,439,0.771,464,0.771,499,3.437,512,1.983,515,0.85,516,1.238,518,1.349,519,3.343,526,2.703,527,0.956,532,0.956,539,0.956,540,5.011,546,0.85,547,2.675,548,2.379,551,1.673,552,0.343,557,0.956,563,1.673,566,2.703,577,1.673,579,2.972,583,3.772,584,0.956,592,0.956,593,1.673,594,1.673,597,4.011,677,4.572,694,0.786,768,0.571,794,0.708,867,0.708,878,3.566,922,0.956,930,2.23,935,1.673,938,1.487,944,0.956,946,0.956,1046,3.343,1056,4.455,1059,0.708,1098,0.655,1174,1.651,1182,0.956,1184,2.25,1190,0.956,1195,2.083,1208,1.487,1209,3.396,1212,1.673,1215,1.798,1218,3.396,1230,0.956,1251,3.82,1256,1.673,1258,4.572,1262,0.956,1266,1.673,1270,4.752,1272,2.675,1287,0.956,1292,0.85,1293,0.956,1295,1.673,1296,3.6,1297,3.82,1311,1.673,1351,0.956,1357,0.956,1375,0.708,1498,0.956,1504,0.956,1505,0.956,1506,3.343,1525,0.956,1537,1.673,1569,0.956,1598,4.011,1668,3.368,1674,3.714,1679,1.487,1753,1.673,1774,0.956,1800,0.956,1802,0.956,1803,0.956,1811,4.79,1822,0.85,1823,3.82,1829,2.675,1831,2.675,1833,0.956,1843,1.673,1844,4.678,1849,0.956,1853,2.23,1861,3.04,1862,2.675,1873,4.678,1874,2.23,1878,2.23,1881,5.299,1882,1.673,1885,2.23,1888,1.673,1889,6.307,1890,5.933,1891,3.551,1892,1.117,1893,1.117,1894,2.605,1895,6.504,1896,4.463,1897,6.004,1898,6.386,1899,3.906,1900,1.117,1901,1.117,1902,1.954,1903,3.551,1904,6.294,1905,3.551,1906,2.605,1907,5.465,1908,1.117,1909,2.605,1910,1.117,1911,1.117,1912,1.954,1913,3.906,1914,1.117,1915,3.906,1916,1.117,1917,1.117,1918,4.463,1919,1.954,1920,1.117,1921,1.117,1922,1.117,1923,5.465,1924,6.936,1925,2.605,1926,7.339,1927,1.954,1928,4.206,1929,4.206,1930,3.906,1931,1.117,1932,1.117,1933,3.126,1934,4.463,1935,2.605,1936,1.117,1937,1.954,1938,1.117,1939,2.605,1940,5.933,1941,3.126,1942,1.117,1943,1.117,1944,1.954,1945,3.126,1946,1.954,1947,5.205,1948,1.954,1949,1.954,1950,3.126,1951,4.206,1952,3.551,1953,1.117,1954,4.463,1955,3.906,1956,6.572,1957,2.605,1958,4.206,1959,1.117,1960,1.117,1961,3.551,1962,4.463,1963,1.954,1964,5.053,1965,3.551,1966,1.954,1967,1.117,1968,1.117,1969,5.576,1970,1.954,1971,1.117,1972,1.117,1973,5.342,1974,1.954,1975,2.605,1976,1.117,1977,1.117,1978,1.954,1979,1.117,1980,1.117,1981,3.126,1982,1.117,1983,1.117,1984,1.117,1985,1.117,1986,1.117,1987,1.954,1988,1.117,1989,1.117,1990,1.117,1991,1.954,1992,1.117,1993,2.605,1994,1.954,1995,1.117,1996,1.117,1997,1.954,1998,1.954,1999,5.465,2000,1.117,2001,1.954,2002,1.954,2003,1.117,2004,1.117,2005,1.954,2006,2.605,2007,1.954,2008,2.605,2009,1.954,2010,1.117,2011,1.117,2012,3.906,2013,1.117,2014,1.117,2015,3.551,2016,1.117,2017,3.126,2018,1.117,2019,1.954,2020,2.605,2021,1.117,2022,1.117,2023,5.465,2024,3.126,2025,3.551,2026,3.906,2027,2.605,2028,1.117,2029,2.605,2030,1.954,2031,1.117,2032,1.117,2033,1.117,2034,2.605,2035,6.867,2036,1.117,2037,1.117,2038,1.954,2039,1.954,2040,1.117,2041,4.881,2042,1.117,2043,3.126,2044,2.605,2045,1.954,2046,6.807,2047,2.605,2048,4.686,2049,3.126,2050,1.954,2051,1.117,2052,1.954,2053,2.605,2054,4.686,2055,4.881,2056,3.126,2057,1.954,2058,1.954,2059,3.126,2060,1.117,2061,2.605,2062,6.341,2063,1.954,2064,1.117,2065,4.463,2066,1.117,2067,2.605,2068,4.463,2069,1.117,2070,5.576,2071,3.126,2072,1.954,2073,5.053,2074,3.906,2075,1.117,2076,1.117,2077,1.117,2078,4.463,2079,1.117,2080,1.954,2081,1.117,2082,2.605,2083,2.605,2084,1.117,2085,1.117,2086,1.117,2087,5.053,2088,2.605,2089,1.117,2090,1.117,2091,1.117,2092,1.954,2093,4.881,2094,1.117,2095,1.117,2096,1.117,2097,2.605,2098,2.605,2099,2.605,2100,2.605,2101,1.117,2102,1.117,2103,3.551,2104,1.117,2105,1.954,2106,0.956,2107,2.605,2108,1.117,2109,2.605,2110,1.117,2111,1.117,2112,1.117,2113,1.954,2114,1.117,2115,6.19,2116,4.463,2117,1.117,2118,1.954,2119,1.117,2120,1.117,2121,1.954,2122,1.954,2123,1.117,2124,1.117,2125,1.117,2126,1.954,2127,2.605,2128,3.551,2129,1.117,2130,1.954,2131,1.117,2132,1.117,2133,1.117,2134,1.117,2135,4.206,2136,3.126,2137,1.117,2138,3.551,2139,1.117,2140,1.117,2141,1.117,2142,2.605,2143,0.956,2144,1.117,2145,1.117,2146,1.117,2147,2.605,2148,2.605,2149,1.117,2150,1.117,2151,1.954,2152,1.954,2153,1.954,2154,1.117,2155,1.954,2156,1.117,2157,1.117,2158,1.117,2159,1.117,2160,1.117,2161,2.605,2162,1.117,2163,1.117,2164,5.576,2165,2.23,2166,1.117,2167,1.117,2168,1.117,2169,3.551,2170,3.551,2171,1.117,2172,1.117,2173,2.605,2174,1.117,2175,1.117,2176,3.126,2177,1.117,2178,1.954,2179,1.117,2180,1.117,2181,1.117,2182,1.117,2183,1.117,2184,1.117,2185,1.954,2186,1.954,2187,1.117,2188,2.605,2189,1.117,2190,1.117,2191,1.954,2192,1.117,2193,1.117,2194,1.117,2195,1.117,2196,1.954,2197,1.954,2198,1.954,2199,1.954,2200,4.686,2201,1.954,2202,3.906,2203,1.117,2204,1.117,2205,1.954,2206,2.605,2207,3.126,2208,3.126,2209,2.605,2210,3.126,2211,2.605,2212,1.117,2213,3.551,2214,3.551,2215,2.605,2216,2.605,2217,1.117,2218,1.954,2219,3.551,2220,1.954,2221,3.126,2222,3.126,2223,1.954,2224,2.605,2225,3.551,2226,1.117,2227,1.117,2228,1.117,2229,2.605,2230,2.605,2231,1.954,2232,1.117,2233,1.117,2234,1.117,2235,1.117,2236,1.954,2237,1.117,2238,1.117,2239,2.605,2240,1.117,2241,1.117,2242,1.954,2243,2.605,2244,1.117,2245,1.954,2246,1.117,2247,2.605,2248,1.117,2249,1.117,2250,1.117,2251,1.954,2252,1.954,2253,3.906,2254,6.071,2255,2.605,2256,1.954,2257,1.954,2258,1.954,2259,1.954,2260,3.126,2261,3.126,2262,1.954,2263,1.117,2264,1.117,2265,1.117,2266,1.117,2267,4.206,2268,3.906,2269,1.954,2270,1.117,2271,1.117,2272,1.117,2273,1.117,2274,1.954,2275,1.117,2276,1.954,2277,1.117,2278,3.551,2279,1.117,2280,5.053,2281,1.117,2282,1.117,2283,1.117,2284,1.117,2285,1.954,2286,1.117,2287,1.117,2288,1.117,2289,1.954,2290,2.605,2291,3.551,2292,1.954,2293,3.126,2294,1.954,2295,1.117,2296,1.117,2297,1.117,2298,1.117,2299,1.117,2300,1.954,2301,1.117,2302,1.117,2303,3.126,2304,1.117,2305,1.954,2306,1.954,2307,1.117,2308,1.117,2309,2.605,2310,1.117,2311,1.117,2312,1.117,2313,1.117,2314,1.117,2315,1.954,2316,1.117,2317,1.117,2318,1.117,2319,1.117,2320,1.117,2321,2.605,2322,1.117,2323,1.117,2324,1.117,2325,1.117,2326,1.117,2327,3.551,2328,1.117,2329,3.126,2330,1.117,2331,0.956,2332,3.126,2333,1.117,2334,1.117,2335,1.117,2336,1.117,2337,1.117,2338,1.954,2339,4.206,2340,2.605,2341,1.117,2342,3.126,2343,1.117,2344,1.117,2345,2.605,2346,1.117,2347,1.117,2348,2.605,2349,1.117,2350,1.954,2351,1.117,2352,1.117,2353,1.117,2354,1.117,2355,1.117,2356,1.117,2357,1.117,2358,1.117,2359,1.117,2360,1.954,2361,1.117,2362,1.117,2363,1.117,2364,1.954,2365,1.954,2366,1.117,2367,1.117,2368,2.605,2369,1.117,2370,1.954,2371,1.117,2372,1.954,2373,1.117,2374,1.954,2375,1.117,2376,2.605,2377,4.206,2378,1.117,2379,1.117,2380,1.954,2381,1.117,2382,1.117,2383,1.117,2384,1.117,2385,1.117,2386,1.954,2387,3.126,2388,1.117,2389,3.551,2390,1.117,2391,1.117,2392,1.117,2393,1.117,2394,1.117,2395,1.954,2396,1.954,2397,1.954,2398,2.605,2399,1.117,2400,1.954,2401,1.117,2402,2.605,2403,1.117,2404,1.954,2405,1.117,2406,1.954,2407,1.954,2408,1.117,2409,1.117,2410,1.954,2411,6.19,2412,1.954,2413,1.117,2414,3.551,2415,4.881,2416,2.605,2417,1.117,2418,1.117,2419,1.117,2420,3.126,2421,1.117,2422,1.117,2423,2.605,2424,1.117,2425,1.954,2426,1.117,2427,1.117,2428,1.117,2429,3.126,2430,1.117,2431,1.117,2432,1.117,2433,1.117,2434,1.117,2435,3.126,2436,1.954,2437,1.117,2438,1.117,2439,2.605,2440,1.117,2441,1.954,2442,2.605,2443,1.954,2444,1.117,2445,1.117,2446,1.117,2447,1.954,2448,2.605,2449,1.117,2450,1.117,2451,1.954,2452,1.117,2453,1.117,2454,1.117,2455,1.117,2456,1.117,2457,1.117,2458,2.605,2459,1.954,2460,1.117,2461,1.117,2462,3.126,2463,1.117,2464,2.605,2465,1.117,2466,1.117,2467,1.117,2468,1.954,2469,1.117,2470,1.117,2471,1.117,2472,2.605,2473,1.954,2474,1.954,2475,1.117,2476,4.206,2477,1.954,2478,2.605,2479,3.126,2480,1.117,2481,1.117,2482,1.117,2483,1.954,2484,1.117,2485,2.605,2486,1.117,2487,1.954,2488,1.117,2489,1.117,2490,1.117,2491,1.117,2492,2.605,2493,1.117,2494,2.605,2495,1.954,2496,1.117,2497,1.954,2498,1.117,2499,1.117,2500,1.954,2501,1.954,2502,1.117,2503,1.117,2504,1.954,2505,1.117,2506,1.117,2507,1.117,2508,1.117,2509,1.117,2510,2.605,2511,1.117,2512,1.117,2513,1.117,2514,1.117,2515,1.117,2516,3.126,2517,1.954,2518,2.605,2519,1.117,2520,1.117,2521,1.117,2522,1.117,2523,1.117,2524,1.954,2525,1.117,2526,1.117,2527,1.117,2528,1.117,2529,1.117,2530,1.117,2531,1.117,2532,1.117,2533,1.117,2534,1.117,2535,1.117,2536,1.117,2537,1.117,2538,1.117,2539,3.126,2540,1.117,2541,1.954,2542,1.117,2543,1.117,2544,1.117,2545,1.117,2546,1.117,2547,1.117,2548,1.117,2549,1.117,2550,1.117,2551,2.605,2552,1.117,2553,1.117,2554,1.117,2555,1.954,2556,1.117,2557,1.117,2558,1.117,2559,1.117,2560,1.117,2561,1.117,2562,1.954,2563,1.954,2564,3.551,2565,2.605,2566,1.117,2567,1.954,2568,1.117,2569,1.117,2570,1.117,2571,1.117,2572,2.605,2573,1.954,2574,1.117,2575,1.954,2576,1.954,2577,1.954,2578,1.117,2579,1.117,2580,1.117,2581,1.117,2582,1.117,2583,1.117,2584,1.954,2585,1.117,2586,1.117,2587,1.117,2588,1.117,2589,2.605,2590,1.117,2591,1.117,2592,1.117,2593,0.956,2594,1.117,2595,1.117,2596,1.117,2597,1.117,2598,1.117,2599,1.117,2600,1.117,2601,1.954,2602,1.117,2603,1.117,2604,1.117,2605,1.117,2606,1.117,2607,1.117,2608,1.117,2609,1.117,2610,1.117,2611,1.117,2612,1.117,2613,1.117,2614,1.117,2615,1.117,2616,1.117,2617,1.117,2618,1.117,2619,1.117,2620,2.605,2621,1.954,2622,1.117,2623,1.117,2624,1.117,2625,1.117,2626,1.117,2627,1.117,2628,1.954,2629,1.954,2630,1.117,2631,1.117,2632,1.117,2633,1.117,2634,1.117,2635,1.117,2636,1.117,2637,1.117,2638,1.954,2639,1.117,2640,1.117,2641,1.117,2642,1.117,2643,1.117,2644,1.117,2645,1.117,2646,1.117,2647,0.956,2648,1.117,2649,1.117,2650,1.117,2651,1.117,2652,1.117,2653,1.117,2654,1.117,2655,1.117,2656,1.117,2657,1.117]],["title/modules.html",[2658,4.25]],["body/modules.html",[28,0.018,81,0.018,82,0.018,2658,5.084]],["title/overview.html",[2659,4.25]],["body/overview.html",[2,1.809,28,0.018,81,0.018,82,0.018,85,1.629,159,3.731,309,2.506,1814,5.04,2165,5.04,2659,5.04]],["title/properties.html",[94,0.437,1733,2.316]],["body/properties.html",[28,0.019,81,0.018,82,0.018,94,0.59,1811,4.501,2660,5.914]],["title/miscellaneous/variables.html",[1766,1.785,1875,3.332]],["body/miscellaneous/variables.html",[15,1.469,28,0.021,30,0.375,56,1.549,61,1.549,74,1.47,81,0.008,82,0.008,84,1.733,92,1.813,111,2.653,118,1.872,120,0.116,121,0.445,133,1.155,147,2.19,152,2.055,154,0.823,157,2.156,158,1.842,160,2.186,161,2.573,170,3.334,195,1.069,200,2.097,210,1.155,221,2.072,231,1.51,238,1.813,239,1.813,240,1.902,241,1.813,242,1.913,243,1.913,271,1.816,290,1.258,291,1.387,292,3.722,293,2.985,294,1.155,296,2.572,298,1.155,300,2.572,302,1.722,303,2.249,304,2.249,306,4.663,311,2.958,312,2.04,313,2.186,314,1.417,315,1.872,316,2.04,317,2.186,318,2.361,320,0.931,321,1.155,331,2.207,338,2.249,340,2.827,351,2.04,366,2.04,380,2.04,381,2.04,382,2.04,383,2.04,384,2.04,385,2.04,390,1.155,391,3.666,393,1.258,399,1.56,416,4.102,433,1.387,434,4.032,435,3.19,436,1.56,437,3.19,438,3.19,439,4.759,440,3.445,441,1.56,442,2.269,444,2.249,450,2.249,451,2.249,452,3.666,453,2.249,454,4.737,455,2.04,456,1.56,457,4.351,458,1.56,459,1.56,460,3.262,461,3.707,462,1.56,463,4.211,464,4.362,465,1.56,466,4.573,467,3.585,468,1.56,469,1.56,470,1.56,471,1.56,472,1.56,473,1.56,474,1.56,475,1.56,476,1.56,477,1.56,478,1.56,479,1.56,480,1.56,481,1.56,585,1.258,621,1.155,676,2.249,692,2.186,694,2.745,710,1.733,717,0.823,719,0.823,758,1.733,760,2.249,761,2.04,762,2.04,785,1.387,786,1.56,846,1.733,847,2.04,848,1.51,849,2.249,974,2.249,1000,1.387,1020,0.996,1028,1.387,1057,1.387,1058,2.186,1074,2.249,1075,2.249,1129,3.669,1154,2.958,1156,2.249,1163,1.387,1282,1.56,1392,2.04,1393,2.04,1394,2.04,1408,1.387,1410,2.249,1411,1.56,1412,1.56,1413,1.56,1414,1.56,1415,1.56,1416,1.56,1438,2.249,1439,2.04,1476,2.249,1502,5.028,1617,2.836,1643,1.56,1683,1.56,1685,3.19,1686,1.387,1687,1.387,1693,1.56,1694,2.53,1695,1.56,1696,2.53,1697,3.19,1698,1.56,1704,1.56,1707,1.56,1708,5.028,1709,1.56,1711,1.56,1712,4.032,1713,1.56,1714,2.53,1715,2.53,1727,1.56,1728,1.56,1729,1.56,1730,1.56,1739,2.249,1746,1.56,1766,1.069,1790,1.56,1794,3.19,1822,1.387,1875,1.387,2106,2.53,2143,2.53,2331,1.56,2593,1.56,2647,1.56,2661,2.955,2662,2.955,2663,6.599,2664,2.955,2665,2.955,2666,1.823,2667,2.955,2668,5.044,2669,1.823,2670,1.823,2671,1.823,2672,2.955,2673,5.718,2674,4.287,2675,3.727,2676,2.955,2677,1.823,2678,6.009,2679,1.823,2680,1.823,2681,1.823,2682,1.823,2683,1.823,2684,1.823,2685,1.823,2686,1.823,2687,1.823,2688,1.823,2689,1.823,2690,1.823,2691,1.823,2692,1.823,2693,1.823,2694,1.823,2695,1.823,2696,1.823,2697,1.823,2698,1.823,2699,1.823,2700,4.287,2701,2.955,2702,2.955,2703,2.955,2704,2.955,2705,2.955,2706,2.955,2707,1.823,2708,1.823,2709,2.955,2710,1.823,2711,1.823,2712,1.823,2713,1.823,2714,1.823,2715,1.823,2716,1.823,2717,1.823,2718,1.823,2719,2.955,2720,2.955,2721,4.287,2722,1.823,2723,1.823,2724,1.823,2725,1.823,2726,1.823,2727,1.823,2728,1.823,2729,1.823,2730,1.823,2731,1.823,2732,1.823,2733,1.823,2734,6.827,2735,6.653,2736,3.727,2737,1.823,2738,2.955,2739,2.955,2740,2.955,2741,1.823,2742,1.823,2743,1.823,2744,1.823,2745,1.823,2746,2.955,2747,1.823,2748,2.955,2749,1.823,2750,1.823,2751,1.823,2752,1.823,2753,1.823,2754,1.823,2755,1.823,2756,2.955,2757,1.823,2758,1.823,2759,1.823,2760,1.823,2761,1.823,2762,1.823,2763,1.823,2764,1.823,2765,1.823,2766,1.823,2767,1.823,2768,1.823,2769,2.955,2770,1.823,2771,1.823,2772,1.823,2773,1.823,2774,1.823,2775,1.823,2776,3.727,2777,2.955,2778,3.727,2779,3.727,2780,1.823,2781,1.823,2782,1.823,2783,1.823,2784,1.823,2785,1.823,2786,6.009,2787,4.711,2788,1.823,2789,1.823,2790,1.823,2791,4.287,2792,2.955,2793,1.823,2794,1.823,2795,1.823,2796,1.823,2797,1.823,2798,1.823,2799,1.823,2800,1.823,2801,1.823,2802,1.823,2803,1.823,2804,1.823,2805,1.823,2806,1.823,2807,1.823]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1020,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":2660,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["0.07",{"_index":1332,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["0.14.3",{"_index":1765,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1684,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1705,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1706,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1718,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1716,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1717,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1719,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1689,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1710,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1690,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1688,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1703,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1699,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":566,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["1.0.9",{"_index":1752,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":1749,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2165,"title":{},"body":{"license.html":{},"overview.html":{}}}],["100",{"_index":1700,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":2178,"title":{},"body":{"license.html":{}}}],["12",{"_index":591,"title":{},"body":{"components/ConfigComponent.html":{}}}],["12/12",{"_index":1720,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":592,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["14",{"_index":159,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"overview.html":{}}}],["14/14",{"_index":1701,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":593,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["15.0.0",{"_index":1744,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":594,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["16/17",{"_index":1722,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":1814,"title":{},"body":{"index.html":{},"overview.html":{}}}],["17.1.0",{"_index":1736,"title":{},"body":{"dependencies.html":{}}}],["17.1.3",{"_index":1742,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["17.6.0",{"_index":1760,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":2184,"title":{},"body":{"license.html":{}}}],["1].label",{"_index":1034,"title":{},"body":{"components/HomeComponent.html":{}}}],["2",{"_index":1961,"title":{},"body":{"license.html":{}}}],["2.3.0",{"_index":1763,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":2182,"title":{},"body":{"license.html":{}}}],["2007",{"_index":1894,"title":{},"body":{"license.html":{}}}],["2021",{"_index":684,"title":{},"body":{"components/ConfigComponent.html":{}}}],["2022",{"_index":683,"title":{},"body":{"components/ConfigComponent.html":{}}}],["23",{"_index":1725,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":2732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":2535,"title":{},"body":{"license.html":{}}}],["29",{"_index":1892,"title":{},"body":{"license.html":{}}}],["3",{"_index":1891,"title":{},"body":{"license.html":{}}}],["3.3.1",{"_index":1756,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2431,"title":{},"body":{"license.html":{}}}],["4",{"_index":2216,"title":{},"body":{"license.html":{}}}],["4.18.2",{"_index":1754,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":786,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"miscellaneous/variables.html":{}}}],["404",{"_index":860,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["5",{"_index":2248,"title":{},"body":{"license.html":{}}}],["5/21",{"_index":1726,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":1724,"title":{},"body":{"coverage.html":{}}}],["6.0.1",{"_index":1758,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2424,"title":{},"body":{"license.html":{}}}],["6b",{"_index":2275,"title":{},"body":{"license.html":{}}}],["6d",{"_index":2298,"title":{},"body":{"license.html":{}}}],["7",{"_index":2211,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":1761,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":1702,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":1723,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":1747,"title":{},"body":{"dependencies.html":{}}}],["80:4000",{"_index":1852,"title":{},"body":{"index.html":{}}}],["94",{"_index":1721,"title":{},"body":{"coverage.html":{}}}],["991",{"_index":276,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["9])(?=.*[a",{"_index":2800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":2799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_next",{"_index":2804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_state",{"_index":2806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_val",{"_index":603,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ability",{"_index":2347,"title":{},"body":{"license.html":{}}}],["above",{"_index":88,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["absence",{"_index":2212,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":2610,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":2637,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":1990,"title":{},"body":{"license.html":{}}}],["accept",{"_index":2436,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":2435,"title":{},"body":{"license.html":{}}}],["access",{"_index":1506,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["accessible",{"_index":2503,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":510,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["accesstoken",{"_index":1617,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"miscellaneous/variables.html":{}}}],["accompanied",{"_index":2255,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":2614,"title":{},"body":{"license.html":{}}}],["accord",{"_index":2210,"title":{},"body":{"license.html":{}}}],["according",{"_index":2605,"title":{},"body":{"license.html":{}}}],["accordingly",{"_index":247,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["account",{"_index":1586,"title":{},"body":{"components/SidebarComponent.html":{}}}],["achieve",{"_index":2619,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":2145,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":2483,"title":{},"body":{"license.html":{}}}],["action",{"_index":458,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":322,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"injectables/OrganizationEffects.html":{},"license.html":{}}}],["activated",{"_index":936,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["activatedroute",{"_index":918,"title":{},"body":{"components/HomeComponent.html":{}}}],["activatedroutesnapshot",{"_index":2805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":191,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["activeclass",{"_index":1243,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activeroute",{"_index":1348,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["activities",{"_index":2061,"title":{},"body":{"license.html":{}}}],["activity",{"_index":2531,"title":{},"body":{"license.html":{}}}],["actual",{"_index":2508,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["actually",{"_index":2320,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":2040,"title":{},"body":{"license.html":{}}}],["add",{"_index":1862,"title":{},"body":{"index.html":{},"license.html":{}}}],["added",{"_index":2209,"title":{},"body":{"license.html":{}}}],["adding",{"_index":528,"title":{},"body":{"components/ConfigComponent.html":{}}}],["additional",{"_index":583,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["address",{"_index":2559,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":2037,"title":{},"body":{"license.html":{}}}],["adds",{"_index":921,"title":{},"body":{"components/HomeComponent.html":{}}}],["adjust",{"_index":155,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["adopted",{"_index":2181,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":2354,"title":{},"body":{"license.html":{}}}],["advised",{"_index":2602,"title":{},"body":{"license.html":{}}}],["affects",{"_index":2355,"title":{},"body":{"license.html":{}}}],["affero",{"_index":2551,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":2463,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":2140,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":689,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["against",{"_index":2199,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":2239,"title":{},"body":{"license.html":{}}}],["agree",{"_index":2547,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":2588,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":2494,"title":{},"body":{"license.html":{}}}],["aim",{"_index":1986,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":2471,"title":{},"body":{"license.html":{}}}],["allow",{"_index":2013,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":1909,"title":{},"body":{"license.html":{}}}],["allows",{"_index":244,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["along",{"_index":2214,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1185,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["already",{"_index":2482,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":2271,"title":{},"body":{"license.html":{}}}],["although",{"_index":1982,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":2437,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1965,"title":{},"body":{"license.html":{}}}],["angular",{"_index":937,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"index.html":{}}}],["angular's",{"_index":1253,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["angular/animations",{"_index":1321,"title":{},"body":{"components/MenuitemComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":620,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrganizationService.html":{}}}],["angular/compiler",{"_index":1737,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":629,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1738,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1741,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":1319,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animate('400ms",{"_index":1329,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["animations",{"_index":1325,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["anti",{"_index":2168,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":2222,"title":{},"body":{"license.html":{}}}],["anything",{"_index":2049,"title":{},"body":{"license.html":{}}}],["api",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrganizationService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.authoptions",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrganizationService.html":{}}}],["api.authurl",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.noauthoptions",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.organizationurl",{"_index":1405,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["apiurl",{"_index":2776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":2718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":84,"title":{"interfaces/AppConfig.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appefects",{"_index":303,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicable",{"_index":2054,"title":{},"body":{"license.html":{}}}],["application",{"_index":228,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["application's",{"_index":487,"title":{},"body":{"components/ConfigComponent.html":{}}}],["application/json",{"_index":2702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":1803,"title":{},"body":{"index.html":{},"license.html":{}}}],["applied",{"_index":153,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applies",{"_index":563,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["apply",{"_index":112,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["applyscale",{"_index":502,"title":{},"body":{"components/ConfigComponent.html":{}}}],["appname",{"_index":2779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appropriate",{"_index":113,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["appropriately",{"_index":2204,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":2609,"title":{},"body":{"license.html":{}}}],["appsidebar",{"_index":900,"title":{},"body":{"components/HomeComponent.html":{}}}],["appstate",{"_index":290,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appstore",{"_index":304,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apptopbar",{"_index":901,"title":{},"body":{"components/HomeComponent.html":{}}}],["area",{"_index":1992,"title":{},"body":{"license.html":{}}}],["arise",{"_index":2000,"title":{},"body":{"license.html":{}}}],["arising",{"_index":2592,"title":{},"body":{"license.html":{}}}],["around",{"_index":1516,"title":{},"body":{"components/SidebarComponent.html":{}}}],["arrange",{"_index":2504,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":2518,"title":{},"body":{"license.html":{}}}],["array",{"_index":595,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["article",{"_index":2177,"title":{},"body":{"license.html":{}}}],["artifacts",{"_index":1836,"title":{},"body":{"index.html":{}}}],["asking",{"_index":1943,"title":{},"body":{"license.html":{}}}],["assert",{"_index":1960,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":879,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["assets",{"_index":2453,"title":{},"body":{"license.html":{}}}],["assigning",{"_index":217,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["associated",{"_index":1293,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["assume",{"_index":2583,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":2613,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":2397,"title":{},"body":{"license.html":{}}}],["assures",{"_index":2021,"title":{},"body":{"license.html":{}}}],["attach",{"_index":2621,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":2409,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":575,"title":{},"body":{"components/ConfigComponent.html":{}}}],["attributed",{"_index":1976,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":2381,"title":{},"body":{"license.html":{}}}],["auth",{"_index":306,"title":{},"body":{"components/AuthComponent.html":{},"injectables/JwtService.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["auth.actions",{"_index":386,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["auth.component.html",{"_index":307,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":308,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.forgot",{"_index":865,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["auth.login.authorization_error",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.forgot_password",{"_index":1171,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_is_required",{"_index":1169,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_label",{"_index":1168,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_length",{"_index":1170,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.register",{"_index":1172,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.sign_in_to_continue",{"_index":1165,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_is_required",{"_index":1166,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_label",{"_index":887,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["auth.login.username_length",{"_index":1167,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.welcome_message",{"_index":1164,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.wrong_username_or_password",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.register.back_to_login",{"_index":1465,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_is_required",{"_index":1460,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_label",{"_index":1459,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_is_required",{"_index":1462,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_label",{"_index":1461,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_is_required",{"_index":1464,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_label",{"_index":1463,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_label",{"_index":1456,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_length",{"_index":1457,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_not_strong",{"_index":1458,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error",{"_index":1443,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error_description",{"_index":1444,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_is_required",{"_index":1454,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_label",{"_index":1453,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_length",{"_index":1455,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_description",{"_index":1452,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_message",{"_index":1451,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.reset",{"_index":1479,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["auth/auth.effects",{"_index":295,"title":{},"body":{"interfaces/AppState.html":{}}}],["auth/auth.reducer",{"_index":297,"title":{},"body":{"interfaces/AppState.html":{}}}],["authcomponent",{"_index":51,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["autheffects",{"_index":294,"title":{"injectables/AuthEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":311,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate(request",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":2736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticaterequestdto",{"_index":397,"title":{"interfaces/AuthenticateRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"coverage.html":{}}}],["authentication",{"_index":460,"title":{},"body":{"interfaces/AuthState.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["authenticationfailure",{"_index":380,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationsuccess",{"_index":312,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationsuccess(token",{"_index":337,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authinterceptor",{"_index":1696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authoptions",{"_index":2699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":2380,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":2331,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["authorized",{"_index":2373,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":2477,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":2522,"title":{},"body":{"license.html":{}}}],["authors",{"_index":1929,"title":{},"body":{"license.html":{}}}],["authreducer",{"_index":296,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":320,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authstate",{"_index":292,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authurl",{"_index":2697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatic",{"_index":2445,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1829,"title":{},"body":{"index.html":{},"license.html":{}}}],["available",{"_index":597,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["avatarmodule",{"_index":1623,"title":{},"body":{"components/TopbarComponent.html":{}}}],["avoid",{"_index":1357,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["away",{"_index":1917,"title":{},"body":{"license.html":{}}}],["b",{"_index":1046,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["backend",{"_index":2784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":1572,"title":{},"body":{"components/SidebarComponent.html":{}}}],["based",{"_index":139,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["basic",{"_index":2134,"title":{},"body":{"license.html":{}}}],["bearer",{"_index":2746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behalf",{"_index":2156,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":138,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["being",{"_index":938,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["believe",{"_index":2514,"title":{},"body":{"license.html":{}}}],["bell",{"_index":1601,"title":{},"body":{"components/SidebarComponent.html":{}}}],["below",{"_index":2162,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":2507,"title":{},"body":{"license.html":{}}}],["best",{"_index":2618,"title":{},"body":{"license.html":{}}}],["better",{"_index":1183,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["between",{"_index":2132,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":2241,"title":{},"body":{"license.html":{}}}],["bezier(0.86",{"_index":1331,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["binding",{"_index":1280,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["block",{"_index":923,"title":{},"body":{"components/HomeComponent.html":{}}}],["blockbodyscroll",{"_index":909,"title":{},"body":{"components/HomeComponent.html":{}}}],["blocked",{"_index":952,"title":{},"body":{"components/HomeComponent.html":{}}}],["blue",{"_index":163,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["body",{"_index":922,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["book",{"_index":1605,"title":{},"body":{"components/SidebarComponent.html":{}}}],["boolean",{"_index":141,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["bootstrap",{"_index":676,"title":{},"body":{"components/ConfigComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":2773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":1970,"title":{},"body":{"license.html":{}}}],["box",{"_index":1569,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["breadcrumb",{"_index":931,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbmodule",{"_index":897,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs",{"_index":926,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.length",{"_index":1031,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs.push",{"_index":1032,"title":{},"body":{"components/HomeComponent.html":{}}}],["breadcrumbs[breadcrumbs.length",{"_index":1033,"title":{},"body":{"components/HomeComponent.html":{}}}],["browser",{"_index":1739,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":1835,"title":{},"body":{"index.html":{}}}],["building",{"_index":1590,"title":{},"body":{"components/SidebarComponent.html":{}}}],["business",{"_index":2528,"title":{},"body":{"license.html":{}}}],["button",{"_index":569,"title":{},"body":{"components/ConfigComponent.html":{}}}],["buttonmodule",{"_index":490,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["buttons",{"_index":148,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["c",{"_index":1896,"title":{},"body":{"license.html":{}}}],["call",{"_index":1294,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["callback",{"_index":587,"title":{},"body":{"components/ConfigComponent.html":{}}}],["called",{"_index":1215,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["calls",{"_index":1818,"title":{},"body":{"index.html":{}}}],["can't",{"_index":1884,"title":{},"body":{"index.html":{}}}],["canactivatefn",{"_index":2803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":1808,"title":{},"body":{"index.html":{}}}],["carry",{"_index":2218,"title":{},"body":{"license.html":{}}}],["case",{"_index":2092,"title":{},"body":{"license.html":{}}}],["cases",{"_index":2315,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":376,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/OrganizationEffects.html":{}}}],["catcherror((error",{"_index":338,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/OrganizationEffects.html":{},"miscellaneous/variables.html":{}}}],["cause",{"_index":2245,"title":{},"body":{"license.html":{}}}],["cd",{"_index":1244,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cease",{"_index":2413,"title":{},"body":{"license.html":{}}}],["centralized",{"_index":1796,"title":{},"body":{"index.html":{}}}],["certain",{"_index":547,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["cessation",{"_index":2426,"title":{},"body":{"license.html":{}}}],["chain",{"_index":880,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["change",{"_index":1195,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["changed",{"_index":584,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":1245,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["changelanguage",{"_index":1629,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changelanguage(language",{"_index":1634,"title":{},"body":{"components/TopbarComponent.html":{}}}],["changes",{"_index":245,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["changeslugandcheckvalidity",{"_index":708,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["changeslugandcheckvalidity(organizationname",{"_index":721,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["changetheme",{"_index":503,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changetheme(theme",{"_index":553,"title":{},"body":{"components/ConfigComponent.html":{}}}],["changing",{"_index":1908,"title":{},"body":{"license.html":{}}}],["characterized",{"_index":2344,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1934,"title":{},"body":{"license.html":{}}}],["chart",{"_index":1551,"title":{},"body":{"components/SidebarComponent.html":{}}}],["checks",{"_index":265,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["checkslug",{"_index":709,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["checkslug(slug",{"_index":724,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["checkusername",{"_index":827,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusername(username",{"_index":830,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["child",{"_index":1021,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["child.snapshot.data['breadcrumb",{"_index":1027,"title":{},"body":{"components/HomeComponent.html":{}}}],["child.snapshot.url",{"_index":1023,"title":{},"body":{"components/HomeComponent.html":{}}}],["children",{"_index":1017,"title":{},"body":{"components/HomeComponent.html":{}}}],["children.length",{"_index":1019,"title":{},"body":{"components/HomeComponent.html":{}}}],["choice",{"_index":1860,"title":{},"body":{"index.html":{}}}],["choose",{"_index":2567,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":2571,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1588,"title":{},"body":{"components/SidebarComponent.html":{}}}],["circumstances",{"_index":2160,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":2169,"title":{},"body":{"license.html":{}}}],["civil",{"_index":2612,"title":{},"body":{"license.html":{}}}],["claim",{"_index":2468,"title":{},"body":{"license.html":{}}}],["claims",{"_index":2479,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["class.active",{"_index":1241,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["class.layout",{"_index":1281,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["clear",{"_index":1059,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clearly",{"_index":1967,"title":{},"body":{"license.html":{}}}],["cli",{"_index":1810,"title":{},"body":{"index.html":{}}}],["click",{"_index":947,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["clicked",{"_index":151,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["clicking",{"_index":1231,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["client",{"_index":1817,"title":{},"body":{"index.html":{}}}],["clock",{"_index":1548,"title":{},"body":{"components/SidebarComponent.html":{}}}],["clone",{"_index":659,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonedrequest",{"_index":2743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clonelinkelement",{"_index":655,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonelinkelement.addeventlistener('load",{"_index":662,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('href",{"_index":657,"title":{},"body":{"components/ConfigComponent.html":{}}}],["clonelinkelement.setattribute('id",{"_index":658,"title":{},"body":{"components/ConfigComponent.html":{}}}],["close",{"_index":194,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["closed",{"_index":237,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["closely",{"_index":2608,"title":{},"body":{"license.html":{}}}],["cms",{"_index":1799,"title":{},"body":{"index.html":{}}}],["cms:1",{"_index":1851,"title":{},"body":{"index.html":{}}}],["cms:latestimportant",{"_index":1872,"title":{},"body":{"index.html":{}}}],["cms:latestthen",{"_index":1871,"title":{},"body":{"index.html":{}}}],["code",{"_index":89,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["collapsed",{"_index":1327,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["collect",{"_index":1800,"title":{},"body":{"index.html":{},"license.html":{}}}],["color",{"_index":123,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["colorscheme",{"_index":97,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["combination",{"_index":2554,"title":{},"body":{"license.html":{}}}],["combine",{"_index":2552,"title":{},"body":{"license.html":{}}}],["combined",{"_index":2236,"title":{},"body":{"license.html":{}}}],["comes",{"_index":2223,"title":{},"body":{"license.html":{}}}],["command",{"_index":1268,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["commands",{"_index":2082,"title":{},"body":{"license.html":{}}}],["comment",{"_index":1777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["comments",{"_index":115,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["commercial",{"_index":2325,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":2495,"title":{},"body":{"license.html":{}}}],["common",{"_index":2319,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":489,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["communication",{"_index":2130,"title":{},"body":{"license.html":{}}}],["compact",{"_index":679,"title":{},"body":{"components/ConfigComponent.html":{}}}],["compilation",{"_index":2231,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":2240,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":2533,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":2112,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":2450,"title":{},"body":{"license.html":{}}}],["comply",{"_index":2154,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["component's",{"_index":544,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["component_template",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"index.html":{},"overview.html":{}}}],["components/config/config.component",{"_index":975,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/footer/footer.component",{"_index":976,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/sidebar/sidebar.component",{"_index":977,"title":{},"body":{"components/HomeComponent.html":{}}}],["components/topbar/topbar.component",{"_index":978,"title":{},"body":{"components/HomeComponent.html":{}}}],["compose",{"_index":1877,"title":{},"body":{"index.html":{}}}],["composed",{"_index":2781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["computer",{"_index":2057,"title":{},"body":{"license.html":{}}}],["computers",{"_index":2016,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":2553,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":2560,"title":{},"body":{"license.html":{}}}],["conditionally",{"_index":545,"title":{},"body":{"components/ConfigComponent.html":{}}}],["conditioned",{"_index":2527,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":2023,"title":{},"body":{"license.html":{}}}],["config",{"_index":160,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["config.component.html",{"_index":497,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.component.scss",{"_index":498,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.filled",{"_index":674,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.input_style",{"_index":672,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.menu_type",{"_index":669,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.outlined",{"_index":673,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.overlay",{"_index":671,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.ripple_effect",{"_index":675,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.scale",{"_index":668,"title":{},"body":{"components/ConfigComponent.html":{}}}],["config.static",{"_index":670,"title":{},"body":{"components/ConfigComponent.html":{}}}],["configcomponent",{"_index":53,"title":{"components/ConfigComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["configsidebarvisible",{"_index":175,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configupdate",{"_index":220,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["configuration",{"_index":104,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["conjunction",{"_index":558,"title":{},"body":{"components/ConfigComponent.html":{}}}],["connection",{"_index":2516,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":2439,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":2591,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2651,"title":{},"body":{"license.html":{}}}],["considered",{"_index":2399,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":2487,"title":{},"body":{"license.html":{}}}],["console.log(result",{"_index":796,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["conspicuously",{"_index":2203,"title":{},"body":{"license.html":{}}}],["const",{"_index":302,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":2011,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":2144,"title":{},"body":{"license.html":{}}}],["construct",{"_index":1263,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["constructed",{"_index":939,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(authservice",{"_index":319,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(formbuilder",{"_index":828,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(http",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrganizationService.html":{}}}],["constructor(layoutservice",{"_index":511,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["constructor(organizationservice",{"_index":715,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/OrganizationService.html":{}}}],["constructor(storage",{"_index":1064,"title":{},"body":{"injectables/JwtService.html":{}}}],["constructor(store",{"_index":915,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(translate",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["construed",{"_index":2537,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":2303,"title":{},"body":{"license.html":{}}}],["contact",{"_index":2630,"title":{},"body":{"license.html":{}}}],["contain",{"_index":527,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["container",{"_index":1868,"title":{},"body":{"index.html":{}}}],["containerclass",{"_index":914,"title":{},"body":{"components/HomeComponent.html":{}}}],["containing",{"_index":2382,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1208,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["content",{"_index":2143,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["contents",{"_index":2491,"title":{},"body":{"license.html":{}}}],["context",{"_index":2106,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":2350,"title":{},"body":{"license.html":{}}}],["continued",{"_index":2334,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":2396,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":2543,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":1920,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":2476,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":2478,"title":{},"body":{"license.html":{}}}],["control",{"_index":519,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["controlled",{"_index":2481,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":2075,"title":{},"body":{"license.html":{}}}],["convention",{"_index":250,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["convey",{"_index":2062,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":2520,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":2345,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":2070,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":2395,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1907,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1904,"title":{},"body":{"license.html":{}}}],["copying",{"_index":2024,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":1911,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1895,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":2033,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":2158,"title":{},"body":{"license.html":{}}}],["core/domain/dto/requests/create",{"_index":765,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["core/domain/dto/requests/register",{"_index":1437,"title":{},"body":{"components/RegisterComponent.html":{}}}],["core/services/api/auth.api.service",{"_index":852,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["core/services/api/organization.api.service",{"_index":756,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["core/services/layout.service",{"_index":627,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["core/services/menu.service",{"_index":628,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["core/state/app.state",{"_index":757,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.actions",{"_index":851,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/auth/auth.selectors",{"_index":850,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["core/state/organization/organization.actions",{"_index":759,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["core/state/organization/organization.selectors",{"_index":763,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/TopbarComponent.html":{}}}],["core/utils/regex.constants",{"_index":1440,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["correction",{"_index":2587,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":1876,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":2115,"title":{},"body":{"license.html":{}}}],["cost",{"_index":2269,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":2469,"title":{},"body":{"license.html":{}}}],["countries",{"_index":2060,"title":{},"body":{"license.html":{}}}],["country",{"_index":2510,"title":{},"body":{"license.html":{}}}],["course",{"_index":2642,"title":{},"body":{"license.html":{}}}],["court",{"_index":2542,"title":{},"body":{"license.html":{}}}],["courts",{"_index":2607,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":2498,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1679,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":2046,"title":{},"body":{"license.html":{}}}],["create",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["createaction",{"_index":2734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[home",{"_index":2737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createbreadcrumbs",{"_index":910,"title":{},"body":{"components/HomeComponent.html":{}}}],["createbreadcrumbs(route",{"_index":925,"title":{},"body":{"components/HomeComponent.html":{}}}],["created",{"_index":232,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["createdat",{"_index":1371,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["createeffect",{"_index":324,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/OrganizationEffects.html":{}}}],["createneworganization",{"_index":1379,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["createorganization",{"_index":710,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createorganization(dto",{"_index":1399,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["createorganizationcomponent",{"_index":55,"title":{"components/CreateOrganizationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["createorganizationfailure",{"_index":1410,"title":{},"body":{"interfaces/OrganizationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createorganizationform",{"_index":700,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["createorganizationrequestdto",{"_index":764,"title":{"interfaces/CreateOrganizationRequestDto.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"injectables/OrganizationService.html":{},"coverage.html":{}}}],["createorganizationsuccess",{"_index":1392,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createorganizationsuccess(organization",{"_index":1384,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["createreducer",{"_index":444,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":929,"title":{},"body":{"components/HomeComponent.html":{}}}],["createselector",{"_index":2786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":222,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["credentials",{"_index":434,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["criterion",{"_index":2085,"title":{},"body":{"license.html":{}}}],["cross",{"_index":2467,"title":{},"body":{"license.html":{}}}],["css",{"_index":586,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["cubic",{"_index":1330,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["cure",{"_index":2430,"title":{},"body":{"license.html":{}}}],["current",{"_index":111,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":184,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["currentuser",{"_index":902,"title":{},"body":{"components/HomeComponent.html":{}}}],["currentusererrorsubscription",{"_index":903,"title":{},"body":{"components/HomeComponent.html":{}}}],["custom",{"_index":1201,"title":{},"body":{"injectables/MenuService.html":{}}}],["customarily",{"_index":2258,"title":{},"body":{"license.html":{}}}],["customer",{"_index":2265,"title":{},"body":{"license.html":{}}}],["d",{"_index":2230,"title":{},"body":{"license.html":{}}}],["damages",{"_index":2589,"title":{},"body":{"license.html":{}}}],["danger",{"_index":2018,"title":{},"body":{"license.html":{}}}],["dark",{"_index":127,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["dashboard",{"_index":1013,"title":{},"body":{"components/HomeComponent.html":{}}}],["data",{"_index":1174,"title":{},"body":{"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["database",{"_index":1554,"title":{},"body":{"components/SidebarComponent.html":{}}}],["date",{"_index":1375,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["days",{"_index":2425,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":753,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["debouncetime(500",{"_index":771,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["debug_file",{"_index":1778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["december",{"_index":2183,"title":{},"body":{"license.html":{}}}],["decide",{"_index":2569,"title":{},"body":{"license.html":{}}}],["declares",{"_index":171,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["declaring",{"_index":122,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["declining",{"_index":2388,"title":{},"body":{"license.html":{}}}],["decorator",{"_index":538,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["decorators",{"_index":742,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["decrements",{"_index":562,"title":{},"body":{"components/ConfigComponent.html":{}}}],["decrementscale",{"_index":504,"title":{},"body":{"components/ConfigComponent.html":{}}}],["deemed",{"_index":2171,"title":{},"body":{"license.html":{}}}],["default",{"_index":157,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":2725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defective",{"_index":2582,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":2540,"title":{},"body":{"license.html":{}}}],["defined",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["defines",{"_index":203,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["defining",{"_index":90,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["definition",{"_index":2122,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":2028,"title":{},"body":{"license.html":{}}}],["delete",{"_index":1775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["denied",{"_index":2351,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":2496,"title":{},"body":{"license.html":{}}}],["deny",{"_index":1980,"title":{},"body":{"license.html":{}}}],["denying",{"_index":1942,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":1734,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":535,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["deploy",{"_index":1842,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":1864,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":2505,"title":{},"body":{"license.html":{}}}],["deps",{"_index":2727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":87,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["design",{"_index":678,"title":{},"body":{"components/ConfigComponent.html":{}}}],["designated",{"_index":2277,"title":{},"body":{"license.html":{}}}],["designed",{"_index":1915,"title":{},"body":{"license.html":{}}}],["desktop",{"_index":186,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["detail",{"_index":867,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"license.html":{}}}],["details",{"_index":2629,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":2640,"title":{},"body":{"license.html":{}}}],["detected",{"_index":1252,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["detection",{"_index":1250,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["determine",{"_index":110,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["determining",{"_index":2313,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1826,"title":{},"body":{"index.html":{}}}],["develop",{"_index":2615,"title":{},"body":{"license.html":{}}}],["developers",{"_index":1957,"title":{},"body":{"license.html":{}}}],["development",{"_index":1822,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["device",{"_index":187,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["device_state",{"_index":1779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["devices",{"_index":1979,"title":{},"body":{"license.html":{}}}],["deviceurl",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["devtools",{"_index":1743,"title":{},"body":{"dependencies.html":{}}}],["differ",{"_index":2558,"title":{},"body":{"license.html":{}}}],["different",{"_index":548,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["differently",{"_index":2378,"title":{},"body":{"license.html":{}}}],["direction",{"_index":2157,"title":{},"body":{"license.html":{}}}],["directions",{"_index":2283,"title":{},"body":{"license.html":{}}}],["directive",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["directives",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1834,"title":{},"body":{"index.html":{}}}],["directly",{"_index":2050,"title":{},"body":{"license.html":{}}}],["directory",{"_index":1839,"title":{},"body":{"index.html":{}}}],["disable",{"_index":239,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":1051,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["disclaim",{"_index":2194,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":2572,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":2375,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":2524,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":372,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["display",{"_index":935,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["displayed",{"_index":1525,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["displays",{"_index":2072,"title":{},"body":{"license.html":{}}}],["dist",{"_index":1838,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":754,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["distinguishing",{"_index":2561,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1905,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1802,"title":{},"body":{"index.html":{},"license.html":{}}}],["distributing",{"_index":2529,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":2025,"title":{},"body":{"license.html":{}}}],["docker",{"_index":1840,"title":{},"body":{"index.html":{}}}],["document",{"_index":512,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"license.html":{}}}],["document.body.classname.replace",{"_index":1044,"title":{},"body":{"components/HomeComponent.html":{}}}],["documentation",{"_index":1680,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":2361,"title":{},"body":{"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["domain/dto/organization.dto",{"_index":1404,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["domain/dto/requests/authenticate",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{}}}],["domain/dto/requests/create",{"_index":1403,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["domain/dto/requests/register",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/requests/reset",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/token.dto",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/user.dto",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/models/enums/state",{"_index":446,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{}}}],["domain/models/menu",{"_index":1225,"title":{},"body":{"injectables/MenuService.html":{}}}],["domain/models/organization.entity",{"_index":1409,"title":{},"body":{"interfaces/OrganizationState.html":{}}}],["domain/models/token.entity",{"_index":448,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/user.entity",{"_index":449,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/your",{"_index":1846,"title":{},"body":{"index.html":{}}}],["domains",{"_index":2002,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":2314,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":2447,"title":{},"body":{"license.html":{}}}],["dradman",{"_index":815,"title":{},"body":{"components/FooterComponent.html":{}}}],["dradman/loghub",{"_index":1850,"title":{},"body":{"index.html":{}}}],["dropdownmodule",{"_index":1622,"title":{},"body":{"components/TopbarComponent.html":{}}}],["dto",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{},"components/CreateOrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{}}}],["due",{"_index":1880,"title":{},"body":{"index.html":{}}}],["durable",{"_index":2257,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":2312,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":1740,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2124,"title":{},"body":{"license.html":{}}}],["e",{"_index":2292,"title":{},"body":{"license.html":{}}}],["e.g",{"_index":1289,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["e2e",{"_index":1859,"title":{},"body":{"index.html":{}}}],["each",{"_index":116,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["earlier",{"_index":2045,"title":{},"body":{"license.html":{}}}],["effect",{"_index":150,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["effected",{"_index":2192,"title":{},"body":{"license.html":{}}}],["effective",{"_index":2172,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":2019,"title":{},"body":{"license.html":{}}}],["effects",{"_index":145,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["efforts",{"_index":2461,"title":{},"body":{"license.html":{}}}],["el",{"_index":1497,"title":{},"body":{"components/SidebarComponent.html":{}}}],["electronic",{"_index":2631,"title":{},"body":{"license.html":{}}}],["element",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["elementref",{"_index":741,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["elements",{"_index":130,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["email",{"_index":894,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["embodied",{"_index":2252,"title":{},"body":{"license.html":{}}}],["emit",{"_index":225,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{}}}],["emits",{"_index":205,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["emitted",{"_index":1314,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["emitting",{"_index":1199,"title":{},"body":{"injectables/MenuService.html":{}}}],["employer",{"_index":2644,"title":{},"body":{"license.html":{}}}],["empty",{"_index":1307,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["en",{"_index":1643,"title":{},"body":{"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":144,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["enableregistration",{"_index":2778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":2064,"title":{},"body":{"license.html":{}}}],["end",{"_index":248,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["enforce",{"_index":2497,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":2198,"title":{},"body":{"license.html":{}}}],["english",{"_index":1642,"title":{},"body":{"components/TopbarComponent.html":{}}}],["enhancing",{"_index":1805,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":2289,"title":{},"body":{"license.html":{}}}],["entered",{"_index":2534,"title":{},"body":{"license.html":{}}}],["entire",{"_index":2221,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":2550,"title":{},"body":{"license.html":{}}}],["entity",{"_index":2451,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":1767,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/permission.enum",{"_index":1669,"title":{},"body":{"interfaces/User.html":{}}}],["enums/resource",{"_index":1671,"title":{},"body":{"interfaces/User.html":{}}}],["env",{"_index":1886,"title":{},"body":{"index.html":{}}}],["envelope",{"_index":1543,"title":{},"body":{"components/SidebarComponent.html":{}}}],["environment",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.appname",{"_index":1162,"title":{},"body":{"components/LoginComponent.html":{},"components/TopbarComponent.html":{}}}],["environment.enableregistration",{"_index":1163,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["equal",{"_index":270,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["equivalent",{"_index":2147,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":1977,"title":{},"body":{"license.html":{}}}],["error",{"_index":340,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('unauthorized",{"_index":2770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.status",{"_index":785,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["errorsubscription",{"_index":701,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["eslint",{"_index":238,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["eslint/ban",{"_index":652,"title":{},"body":{"components/ConfigComponent.html":{}}}],["eslint/component",{"_index":1324,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["eslint/no",{"_index":242,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["essential",{"_index":2107,"title":{},"body":{"license.html":{}}}],["even",{"_index":2601,"title":{},"body":{"license.html":{}}}],["event",{"_index":768,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"license.html":{}}}],["event.model",{"_index":1226,"title":{},"body":{"injectables/MenuService.html":{}}}],["event.model.ts",{"_index":1196,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"coverage.html":{}}}],["event.preventdefault",{"_index":1360,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["event.target",{"_index":769,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["events",{"_index":206,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["everyone",{"_index":1902,"title":{},"body":{"license.html":{}}}],["exact",{"_index":1351,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["example",{"_index":1844,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":2056,"title":{},"body":{"license.html":{}}}],["exception",{"_index":2771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exceptions",{"_index":2365,"title":{},"body":{"license.html":{}}}],["exclamation",{"_index":1587,"title":{},"body":{"components/SidebarComponent.html":{}}}],["excluded",{"_index":2302,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":2538,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":2624,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":2488,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":2152,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":2544,"title":{},"body":{"license.html":{}}}],["executable",{"_index":2098,"title":{},"body":{"license.html":{}}}],["execute",{"_index":1292,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["executed",{"_index":588,"title":{},"body":{"components/ConfigComponent.html":{}}}],["executing",{"_index":1287,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["exercise",{"_index":2462,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":2193,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1301,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["expanded",{"_index":1306,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["expected",{"_index":2323,"title":{},"body":{"license.html":{}}}],["expects",{"_index":2322,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":1618,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["explains",{"_index":1968,"title":{},"body":{"license.html":{}}}],["explicit",{"_index":243,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["explicitly",{"_index":1295,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["express",{"_index":1753,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["expressed",{"_index":2574,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":2408,"title":{},"body":{"license.html":{}}}],["extend",{"_index":2005,"title":{},"body":{"license.html":{}}}],["extended",{"_index":2523,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":2235,"title":{},"body":{"license.html":{}}}],["extent",{"_index":2074,"title":{},"body":{"license.html":{}}}],["f",{"_index":2393,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":2153,"title":{},"body":{"license.html":{}}}],["fails",{"_index":2421,"title":{},"body":{"license.html":{}}}],["failure",{"_index":464,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["fair",{"_index":2146,"title":{},"body":{"license.html":{}}}],["false",{"_index":152,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":2307,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":2042,"title":{},"body":{"license.html":{}}}],["favor",{"_index":2317,"title":{},"body":{"license.html":{}}}],["feature",{"_index":2077,"title":{},"body":{"license.html":{}}}],["features",{"_index":1813,"title":{},"body":{"index.html":{}}}],["fee",{"_index":1950,"title":{},"body":{"license.html":{}}}],["feel",{"_index":522,"title":{},"body":{"components/ConfigComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"license.html":{}}}],["files",{"_index":1831,"title":{},"body":{"index.html":{},"license.html":{}}}],["filesurl",{"_index":2695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filled",{"_index":132,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["filter",{"_index":973,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["finally",{"_index":2009,"title":{},"body":{"license.html":{}}}],["find",{"_index":2285,"title":{},"body":{"license.html":{}}}],["first",{"_index":1843,"title":{},"body":{"index.html":{},"license.html":{}}}],["firstname",{"_index":1432,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["fitness",{"_index":2577,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2256,"title":{},"body":{"license.html":{}}}],["flag",{"_index":1640,"title":{},"body":{"components/TopbarComponent.html":{}}}],["flow",{"_index":2131,"title":{},"body":{"license.html":{}}}],["fluent",{"_index":681,"title":{},"body":{"components/ConfigComponent.html":{}}}],["follow",{"_index":2027,"title":{},"body":{"license.html":{}}}],["following",{"_index":2492,"title":{},"body":{"license.html":{}}}],["font",{"_index":550,"title":{},"body":{"components/ConfigComponent.html":{}}}],["footer",{"_index":812,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["footer.component.html",{"_index":813,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.scss",{"_index":814,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":58,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["forbid",{"_index":2191,"title":{},"body":{"license.html":{}}}],["force",{"_index":2149,"title":{},"body":{"license.html":{}}}],["forgot",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword",{"_index":313,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword(username",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":60,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["forgotpassworderror",{"_index":435,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["forgotpasswordfailure",{"_index":381,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgotpasswordform",{"_index":822,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordrequestdto",{"_index":892,"title":{"interfaces/ForgotPasswordRequestDto.html":{}},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"coverage.html":{}}}],["forgotpasswordsuccess",{"_index":351,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":2087,"title":{},"body":{"license.html":{}}}],["format",{"_index":2359,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":718,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["forms",{"_index":2246,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":496,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["found",{"_index":2626,"title":{},"body":{"license.html":{}}}],["foundation",{"_index":1899,"title":{},"body":{"license.html":{}}}],["fragment",{"_index":1355,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["free",{"_index":1897,"title":{},"body":{"license.html":{}}}],["free.app",{"_index":2783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["freedom",{"_index":1918,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":1953,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":755,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fromevent(this.nameinput.nativeelement",{"_index":774,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["fromevent(this.sluginput.nativeelement",{"_index":766,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["fromevent(this.usernameinput.nativeelement",{"_index":853,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fulfilling",{"_index":2175,"title":{},"body":{"license.html":{}}}],["full",{"_index":1849,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":189,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"coverage.html":{}}}],["functionality",{"_index":485,"title":{},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["functioning",{"_index":2335,"title":{},"body":{"license.html":{}}}],["functions",{"_index":108,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":1984,"title":{},"body":{"license.html":{}}}],["further",{"_index":1297,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["future",{"_index":2007,"title":{},"body":{"license.html":{}}}],["fw",{"_index":1533,"title":{},"body":{"components/SidebarComponent.html":{}}}],["gb",{"_index":1641,"title":{},"body":{"components/TopbarComponent.html":{}}}],["general",{"_index":1881,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":2120,"title":{},"body":{"license.html":{}}}],["generate",{"_index":1833,"title":{},"body":{"index.html":{},"license.html":{}}}],["generated",{"_index":1809,"title":{},"body":{"index.html":{}}}],["getactiveclass",{"_index":1318,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getapplicationname",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{}}}],["getappname",{"_index":1630,"title":{},"body":{"components/TopbarComponent.html":{}}}],["getattribute('href",{"_index":646,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getcontainerclass",{"_index":969,"title":{},"body":{"components/HomeComponent.html":{}}}],["getinputstyle",{"_index":612,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getitem",{"_index":1097,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getitem(key",{"_index":1103,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getlength",{"_index":1110,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getmenumode",{"_index":608,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getorganization",{"_index":1397,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["getrefreshtoken",{"_index":1060,"title":{},"body":{"injectables/JwtService.html":{}}}],["getripple",{"_index":616,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getscale",{"_index":604,"title":{},"body":{"components/ConfigComponent.html":{}}}],["getsubmenuanimation",{"_index":1316,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["getting",{"_index":1792,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":1061,"title":{},"body":{"injectables/JwtService.html":{}}}],["getvisible",{"_index":599,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ghcr.io/dradman/loghub",{"_index":1870,"title":{},"body":{"index.html":{}}}],["gi",{"_index":1048,"title":{},"body":{"components/HomeComponent.html":{}}}],["github",{"_index":1867,"title":{},"body":{"index.html":{}}}],["give",{"_index":2213,"title":{},"body":{"license.html":{}}}],["given",{"_index":930,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["gives",{"_index":2227,"title":{},"body":{"license.html":{}}}],["giving",{"_index":1963,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":1890,"title":{},"body":{"license.html":{}}}],["gotoprofilepage",{"_index":1631,"title":{},"body":{"components/TopbarComponent.html":{}}}],["governed",{"_index":2368,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":1958,"title":{},"body":{"license.html":{}}}],["grant",{"_index":2389,"title":{},"body":{"license.html":{}}}],["granted",{"_index":2135,"title":{},"body":{"license.html":{}}}],["grants",{"_index":2442,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":1949,"title":{},"body":{"license.html":{}}}],["greater",{"_index":275,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["greatest",{"_index":2616,"title":{},"body":{"license.html":{}}}],["green",{"_index":164,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["guarantee",{"_index":1922,"title":{},"body":{"license.html":{}}}],["gui",{"_index":2643,"title":{},"body":{"license.html":{}}}],["handle",{"_index":454,"title":{},"body":{"interfaces/AuthState.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["handles",{"_index":1286,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["handling",{"_index":533,"title":{},"body":{"components/ConfigComponent.html":{}}}],["hash",{"_index":1485,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["having",{"_index":2151,"title":{},"body":{"license.html":{}}}],["headers",{"_index":2700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heart",{"_index":1557,"title":{},"body":{"components/SidebarComponent.html":{}}}],["height",{"_index":1328,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["here",{"_index":1848,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":2484,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":190,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["hidemenu",{"_index":911,"title":{},"body":{"components/HomeComponent.html":{}}}],["hideprofilemenu",{"_index":912,"title":{},"body":{"components/HomeComponent.html":{}}}],["hides",{"_index":942,"title":{},"body":{"components/HomeComponent.html":{}}}],["holder",{"_index":2415,"title":{},"body":{"license.html":{}}}],["holders",{"_index":2374,"title":{},"body":{"license.html":{}}}],["home",{"_index":896,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["home'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["home.component.html",{"_index":898,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":899,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/devices",{"_index":1546,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/documentation",{"_index":1606,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/guides",{"_index":1612,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/sdks",{"_index":1609,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/help/support",{"_index":1615,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/issues",{"_index":1541,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/logs",{"_index":1538,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/messages",{"_index":1544,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/performance",{"_index":1552,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/projects",{"_index":1535,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/queries",{"_index":1555,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/releases",{"_index":1570,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/replays",{"_index":1567,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/resources",{"_index":1564,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/screen",{"_index":1561,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/sessions",{"_index":1549,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account",{"_index":1576,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/close",{"_index":1585,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/details",{"_index":1578,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/notifications",{"_index":1583,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/account/security",{"_index":1580,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/alerts",{"_index":1602,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/members",{"_index":1599,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/organization",{"_index":1591,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/projects",{"_index":1593,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/settings/teams",{"_index":1596,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/stats",{"_index":1573,"title":{},"body":{"components/SidebarComponent.html":{}}}],["home/vitals",{"_index":1558,"title":{},"body":{"components/SidebarComponent.html":{}}}],["homecomponent",{"_index":63,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["hope",{"_index":2627,"title":{},"body":{"license.html":{}}}],["horizontal",{"_index":137,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["host",{"_index":1282,"title":{},"body":{"components/MenuitemComponent.html":{},"miscellaneous/variables.html":{}}}],["hostbinding",{"_index":1322,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.active",{"_index":1366,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbinding('class.layout",{"_index":1279,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hostbindings",{"_index":1240,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hosts",{"_index":2286,"title":{},"body":{"license.html":{}}}],["household",{"_index":2308,"title":{},"body":{"license.html":{}}}],["hover",{"_index":1290,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hovering",{"_index":201,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["href",{"_index":574,"title":{},"body":{"components/ConfigComponent.html":{}}}],["html",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["htmlinputelement).value",{"_index":770,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["http",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrganizationService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":1828,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/api",{"_index":2777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrganizationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpcontext().set(authenticate",{"_index":2706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcontexttoken",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":2756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httphandlerfn",{"_index":2740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpheaders",{"_index":2701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":2738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":1687,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httploaderfactory(http",{"_index":1791,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpparams",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpparams().set('username",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["httprequest",{"_index":2739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fsf.org",{"_index":1901,"title":{},"body":{"license.html":{}}}],["https://heavily",{"_index":2780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.gnu.org/licenses",{"_index":2648,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":2656,"title":{},"body":{"license.html":{}}}],["hyphen",{"_index":1274,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["hypothetical",{"_index":2641,"title":{},"body":{"license.html":{}}}],["i.e",{"_index":1305,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["icon",{"_index":1010,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["id",{"_index":654,"title":{},"body":{"components/ConfigComponent.html":{}}}],["identifiable",{"_index":2512,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":1265,"title":{},"body":{"components/MenuitemComponent.html":{},"coverage.html":{}}}],["identifiers",{"_index":1277,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["identify",{"_index":1276,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["if(!router.url.startswith('/auth",{"_index":2767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(isusernametaken",{"_index":888,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["ignored",{"_index":1353,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["image",{"_index":1841,"title":{},"body":{"index.html":{}}}],["implement",{"_index":1182,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["implementation",{"_index":2105,"title":{},"body":{"license.html":{}}}],["implements",{"_index":688,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["implied",{"_index":2539,"title":{},"body":{"license.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["important",{"_index":1879,"title":{},"body":{"index.html":{}}}],["importing",{"_index":2475,"title":{},"body":{"license.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["impose",{"_index":2398,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":2541,"title":{},"body":{"license.html":{}}}],["inability",{"_index":2594,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":2597,"title":{},"body":{"license.html":{}}}],["inactive",{"_index":185,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inbox",{"_index":1540,"title":{},"body":{"components/SidebarComponent.html":{}}}],["inc",{"_index":1900,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":2590,"title":{},"body":{"license.html":{}}}],["include",{"_index":215,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["included",{"_index":2100,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1272,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["including",{"_index":2116,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":2244,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":1985,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":2649,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":2311,"title":{},"body":{"license.html":{}}}],["increments",{"_index":565,"title":{},"body":{"components/ConfigComponent.html":{}}}],["incrementscale",{"_index":505,"title":{},"body":{"components/ConfigComponent.html":{}}}],["indemnification",{"_index":2394,"title":{},"body":{"license.html":{}}}],["independent",{"_index":2233,"title":{},"body":{"license.html":{}}}],["index",{"_index":120,"title":{"index.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":251,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["indicates",{"_index":234,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["indicating",{"_index":278,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["individual",{"_index":2242,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":1994,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":2326,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["inform",{"_index":2295,"title":{},"body":{"license.html":{}}}],["information",{"_index":1209,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["infringe",{"_index":2443,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":2472,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":2053,"title":{},"body":{"license.html":{}}}],["initial",{"_index":218,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["initialized",{"_index":543,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["initializing",{"_index":214,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["initialstate",{"_index":452,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":2465,"title":{},"body":{"license.html":{}}}],["inject",{"_index":621,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{},"miscellaneous/variables.html":{}}}],["inject(authservice",{"_index":2751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(document",{"_index":631,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["inject(jwtservice",{"_index":2750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(jwtservice).gettoken",{"_index":2742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(platform_id",{"_index":1117,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["inject(router",{"_index":2753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(store",{"_index":2752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":165,"title":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/SessionStorage.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/SessionStorage.html":{},"coverage.html":{}}}],["injectables",{"_index":309,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"injectables/SessionStorage.html":{},"overview.html":{}}}],["injected",{"_index":1257,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["injection",{"_index":536,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["injectspeedinsights",{"_index":2722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":129,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["inputmaskmodule",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inputs",{"_index":508,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["inputstyle",{"_index":96,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["inputstyle(_val",{"_index":639,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputswitchmodule",{"_index":495,"title":{},"body":{"components/ConfigComponent.html":{}}}],["inputtextmodule",{"_index":696,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inside",{"_index":1504,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["insights",{"_index":1751,"title":{},"body":{"dependencies.html":{}}}],["install",{"_index":1981,"title":{},"body":{"license.html":{}}}],["installation",{"_index":2329,"title":{},"body":{"license.html":{}}}],["installed",{"_index":2348,"title":{},"body":{"license.html":{}}}],["instance",{"_index":223,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["instanceof",{"_index":1000,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"miscellaneous/variables.html":{}}}],["instead",{"_index":2654,"title":{},"body":{"license.html":{}}}],["intact",{"_index":2206,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1921,"title":{},"body":{"license.html":{}}}],["intention",{"_index":2195,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":2067,"title":{},"body":{"license.html":{}}}],["interactions",{"_index":534,"title":{},"body":{"components/ConfigComponent.html":{}}}],["interactive",{"_index":2071,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":2259,"title":{},"body":{"license.html":{}}}],["interest",{"_index":2459,"title":{},"body":{"license.html":{}}}],["interface",{"_index":83,"title":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"license.html":{}}}],["interfaces",{"_index":85,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/LayoutState.html":{},"interfaces/MenuChangeEvent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/OrganizationState.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":2337,"title":{},"body":{"license.html":{}}}],["internal",{"_index":1675,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["internationalization",{"_index":1507,"title":{},"body":{"components/SidebarComponent.html":{}}}],["interpretation",{"_index":2604,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":2114,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":2129,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":2228,"title":{},"body":{"license.html":{}}}],["invitation",{"_index":1053,"title":{},"body":{"components/InvitationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["invitation'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["invitation.component.html",{"_index":1054,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.component.scss",{"_index":1055,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitationcomponent",{"_index":65,"title":{"components/InvitationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["invitationurl",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["irrevocable",{"_index":2137,"title":{},"body":{"license.html":{}}}],["isdesktop",{"_index":279,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isdevmode",{"_index":2720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isloading",{"_index":702,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isloadingauthstate",{"_index":846,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isloadingorganization",{"_index":760,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ismobile",{"_index":285,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isoutsideclicked",{"_index":984,"title":{},"body":{"components/HomeComponent.html":{}}}],["isoverlay",{"_index":267,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["isplatformbrowser",{"_index":1115,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isplatformbrowser(platformid",{"_index":1118,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isregistrationenabled",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{}}}],["isslugtaken",{"_index":703,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationService.html":{}}}],["isslugtaken(slug",{"_index":802,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationService.html":{}}}],["issuccess",{"_index":847,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":1780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isusernameavialable",{"_index":436,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["isusernametaken",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isusernametaken(username",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["item",{"_index":1230,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["item.label",{"_index":1369,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick",{"_index":1237,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["itemclick(event",{"_index":1284,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["items",{"_index":531,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["itself",{"_index":2352,"title":{},"body":{"license.html":{}}}],["join",{"_index":1026,"title":{},"body":{"components/HomeComponent.html":{}}}],["june",{"_index":1893,"title":{},"body":{"license.html":{}}}],["jwtservice",{"_index":321,"title":{"injectables/JwtService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtservice.clear",{"_index":2765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice.savetoken(refreshresult.accesstoken",{"_index":2760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice.savetoken(refreshresult.refreshtoken",{"_index":2759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":1858,"title":{},"body":{"index.html":{}}}],["keep",{"_index":182,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["kernel",{"_index":2108,"title":{},"body":{"license.html":{}}}],["key",{"_index":1098,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["key(index",{"_index":1104,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["keys",{"_index":1190,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["keys.length",{"_index":1192,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["kind",{"_index":2063,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":1912,"title":{},"body":{"license.html":{}}}],["know",{"_index":1937,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":2500,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":2509,"title":{},"body":{"license.html":{}}}],["label",{"_index":933,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["landscape",{"_index":281,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["language",{"_index":518,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["language.label",{"_index":1663,"title":{},"body":{"components/TopbarComponent.html":{}}}],["languages",{"_index":1511,"title":{},"body":{"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["lara",{"_index":162,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["larger",{"_index":2237,"title":{},"body":{"license.html":{}}}],["lastlogintime",{"_index":1665,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["lastname",{"_index":1433,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["later",{"_index":2564,"title":{},"body":{"license.html":{}}}],["latest",{"_index":1866,"title":{},"body":{"index.html":{}}}],["law",{"_index":2055,"title":{},"body":{"license.html":{}}}],["laws",{"_index":2030,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":2470,"title":{},"body":{"license.html":{}}}],["layout",{"_index":106,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["layoutservice",{"_index":109,"title":{"injectables/LayoutService.html":{}},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["layoutstate",{"_index":168,"title":{"interfaces/LayoutState.html":{}},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"coverage.html":{}}}],["leaks",{"_index":1312,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["legal",{"_index":1964,"title":{},"body":{"license.html":{}}}],["legend",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["length",{"_index":1101,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["lesser",{"_index":2653,"title":{},"body":{"license.html":{}}}],["lgpl.html",{"_index":2657,"title":{},"body":{"license.html":{}}}],["liability",{"_index":2377,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2052,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":2097,"title":{},"body":{"license.html":{}}}],["library",{"_index":224,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["license",{"_index":1889,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":2034,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":2036,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":2038,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1913,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":2446,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":2387,"title":{},"body":{"license.html":{}}}],["light",{"_index":126,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["likewise",{"_index":2440,"title":{},"body":{"license.html":{}}}],["limit",{"_index":2196,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1882,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":2575,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":2376,"title":{},"body":{"license.html":{}}}],["line",{"_index":241,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":557,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["linked",{"_index":2125,"title":{},"body":{"license.html":{}}}],["linking",{"_index":2652,"title":{},"body":{"license.html":{}}}],["links",{"_index":149,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["list",{"_index":1537,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["listener",{"_index":948,"title":{},"body":{"components/HomeComponent.html":{}}}],["literal",{"_index":1179,"title":{},"body":{"injectables/MemoryStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["litigation",{"_index":2466,"title":{},"body":{"license.html":{}}}],["load",{"_index":467,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentorganization",{"_index":758,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentorganizationfailure",{"_index":1393,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentorganizationsuccess",{"_index":1394,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentorganizationsuccess(organization",{"_index":1389,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["loadcurrentuser",{"_index":314,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentuserfailure",{"_index":382,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentusersuccess",{"_index":383,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentusersuccess(user",{"_index":346,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["loaded",{"_index":580,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loader",{"_index":1746,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":455,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["loads",{"_index":1562,"title":{},"body":{"components/SidebarComponent.html":{}}}],["local",{"_index":212,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{},"license.html":{}}}],["localization",{"_index":1508,"title":{},"body":{"components/SidebarComponent.html":{}}}],["localizedlabel",{"_index":1029,"title":{},"body":{"components/HomeComponent.html":{}}}],["localstorage",{"_index":1065,"title":{"injectables/LocalStorage.html":{}},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"coverage.html":{}}}],["location",{"_index":1804,"title":{},"body":{"index.html":{}}}],["log_entry",{"_index":1781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_session",{"_index":1782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_source",{"_index":1783,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logging",{"_index":1797,"title":{},"body":{"index.html":{}}}],["loghub",{"_index":1794,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["login.component.html",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":67,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{}}}],["logonly",{"_index":2733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":1632,"title":{},"body":{"components/TopbarComponent.html":{}}}],["logs",{"_index":1801,"title":{},"body":{"index.html":{}}}],["long",{"_index":2148,"title":{},"body":{"license.html":{}}}],["look",{"_index":521,"title":{},"body":{"components/ConfigComponent.html":{}}}],["loss",{"_index":2595,"title":{},"body":{"license.html":{}}}],["losses",{"_index":2598,"title":{},"body":{"license.html":{}}}],["machine",{"_index":2249,"title":{},"body":{"license.html":{}}}],["made",{"_index":2338,"title":{},"body":{"license.html":{}}}],["mail",{"_index":2633,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":2282,"title":{},"body":{"license.html":{}}}],["major",{"_index":2103,"title":{},"body":{"license.html":{}}}],["make",{"_index":1873,"title":{},"body":{"index.html":{},"license.html":{}}}],["makes",{"_index":2166,"title":{},"body":{"license.html":{}}}],["making",{"_index":1251,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["manage",{"_index":523,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["management",{"_index":1820,"title":{},"body":{"index.html":{}}}],["managing",{"_index":517,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["manipulate",{"_index":524,"title":{},"body":{"components/ConfigComponent.html":{}}}],["manner",{"_index":2485,"title":{},"body":{"license.html":{}}}],["manually",{"_index":1248,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["manufacturer",{"_index":1983,"title":{},"body":{"license.html":{}}}],["map",{"_index":350,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"injectables/OrganizationEffects.html":{},"components/RegisterComponent.html":{}}}],["map((event",{"_index":767,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["map((organization",{"_index":1383,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["map((segment",{"_index":1024,"title":{},"body":{"components/HomeComponent.html":{}}}],["map((token",{"_index":334,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((user",{"_index":345,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["march",{"_index":2536,"title":{},"body":{"license.html":{}}}],["marked",{"_index":1974,"title":{},"body":{"license.html":{}}}],["marks",{"_index":539,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["masks",{"_index":2032,"title":{},"body":{"license.html":{}}}],["matching",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":677,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["materially",{"_index":2353,"title":{},"body":{"license.html":{}}}],["matrixparams",{"_index":1354,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["maxage",{"_index":2731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meaning",{"_index":2401,"title":{},"body":{"license.html":{}}}],["means",{"_index":540,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["measure",{"_index":2174,"title":{},"body":{"license.html":{}}}],["measures",{"_index":2188,"title":{},"body":{"license.html":{}}}],["mechanism",{"_index":1254,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["medium",{"_index":2202,"title":{},"body":{"license.html":{}}}],["meet",{"_index":2217,"title":{},"body":{"license.html":{}}}],["meets",{"_index":2084,"title":{},"body":{"license.html":{}}}],["membersurl",{"_index":2693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":1114,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{}}}],["memorystorage",{"_index":1113,"title":{"injectables/MemoryStorage.html":{}},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{}}}],["menu",{"_index":134,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["menubutton",{"_index":1626,"title":{},"body":{"components/TopbarComponent.html":{}}}],["menuchangeevent",{"_index":1193,"title":{"interfaces/MenuChangeEvent.html":{}},"body":{"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"coverage.html":{}}}],["menuhoveractive",{"_index":177,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuitem",{"_index":927,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["menuitem.component.html",{"_index":1234,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem.component.scss",{"_index":1233,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menuitem/menuitem.component",{"_index":1526,"title":{},"body":{"components/SidebarComponent.html":{}}}],["menuitem]'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["menuitemcomponent",{"_index":69,"title":{"components/MenuitemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["menumode",{"_index":100,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menumode(_val",{"_index":637,"title":{},"body":{"components/ConfigComponent.html":{}}}],["menuoutsideclicklistener",{"_index":904,"title":{},"body":{"components/HomeComponent.html":{}}}],["menuresetsubscription",{"_index":1235,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["menus",{"_index":180,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["menuservice",{"_index":500,"title":{"injectables/MenuService.html":{}},"body":{"components/ConfigComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"coverage.html":{}}}],["menusource",{"_index":1202,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["menusourcesubscription",{"_index":1236,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["merchantability",{"_index":2576,"title":{},"body":{"license.html":{}}}],["mere",{"_index":2066,"title":{},"body":{"license.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":2774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merging",{"_index":2455,"title":{},"body":{"license.html":{}}}],["messageservice",{"_index":693,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["met",{"_index":2139,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["method",{"_index":1261,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["methods",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["minimal",{"_index":509,"title":{},"body":{"components/ConfigComponent.html":{}}}],["miscellaneous",{"_index":1766,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":2383,"title":{},"body":{"license.html":{}}}],["mobile",{"_index":199,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["mode",{"_index":133,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":1498,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["models/enums/permission.enum",{"_index":1677,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/enums/resource",{"_index":1678,"title":{},"body":{"interfaces/UserDto.html":{}}}],["modification",{"_index":2026,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":2088,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1973,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":2220,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1947,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":2058,"title":{},"body":{"license.html":{}}}],["modules",{"_index":2658,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitoring",{"_index":1807,"title":{},"body":{"index.html":{}}}],["more",{"_index":2267,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":2427,"title":{},"body":{"license.html":{}}}],["move",{"_index":211,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["mutt.ngrok",{"_index":2782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:your",{"_index":1847,"title":{},"body":{"index.html":{}}}],["named",{"_index":91,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["nameinput",{"_index":704,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["names",{"_index":2386,"title":{},"body":{"license.html":{}}}],["native",{"_index":1503,"title":{},"body":{"components/SidebarComponent.html":{}}}],["nature",{"_index":2234,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":1827,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":525,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["navigationend",{"_index":971,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["necessary",{"_index":2584,"title":{},"body":{"license.html":{}}}],["need",{"_index":1861,"title":{},"body":{"index.html":{},"license.html":{}}}],["needed",{"_index":2008,"title":{},"body":{"license.html":{}}}],["network",{"_index":2068,"title":{},"body":{"license.html":{}}}],["new",{"_index":221,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"injectables/SessionStorage.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newhref",{"_index":645,"title":{},"body":{"components/ConfigComponent.html":{}}}],["newpassword",{"_index":1483,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["next",{"_index":240,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["next(clonedrequest",{"_index":2747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req",{"_index":2772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":2755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(request",{"_index":2748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":1824,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":711,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ngondestroy",{"_index":712,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngoninit",{"_index":713,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{}}}],["ngrok",{"_index":2703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngrx",{"_index":1819,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":375,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/OrganizationEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":445,"title":{},"body":{"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["noauthoptions",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":878,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["noncommercially",{"_index":2273,"title":{},"body":{"license.html":{}}}],["normal",{"_index":2101,"title":{},"body":{"license.html":{}}}],["normally",{"_index":2306,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":2441,"title":{},"body":{"license.html":{}}}],["notice",{"_index":2078,"title":{},"body":{"license.html":{}}}],["notices",{"_index":2073,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":1219,"title":{},"body":{"injectables/MenuService.html":{}}}],["notifies",{"_index":2428,"title":{},"body":{"license.html":{}}}],["notify",{"_index":2422,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":2372,"title":{},"body":{"license.html":{}}}],["null",{"_index":442,"title":{},"body":{"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":154,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["numbered",{"_index":2563,"title":{},"body":{"license.html":{}}}],["numbers",{"_index":596,"title":{},"body":{"components/ConfigComponent.html":{}}}],["object",{"_index":161,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object's",{"_index":269,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["object.keys(this.data",{"_index":1191,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["object.keys(this.data).length",{"_index":1187,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["objects",{"_index":940,"title":{},"body":{"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["obligate",{"_index":2548,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":2288,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":2176,"title":{},"body":{"license.html":{}}}],["observable",{"_index":231,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"miscellaneous/variables.html":{}}}],["observables",{"_index":208,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["occasionally",{"_index":2272,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":2438,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":1991,"title":{},"body":{"license.html":{}}}],["of(authenticate(request",{"_index":362,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(authenticationfailure",{"_index":339,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(forgotpasswordfailure",{"_index":352,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(loadcurrentorganizationfailure",{"_index":1385,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["of(loadcurrentuserfailure",{"_index":355,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(registernewuserfailure",{"_index":359,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(resetpasswordfailure",{"_index":367,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["offer",{"_index":1962,"title":{},"body":{"license.html":{}}}],["offered",{"_index":2297,"title":{},"body":{"license.html":{}}}],["offering",{"_index":2276,"title":{},"body":{"license.html":{}}}],["official",{"_index":2089,"title":{},"body":{"license.html":{}}}],["oftype",{"_index":374,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/OrganizationEffects.html":{}}}],["oftype(authenticate",{"_index":326,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticationsuccess",{"_index":342,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(createorganization",{"_index":1381,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(forgotpassword",{"_index":348,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(loadcurrentorganization",{"_index":1387,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["oftype(loadcurrentuser",{"_index":354,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(registernewuser",{"_index":357,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(registernewusersuccess",{"_index":361,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(resetpassword",{"_index":364,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(signout",{"_index":369,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["on(authenticate",{"_index":459,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authenticationfailure",{"_index":465,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authenticationsuccess",{"_index":462,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(createorganization",{"_index":1414,"title":{},"body":{"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["on(createorganizationfailure",{"_index":1416,"title":{},"body":{"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["on(createorganizationsuccess",{"_index":1415,"title":{},"body":{"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpassword",{"_index":473,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpasswordfailure",{"_index":475,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpasswordsuccess",{"_index":474,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentorganization",{"_index":1411,"title":{},"body":{"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentorganizationfailure",{"_index":1413,"title":{},"body":{"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentorganizationsuccess",{"_index":1412,"title":{},"body":{"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentuser",{"_index":456,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentuserfailure",{"_index":469,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentusersuccess",{"_index":468,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(registernewuser",{"_index":479,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(registernewuserfailure",{"_index":481,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(registernewusersuccess",{"_index":480,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpassword",{"_index":476,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpasswordfailure",{"_index":478,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpasswordsuccess",{"_index":477,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(setcurrentuser",{"_index":470,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(settoken",{"_index":471,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(signout",{"_index":472,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["once",{"_index":578,"title":{},"body":{"components/ConfigComponent.html":{}}}],["oncomplete",{"_index":571,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigbuttonclick",{"_index":506,"title":{},"body":{"components/ConfigComponent.html":{}}}],["onconfigupdate",{"_index":288,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ondestroy",{"_index":691,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["one",{"_index":579,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["oninit",{"_index":690,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{}}}],["onmenustatechange",{"_index":1204,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["onmenustatechange(event",{"_index":1205,"title":{},"body":{"injectables/MenuService.html":{}}}],["onmenutoggle",{"_index":188,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["open",{"_index":1211,"title":{},"body":{"injectables/MenuService.html":{}}}],["opened",{"_index":236,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opens",{"_index":261,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["operate",{"_index":2600,"title":{},"body":{"license.html":{}}}],["operated",{"_index":2279,"title":{},"body":{"license.html":{}}}],["operating",{"_index":2110,"title":{},"body":{"license.html":{}}}],["operation",{"_index":2197,"title":{},"body":{"license.html":{}}}],["operator",{"_index":216,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["opposite",{"_index":286,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["option",{"_index":142,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["optional",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":105,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["order",{"_index":1266,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["organization",{"_index":694,"title":{"interfaces/Organization.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/HomeComponent.html":{},"interfaces/Organization.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["organization'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["organization.actions",{"_index":1395,"title":{},"body":{"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{}}}],["organization.component.html",{"_index":698,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.scss",{"_index":699,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts",{"_index":687,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"coverage.html":{}}}],["organization.component.ts:106",{"_index":730,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:126",{"_index":729,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:132",{"_index":727,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:140",{"_index":732,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:146",{"_index":722,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:152",{"_index":725,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:64",{"_index":747,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:65",{"_index":720,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:74",{"_index":735,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:79",{"_index":740,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:80",{"_index":739,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:82",{"_index":745,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:83",{"_index":744,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:84",{"_index":737,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.component.ts:86",{"_index":728,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.name_is_required",{"_index":807,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.name_label",{"_index":806,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.slug_is_required",{"_index":809,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.slug_label",{"_index":808,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.welcome_description",{"_index":805,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization.welcome_message",{"_index":804,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organization/create",{"_index":686,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"coverage.html":{}}}],["organization/organization.effects",{"_index":299,"title":{},"body":{"interfaces/AppState.html":{}}}],["organization/organization.reducer",{"_index":301,"title":{},"body":{"interfaces/AppState.html":{}}}],["organizationdto",{"_index":1376,"title":{"interfaces/OrganizationDto.html":{}},"body":{"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{},"coverage.html":{}}}],["organizationeffects",{"_index":298,"title":{"injectables/OrganizationEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/OrganizationEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationerrorsubscription",{"_index":905,"title":{},"body":{"components/HomeComponent.html":{}}}],["organizationid",{"_index":1372,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{}}}],["organizationname",{"_index":723,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organizationreducer",{"_index":300,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/OrganizationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizations",{"_index":2039,"title":{},"body":{"license.html":{}}}],["organizationservice",{"_index":716,"title":{"injectables/OrganizationService.html":{}},"body":{"components/CreateOrganizationComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"coverage.html":{}}}],["organizationstate",{"_index":293,"title":{"interfaces/OrganizationState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/OrganizationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organizationsubscription",{"_index":705,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["organizationurl",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["origin",{"_index":2384,"title":{},"body":{"license.html":{}}}],["original",{"_index":577,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["originalevent",{"_index":1362,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["others",{"_index":1941,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":282,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["out",{"_index":2593,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["outlined",{"_index":131,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["output",{"_index":2142,"title":{},"body":{"license.html":{}}}],["outside",{"_index":946,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["over",{"_index":202,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overall",{"_index":520,"title":{},"body":{"components/ConfigComponent.html":{}}}],["overlay",{"_index":136,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuactive",{"_index":173,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overlaymenuopensubscription",{"_index":906,"title":{},"body":{"components/HomeComponent.html":{}}}],["overlayopen",{"_index":235,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["overview",{"_index":2659,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":2480,"title":{},"body":{"license.html":{}}}],["p",{"_index":1050,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["package",{"_index":1733,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packaged",{"_index":2226,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":2102,"title":{},"body":{"license.html":{}}}],["page",{"_index":1502,"title":{},"body":{"components/SidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["paper",{"_index":2632,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":2412,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":2493,"title":{},"body":{"license.html":{}}}],["param",{"_index":630,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameter",{"_index":233,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["parent",{"_index":542,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["parentkey",{"_index":1239,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["part",{"_index":2041,"title":{},"body":{"license.html":{}}}],["particular",{"_index":2093,"title":{},"body":{"license.html":{}}}],["parties",{"_index":2065,"title":{},"body":{"license.html":{}}}],["parts",{"_index":227,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["party",{"_index":2280,"title":{},"body":{"license.html":{}}}],["party's",{"_index":2457,"title":{},"body":{"license.html":{}}}],["pass",{"_index":1262,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["passed",{"_index":541,"title":{},"body":{"components/ConfigComponent.html":{}}}],["password",{"_index":331,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["password.back_to_login",{"_index":891,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.check_your_email",{"_index":874,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.html",{"_index":820,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":821,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":818,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:125",{"_index":1474,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:144",{"_index":834,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:152",{"_index":832,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:160",{"_index":831,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":1471,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":829,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":1475,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:65",{"_index":838,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:69",{"_index":840,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:70",{"_index":841,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":836,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:73",{"_index":845,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:74",{"_index":842,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:75",{"_index":843,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":1472,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:77",{"_index":833,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:82",{"_index":1473,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:88",{"_index":835,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.error",{"_index":866,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.error_description",{"_index":869,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.new_password_label",{"_index":1486,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_is_required",{"_index":1487,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_length",{"_index":1488,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_not_strong",{"_index":1489,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.success",{"_index":873,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.success_message",{"_index":1481,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.user_does_not_exist",{"_index":868,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_is_required",{"_index":889,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_length",{"_index":890,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_description",{"_index":886,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_message",{"_index":885,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.wrong_hash",{"_index":1480,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":817,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":1468,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordminlength",{"_index":1714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordmodule",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordspecialchars",{"_index":1715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["patent",{"_index":2411,"title":{},"body":{"license.html":{}}}],["patents",{"_index":2012,"title":{},"body":{"license.html":{}}}],["paths",{"_index":1350,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["pattern",{"_index":1989,"title":{},"body":{"license.html":{}}}],["payment",{"_index":2530,"title":{},"body":{"license.html":{}}}],["peer",{"_index":2293,"title":{},"body":{"license.html":{}}}],["peers",{"_index":2296,"title":{},"body":{"license.html":{}}}],["pending",{"_index":1789,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perform",{"_index":582,"title":{},"body":{"components/ConfigComponent.html":{}}}],["performance",{"_index":2580,"title":{},"body":{"license.html":{}}}],["performing",{"_index":2121,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":2420,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1668,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["permissions",{"_index":1674,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["permissive",{"_index":2208,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2243,"title":{},"body":{"license.html":{}}}],["permits",{"_index":2403,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1903,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":2343,"title":{},"body":{"license.html":{}}}],["personal",{"_index":2305,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":2546,"title":{},"body":{"license.html":{}}}],["physical",{"_index":2253,"title":{},"body":{"license.html":{}}}],["physically",{"_index":2270,"title":{},"body":{"license.html":{}}}],["pi",{"_index":1011,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["pictureurl",{"_index":1373,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{}}}],["pieces",{"_index":1936,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":333,"title":{},"body":{"injectables/AuthEffects.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["pipe(filter((event",{"_index":999,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["pixels",{"_index":277,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["place",{"_index":2278,"title":{},"body":{"license.html":{}}}],["platform",{"_index":1784,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["platform_id",{"_index":1112,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformid",{"_index":1116,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformurl",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["play",{"_index":1566,"title":{},"body":{"components/SidebarComponent.html":{}}}],["please",{"_index":2655,"title":{},"body":{"license.html":{}}}],["plus",{"_index":2460,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":2625,"title":{},"body":{"license.html":{}}}],["portion",{"_index":2300,"title":{},"body":{"license.html":{}}}],["portrait",{"_index":283,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["possesses",{"_index":2266,"title":{},"body":{"license.html":{}}}],["possession",{"_index":2224,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":2603,"title":{},"body":{"license.html":{}}}],["possible",{"_index":2617,"title":{},"body":{"license.html":{}}}],["power",{"_index":2190,"title":{},"body":{"license.html":{}}}],["practical",{"_index":1914,"title":{},"body":{"license.html":{}}}],["practice",{"_index":1998,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":1910,"title":{},"body":{"license.html":{}}}],["precise",{"_index":2022,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":1995,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":2458,"title":{},"body":{"license.html":{}}}],["preference",{"_index":1513,"title":{},"body":{"components/SidebarComponent.html":{}}}],["preferred",{"_index":2086,"title":{},"body":{"license.html":{}}}],["present",{"_index":2557,"title":{},"body":{"license.html":{}}}],["presents",{"_index":2081,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":2379,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":1311,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["prevented",{"_index":2336,"title":{},"body":{"license.html":{}}}],["previous",{"_index":1978,"title":{},"body":{"license.html":{}}}],["price",{"_index":1933,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":2532,"title":{},"body":{"license.html":{}}}],["primeflex",{"_index":1755,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":1757,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":1759,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":750,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/avatar",{"_index":1655,"title":{},"body":{"components/TopbarComponent.html":{}}}],["primeng/breadcrumb",{"_index":972,"title":{},"body":{"components/HomeComponent.html":{}}}],["primeng/button",{"_index":622,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/dropdown",{"_index":1656,"title":{},"body":{"components/TopbarComponent.html":{}}}],["primeng/inputmask",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["primeng/inputswitch",{"_index":626,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/inputtext",{"_index":751,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["primeng/password",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/radiobutton",{"_index":623,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/ripple",{"_index":624,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/MenuitemComponent.html":{},"components/TopbarComponent.html":{}}}],["primeng/sidebar",{"_index":625,"title":{},"body":{"components/ConfigComponent.html":{}}}],["primeng/toast",{"_index":752,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeone",{"_index":682,"title":{},"body":{"components/ConfigComponent.html":{}}}],["prior",{"_index":2423,"title":{},"body":{"license.html":{}}}],["private",{"_index":219,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["problems",{"_index":1975,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":2330,"title":{},"body":{"license.html":{}}}],["processing",{"_index":1358,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["procuring",{"_index":2519,"title":{},"body":{"license.html":{}}}],["produce",{"_index":2113,"title":{},"body":{"license.html":{}}}],["product",{"_index":2254,"title":{},"body":{"license.html":{}}}],["production",{"_index":2721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["products",{"_index":1993,"title":{},"body":{"license.html":{}}}],["profile",{"_index":195,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["profileiconurl",{"_index":1666,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["profilemenuoutsideclicklistener",{"_index":907,"title":{},"body":{"components/HomeComponent.html":{}}}],["profilesidebarvisible",{"_index":174,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["profileurl",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":1924,"title":{},"body":{"license.html":{}}}],["program's",{"_index":2201,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":2645,"title":{},"body":{"license.html":{}}}],["programming",{"_index":2094,"title":{},"body":{"license.html":{}}}],["programs",{"_index":1930,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":1997,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":2186,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":2526,"title":{},"body":{"license.html":{}}}],["project",{"_index":1785,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["project_release",{"_index":1786,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projecturl",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominent",{"_index":2083,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":2076,"title":{},"body":{"license.html":{}}}],["promise.resolve(null).then",{"_index":1335,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["propagate",{"_index":2048,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":2444,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":2059,"title":{},"body":{"license.html":{}}}],["properties",{"_index":94,"title":{"properties.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"properties.html":{}}}],["property",{"_index":117,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["proprietary",{"_index":2020,"title":{},"body":{"license.html":{}}}],["props",{"_index":2735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protect",{"_index":1939,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":1987,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1966,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":2358,"title":{},"body":{"license.html":{}}}],["prove",{"_index":2581,"title":{},"body":{"license.html":{}}}],["provide",{"_index":118,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":2723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1258,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["providedin",{"_index":209,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MenuService.html":{},"injectables/OrganizationService.html":{},"injectables/SessionStorage.html":{}}}],["provideeffects(appefects",{"_index":2729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient",{"_index":2714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":692,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":204,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/SidebarComponent.html":{},"index.html":{}}}],["provideserverrendering",{"_index":2775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestore(appstore",{"_index":2728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestoredevtools",{"_index":2730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provision",{"_index":2006,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":2417,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":2568,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":2570,"title":{},"body":{"license.html":{}}}],["public",{"_index":499,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["publicity",{"_index":2385,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":2360,"title":{},"body":{"license.html":{}}}],["publish",{"_index":2205,"title":{},"body":{"license.html":{}}}],["published",{"_index":2565,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1865,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":2015,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":2309,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":2515,"title":{},"body":{"license.html":{}}}],["px",{"_index":667,"title":{},"body":{"components/ConfigComponent.html":{}}}],["qualify",{"_index":2434,"title":{},"body":{"license.html":{}}}],["quality",{"_index":2579,"title":{},"body":{"license.html":{}}}],["queryparams",{"_index":1352,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["question",{"_index":1611,"title":{},"body":{"components/SidebarComponent.html":{}}}],["radiobuttonmodule",{"_index":493,"title":{},"body":{"components/ConfigComponent.html":{}}}],["react",{"_index":246,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["reactiveformsmodule",{"_index":697,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["read",{"_index":1774,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["readable",{"_index":2250,"title":{},"body":{"license.html":{}}}],["readily",{"_index":2502,"title":{},"body":{"license.html":{}}}],["reading",{"_index":2363,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":1096,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["ready",{"_index":2004,"title":{},"body":{"license.html":{}}}],["reason",{"_index":2513,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":2268,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":2432,"title":{},"body":{"license.html":{}}}],["receive",{"_index":1218,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["received",{"_index":1954,"title":{},"body":{"license.html":{}}}],["receives",{"_index":2448,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":2521,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":2342,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":2511,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1951,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":2090,"title":{},"body":{"license.html":{}}}],["redistribute",{"_index":2620,"title":{},"body":{"license.html":{}}}],["referring",{"_index":1932,"title":{},"body":{"license.html":{}}}],["refers",{"_index":2029,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":2549,"title":{},"body":{"license.html":{}}}],["refresh_token_key",{"_index":1075,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshexpiresin",{"_index":1619,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshresult.accesstoken",{"_index":2764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken(refreshtoken",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["regard",{"_index":2369,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":2225,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":2133,"title":{},"body":{"license.html":{}}}],["regexp",{"_index":1045,"title":{},"body":{"components/HomeComponent.html":{}}}],["register",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["register'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["register(dto",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.html",{"_index":1418,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":1419,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":71,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["registerform",{"_index":1420,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registernewuser",{"_index":315,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registernewuserfailure",{"_index":384,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registernewusersuccess",{"_index":316,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registerrequestdto",{"_index":408,"title":{"interfaces/RegisterRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"coverage.html":{}}}],["registrationerror",{"_index":437,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["registrationguard",{"_index":1694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry",{"_index":1869,"title":{},"body":{"index.html":{}}}],["reinstated",{"_index":2416,"title":{},"body":{"license.html":{}}}],["related",{"_index":486,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["relationship",{"_index":2159,"title":{},"body":{"license.html":{}}}],["released",{"_index":1927,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":1212,"title":{},"body":{"injectables/MenuService.html":{},"license.html":{}}}],["relicensing",{"_index":2404,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1830,"title":{},"body":{"index.html":{}}}],["relying",{"_index":2501,"title":{},"body":{"license.html":{}}}],["remain",{"_index":2287,"title":{},"body":{"license.html":{}}}],["remains",{"_index":1925,"title":{},"body":{"license.html":{}}}],["remote",{"_index":1795,"title":{},"body":{"index.html":{}}}],["removal",{"_index":2371,"title":{},"body":{"license.html":{}}}],["remove",{"_index":2370,"title":{},"body":{"license.html":{}}}],["removeitem",{"_index":1099,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removeitem(key",{"_index":1106,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removes",{"_index":576,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["removing",{"_index":529,"title":{},"body":{"components/ConfigComponent.html":{}}}],["render",{"_index":546,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["rendered",{"_index":2596,"title":{},"body":{"license.html":{}}}],["renderer",{"_index":908,"title":{},"body":{"components/HomeComponent.html":{}}}],["renderer2",{"_index":916,"title":{},"body":{"components/HomeComponent.html":{}}}],["rendering",{"_index":1816,"title":{},"body":{"index.html":{}}}],["repair",{"_index":2586,"title":{},"body":{"license.html":{}}}],["replace(this.layoutservice.config.theme",{"_index":647,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replaces",{"_index":573,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replacethemelink",{"_index":507,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replacethemelink(href",{"_index":570,"title":{},"body":{"components/ConfigComponent.html":{}}}],["replacing",{"_index":556,"title":{},"body":{"components/ConfigComponent.html":{}}}],["represent",{"_index":102,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["representing",{"_index":560,"title":{},"body":{"components/ConfigComponent.html":{}}}],["represents",{"_index":119,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["req",{"_index":2749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":2762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.context.get(authenticate",{"_index":2754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers.set",{"_index":2763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('auth/authenticate",{"_index":2757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('auth/refreshtoken",{"_index":2758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":2744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.context.get(authenticate",{"_index":2741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.dto",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/CreateOrganizationComponent.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{}}}],["request.dto.ts",{"_index":483,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["request.headers.set('authorization",{"_index":2745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.password",{"_index":332,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.username",{"_index":330,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["require",{"_index":2128,"title":{},"body":{"license.html":{}}}],["required",{"_index":2332,"title":{},"body":{"license.html":{}}}],["requirement",{"_index":2219,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":2291,"title":{},"body":{"license.html":{}}}],["requires",{"_index":1972,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":2043,"title":{},"body":{"license.html":{}}}],["reset",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["resetpassword",{"_index":317,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpassword(dto",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":73,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["resetpassworderror",{"_index":438,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordfailure",{"_index":385,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordform",{"_index":1469,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordrequestdto",{"_index":412,"title":{"interfaces/ResetPasswordRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["resetpasswordsuccess",{"_index":366,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resets",{"_index":943,"title":{},"body":{"components/HomeComponent.html":{}}}],["resetsource",{"_index":1203,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["resolved",{"_index":2316,"title":{},"body":{"license.html":{}}}],["resourcetype",{"_index":1670,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["respect",{"_index":1948,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":1946,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":2449,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":2014,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":2187,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":2402,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":2400,"title":{},"body":{"license.html":{}}}],["result",{"_index":794,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"license.html":{}}}],["resulting",{"_index":2044,"title":{},"body":{"license.html":{}}}],["results",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":2346,"title":{},"body":{"license.html":{}}}],["return",{"_index":271,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/SessionStorage.html":{},"components/TopbarComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["returning",{"_index":268,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["returns",{"_index":266,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["reviewing",{"_index":2606,"title":{},"body":{"license.html":{}}}],["revised",{"_index":2555,"title":{},"body":{"license.html":{}}}],["right",{"_index":2340,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1940,"title":{},"body":{"license.html":{}}}],["ripple",{"_index":99,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["ripple(_val",{"_index":641,"title":{},"body":{"components/ConfigComponent.html":{}}}],["ripplemodule",{"_index":491,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/MenuitemComponent.html":{},"components/TopbarComponent.html":{}}}],["risk",{"_index":2578,"title":{},"body":{"license.html":{}}}],["role",{"_index":1520,"title":{},"body":{"components/SidebarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["roleid",{"_index":1673,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["rom",{"_index":2349,"title":{},"body":{"license.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationService.html":{},"injectables/SessionStorage.html":{}}}],["root'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["route",{"_index":917,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["route.children",{"_index":1018,"title":{},"body":{"components/HomeComponent.html":{}}}],["routeevent",{"_index":1197,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{}}}],["router",{"_index":719,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/auth",{"_index":2768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":1012,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["routermodule",{"_index":819,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["routerstatesnapshot",{"_index":2807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routeurl",{"_index":1022,"title":{},"body":{"components/HomeComponent.html":{}}}],["routing",{"_index":1255,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{}}}],["royalty",{"_index":2464,"title":{},"body":{"license.html":{}}}],["rules",{"_index":2357,"title":{},"body":{"license.html":{}}}],["run",{"_index":1823,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":1853,"title":{},"body":{"index.html":{},"license.html":{}}}],["runs",{"_index":2111,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":167,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1323,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["safest",{"_index":2622,"title":{},"body":{"license.html":{}}}],["sake",{"_index":1971,"title":{},"body":{"license.html":{}}}],["sale",{"_index":2474,"title":{},"body":{"license.html":{}}}],["same",{"_index":1952,"title":{},"body":{"license.html":{}}}],["satisfy",{"_index":2290,"title":{},"body":{"license.html":{}}}],["saverefreshtoken",{"_index":1062,"title":{},"body":{"injectables/JwtService.html":{}}}],["saverefreshtoken(token",{"_index":1070,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken",{"_index":1063,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":1072,"title":{},"body":{"injectables/JwtService.html":{}}}],["saying",{"_index":2284,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":1832,"title":{},"body":{"index.html":{}}}],["scale",{"_index":101,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["scale(_val",{"_index":635,"title":{},"body":{"components/ConfigComponent.html":{}}}],["scales",{"_index":501,"title":{},"body":{"components/ConfigComponent.html":{}}}],["scheme",{"_index":124,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["school",{"_index":2646,"title":{},"body":{"license.html":{}}}],["scope",{"_index":2525,"title":{},"body":{"license.html":{}}}],["scripts",{"_index":2117,"title":{},"body":{"license.html":{}}}],["scroll",{"_index":953,"title":{},"body":{"components/HomeComponent.html":{}}}],["scroll'.split",{"_index":1047,"title":{},"body":{"components/HomeComponent.html":{}}}],["scrolling",{"_index":924,"title":{},"body":{"components/HomeComponent.html":{}}}],["secondarily",{"_index":2051,"title":{},"body":{"license.html":{}}}],["secret",{"_index":1470,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["section",{"_index":2164,"title":{},"body":{"license.html":{}}}],["sections",{"_index":2247,"title":{},"body":{"license.html":{}}}],["securepasswordregex",{"_index":1439,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":1878,"title":{},"body":{"index.html":{},"license.html":{}}}],["segment.path",{"_index":1025,"title":{},"body":{"components/HomeComponent.html":{}}}],["select(issuccess",{"_index":871,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectauthorizationerror",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{}}}],["select(selectcurrentorganization",{"_index":779,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["select(selectcurrentuser",{"_index":857,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectcurrentusererror",{"_index":1005,"title":{},"body":{"components/HomeComponent.html":{}}}],["select(selectforgotpassworderror",{"_index":859,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["select(selectorganizationerror",{"_index":783,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["select(selectregistrationerror",{"_index":1442,"title":{},"body":{"components/RegisterComponent.html":{}}}],["select(selectresetpassworderror",{"_index":1477,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["selectauth",{"_index":1708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectauthorizationerror",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrentorganization",{"_index":761,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrentuser",{"_index":848,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrentusererror",{"_index":974,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":140,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["selectedlanguage",{"_index":1627,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectedlanguage.label",{"_index":1662,"title":{},"body":{"components/TopbarComponent.html":{}}}],["selectforgotpassworderror",{"_index":849,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["selectorganization",{"_index":1712,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectorganizationerror",{"_index":762,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectregistrationerror",{"_index":1438,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectresetpassworderror",{"_index":1476,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":2490,"title":{},"body":{"license.html":{}}}],["selling",{"_index":2473,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":2031,"title":{},"body":{"license.html":{}}}],["sends",{"_index":1207,"title":{},"body":{"injectables/MenuService.html":{}}}],["separable",{"_index":2299,"title":{},"body":{"license.html":{}}}],["separate",{"_index":2232,"title":{},"body":{"license.html":{}}}],["separated",{"_index":1273,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["separately",{"_index":2229,"title":{},"body":{"license.html":{}}}],["serve",{"_index":1825,"title":{},"body":{"index.html":{}}}],["served",{"_index":1883,"title":{},"body":{"index.html":{}}}],["server",{"_index":1184,"title":{},"body":{"injectables/MemoryStorage.html":{},"components/SidebarComponent.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["serverconfig",{"_index":1685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serves",{"_index":2104,"title":{},"body":{"license.html":{}}}],["service",{"_index":516,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["services",{"_index":1217,"title":{},"body":{"injectables/MenuService.html":{},"components/SidebarComponent.html":{}}}],["services/api/auth.api.service",{"_index":377,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["services/api/organization.api.service",{"_index":1391,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["services/token",{"_index":378,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["servicing",{"_index":2585,"title":{},"body":{"license.html":{}}}],["sessionstorage",{"_index":1491,"title":{"injectables/SessionStorage.html":{}},"body":{"injectables/SessionStorage.html":{},"coverage.html":{}}}],["set",{"_index":147,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setcurrentuser",{"_index":450,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setinputstyle(_val",{"_index":614,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setitem",{"_index":1100,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setitem(key",{"_index":1108,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setmenumode(_val",{"_index":610,"title":{},"body":{"components/ConfigComponent.html":{}}}],["setripple(_val",{"_index":618,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sets",{"_index":263,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["setscale(_val",{"_index":606,"title":{},"body":{"components/ConfigComponent.html":{}}}],["settings",{"_index":488,"title":{},"body":{"components/ConfigComponent.html":{}}}],["settoken",{"_index":451,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setupsidenavitems",{"_index":1499,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setupsidenavitems(sidenav",{"_index":1521,"title":{},"body":{"components/SidebarComponent.html":{}}}],["setvisible(_val",{"_index":601,"title":{},"body":{"components/ConfigComponent.html":{}}}],["several",{"_index":93,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["severity",{"_index":862,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["shall",{"_index":2170,"title":{},"body":{"license.html":{}}}],["shape",{"_index":169,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["share",{"_index":1919,"title":{},"body":{"license.html":{}}}],["shared",{"_index":2123,"title":{},"body":{"license.html":{}}}],["shield",{"_index":1581,"title":{},"body":{"components/SidebarComponent.html":{}}}],["short",{"_index":2635,"title":{},"body":{"license.html":{}}}],["show",{"_index":1955,"title":{},"body":{"license.html":{}}}],["showconfigsidebar",{"_index":198,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["shown",{"_index":192,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["showprofilesidebar",{"_index":193,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["shows",{"_index":568,"title":{},"body":{"components/ConfigComponent.html":{}}}],["side",{"_index":1519,"title":{},"body":{"components/SidebarComponent.html":{},"index.html":{}}}],["sidebar",{"_index":196,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/SidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["sidebar.component.html",{"_index":1496,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":1495,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidebarcomponent",{"_index":75,"title":{"components/SidebarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["sidebarmodule",{"_index":492,"title":{},"body":{"components/ConfigComponent.html":{}}}],["sidebars",{"_index":181,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sidenav",{"_index":1030,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["sidenav.devices",{"_index":1545,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.documentation",{"_index":1604,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.general",{"_index":1531,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.guides",{"_index":1610,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.help",{"_index":1603,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.home",{"_index":1532,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.issues",{"_index":1539,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.logs",{"_index":1536,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.messages",{"_index":1542,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.performance",{"_index":1550,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.projects",{"_index":1534,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.queries",{"_index":1553,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.releases",{"_index":1568,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.replays",{"_index":1565,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.resources",{"_index":1563,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.screen_loads",{"_index":1559,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.sdks",{"_index":1607,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.sessions",{"_index":1547,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.setitngs",{"_index":1574,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account",{"_index":1575,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_close",{"_index":1584,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_details",{"_index":1577,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_notifications",{"_index":1582,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_account_security",{"_index":1579,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_alerts",{"_index":1600,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_members",{"_index":1597,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_organization",{"_index":1589,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_projects",{"_index":1592,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.settings_teams",{"_index":1594,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.stats",{"_index":1571,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.support",{"_index":1613,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sidenav.vitals",{"_index":1556,"title":{},"body":{"components/SidebarComponent.html":{}}}],["sign",{"_index":2647,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["significant",{"_index":2328,"title":{},"body":{"license.html":{}}}],["signout",{"_index":318,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/TopbarComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":2185,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":2545,"title":{},"body":{"license.html":{}}}],["single",{"_index":2517,"title":{},"body":{"license.html":{}}}],["sitemap",{"_index":1595,"title":{},"body":{"components/SidebarComponent.html":{}}}],["size",{"_index":156,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["sizes",{"_index":598,"title":{},"body":{"components/ConfigComponent.html":{}}}],["skip",{"_index":2704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slug",{"_index":726,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{}}}],["slug.tolowercase().replaceall",{"_index":795,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["slug/taken?slug",{"_index":1407,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["slugchecksubscription",{"_index":706,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["sluginput",{"_index":707,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["snippet",{"_index":1213,"title":{},"body":{"injectables/MenuService.html":{}}}],["software",{"_index":1898,"title":{},"body":{"license.html":{}}}],["sold",{"_index":2310,"title":{},"body":{"license.html":{}}}],["sole",{"_index":2150,"title":{},"body":{"license.html":{}}}],["solely",{"_index":2161,"title":{},"body":{"license.html":{}}}],["solution",{"_index":1798,"title":{},"body":{"index.html":{}}}],["somewhere",{"_index":2785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"index.html":{},"license.html":{}}}],["spare",{"_index":2264,"title":{},"body":{"license.html":{}}}],["speak",{"_index":1931,"title":{},"body":{"license.html":{}}}],["special",{"_index":2017,"title":{},"body":{"license.html":{}}}],["specific",{"_index":2109,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":2127,"title":{},"body":{"license.html":{}}}],["specified",{"_index":551,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["specifies",{"_index":2562,"title":{},"body":{"license.html":{}}}],["specify",{"_index":2566,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":2556,"title":{},"body":{"license.html":{}}}],["src/.../api.ts",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.server.ts",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":1790,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.state.ts",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.actions.ts",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.reducer.ts",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.selectors.ts",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.production.ts",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../organization.actions.ts",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../organization.reducer.ts",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../organization.selectors.ts",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.enum.ts",{"_index":1768,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../regex.constants.ts",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../registration.guard.ts",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resource",{"_index":1769,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state",{"_index":1771,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../token",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1686,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/domain/dto/organization.dto.ts",{"_index":1377,"title":{},"body":{"interfaces/OrganizationDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/authenticate",{"_index":482,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/create",{"_index":810,"title":{},"body":{"interfaces/CreateOrganizationRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/forgot",{"_index":893,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/register",{"_index":1466,"title":{},"body":{"interfaces/RegisterRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/reset",{"_index":1490,"title":{},"body":{"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/token.dto.ts",{"_index":1620,"title":{},"body":{"interfaces/TokenDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/user.dto.ts",{"_index":1676,"title":{},"body":{"interfaces/UserDto.html":{},"coverage.html":{}}}],["src/app/core/domain/models/enums/permission.enum.ts",{"_index":1773,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/resource",{"_index":1776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/state",{"_index":1788,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/menu",{"_index":1194,"title":{},"body":{"interfaces/MenuChangeEvent.html":{},"coverage.html":{}}}],["src/app/core/domain/models/organization.entity.ts",{"_index":1370,"title":{},"body":{"interfaces/Organization.html":{},"coverage.html":{}}}],["src/app/core/domain/models/token.entity.ts",{"_index":1616,"title":{},"body":{"interfaces/Token.html":{},"coverage.html":{}}}],["src/app/core/domain/models/user.entity.ts",{"_index":1664,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/guards/registration.guard.ts",{"_index":1693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts",{"_index":1695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/api/api.ts",{"_index":1698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/api/auth.api.service.ts",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/api/auth.api.service.ts:14",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:17",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:25",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:33",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:37",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:45",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:53",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:61",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/organization.api.service.ts",{"_index":1396,"title":{},"body":{"injectables/OrganizationService.html":{},"coverage.html":{}}}],["src/app/core/services/api/organization.api.service.ts:11",{"_index":1398,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:14",{"_index":1400,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:22",{"_index":1401,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/api/organization.api.service.ts:29",{"_index":1402,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["src/app/core/services/layout.service.ts",{"_index":86,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"coverage.html":{}}}],["src/app/core/services/layout.service.ts:113",{"_index":1094,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:128",{"_index":1090,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:137",{"_index":1092,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:143",{"_index":1091,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:149",{"_index":1093,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:154",{"_index":1086,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:178",{"_index":1088,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:188",{"_index":1087,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:197",{"_index":1084,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:209",{"_index":1082,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:218",{"_index":1083,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:225",{"_index":1085,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/layout.service.ts:98",{"_index":1089,"title":{},"body":{"injectables/LayoutService.html":{}}}],["src/app/core/services/local",{"_index":1095,"title":{},"body":{"injectables/LocalStorage.html":{},"coverage.html":{}}}],["src/app/core/services/memory",{"_index":1173,"title":{},"body":{"injectables/MemoryStorage.html":{},"coverage.html":{}}}],["src/app/core/services/menu.service.ts",{"_index":1198,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["src/app/core/services/menu.service.ts:16",{"_index":1216,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:22",{"_index":1222,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:27",{"_index":1221,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:31",{"_index":1224,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:40",{"_index":1206,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/menu.service.ts:47",{"_index":1214,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/core/services/session",{"_index":1492,"title":{},"body":{"injectables/SessionStorage.html":{},"coverage.html":{}}}],["src/app/core/services/token",{"_index":1057,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/app.state.ts",{"_index":291,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.actions.ts",{"_index":1704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.effects.ts",{"_index":310,"title":{},"body":{"injectables/AuthEffects.html":{},"coverage.html":{}}}],["src/app/core/state/auth/auth.effects.ts:106",{"_index":373,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:117",{"_index":360,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:134",{"_index":363,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:26",{"_index":323,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:33",{"_index":356,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:45",{"_index":341,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:66",{"_index":353,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:80",{"_index":368,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:94",{"_index":347,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.reducer.ts",{"_index":433,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.selectors.ts",{"_index":1707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/organization/organization.actions.ts",{"_index":1709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/organization/organization.effects.ts",{"_index":1378,"title":{},"body":{"injectables/OrganizationEffects.html":{},"coverage.html":{}}}],["src/app/core/state/organization/organization.effects.ts:14",{"_index":1390,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:26",{"_index":1386,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.effects.ts:8",{"_index":1380,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["src/app/core/state/organization/organization.reducer.ts",{"_index":1408,"title":{},"body":{"interfaces/OrganizationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/organization/organization.selectors.ts",{"_index":1711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/utils/regex.constants.ts",{"_index":1713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/auth/auth.component.ts",{"_index":305,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/forgot",{"_index":816,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts",{"_index":1052,"title":{},"body":{"components/InvitationComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/login/login.component.ts",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/login/login.component.ts:127",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:136",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:142",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:146",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:150",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:65",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:76",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:81",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:82",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:84",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:85",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:86",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:88",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:99",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts",{"_index":1417,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/register/register.component.ts:100",{"_index":1425,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:131",{"_index":1423,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:142",{"_index":1424,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:148",{"_index":1426,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:159",{"_index":1422,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:67",{"_index":1421,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:78",{"_index":1428,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:79",{"_index":1429,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:81",{"_index":1434,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:96",{"_index":1436,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:97",{"_index":1427,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:98",{"_index":1435,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/reset",{"_index":1467,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/features/create",{"_index":685,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"coverage.html":{}}}],["src/app/features/home/components/config/config.component.ts",{"_index":484,"title":{},"body":{"components/ConfigComponent.html":{},"coverage.html":{}}}],["src/app/features/home/components/config/config.component.ts:105",{"_index":567,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:117",{"_index":554,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:139",{"_index":572,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:159",{"_index":561,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:167",{"_index":564,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:175",{"_index":549,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:37",{"_index":537,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:43",{"_index":513,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:57",{"_index":589,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:58",{"_index":590,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:62",{"_index":600,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:66",{"_index":602,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:70",{"_index":605,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:74",{"_index":607,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:78",{"_index":609,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:82",{"_index":611,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:86",{"_index":613,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:90",{"_index":615,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:94",{"_index":617,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/config/config.component.ts:98",{"_index":619,"title":{},"body":{"components/ConfigComponent.html":{}}}],["src/app/features/home/components/footer/footer.component.ts",{"_index":811,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts",{"_index":1229,"title":{},"body":{"components/MenuitemComponent.html":{},"coverage.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:103",{"_index":1309,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:111",{"_index":1246,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:129",{"_index":1308,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:131",{"_index":1315,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:171",{"_index":1302,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:185",{"_index":1303,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:209",{"_index":1285,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:229",{"_index":1317,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:234",{"_index":1283,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:241",{"_index":1298,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:62",{"_index":1267,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:69",{"_index":1259,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:74",{"_index":1278,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:83",{"_index":1271,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:89",{"_index":1304,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/menuitem/menuitem.component.ts:96",{"_index":1313,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts",{"_index":1494,"title":{},"body":{"components/SidebarComponent.html":{},"coverage.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:19",{"_index":1500,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:36",{"_index":1524,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:37",{"_index":1523,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:44",{"_index":1517,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/sidebar/sidebar.component.ts:54",{"_index":1522,"title":{},"body":{"components/SidebarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts",{"_index":1621,"title":{},"body":{"components/TopbarComponent.html":{},"coverage.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:28",{"_index":1648,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:29",{"_index":1653,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:30",{"_index":1633,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:33",{"_index":1645,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:41",{"_index":1639,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:43",{"_index":1644,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:45",{"_index":1651,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:47",{"_index":1650,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:48",{"_index":1654,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:50",{"_index":1638,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:55",{"_index":1637,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:60",{"_index":1635,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/components/topbar/topbar.component.ts:64",{"_index":1636,"title":{},"body":{"components/TopbarComponent.html":{}}}],["src/app/features/home/home.component.ts",{"_index":895,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:122",{"_index":959,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:124",{"_index":961,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:125",{"_index":962,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:127",{"_index":964,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:129",{"_index":967,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:131",{"_index":960,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:132",{"_index":966,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:133",{"_index":965,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:135",{"_index":950,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:156",{"_index":949,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:178",{"_index":928,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:219",{"_index":941,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:233",{"_index":945,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:244",{"_index":920,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:255",{"_index":951,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:269",{"_index":970,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:45",{"_index":956,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:46",{"_index":919,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:51",{"_index":963,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:52",{"_index":968,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/environments/environment.development.ts",{"_index":1727,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.production.ts",{"_index":1728,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":1730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":1815,"title":{},"body":{"index.html":{}}}],["stand",{"_index":2003,"title":{},"body":{"license.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"index.html":{}}}],["standard",{"_index":1885,"title":{},"body":{"index.html":{},"license.html":{}}}],["standards",{"_index":2091,"title":{},"body":{"license.html":{}}}],["start",{"_index":2623,"title":{},"body":{"license.html":{}}}],["started",{"_index":1793,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":2636,"title":{},"body":{"license.html":{}}}],["state",{"_index":170,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["state.authstate",{"_index":2788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.credentials",{"_index":2790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.error",{"_index":2791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.forgotpassworderror",{"_index":2793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.organization",{"_index":2796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.organizationstate",{"_index":2797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.registrationerror",{"_index":2794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.resetpassworderror",{"_index":2795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.status",{"_index":2787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.token",{"_index":2789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.user",{"_index":2792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stated",{"_index":2138,"title":{},"body":{"license.html":{}}}],["statement",{"_index":2406,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1681,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":944,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["statestatus",{"_index":443,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/enumerations.html":{}}}],["statestatus.error",{"_index":466,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.loading",{"_index":457,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.pending",{"_index":453,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.success",{"_index":463,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["static",{"_index":135,"title":{},"body":{"interfaces/AppConfig.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenudesktopinactive",{"_index":172,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["staticmenumobileactive",{"_index":176,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["stating",{"_index":2207,"title":{},"body":{"license.html":{}}}],["status",{"_index":439,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["status.enum",{"_index":447,"title":{},"body":{"interfaces/AuthState.html":{},"interfaces/OrganizationState.html":{}}}],["status.enum.ts",{"_index":1772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["steps",{"_index":1959,"title":{},"body":{"license.html":{}}}],["stopwatch",{"_index":1560,"title":{},"body":{"components/SidebarComponent.html":{}}}],["storage",{"_index":213,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["storage.service",{"_index":379,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts",{"_index":1058,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:10",{"_index":1066,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:12",{"_index":1175,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:14",{"_index":1067,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:16",{"_index":1176,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:19",{"_index":1073,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:20",{"_index":1111,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:24",{"_index":1069,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:26",{"_index":1177,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:28",{"_index":1071,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:30",{"_index":1178,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:32",{"_index":1105,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:33",{"_index":1068,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:36",{"_index":1107,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:40",{"_index":1109,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:6",{"_index":1180,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:8",{"_index":1181,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:9",{"_index":1102,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["store",{"_index":717,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["store.dispatch(settoken(refreshresult",{"_index":2761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.dispatch(signout",{"_index":2766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":1837,"title":{},"body":{"index.html":{}}}],["string",{"_index":121,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["string(this.index",{"_index":1347,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["strings",{"_index":1510,"title":{},"body":{"components/SidebarComponent.html":{}}}],["style",{"_index":128,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["styles",{"_index":114,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["styleurls",{"_index":1232,"title":{},"body":{"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{}}}],["sub",{"_index":1269,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subdividing",{"_index":2454,"title":{},"body":{"license.html":{}}}],["subject",{"_index":166,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["sublicenses",{"_index":2486,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":2163,"title":{},"body":{"license.html":{}}}],["submenuanimation",{"_index":1242,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subprograms",{"_index":2126,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":2650,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":229,"title":{},"body":{"interfaces/AppConfig.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe((data",{"_index":772,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe((error",{"_index":784,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((issuccess",{"_index":872,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((organization",{"_index":780,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["subscribe((user",{"_index":858,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribes",{"_index":1247,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subscribing",{"_index":1200,"title":{},"body":{"injectables/MenuService.html":{}}}],["subscription",{"_index":736,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscriptions",{"_index":1300,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["subsection",{"_index":2274,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":2324,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":2001,"title":{},"body":{"license.html":{}}}],["success",{"_index":461,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/OrganizationState.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["successsubscription",{"_index":823,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":95,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["sue",{"_index":2499,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":2333,"title":{},"body":{"license.html":{}}}],["summary",{"_index":863,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["supplement",{"_index":2364,"title":{},"body":{"license.html":{}}}],["support",{"_index":2215,"title":{},"body":{"license.html":{}}}],["supports",{"_index":2281,"title":{},"body":{"license.html":{}}}],["sure",{"_index":1874,"title":{},"body":{"index.html":{},"license.html":{}}}],["surrender",{"_index":1944,"title":{},"body":{"license.html":{}}}],["survive",{"_index":2405,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":2599,"title":{},"body":{"license.html":{}}}],["switchmap",{"_index":343,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/OrganizationEffects.html":{}}}],["switchmap((request",{"_index":327,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/OrganizationEffects.html":{}}}],["symbol",{"_index":1260,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["system",{"_index":526,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{},"license.html":{}}}],["systematic",{"_index":1988,"title":{},"body":{"license.html":{}}}],["t",{"_index":1845,"title":{},"body":{"index.html":{}}}],["table",{"_index":1732,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1731,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":280,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["tailwind",{"_index":680,"title":{},"body":{"components/ConfigComponent.html":{}}}],["take",{"_index":1916,"title":{},"body":{"license.html":{}}}],["takes",{"_index":514,"title":{},"body":{"components/ConfigComponent.html":{},"components/SidebarComponent.html":{}}}],["tangible",{"_index":2304,"title":{},"body":{"license.html":{}}}],["tap",{"_index":370,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["target",{"_index":1291,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["team",{"_index":1787,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["teamurl",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technological",{"_index":2173,"title":{},"body":{"license.html":{}}}],["technologies",{"_index":1821,"title":{},"body":{"index.html":{}}}],["tells",{"_index":2079,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1186,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["term",{"_index":2136,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":2634,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":2410,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":2433,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":2419,"title":{},"body":{"license.html":{}}}],["termination",{"_index":2407,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1956,"title":{},"body":{"license.html":{}}}],["test",{"_index":1856,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1863,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1855,"title":{},"body":{"index.html":{}}}],["text",{"_index":934,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["theme",{"_index":98,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["themelink",{"_index":643,"title":{},"body":{"components/ConfigComponent.html":{}}}],["themelink.clonenode(true",{"_index":656,"title":{},"body":{"components/ConfigComponent.html":{}}}],["themelink.nextsibling",{"_index":661,"title":{},"body":{"components/ConfigComponent.html":{}}}],["themelink.parentnode!.insertbefore(clonelinkelement",{"_index":660,"title":{},"body":{"components/ConfigComponent.html":{}}}],["themelink.remove",{"_index":663,"title":{},"body":{"components/ConfigComponent.html":{}}}],["therefore",{"_index":1945,"title":{},"body":{"license.html":{}}}],["things",{"_index":1938,"title":{},"body":{"license.html":{}}}],["third",{"_index":2200,"title":{},"body":{"license.html":{}}}],["this.actions$.pipe",{"_index":325,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/OrganizationEffects.html":{}}}],["this.active",{"_index":1337,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.applyscale",{"_index":665,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.appsidebar.el.nativeelement.contains(event.target",{"_index":986,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.appsidebar.el.nativeelement.issamenode(event.target",{"_index":985,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.contains(event.target",{"_index":992,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menu.nativeelement.issamenode(event.target",{"_index":991,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.contains(event.target",{"_index":988,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.menubutton.nativeelement.issamenode",{"_index":987,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.contains",{"_index":994,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.apptopbar.topbarmenubutton.nativeelement.issamenode",{"_index":993,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.authservice",{"_index":328,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.forgotpassword(request.username).pipe",{"_index":349,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.me().pipe",{"_index":344,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.register(request).pipe",{"_index":358,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.resetpassword(request).pipe",{"_index":365,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.blockbodyscroll",{"_index":997,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.changeslugandcheckvalidity(data",{"_index":775,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.checkslug(data",{"_index":773,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.checkslug(slug",{"_index":799,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.checkusername(data",{"_index":854,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.config.menumode",{"_index":272,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.asobservable",{"_index":252,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.configupdate.next(this.config",{"_index":289,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.createbreadcrumbs(child",{"_index":1035,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createbreadcrumbs(this.route.root",{"_index":1003,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.createorganizationform.get('name')?.value",{"_index":791,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createorganizationform.get('slug')?.setvalue(slug",{"_index":798,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.createorganizationform.get('slug')?.value",{"_index":792,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.currentusererrorsubscription",{"_index":1004,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentusererrorsubscription?.unsubscribe",{"_index":1014,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data",{"_index":1188,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.data[key",{"_index":1189,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.document",{"_index":983,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist",{"_index":1040,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.add('blocked",{"_index":1041,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classlist.remove('blocked",{"_index":1043,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.body.classname",{"_index":1042,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.document.documentelement.style.fontsize",{"_index":666,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.document.getelementbyid('theme",{"_index":644,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.errorsubscription",{"_index":782,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errorsubscription?.unsubscribe",{"_index":790,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.forgotpasswordform.get('username')?.value",{"_index":882,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formbuilder.group",{"_index":733,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.hidemenu",{"_index":989,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.hideprofilemenu",{"_index":995,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.home",{"_index":1009,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.http.get",{"_index":1406,"title":{},"body":{"injectables/OrganizationService.html":{}}}],["this.http.get(api.authurl",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrganizationService.html":{}}}],["this.index",{"_index":1346,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.isdesktop",{"_index":258,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.isoverlay",{"_index":255,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.isslugtaken",{"_index":803,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.isusernametaken",{"_index":884,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.item",{"_index":1363,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.command",{"_index":1361,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.disabled",{"_index":1359,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.items",{"_index":1364,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.item.routerlink",{"_index":1343,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.items",{"_index":1002,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.jwtservice.clear",{"_index":371,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.saverefreshtoken(token.refreshtoken",{"_index":336,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.savetoken(token.accesstoken",{"_index":335,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.key",{"_index":1339,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.languages[0",{"_index":1658,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.layoutservice.config.colorscheme",{"_index":648,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.inputstyle",{"_index":638,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.menumode",{"_index":636,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.ripple",{"_index":640,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["this.layoutservice.config.scale",{"_index":634,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.config.theme",{"_index":650,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.onconfigupdate",{"_index":651,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.overlayopen$.subscribe",{"_index":980,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.showconfigsidebar",{"_index":642,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.configsidebarvisible",{"_index":632,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.layoutservice.state.menuhoveractive",{"_index":1037,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.overlaymenuactive",{"_index":1036,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.profilesidebarvisible",{"_index":1039,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenudesktopinactive",{"_index":1049,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.layoutservice.state.staticmenumobileactive",{"_index":996,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.loginform.get('password')?.value",{"_index":1161,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":1160,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.menuoutsideclicklistener",{"_index":981,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.menuresetsubscription",{"_index":1341,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuresetsubscription.unsubscribe",{"_index":1368,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.menusource$.subscribe",{"_index":1334,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.onmenustatechange",{"_index":1356,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menuservice.resetsource$.subscribe",{"_index":1342,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusource.asobservable",{"_index":1220,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusource.next(event",{"_index":1227,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.menusourcesubscription",{"_index":1333,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.menusourcesubscription.unsubscribe",{"_index":1367,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.messageservice.add",{"_index":861,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.model",{"_index":1528,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.model.push",{"_index":1530,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.organizationerrorsubscription",{"_index":1006,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.organizationerrorsubscription?.unsubscribe",{"_index":1015,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.organizationservice",{"_index":801,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.organizationservice.createorganization(request).pipe",{"_index":1382,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationservice.getorganization().pipe",{"_index":1388,"title":{},"body":{"injectables/OrganizationEffects.html":{}}}],["this.organizationsubscription",{"_index":777,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.organizationsubscription?.unsubscribe",{"_index":789,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.overlaymenuopensubscription",{"_index":979,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlaymenuopensubscription.unsubscribe",{"_index":1016,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.overlayopen.asobservable",{"_index":253,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.overlayopen.next(null",{"_index":257,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.parentkey",{"_index":1345,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.profilemenuoutsideclicklistener",{"_index":990,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.registerform.get('email')?.value",{"_index":1447,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('firstname')?.value",{"_index":1448,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('lastname')?.value",{"_index":1449,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('password')?.value",{"_index":1446,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('username')?.value",{"_index":1445,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.renderer.listen",{"_index":982,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.replacethemelink(newhref",{"_index":649,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.resetpasswordform.get('password')?.value",{"_index":1484,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetsource.asobservable",{"_index":1223,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.resetsource.next(true",{"_index":1228,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.root",{"_index":1365,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.events",{"_index":998,"title":{},"body":{"components/HomeComponent.html":{},"components/MenuitemComponent.html":{}}}],["this.router.isactive(this.item.routerlink[0",{"_index":1349,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":787,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":1441,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/create",{"_index":1008,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigate(['/home",{"_index":781,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/home/user",{"_index":1660,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.scale",{"_index":664,"title":{},"body":{"components/ConfigComponent.html":{}}}],["this.secret",{"_index":1482,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.selectedlanguage",{"_index":1657,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.setupsidenavitems(sidenav",{"_index":1529,"title":{},"body":{"components/SidebarComponent.html":{}}}],["this.slugchecksubscription",{"_index":800,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.slugchecksubscription?.unsubscribe",{"_index":788,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.state.configsidebarvisible",{"_index":264,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.overlaymenuactive",{"_index":256,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.profilesidebarvisible",{"_index":262,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenudesktopinactive",{"_index":259,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.state.staticmenumobileactive",{"_index":260,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["this.storage",{"_index":1120,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.clear",{"_index":1123,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(key",{"_index":1124,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(refresh_token_key",{"_index":1081,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.getitem(token_key",{"_index":1079,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.key(index",{"_index":1125,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.length",{"_index":1122,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(key",{"_index":1126,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(refresh_token_key",{"_index":1077,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.removeitem(token_key",{"_index":1076,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(key",{"_index":1127,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.setitem(refresh_token_key",{"_index":1080,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(token_key",{"_index":1078,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.store",{"_index":778,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch",{"_index":881,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(createorganization(dto",{"_index":793,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.store.dispatch(loadcurrentorganization",{"_index":776,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/HomeComponent.html":{}}}],["this.store.dispatch(loadcurrentuser",{"_index":855,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(registernewuser(dto",{"_index":1450,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.store.dispatch(signout",{"_index":1659,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.store.select(isloadingauthstate",{"_index":839,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(isloadingorganization",{"_index":738,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.store.select(selectcurrentorganization",{"_index":1649,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.store.select(selectcurrentuser",{"_index":958,"title":{},"body":{"components/HomeComponent.html":{},"components/TopbarComponent.html":{}}}],["this.store.select(selectorganizationerror).subscribe((error",{"_index":1007,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.successsubscription",{"_index":870,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.successsubscription?.unsubscribe",{"_index":876,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.toslugvalue(organizationname",{"_index":797,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["this.translateservice.instant",{"_index":864,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant('auth.reset",{"_index":1478,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.translateservice.stream('sidenav').subscribe",{"_index":1001,"title":{},"body":{"components/HomeComponent.html":{},"components/SidebarComponent.html":{}}}],["this.translateservice.use(language.value",{"_index":1661,"title":{},"body":{"components/TopbarComponent.html":{}}}],["this.unblockbodyscroll",{"_index":1038,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.updateactivestatefromroute",{"_index":1344,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["this.usernamechecksubscription",{"_index":883,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usernamechecksubscription?.unsubscribe",{"_index":877,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usersubscription",{"_index":856,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.usersubscription?.unsubscribe",{"_index":875,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["those",{"_index":1999,"title":{},"body":{"license.html":{}}}],["though",{"_index":2367,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":2010,"title":{},"body":{"license.html":{}}}],["three",{"_index":2262,"title":{},"body":{"license.html":{}}}],["through",{"_index":207,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"license.html":{}}}],["throwerror",{"_index":2769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thus",{"_index":2155,"title":{},"body":{"license.html":{}}}],["ticket",{"_index":1614,"title":{},"body":{"components/SidebarComponent.html":{}}}],["time",{"_index":2429,"title":{},"body":{"license.html":{}}}],["toastmodule",{"_index":695,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["todo",{"_index":210,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MemoryStorage.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":178,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["toggles",{"_index":254,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["toggling",{"_index":1288,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["token",{"_index":440,"title":{"interfaces/Token.html":{}},"body":{"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_key",{"_index":1074,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokendto",{"_index":417,"title":{"interfaces/TokenDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/TokenDto.html":{},"coverage.html":{}}}],["tools",{"_index":2119,"title":{},"body":{"license.html":{}}}],["topbar",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["topbar.component.html",{"_index":1624,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbar.component.scss",{"_index":1625,"title":{},"body":{"components/TopbarComponent.html":{}}}],["topbarcomponent",{"_index":77,"title":{"components/TopbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"coverage.html":{}}}],["topbarmenubutton",{"_index":1628,"title":{},"body":{"components/TopbarComponent.html":{}}}],["toslugvalue",{"_index":714,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["toslugvalue(slug",{"_index":731,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["track",{"_index":183,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{}}}],["trade",{"_index":2391,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":2390,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":2392,"title":{},"body":{"license.html":{}}}],["trail",{"_index":932,"title":{},"body":{"components/HomeComponent.html":{}}}],["transaction",{"_index":2339,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":2069,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":2341,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":2452,"title":{},"body":{"license.html":{}}}],["transition",{"_index":1320,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["translate",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["translate.addlangs(['en",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('en",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":1745,"title":{},"body":{"dependencies.html":{}}}],["translateloader",{"_index":2726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatemodule",{"_index":494,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TopbarComponent.html":{}}}],["translatemodule.forroot",{"_index":2724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateservice",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["translating",{"_index":1509,"title":{},"body":{"components/SidebarComponent.html":{}}}],["transmission",{"_index":2294,"title":{},"body":{"license.html":{}}}],["treated",{"_index":2366,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":2180,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["trigger",{"_index":1249,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["trigger('children",{"_index":1326,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["triggered",{"_index":1210,"title":{},"body":{"injectables/MenuService.html":{},"components/MenuitemComponent.html":{}}}],["troubleshooting",{"_index":1806,"title":{},"body":{"index.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1762,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":515,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["type",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppConfig.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"interfaces/CreateOrganizationRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"interfaces/MenuChangeEvent.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"injectables/OrganizationEffects.html":{},"injectables/OrganizationService.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":1672,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["type.enum.ts",{"_index":1770,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types",{"_index":653,"title":{},"body":{"components/ConfigComponent.html":{}}}],["typescript",{"_index":92,"title":{},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"interfaces/OrganizationState.html":{},"components/RegisterComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/variables.html":{}}}],["typical",{"_index":2318,"title":{},"body":{"license.html":{}}}],["typically",{"_index":581,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["ui",{"_index":146,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"index.html":{}}}],["unacceptable",{"_index":1996,"title":{},"body":{"license.html":{}}}],["unautherrorinterceptor",{"_index":1697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["unblock",{"_index":954,"title":{},"body":{"components/HomeComponent.html":{}}}],["unblockbodyscroll",{"_index":913,"title":{},"body":{"components/HomeComponent.html":{}}}],["undefined",{"_index":1028,"title":{},"body":{"components/HomeComponent.html":{},"interfaces/OrganizationState.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":2035,"title":{},"body":{"license.html":{}}}],["unique",{"_index":1264,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["uniquely",{"_index":1275,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["unit",{"_index":1854,"title":{},"body":{"index.html":{}}}],["unless",{"_index":2327,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":2141,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":2047,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":2167,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":2362,"title":{},"body":{"license.html":{}}}],["unsubscribe",{"_index":1310,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["unsubscribes",{"_index":1299,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["until",{"_index":2418,"title":{},"body":{"license.html":{}}}],["up",{"_index":1518,"title":{},"body":{"components/SidebarComponent.html":{}}}],["update",{"_index":559,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["updateactivestatefromroute",{"_index":1238,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["updated",{"_index":226,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["updatedat",{"_index":1374,"title":{},"body":{"interfaces/Organization.html":{},"interfaces/OrganizationDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["updates",{"_index":287,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["updating",{"_index":530,"title":{},"body":{"components/ConfigComponent.html":{},"components/MenuitemComponent.html":{}}}],["url",{"_index":585,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":1270,"title":{},"body":{"components/MenuitemComponent.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":107,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["usefactory",{"_index":2719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useful",{"_index":2628,"title":{},"body":{"license.html":{}}}],["user",{"_index":200,"title":{"interfaces/User.html":{}},"body":{"interfaces/AppConfig.html":{},"interfaces/AuthState.html":{},"components/ConfigComponent.html":{},"components/ForgotPasswordComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":1512,"title":{},"body":{"components/SidebarComponent.html":{}}}],["userdto",{"_index":421,"title":{"interfaces/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["userid",{"_index":1667,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username",{"_index":329,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username/taken",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernamecheckerror",{"_index":441,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["usernamechecksubscription",{"_index":824,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["usernameinput",{"_index":825,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["users",{"_index":1598,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["userservice",{"_index":1527,"title":{},"body":{"components/SidebarComponent.html":{}}}],["userstorageservice",{"_index":1514,"title":{},"body":{"components/SidebarComponent.html":{}}}],["usersubscription",{"_index":826,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uses",{"_index":2321,"title":{},"body":{"license.html":{}}}],["using",{"_index":230,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"components/SidebarComponent.html":{},"index.html":{},"license.html":{}}}],["utilizes",{"_index":1812,"title":{},"body":{"index.html":{}}}],["v1/auth",{"_index":2698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/device",{"_index":2692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/files",{"_index":2696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/invitation",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/members",{"_index":2694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/organization",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/platform",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/project",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/team",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/user",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":2261,"title":{},"body":{"license.html":{}}}],["validators",{"_index":749,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.email",{"_index":1431,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":837,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.pattern(securepasswordregex",{"_index":1430,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":734,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["value",{"_index":158,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/AuthEffects.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"injectables/OrganizationEffects.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.key",{"_index":1338,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.key.startswith(this.key",{"_index":1340,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["value.routeevent",{"_index":1336,"title":{},"body":{"components/MenuitemComponent.html":{}}}],["values",{"_index":125,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["var",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/FooterComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{}}}],["varaibles",{"_index":1887,"title":{},"body":{"index.html":{}}}],["variable",{"_index":249,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1875,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":103,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["verbatim",{"_index":1906,"title":{},"body":{"license.html":{}}}],["vercel/analytics",{"_index":1748,"title":{},"body":{"dependencies.html":{}}}],["vercel/speed",{"_index":1750,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":1811,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":1923,"title":{},"body":{"license.html":{}}}],["via",{"_index":1857,"title":{},"body":{"index.html":{}}}],["view",{"_index":1505,"title":{},"body":{"components/SidebarComponent.html":{},"license.html":{}}}],["viewchild",{"_index":748,"title":{},"body":{"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TopbarComponent.html":{}}}],["viewchild('menubutton",{"_index":1647,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('name",{"_index":743,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["viewchild('slug",{"_index":746,"title":{},"body":{"components/CreateOrganizationComponent.html":{}}}],["viewchild('topbarmenu",{"_index":1646,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('topbarmenubutton",{"_index":1652,"title":{},"body":{"components/TopbarComponent.html":{}}}],["viewchild('username",{"_index":844,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewchild(sidebarcomponent",{"_index":955,"title":{},"body":{"components/HomeComponent.html":{}}}],["viewchild(topbarcomponent",{"_index":957,"title":{},"body":{"components/HomeComponent.html":{}}}],["violates",{"_index":2356,"title":{},"body":{"license.html":{}}}],["violation",{"_index":2414,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":179,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["visible",{"_index":197,"title":{},"body":{"interfaces/AppConfig.html":{},"components/ConfigComponent.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["visible(_val",{"_index":633,"title":{},"body":{"components/ConfigComponent.html":{}}}],["void",{"_index":552,"title":{},"body":{"components/ConfigComponent.html":{},"components/CreateOrganizationComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LayoutService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/MenuService.html":{},"components/MenuitemComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"components/SidebarComponent.html":{},"components/TopbarComponent.html":{},"license.html":{}}}],["volume",{"_index":2238,"title":{},"body":{"license.html":{}}}],["w",{"_index":2638,"title":{},"body":{"license.html":{}}}],["waive",{"_index":2189,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":2611,"title":{},"body":{"license.html":{}}}],["want",{"_index":1935,"title":{},"body":{"license.html":{}}}],["warning",{"_index":2705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":2080,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1969,"title":{},"body":{"license.html":{}}}],["way",{"_index":1928,"title":{},"body":{"license.html":{}}}],["ways",{"_index":2251,"title":{},"body":{"license.html":{}}}],["web",{"_index":1501,"title":{},"body":{"components/SidebarComponent.html":{}}}],["webpage",{"_index":555,"title":{},"body":{"components/ConfigComponent.html":{},"components/HomeComponent.html":{}}}],["welcome",{"_index":2639,"title":{},"body":{"license.html":{}}}],["well",{"_index":532,"title":{},"body":{"components/ConfigComponent.html":{},"license.html":{}}}],["whatever",{"_index":2456,"title":{},"body":{"license.html":{}}}],["whether",{"_index":143,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"components/MenuitemComponent.html":{},"license.html":{}}}],["whole",{"_index":2099,"title":{},"body":{"license.html":{}}}],["whose",{"_index":2301,"title":{},"body":{"license.html":{}}}],["widely",{"_index":2095,"title":{},"body":{"license.html":{}}}],["width",{"_index":274,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window",{"_index":273,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{},"license.html":{}}}],["window.innerwidth",{"_index":284,"title":{},"body":{"interfaces/AppConfig.html":{},"injectables/LayoutService.html":{},"interfaces/LayoutState.html":{}}}],["window.localstorage",{"_index":1121,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["window.sessionstorage",{"_index":1493,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["window?.localstorage",{"_index":1119,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["wipo",{"_index":2179,"title":{},"body":{"license.html":{}}}],["wish",{"_index":1888,"title":{},"body":{"index.html":{},"license.html":{}}}],["withcomponentinputbinding",{"_index":2713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":2716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":1256,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["withinterceptors([authinterceptor",{"_index":2715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1296,"title":{},"body":{"components/MenuitemComponent.html":{},"license.html":{}}}],["withpreloading(preloadallmodules",{"_index":2712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":1926,"title":{},"body":{"license.html":{}}}],["work's",{"_index":2118,"title":{},"body":{"license.html":{}}}],["working",{"_index":2096,"title":{},"body":{"license.html":{}}}],["works",{"_index":1056,"title":{},"body":{"components/InvitationComponent.html":{},"license.html":{}}}],["worldwide",{"_index":2489,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":1515,"title":{},"body":{"components/SidebarComponent.html":{}}}],["wrench",{"_index":1608,"title":{},"body":{"components/SidebarComponent.html":{}}}],["writing",{"_index":2573,"title":{},"body":{"license.html":{}}}],["written",{"_index":2260,"title":{},"body":{"license.html":{}}}],["years",{"_index":2263,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":2506,"title":{},"body":{"license.html":{}}}],["z])(?=.*[${passwordspecialchars}])(?=\\\\s+$).{${passwordminlength",{"_index":2802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*[a",{"_index":2801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1764,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  constructor(private translate: TranslateService) {\n    translate.setDefaultLang('en');\n    translate.addLangs(['en']);\n    translate.use('en');\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppConfig.html":{"url":"interfaces/AppConfig.html","title":"interface - AppConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The above code is defining an interface named AppConfig in TypeScript. This interface has several\nproperties such as inputStyle, colorScheme, theme, ripple, menuMode, and scale. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe LayoutService class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colorScheme\n                                        \n                                \n                                \n                                        \n                                            inputStyle\n                                        \n                                \n                                \n                                        \n                                            menuMode\n                                        \n                                \n                                \n                                        \n                                            ripple\n                                        \n                                \n                                \n                                        \n                                            scale\n                                        \n                                \n                                \n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorScheme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorScheme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    colorScheme: string; is declaring a property named colorScheme of type string in the\nAppConfig interface. This property represents the color scheme of the layout and can have values\nsuch as 'light' or 'dark'. It is used in various functions of the LayoutService class to\ndetermine the current color scheme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputStyle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inputStyle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    inputStyle: string; is declaring a property named inputStyle of type string in the\nAppConfig interface. This property represents the style of the input elements in the layout and\ncan have values such as 'outlined' or 'filled'. It is used in various functions of the\nLayoutService class to determine the current input style of the layout and apply appropriate\nstyles.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuMode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuMode: string; is declaring a property named menuMode of type string in the AppConfig\ninterface. This property represents the mode of the menu and can have values such as 'static',\n'overlay', or 'horizontal'. It is used in various functions of the LayoutService class to\ndetermine the behavior of the menu based on the selected mode.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ripple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ripple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ripple: boolean; property in the AppConfig interface represents a configuration option for\nwhether or not to enable ripple effects on UI elements. If ripple is set to true, then UI\nelements such as buttons and links will have a ripple effect when clicked. If ripple is set to\nfalse, then no ripple effect will be applied.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    scale: number; is declaring a property named scale of type number in the AppConfig\ninterface. This property represents the scale of the layout and is used to adjust the size of\nvarious elements in the layout. The default value of scale is set to 14 in the config object\nof the LayoutService class.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    theme: string; is declaring a property named theme of type string in the AppConfig\ninterface. This property represents the theme of the layout and can have values such as\n'lara-light-blue', 'lara-dark-blue', or 'lara-green'. It is used in various functions of the\nLayoutService class to determine the current theme of the layout and apply appropriate styles.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.configUpdate.next(this.config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/app.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authState\n                                        \n                                \n                                \n                                        \n                                            organizationState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authState:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationState:         OrganizationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrganizationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthEffects } from './auth/auth.effects';\nimport { AuthState, authReducer } from './auth/auth.reducer';\nimport { OrganizationEffects } from './organization/organization.effects';\nimport { OrganizationState, organizationReducer } from './organization/organization.reducer';\n\nexport interface AppState {\n  authState: AuthState;\n  organizationState: OrganizationState\n}\n\nexport const appEfects = [AuthEffects, OrganizationEffects];\nexport const appStore = {\n  authState: authReducer,\n  organizationState: organizationReducer,\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n})\nexport class AuthComponent {}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate$\n                            \n                            \n                                authenticationSuccess$\n                            \n                            \n                                forgotPassword$\n                            \n                            \n                                loadCurrentUser$\n                            \n                            \n                                registerNewUser$\n                            \n                            \n                                registerNewUserSuccess$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signOut$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, jwtService: JwtService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/auth/auth.effects.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:106\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../../services/api/auth.api.service';\nimport { JwtService } from '../../services/token-storage.service';\nimport {\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  signOut,\n} from './auth.actions';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticate$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  );\n\n  forgotPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  resetPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  signOut$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  registerNewUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  registerNewUserSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/auth.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                me\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/auth.api.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: AuthenticateRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            AuthenticateRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n            \n                \nisUsernameTaken(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(dto: ResetPasswordRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ResetPasswordRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { api } from './api';\nimport { TokenDto } from '../../domain/dto/token.dto';\nimport { Observable } from 'rxjs';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { ResetPasswordRequestDto } from '../../domain/dto/requests/reset-password-request.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  refreshToken(refreshToken: string): Observable {\n    return this.http.post(\n      api.authUrl + '/refreshToken',\n      { refreshToken: refreshToken },\n      api.noAuthOptions\n    );\n  }\n\n  authenticate(request: AuthenticateRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/authenticate',\n      request,\n      api.noAuthOptions\n    );\n  }\n\n  me(): Observable {\n    return this.http.get(api.authUrl + '/me', api.authOptions);\n  }\n\n  isUsernameTaken(username: string): Observable {\n    const params = new HttpParams().set('username', username);\n    return this.http.get(api.authUrl + '/username/taken', {\n      ...api.noAuthOptions,\n      params,\n    });\n  }\n\n  forgotPassword(username: string): Observable {\n    return this.http.post(\n      api.authUrl + '/forgot-password',\n      { username: username },\n      api.noAuthOptions\n    );\n  }\n\n  resetPassword(dto: ResetPasswordRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/reset-password',\n      dto,\n      api.noAuthOptions\n    );\n  }\n\n  register(dto: RegisterRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/register',\n      dto,\n      api.noAuthOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            credentials\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            forgotPasswordError\n                                        \n                                \n                                \n                                        \n                                            isUsernameAvialable\n                                        \n                                \n                                \n                                        \n                                            registrationError\n                                        \n                                \n                                \n                                        \n                                            resetPasswordError\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            usernameCheckError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:         AuthenticateRequestDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticateRequestDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forgotPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUsernameAvialable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isUsernameAvialable:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         Token | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Token | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usernameCheckError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usernameCheckError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Token } from '../../domain/models/token.entity';\nimport { User } from '../../domain/models/user.entity';\nimport {\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  setCurrentUser,\n  setToken,\n  signOut,\n} from './auth.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface AuthState {\n  user: User | null;\n  error: any | null;\n  forgotPasswordError: null | any;\n  resetPasswordError: null | any;\n  registrationError: null | any;\n  usernameCheckError: null | any;\n  isUsernameAvialable: boolean | null;\n  token: Token | null;\n  credentials: AuthenticateRequestDto | null;\n  status: StateStatus;\n}\n\nexport const initialState: AuthState = {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n};\n\nexport const authReducer = createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, { error }) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Reset Password\n  on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, { error }) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Register new user\n  on(registerNewUser, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Register new user success\n  on(registerNewUserSuccess, (state) => ({\n    ...state,\n    registrationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Register new user failure\n  on(registerNewUserFailure, (state, { error }) => ({\n    ...state,\n    registrationError: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticateRequestDto.html":{"url":"interfaces/AuthenticateRequestDto.html","title":"interface - AuthenticateRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticateRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/authenticate-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticateRequestDto {\n    username: string,\n    password: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigComponent.html":{"url":"components/ConfigComponent.html","title":"component - ConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/config/config.component.ts\n\n\n\n    \n        Description\n    \n    \n        The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-config\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            SidebarModule\n                            RadioButtonModule\n                            TranslateModule\n                            InputSwitchModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n\n            \n                styleUrl\n                ./config.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    Public\n                                menuService\n                            \n                            \n                                scales\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyScale\n                            \n                            \n                                changeTheme\n                            \n                            \n                                decrementScale\n                            \n                            \n                                incrementScale\n                            \n                            \n                                onConfigButtonClick\n                            \n                            \n                                replaceThemeLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                minimal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    visible\n                                \n                                \n                                    scale\n                                \n                                \n                                    menuMode\n                                \n                                \n                                    inputStyle\n                                \n                                \n                                    ripple\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, menuService: MenuService, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes two parameters, a LayoutService and a MenuService.\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the\nMenuService class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n\n\n                                                        \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        minimal\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/config/config.component.ts:37\n                            \n                        \n                \n                    \n                        @Input() minimal: boolean = false; is a decorator that marks the minimal property as an input\nproperty, which means that it can be passed as a value from a parent component to this component.\nThe minimal property is of type boolean and is initialized to false by default. This\nproperty can be used in the component's template to conditionally render certain elements or apply\ndifferent styles based on its value.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyScale\n                        \n                    \n                \n            \n            \n                \napplyScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:175\n                        \n                    \n\n\n            \n                \n                        This function sets the font size of the HTML document to a specified scale.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeTheme\n                        \n                    \n                \n            \n            \n                \nchangeTheme(theme: string, colorScheme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:117\n                        \n                    \n\n\n            \n                \n                        This function changes the theme and color scheme of a webpage by replacing the theme link and\nupdating the layout service configuration.\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \na string representing the new theme to be applied.\n\n\n                                            \n                                        \n                                        \n                                                colorScheme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe colorScheme parameter is a string that represents the color\nscheme to be applied to the theme. It is used in conjunction with the theme parameter to\nupdate the theme of the application.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decrementScale\n                        \n                    \n                \n            \n            \n                \ndecrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:159\n                        \n                    \n\n\n            \n                \n                        This function decrements the scale property and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incrementScale\n                        \n                    \n                \n            \n            \n                \nincrementScale()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:167\n                        \n                    \n\n\n            \n                \n                        The function increments the scale property by 1 and applies the new scale value.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigButtonClick\n                        \n                    \n                \n            \n            \n                \nonConfigButtonClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:105\n                        \n                    \n\n\n            \n                \n                        This function shows the configuration sidebar when the config button is clicked.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceThemeLink\n                        \n                    \n                \n            \n            \n                \nreplaceThemeLink(href: string, onComplete: Function)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/config/config.component.ts:139\n                        \n                    \n\n\n            \n                \n                        This function replaces the href attribute of a link element with a new value and removes the\noriginal link element once the new one has loaded.\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                href\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA string representing the URL of the new theme CSS file to be loaded.\n\n\n                                            \n                                        \n                                        \n                                                onComplete\n                                            \n                                                            Function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nonComplete is a callback function that will be executed once\nthe new theme link has been loaded and applied. It is typically used to perform additional\nactions or update the UI after the theme has been changed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:57\n                        \n                    \n\n            \n                \n                    - The layoutService parameter is a dependency injection of\na service that provides functionality related to the layout of the application, such as managing\nthe theme, language, and other UI-related settings. It is likely used to control the overall\nlook and feel of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menuService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:58\n                        \n                    \n\n            \n                \n                    - The `menuService` parameter is an instance of the\n`MenuService` class, which is likely used to manage and manipulate the application's menu or\nnavigation system. It may contain methods for adding, removing, or updating menu items, as well\nas handling user interactions with the menu.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scales\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : [12, 13, 14, 15, 16]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/config/config.component.ts:43\n                        \n                    \n\n            \n                \n                    scales is an array of numbers that represents the available font sizes that can be applied to\nthe HTML document. The default values are [12, 13, 14, 15, 16]. These values are used in\nconjunction with the incrementScale() and decrementScale() methods to adjust the font size of\nthe document.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n\n                \n                    \n                        getvisible()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:62\n                                \n                            \n\n                \n                    \n                        setvisible(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        scale\n                    \n                \n\n                \n                    \n                        getscale()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:70\n                                \n                            \n\n                \n                    \n                        setscale(_val: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:74\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        menuMode\n                    \n                \n\n                \n                    \n                        getmenuMode()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:78\n                                \n                            \n\n                \n                    \n                        setmenuMode(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:82\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        inputStyle\n                    \n                \n\n                \n                    \n                        getinputStyle()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:86\n                                \n                            \n\n                \n                    \n                        setinputStyle(_val: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:90\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        ripple\n                    \n                \n\n                \n                    \n                        getripple()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:94\n                                \n                            \n\n                \n                    \n                        setripple(_val: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/config/config.component.ts:98\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _val\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport { Component, Inject, Input } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { RippleModule } from 'primeng/ripple';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule } from '@angular/forms';\n\n/** The ConfigComponent class is a TypeScript class that provides functionality related to the\nconfiguration of an application's layout and menu settings. */\n@Component({\n  selector: 'app-config',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    SidebarModule,\n    RadioButtonModule,\n    TranslateModule,\n    InputSwitchModule,\n    FormsModule\n  ],\n  styleUrl: './config.component.scss',\n  templateUrl: './config.component.html',\n})\nexport class ConfigComponent {\n  /** `@Input() minimal: boolean = false;` is a decorator that marks the `minimal` property as an input\n  property, which means that it can be passed as a value from a parent component to this component.\n  The `minimal` property is of type `boolean` and is initialized to `false` by default. This\n  property can be used in the component's template to conditionally render certain elements or apply\n  different styles based on its value. */\n  @Input() minimal: boolean = false;\n\n  /** `scales` is an array of numbers that represents the available font sizes that can be applied to\n  the HTML document. The default values are `[12, 13, 14, 15, 16]`. These values are used in\n  conjunction with the `incrementScale()` and `decrementScale()` methods to adjust the font size of\n  the document. */\n  scales: number[] = [12, 13, 14, 15, 16];\n\n  /**\n   * This is a constructor function that takes two parameters, a LayoutService and a MenuService.\n   * @param {LayoutService} layoutService - The layoutService parameter is a dependency injection of\n   * a service that provides functionality related to the layout of the application, such as managing\n   * the theme, language, and other UI-related settings. It is likely used to control the overall\n   * look and feel of the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the\n   * `MenuService` class, which is likely used to manage and manipulate the application's menu or\n   * navigation system. It may contain methods for adding, removing, or updating menu items, as well\n   * as handling user interactions with the menu.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public menuService: MenuService,\n    @Inject(DOCUMENT) private document: Document,\n  ) {}\n\n  get visible(): boolean {\n    return this.layoutService.state.configSidebarVisible;\n  }\n\n  set visible(_val: boolean) {\n    this.layoutService.state.configSidebarVisible = _val;\n  }\n\n  get scale(): number {\n    return this.layoutService.config.scale;\n  }\n\n  set scale(_val: number) {\n    this.layoutService.config.scale = _val;\n  }\n\n  get menuMode(): string {\n    return this.layoutService.config.menuMode;\n  }\n\n  set menuMode(_val: string) {\n    this.layoutService.config.menuMode = _val;\n  }\n\n  get inputStyle(): string {\n    return this.layoutService.config.inputStyle;\n  }\n\n  set inputStyle(_val: string) {\n    this.layoutService.config.inputStyle = _val;\n  }\n\n  get ripple(): boolean {\n    return this.layoutService.config.ripple;\n  }\n\n  set ripple(_val: boolean) {\n    this.layoutService.config.ripple = _val;\n  }\n\n  /**\n   * This function shows the configuration sidebar when the config button is clicked.\n   */\n  onConfigButtonClick() {\n    this.layoutService.showConfigSidebar();\n  }\n\n  /**\n   * This function changes the theme and color scheme of a webpage by replacing the theme link and\n   * updating the layout service configuration.\n   * @param {string} theme - a string representing the new theme to be applied.\n   * @param {string} colorScheme - The `colorScheme` parameter is a string that represents the color\n   * scheme to be applied to the theme. It is used in conjunction with the `theme` parameter to\n   * update the theme of the application.\n   */\n  changeTheme(theme: string, colorScheme: string) {\n    const themeLink = this.document.getElementById('theme-css');\n    const newHref = themeLink\n      .getAttribute('href')!\n      .replace(this.layoutService.config.theme, theme);\n    this.layoutService.config.colorScheme;\n    this.replaceThemeLink(newHref, () => {\n      this.layoutService.config.theme = theme;\n      this.layoutService.config.colorScheme = colorScheme;\n      this.layoutService.onConfigUpdate();\n    });\n  }\n\n  /**\n   * This function replaces the href attribute of a link element with a new value and removes the\n   * original link element once the new one has loaded.\n   * @param {string} href - A string representing the URL of the new theme CSS file to be loaded.\n   * @param {Function} onComplete - `onComplete` is a callback function that will be executed once\n   * the new theme link has been loaded and applied. It is typically used to perform additional\n   * actions or update the UI after the theme has been changed.\n   */\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  replaceThemeLink(href: string, onComplete: Function) {\n    const id = 'theme-css';\n    const themeLink = this.document.getElementById('theme-css');\n    const cloneLinkElement = themeLink.cloneNode(true);\n\n    cloneLinkElement.setAttribute('href', href);\n    cloneLinkElement.setAttribute('id', id + '-clone');\n\n    themeLink.parentNode!.insertBefore(cloneLinkElement, themeLink.nextSibling);\n\n    cloneLinkElement.addEventListener('load', () => {\n      themeLink.remove();\n      cloneLinkElement.setAttribute('id', id);\n      onComplete();\n    });\n  }\n\n  /**\n   * This function decrements the scale property and applies the new scale value.\n   */\n  decrementScale() {\n    this.scale--;\n    this.applyScale();\n  }\n\n  /**\n   * The function increments the scale property by 1 and applies the new scale value.\n   */\n  incrementScale() {\n    this.scale++;\n    this.applyScale();\n  }\n\n  /**\n   * This function sets the font size of the HTML document to a specified scale.\n   */\n  applyScale() {\n    this.document.documentElement.style.fontSize = this.scale + 'px';\n  }\n}\n\n    \n\n    \n        \n  \n\n\n\n  {{ \"config.scale\" | translate }}\n  \n    \n    \n      \n    \n    \n  \n\n  \n    {{ \"config.menu_type\" | translate }}\n    \n      \n      {{ \"config.static\" | translate }}\n    \n    \n      \n      {{ \"config.overlay\" | translate }}\n    \n  \n\n  \n    {{ \"config.input_style\" | translate }}\n    \n      \n        \n        {{\n          \"config.outlined\" | translate\n        }}\n      \n      \n        \n        {{\n          \"config.filled\" | translate\n        }}\n      \n    \n\n    {{ \"config.ripple_effect\" | translate }}\n    \n  \n\n  Bootstrap\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Material Design Compact\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  Tailwind\n  \n    \n      \n        \n      \n    \n  \n\n  Fluent UI\n  \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2022\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n  PrimeOne Design - 2021\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \"config.scale\" | translate }}                                {{ \"config.menu_type\" | translate }}                {{ \"config.static\" | translate }}                    {{ \"config.overlay\" | translate }}            {{ \"config.input_style\" | translate }}                          {{          \"config.outlined\" | translate        }}                            {{          \"config.filled\" | translate        }}              {{ \"config.ripple_effect\" | translate }}        Bootstrap                                                                                                                      Material Design                                                                                                                      Material Design Compact                                                                                                                      Tailwind                                  Fluent UI                                  PrimeOne Design - 2022                                                                                                                                                                                                                                      PrimeOne Design - 2021                                                                                                                                                                                                                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateOrganizationComponent.html":{"url":"components/CreateOrganizationComponent.html","title":"component - CreateOrganizationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateOrganizationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/create-organization/create-organization.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-create-organization\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ButtonModule\n                            RippleModule\n                            ToastModule\n                            InputTextModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./create-organization.component.html\n            \n\n\n\n            \n                styleUrl\n                ./create-organization.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganizationForm\n                            \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isSlugTaken\n                            \n                            \n                                    \n                                nameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                organizationSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                slugCheckSubscription\n                            \n                            \n                                    \n                                slugInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                changeSlugAndCheckValidity\n                            \n                            \n                                    Private\n                                checkSlug\n                            \n                            \n                                createOrganization\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toSlugValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService, store: Store, formBuilder: FormBuilder, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/create-organization/create-organization.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        changeSlugAndCheckValidity\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeSlugAndCheckValidity(organizationName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                organizationName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkSlug\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkSlug(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:126\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSlugValue\n                        \n                    \n                \n            \n            \n                \ntoSlugValue(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/create-organization/create-organization.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganizationForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    name: ['', [Validators.required]],\n    slug: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        nameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('name')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        organizationSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        slugCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        slugInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('slug')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/create-organization/create-organization.component.ts:64\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { RippleModule } from 'primeng/ripple';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { OrganizationService } from '../../core/services/api/organization.api.service';\nimport { AppState } from '../../core/state/app.state';\nimport {\n  createOrganization,\n  loadCurrentOrganization,\n} from '../../core/state/organization/organization.actions';\nimport { Store } from '@ngrx/store';\nimport {\n  isLoadingOrganization,\n  selectCurrentOrganization,\n  selectOrganizationError,\n} from '../../core/state/organization/organization.selectors';\nimport { CreateOrganizationRequestDto } from '../../core/domain/dto/requests/create-organization-request.dto';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-organization',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonModule,\n    RippleModule,\n    ToastModule,\n    InputTextModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './create-organization.component.html',\n  styleUrl: './create-organization.component.scss',\n})\nexport class CreateOrganizationComponent\n  implements AfterViewInit, OnInit, OnDestroy\n{\n  @ViewChild('slug') slugInput!: ElementRef;\n  @ViewChild('name') nameInput!: ElementRef;\n\n  constructor(\n    private organizationService: OrganizationService,\n    private store: Store,\n    private formBuilder: FormBuilder,\n    private router: Router,\n  ) {}\n\n  createOrganizationForm = this.formBuilder.group({\n    name: ['', [Validators.required]],\n    slug: ['', [Validators.required]],\n  });\n\n  isSlugTaken: boolean | null = null;\n  isLoading = this.store.select(isLoadingOrganization);\n\n  private slugCheckSubscription?: Subscription;\n  private organizationSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.slugInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkSlug(data));\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.nameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.changeSlugAndCheckValidity(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentOrganization());\n\n    this.organizationSubscription = this.store\n      .select(selectCurrentOrganization)\n      .subscribe((organization) => {\n        if (organization != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectOrganizationError)\n      .subscribe((error) => {\n        if (error && error.status == 401) {\n          this.router.navigate(['/auth']);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.slugCheckSubscription?.unsubscribe();\n    this.organizationSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n  }\n\n  createOrganization() {\n    const dto: CreateOrganizationRequestDto = {\n      name: this.createOrganizationForm.get('name')?.value ?? '',\n      slug: this.createOrganizationForm.get('slug')?.value ?? '',\n    };\n    this.store.dispatch(createOrganization(dto));\n  }\n\n  toSlugValue(slug: string): string {\n    const result = slug.toLowerCase().replaceAll(' ', '-');\n    console.log(result);\n    return result;\n  }\n\n  private changeSlugAndCheckValidity(organizationName: string) {\n    const slug = this.toSlugValue(organizationName);\n    this.createOrganizationForm.get('slug')?.setValue(slug);\n    this.checkSlug(slug);\n  }\n\n  private checkSlug(slug: string) {\n    this.slugCheckSubscription?.unsubscribe();\n    this.slugCheckSubscription = this.organizationService\n      .isSlugTaken(slug)\n      .subscribe({\n        next: (result) => {\n          this.isSlugTaken = result;\n        },\n        error: () => {\n          this.isSlugTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n        \n          \n            {{ \"create-organization.welcome_message\" | translate }}\n          \n          {{\n            \"create-organization.welcome_description\" | translate\n          }}\n        \n        \n          \n            {{ \"create-organization.name_label\" | translate }}\n            \n              \n              \n            \n            {{ \"create-organization.name_is_required\" | translate }}\n\n            {{ \"create-organization.slug_label\" | translate }}\n            \n              @if (isSlugTaken !== null && !isSlugTaken) {\n                \n              } @else {\n                \n              }\n              \n            \n            {{ \"create-organization.slug_is_required\" | translate }}\n\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{ \"create-organization.welcome_message\" | translate }}                    {{            \"create-organization.welcome_description\" | translate          }}                                      {{ \"create-organization.name_label\" | translate }}                                                                {{ \"create-organization.name_is_required\" | translate }}            {{ \"create-organization.slug_label\" | translate }}                          @if (isSlugTaken !== null && !isSlugTaken) {                              } @else {                              }                                      {{ \"create-organization.slug_is_required\" | translate }}                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateOrganizationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateOrganizationRequestDto.html":{"url":"interfaces/CreateOrganizationRequestDto.html","title":"interface - CreateOrganizationRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateOrganizationRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/create-organization-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CreateOrganizationRequestDto {\n  slug: string;\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/footer/footer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n  by\n  DRadman\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  by  DRadman'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputTextModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                forgotPasswordForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AppState } from '../../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router, RouterModule } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectForgotPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  forgotPassword,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputTextModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n})\nexport class ForgotPasswordComponent implements AfterViewInit, OnInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService\n  ) {}\n\n  forgotPasswordForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectForgotPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 404) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.user_does_not_exist'\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.error_description'\n              ),\n            });\n          }\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.forgot-password.success'\n            ),\n            detail: this.translateService.instant(\n              'auth.forgot-password.check_your_email'\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  // eslint-disable no-non-null-asserted-optional-chain\n  forgotPassword() {\n    this.store.dispatch(\n      forgotPassword({\n        username: this.forgotPasswordForm.get('username')?.value ?? '',\n      })\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.forgot-password.welcome_message\" | translate }}\n  \n  {{\n    \"auth.forgot-password.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n      \n      } @else if (isUsernameTaken) {\n      \n      } @else {\n      \n      }\n      \n    \n    {{ \"auth.forgot-password.username_is_required\" | translate }}\n    {{ \"auth.forgot-password.username_length\" | translate }}\n\n    \n      {{ \"auth.forgot-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.forgot-password.welcome_message\" | translate }}    {{    \"auth.forgot-password.welcome_description\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {            } @else if (isUsernameTaken) {            } @else {            }              {{ \"auth.forgot-password.username_is_required\" | translate }}    {{ \"auth.forgot-password.username_length\" | translate }}          {{ \"auth.forgot-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForgotPasswordRequestDto.html":{"url":"interfaces/ForgotPasswordRequestDto.html","title":"interface - ForgotPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForgotPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForgotPasswordRequestDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                SidebarComponent\n                                ConfigComponent\n                                FooterComponent\n                            BreadcrumbModule\n                                TopbarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                appSidebar\n                            \n                            \n                                    \n                                appTopbar\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Private\n                                    Optional\n                                currentUserErrorSubscription\n                            \n                            \n                                home\n                            \n                            \n                                items\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuOutsideClickListener\n                            \n                            \n                                    Private\n                                    Optional\n                                organizationErrorSubscription\n                            \n                            \n                                    Private\n                                overlayMenuOpenSubscription\n                            \n                            \n                                profileMenuOutsideClickListener\n                            \n                            \n                                    Public\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                blockBodyScroll\n                            \n                            \n                                    Private\n                                createBreadcrumbs\n                            \n                            \n                                hideMenu\n                            \n                            \n                                hideProfileMenu\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                unblockBodyScroll\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    containerClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, layoutService: LayoutService, renderer: Renderer2, document: Document, translateService: TranslateService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        blockBodyScroll\n                        \n                    \n                \n            \n            \n                \nblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:244\n                        \n                    \n\n\n            \n                \n                        This function adds a class to the body element of a webpage to block scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBreadcrumbs\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBreadcrumbs(route: ActivatedRoute, url: string, breadcrumbs: MenuItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:178\n                        \n                    \n\n\n            \n                \n                        This function creates breadcrumbs for a given route in a TypeScript application.\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRoute\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe current activated route in the Angular application.\n\n\n                                            \n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe current URL being constructed for the breadcrumb trail.\n\n\n                                            \n                                        \n                                        \n                                                breadcrumbs\n                                            \n                                                        MenuItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    []\n                                            \n\n                                            \n                                                    \nbreadcrumbs is an array of MenuItem objects that represent\nthe breadcrumb trail for a given route. Each MenuItem object has a label property that\nrepresents the text to display for the breadcrumb, and a url property that represents the URL\nfor the breadcrumb.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     MenuItem[]\n\n                        \n                            \n                                an array of MenuItem objects, which represent the breadcrumbs for a given route.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideMenu\n                        \n                    \n                \n            \n            \n                \nhideMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:219\n                        \n                    \n\n\n            \n                \n                        This function hides the menu and resets related layout service states.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideProfileMenu\n                        \n                    \n                \n            \n            \n                \nhideProfileMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:233\n                        \n                    \n\n\n            \n                \n                        This function hides the profile sidebar menu and removes the outside click listener.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unblockBodyScroll\n                        \n                    \n                \n            \n            \n                \nunblockBodyScroll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:255\n                        \n                    \n\n\n            \n                \n                        This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appSidebar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SidebarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(SidebarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        appTopbar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TopbarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(TopbarComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        currentUserErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:131\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        home\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:124\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        organizationErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayMenuOpenSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:132\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileMenuOutsideClickListener\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:129\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:52\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        containerClass\n                    \n                \n\n                \n                    \n                        getcontainerClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/home.component.ts:269\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { CommonModule, DOCUMENT } from '@angular/common';\nimport {\n  Component,\n  Inject,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\nimport { Subscription, filter } from 'rxjs';\nimport { LayoutService } from '../../core/services/layout.service';\nimport { AppState } from '../../core/state/app.state';\nimport { loadCurrentUser } from '../../core/state/auth/auth.actions';\nimport {\n  selectCurrentUser,\n  selectCurrentUserError,\n} from '../../core/state/auth/auth.selectors';\nimport { ConfigComponent } from './components/config/config.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { TopbarComponent } from './components/topbar/topbar.component';\nimport { loadCurrentOrganization } from '../../core/state/organization/organization.actions';\nimport { selectOrganizationError } from '../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [\n    CommonModule,\n    SidebarComponent,\n    ConfigComponent,\n    FooterComponent,\n    BreadcrumbModule,\n    TopbarComponent,\n  ],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  @ViewChild(SidebarComponent) appSidebar!: SidebarComponent;\n  @ViewChild(TopbarComponent) appTopbar!: TopbarComponent;\n\n  constructor(\n    private store: Store,\n    private router: Router,\n    public layoutService: LayoutService,\n    public renderer: Renderer2,\n    @Inject(DOCUMENT) private document: Document,\n    private translateService: TranslateService,\n    private route: ActivatedRoute,\n  ) {\n    this.overlayMenuOpenSubscription =\n      this.layoutService.overlayOpen$.subscribe(() => {\n        if (!this.menuOutsideClickListener) {\n          this.menuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appSidebar.el.nativeElement.isSameNode(event.target) ||\n                this.appSidebar.el.nativeElement.contains(event.target) ||\n                this.appTopbar.menuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.menuButton.nativeElement.contains(event.target)\n              );\n\n              if (isOutsideClicked) {\n                this.hideMenu();\n              }\n            },\n          );\n        }\n\n        if (!this.profileMenuOutsideClickListener) {\n          this.profileMenuOutsideClickListener = this.renderer.listen(\n            this.document,\n            'click',\n            (event) => {\n              const isOutsideClicked = !(\n                this.appTopbar.menu.nativeElement.isSameNode(event.target) ||\n                this.appTopbar.menu.nativeElement.contains(event.target) ||\n                this.appTopbar.topbarMenuButton.nativeElement.isSameNode(\n                  event.target,\n                ) ||\n                this.appTopbar.topbarMenuButton.nativeElement.contains(\n                  event.target,\n                )\n              );\n\n              if (isOutsideClicked) {\n                this.hideProfileMenu();\n              }\n            },\n          );\n        }\n\n        if (this.layoutService.state.staticMenuMobileActive) {\n          this.blockBodyScroll();\n        }\n      });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.hideMenu();\n        this.hideProfileMenu();\n\n        this.translateService.stream('sidenav').subscribe({\n          next: () => {\n            this.items = this.createBreadcrumbs(this.route.root) ?? [];\n          },\n        });\n      });\n  }\n\n  currentUser = this.store.select(selectCurrentUser);\n\n  home!: MenuItem;\n  items!: MenuItem[];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  menuOutsideClickListener: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  profileMenuOutsideClickListener: any;\n\n  private currentUserErrorSubscription?: Subscription;\n  private overlayMenuOpenSubscription: Subscription;\n  private organizationErrorSubscription?: Subscription;\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n    this.store.dispatch(loadCurrentOrganization());\n\n    this.currentUserErrorSubscription = this.store\n      .select(selectCurrentUserError)\n      .subscribe((error) => {\n        if (error && error != null) {\n          this.router.navigate(['/auth']);\n        }\n      });\n\n      this.organizationErrorSubscription = this.store.select(selectOrganizationError).subscribe((error => {\n        if (error && error != null) {\n          this.router.navigate(['/create-organization']);\n        }\n      }))\n\n    this.home = { icon: 'pi pi-home', routerLink: '/dashboard' };\n  }\n\n  ngOnDestroy() {\n    this.currentUserErrorSubscription?.unsubscribe();\n    this.organizationErrorSubscription?.unsubscribe();\n\n    if (this.overlayMenuOpenSubscription) {\n      this.overlayMenuOpenSubscription.unsubscribe();\n    }\n\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n    }\n  }\n  /**\n   * This function creates breadcrumbs for a given route in a TypeScript application.\n   * @param {ActivatedRoute} route - The current activated route in the Angular application.\n   * @param {string} [url] - The current URL being constructed for the breadcrumb trail.\n   * @param {MenuItem[]} breadcrumbs - `breadcrumbs` is an array of `MenuItem` objects that represent\n   * the breadcrumb trail for a given route. Each `MenuItem` object has a `label` property that\n   * represents the text to display for the breadcrumb, and a `url` property that represents the URL\n   * for the breadcrumb.\n   * @returns an array of MenuItem objects, which represent the breadcrumbs for a given route.\n   */\n  private createBreadcrumbs(\n    route: ActivatedRoute,\n    url: string = '',\n    breadcrumbs: MenuItem[] = [],\n  ): MenuItem[] {\n    const children: ActivatedRoute[] = route.children;\n\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n\n    for (const child of children) {\n      const routeURL: string = child.snapshot.url\n        .map((segment) => segment.path)\n        .join('/');\n      if (routeURL !== '') {\n        url += `/${routeURL}`;\n      }\n\n      const label = child.snapshot.data['breadcrumb'];\n      if (!(label === null || label === undefined)) {\n        const localizedLabel: string = this.translateService.instant(\n          'sidenav.' + label,\n        );\n        if (breadcrumbs.length == 0) {\n          breadcrumbs.push({ label: localizedLabel, url });\n        } else if (\n          breadcrumbs[breadcrumbs.length - 1].label !== localizedLabel\n        ) {\n          breadcrumbs.push({ label: localizedLabel, url });\n        }\n      }\n\n      return this.createBreadcrumbs(child, url, breadcrumbs);\n    }\n    return breadcrumbs;\n  }\n\n  /**\n   * This function hides the menu and resets related layout service states.\n   */\n  hideMenu() {\n    this.layoutService.state.overlayMenuActive = false;\n    this.layoutService.state.staticMenuMobileActive = false;\n    this.layoutService.state.menuHoverActive = false;\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n      this.menuOutsideClickListener = null;\n    }\n    this.unblockBodyScroll();\n  }\n\n  /**\n   * This function hides the profile sidebar menu and removes the outside click listener.\n   */\n  hideProfileMenu() {\n    this.layoutService.state.profileSidebarVisible = false;\n    if (this.profileMenuOutsideClickListener) {\n      this.profileMenuOutsideClickListener();\n      this.profileMenuOutsideClickListener = null;\n    }\n  }\n\n  /**\n   * This function adds a class to the body element of a webpage to block scrolling.\n   */\n  blockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.add('blocked-scroll');\n    } else {\n      this.document.body.className += ' blocked-scroll';\n    }\n  }\n\n  /**\n   * This function removes the 'blocked-scroll' class from the body element to unblock body scrolling.\n   */\n  unblockBodyScroll(): void {\n    if (this.document.body.classList) {\n      this.document.body.classList.remove('blocked-scroll');\n    } else {\n      this.document.body.className = document.body.className.replace(\n        new RegExp(\n          '(^|\\\\b)' + 'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)',\n          'gi',\n        ),\n        ' ',\n      );\n    }\n  }\n\n  get containerClass() {\n    return {\n      'layout-theme-light': this.layoutService.config.colorScheme === 'light',\n      'layout-theme-dark': this.layoutService.config.colorScheme === 'dark',\n      'layout-overlay': this.layoutService.config.menuMode === 'overlay',\n      'layout-static': this.layoutService.config.menuMode === 'static',\n      'layout-static-inactive':\n        this.layoutService.state.staticMenuDesktopInactive &&\n        this.layoutService.config.menuMode === 'static',\n      'layout-overlay-active': this.layoutService.state.overlayMenuActive,\n      'layout-mobile-active': this.layoutService.state.staticMenuMobileActive,\n      'p-input-filled': this.layoutService.config.inputStyle === 'filled',\n      'p-ripple-disabled': !this.layoutService.config.ripple,\n    };\n  }\n}\n\n    \n\n    \n        \n    \n    \n      \n    \n    \n      \n        \n          \n        \n        \n      \n      \n    \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitationComponent.html":{"url":"components/InvitationComponent.html","title":"component - InvitationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/invitation/invitation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-invitation\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./invitation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./invitation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-invitation',\n  standalone: true,\n  imports: [],\n  templateUrl: './invitation.component.html',\n  styleUrl: './invitation.component.scss'\n})\nexport class InvitationComponent {\n\n}\n\n    \n\n    \n        invitation works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'invitation works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/token-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getRefreshToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveRefreshToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/token-storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveRefreshToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { LocalStorage } from \"./local-storage.service\";\n\nconst TOKEN_KEY = 'auth-token';\nconst REFRESH_TOKEN_KEY = 'auth-refreshtoken';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class JwtService {\n\n  constructor(private storage: LocalStorage) {}\n\n  public clear(): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n  }\n\n  public saveToken(token: string): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return this.storage.getItem(TOKEN_KEY);\n  }\n\n  public saveRefreshToken(token: string): void {\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n   this.storage.setItem(REFRESH_TOKEN_KEY, token);\n  }\n\n  public getRefreshToken(): string | null {\n    return this.storage.getItem(REFRESH_TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LayoutService.html":{"url":"injectables/LayoutService.html","title":"injectable - LayoutService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LayoutService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The LayoutService class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                    Private\n                                configUpdate\n                            \n                            \n                                configUpdate$\n                            \n                            \n                                    Private\n                                overlayOpen\n                            \n                            \n                                overlayOpen$\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isDesktop\n                            \n                            \n                                isMobile\n                            \n                            \n                                isOverlay\n                            \n                            \n                                onConfigUpdate\n                            \n                            \n                                onMenuToggle\n                            \n                            \n                                showConfigSidebar\n                            \n                            \n                                showProfileSidebar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isDesktop\n                        \n                    \n                \n            \n            \n                \nisDesktop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:209\n                        \n                    \n\n\n            \n                \n                        This function checks if the current window width is greater than 991 pixels, indicating if the\nuser is on a desktop device.\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isDesktop() returns a boolean value true if the width of the window is\ngreater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\nOtherwise, it returns false, indicating that the device is a mobile or a tablet in portrait\nmode.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n            \n                \nisMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:218\n                        \n                    \n\n\n            \n                \n                        The function checks if the device is not a desktop and returns a boolean value.\nwill return true if the device is not a desktop and false if it is a desktop.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The isMobile() function is returning the opposite of the isDesktop() function. It\nwill return true if the device is not a desktop and false if it is a desktop.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOverlay\n                        \n                    \n                \n            \n            \n                \nisOverlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:197\n                        \n                    \n\n\n            \n                \n                        This function checks if the menu mode is set to 'overlay'.\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                The function isOverlay() is returning a boolean value that indicates whether the\nmenuMode property of the object's config property is equal to the string 'overlay'.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onConfigUpdate\n                        \n                    \n                \n            \n            \n                \nonConfigUpdate()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:225\n                        \n                    \n\n\n            \n                \n                        The function updates the configuration and emits the updated configuration through a subject.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuToggle\n                        \n                    \n                \n            \n            \n                \nonMenuToggle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:154\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a menu based on the device type.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfigSidebar\n                        \n                    \n                \n            \n            \n                \nshowConfigSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:188\n                        \n                    \n\n\n            \n                \n                        This function sets the state of the configSidebarVisible property to true.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showProfileSidebar\n                        \n                    \n                \n            \n            \n                \nshowProfileSidebar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/layout.service.ts:178\n                        \n                    \n\n\n            \n                \n                        The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\nvisible.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:98\n                        \n                    \n\n            \n                \n                    The config property is initializing an object of type AppConfig with default values for\nvarious configuration options. These options include ripple, inputStyle, menuMode,\ncolorScheme, theme, and scale. The = operator is assigning this object to the config\nproperty of the LayoutService class. This object represents the default configuration for the\nlayout.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        configUpdate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:128\n                        \n                    \n\n            \n                \n                    private configUpdate = new Subject(); is creating a new instance of the Subject\nclass from the rxjs library and assigning it to the configUpdate property of the\nLayoutService class. This Subject instance is used to emit events when the configuration is\nupdated. Other parts of the application can subscribe to these events using the configUpdate$\nobservable created from this Subject. The AppConfig type parameter in Subject\nindicates that the Subject can emit values of type AppConfig.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configUpdate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.configUpdate.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:143\n                        \n                    \n\n            \n                \n                    configUpdate$ is creating an observable from the configUpdate subject. This allows other parts\nof the application to subscribe to changes in the configUpdate subject and react accordingly.\nThe $ at the end of the variable name is a convention in RxJS to indicate that the variable is\nan observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:137\n                        \n                    \n\n            \n                \n                    private overlayOpen = new Subject(); is creating a new instance of the Subject class from\nthe rxjs library and assigning it to the overlayOpen property of the LayoutService class.\nThis Subject instance is used to emit events when the overlay menu is opened or closed. Other\nparts of the application can subscribe to these events using the overlayOpen$ observable created\nfrom this Subject. The any type parameter in Subject indicates that the Subject can\nemit values of any type.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overlayOpen$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.overlayOpen.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:149\n                        \n                    \n\n            \n                \n                    overlayOpen$ is creating an observable from the overlayOpen subject. This allows other parts\nof the application to subscribe to changes in the overlayOpen subject and react accordingly. The\n$ at the end of the variable name is a convention in RxJS to indicate that the variable is an\nobservable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutState\n\n                    \n                \n                \n                    \n                        Default value : {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/layout.service.ts:113\n                        \n                    \n\n            \n                \n                    state: LayoutState is declaring a property named state of type LayoutState. LayoutState is\nan interface that defines the shape of an object with boolean properties\nstaticMenuDesktopInactive, overlayMenuActive, profileSidebarVisible, configSidebarVisible,\nstaticMenuMobileActive, and menuHoverActive. The = operator is initializing the state\nproperty with an object that has all of these boolean properties set to false. This object\nrepresents the initial state of the layout.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.configUpdate.next(this.config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LayoutState.html":{"url":"interfaces/LayoutState.html","title":"interface - LayoutState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LayoutState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/layout.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The interface LayoutState is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as staticMenuDesktopInactive,\noverlayMenuActive, profileSidebarVisible, configSidebarVisible, staticMenuMobileActive, and\nmenuHoverActive. These properties are used in various functions of the LayoutService class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            configSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            menuHoverActive\n                                        \n                                \n                                \n                                        \n                                            overlayMenuActive\n                                        \n                                \n                                \n                                        \n                                            profileSidebarVisible\n                                        \n                                \n                                \n                                        \n                                            staticMenuDesktopInactive\n                                        \n                                \n                                \n                                        \n                                            staticMenuMobileActive\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        configSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        configSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    configSidebarVisible: boolean; is declaring a boolean property named configSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the configuration\nsidebar is currently visible or not. It is used in the showConfigSidebar() function to set the\nstate of the configSidebarVisible property to true when the configuration sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menuHoverActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menuHoverActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    menuHoverActive: boolean; is declaring a boolean property named menuHoverActive in the\nLayoutState interface. This property represents the state of whether the user is currently\nhovering over the menu.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overlayMenuActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overlayMenuActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    overlayMenuActive: boolean; is declaring a boolean property named overlayMenuActive in the\nLayoutState interface. This property represents the state of whether the overlay menu is\ncurrently active or not. It is used in the onMenuToggle() function to toggle the visibility of\nthe overlay menu and set the state of the overlayMenuActive property to true when the overlay\nmenu is shown. It is also used in the showProfileSidebar() function to close the overlay menu\nwhen the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileSidebarVisible\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileSidebarVisible:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    profileSidebarVisible: boolean; is declaring a boolean property named profileSidebarVisible in\nthe LayoutState interface. This property represents the state of whether the profile sidebar is\ncurrently visible or not. It is used in the showProfileSidebar() function to toggle the\nvisibility of the profile sidebar and set the state of the profileSidebarVisible property to\ntrue when the profile sidebar is shown.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuDesktopInactive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuDesktopInactive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuDesktopInactive: boolean; is declaring a boolean property named\nstaticMenuDesktopInactive in the LayoutState interface. This property represents the state of\nwhether the static menu is currently inactive on a desktop device. It is used in the\nonMenuToggle() function to toggle the visibility of the static menu and set the state of the\nstaticMenuDesktopInactive property to true when the static menu is hidden.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        staticMenuMobileActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        staticMenuMobileActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    staticMenuMobileActive: boolean; is declaring a boolean property named staticMenuMobileActive\nin the LayoutState interface. This property represents the state of whether the static menu is\ncurrently active on a mobile device.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n/** The above code is defining an interface named `AppConfig` in TypeScript. This interface has several\nproperties such as `inputStyle`, `colorScheme`, `theme`, `ripple`, `menuMode`, and `scale`. These\nproperties represent various configuration options for a layout and are used in various functions of\nthe `LayoutService` class to determine the current configuration of the layout and apply appropriate\nstyles. The comments above each property provide a description of what that property represents and\nhow it is used. */\nexport interface AppConfig {\n  /** `inputStyle: string;` is declaring a property named `inputStyle` of type `string` in the\n  `AppConfig` interface. This property represents the style of the input elements in the layout and\n  can have values such as `'outlined'` or `'filled'`. It is used in various functions of the\n  `LayoutService` class to determine the current input style of the layout and apply appropriate\n  styles. */\n  inputStyle: string;\n  /** `colorScheme: string;` is declaring a property named `colorScheme` of type `string` in the\n  `AppConfig` interface. This property represents the color scheme of the layout and can have values\n  such as `'light'` or `'dark'`. It is used in various functions of the `LayoutService` class to\n  determine the current color scheme of the layout and apply appropriate styles. */\n  colorScheme: string;\n  /** `theme: string;` is declaring a property named `theme` of type `string` in the `AppConfig`\n  interface. This property represents the theme of the layout and can have values such as\n  `'lara-light-blue'`, `'lara-dark-blue'`, or `'lara-green'`. It is used in various functions of the\n  `LayoutService` class to determine the current theme of the layout and apply appropriate styles. */\n  theme: string;\n  /** The `ripple: boolean;` property in the `AppConfig` interface represents a configuration option for\n  whether or not to enable ripple effects on UI elements. If `ripple` is set to `true`, then UI\n  elements such as buttons and links will have a ripple effect when clicked. If `ripple` is set to\n  `false`, then no ripple effect will be applied. */\n  ripple: boolean;\n  /** `menuMode: string;` is declaring a property named `menuMode` of type `string` in the `AppConfig`\n  interface. This property represents the mode of the menu and can have values such as `'static'`,\n  `'overlay'`, or `'horizontal'`. It is used in various functions of the `LayoutService` class to\n  determine the behavior of the menu based on the selected mode. */\n  menuMode: string;\n  /** `scale: number;` is declaring a property named `scale` of type `number` in the `AppConfig`\n  interface. This property represents the scale of the layout and is used to adjust the size of\n  various elements in the layout. The default value of `scale` is set to `14` in the `config` object\n  of the `LayoutService` class. */\n  scale: number;\n}\n\n/** The `interface LayoutState` is defining the shape of an object that represents the state of the\nlayout. It declares several boolean properties such as `staticMenuDesktopInactive`,\n`overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`, `staticMenuMobileActive`, and\n`menuHoverActive`. These properties are used in various functions of the `LayoutService` class to\ntoggle the visibility of menus and sidebars and to keep track of the current state of the layout.\nThe comments above each property provide a description of what the property represents and how it is\nused in the code. */\ninterface LayoutState {\n  /** `staticMenuDesktopInactive: boolean;` is declaring a boolean property named\n  `staticMenuDesktopInactive` in the `LayoutState` interface. This property represents the state of\n  whether the static menu is currently inactive on a desktop device. It is used in the\n  `onMenuToggle()` function to toggle the visibility of the static menu and set the state of the\n  `staticMenuDesktopInactive` property to `true` when the static menu is hidden. */\n  staticMenuDesktopInactive: boolean;\n  /** `overlayMenuActive: boolean;` is declaring a boolean property named `overlayMenuActive` in the\n  `LayoutState` interface. This property represents the state of whether the overlay menu is\n  currently active or not. It is used in the `onMenuToggle()` function to toggle the visibility of\n  the overlay menu and set the state of the `overlayMenuActive` property to `true` when the overlay\n  menu is shown. It is also used in the `showProfileSidebar()` function to close the overlay menu\n  when the profile sidebar is shown. */\n  overlayMenuActive: boolean;\n  /** `profileSidebarVisible: boolean;` is declaring a boolean property named `profileSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the profile sidebar is\n  currently visible or not. It is used in the `showProfileSidebar()` function to toggle the\n  visibility of the profile sidebar and set the state of the `profileSidebarVisible` property to\n  `true` when the profile sidebar is shown. */\n  profileSidebarVisible: boolean;\n  /** `configSidebarVisible: boolean;` is declaring a boolean property named `configSidebarVisible` in\n  the `LayoutState` interface. This property represents the state of whether the configuration\n  sidebar is currently visible or not. It is used in the `showConfigSidebar()` function to set the\n  state of the `configSidebarVisible` property to `true` when the configuration sidebar is shown. */\n  configSidebarVisible: boolean;\n  /** `staticMenuMobileActive: boolean;` is declaring a boolean property named `staticMenuMobileActive`\n  in the `LayoutState` interface. This property represents the state of whether the static menu is\n  currently active on a mobile device. */\n  staticMenuMobileActive: boolean;\n  /** `menuHoverActive: boolean;` is declaring a boolean property named `menuHoverActive` in the\n  `LayoutState` interface. This property represents the state of whether the user is currently\n  hovering over the menu. */\n  menuHoverActive: boolean;\n}\n\n/** The `LayoutService` class in TypeScript defines the default configuration and state of a layout,\nprovides functions to toggle menu and sidebar visibility, and emits events through observables. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LayoutService {\n  //TODO: Move config to local storage\n  /** The `config` property is initializing an object of type `AppConfig` with default values for\n  various configuration options. These options include `ripple`, `inputStyle`, `menuMode`,\n  `colorScheme`, `theme`, and `scale`. The `=` operator is assigning this object to the `config`\n  property of the `LayoutService` class. This object represents the default configuration for the\n  layout. */\n  config: AppConfig = {\n    ripple: false,\n    inputStyle: 'outlined',\n    menuMode: 'static',\n    colorScheme: 'light',\n    theme: 'lara-light-blue',\n    scale: 14,\n  };\n\n  /** `state: LayoutState` is declaring a property named `state` of type `LayoutState`. `LayoutState` is\n  an interface that defines the shape of an object with boolean properties\n  `staticMenuDesktopInactive`, `overlayMenuActive`, `profileSidebarVisible`, `configSidebarVisible`,\n  `staticMenuMobileActive`, and `menuHoverActive`. The `=` operator is initializing the `state`\n  property with an object that has all of these boolean properties set to `false`. This object\n  represents the initial state of the layout. */\n  state: LayoutState = {\n    staticMenuDesktopInactive: false,\n    overlayMenuActive: false,\n    profileSidebarVisible: false,\n    configSidebarVisible: false,\n    staticMenuMobileActive: false,\n    menuHoverActive: false,\n  };\n\n  /** `private configUpdate = new Subject();` is creating a new instance of the `Subject`\n  class from the `rxjs` library and assigning it to the `configUpdate` property of the\n  `LayoutService` class. This `Subject` instance is used to emit events when the configuration is\n  updated. Other parts of the application can subscribe to these events using the `configUpdate$`\n  observable created from this `Subject`. The `AppConfig` type parameter in `Subject`\n  indicates that the `Subject` can emit values of type `AppConfig`. */\n  private configUpdate = new Subject();\n\n  /** `private overlayOpen = new Subject();` is creating a new instance of the `Subject` class from\n  the `rxjs` library and assigning it to the `overlayOpen` property of the `LayoutService` class.\n  This `Subject` instance is used to emit events when the overlay menu is opened or closed. Other\n  parts of the application can subscribe to these events using the `overlayOpen$` observable created\n  from this `Subject`. The `any` type parameter in `Subject` indicates that the `Subject` can\n  emit values of any type. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private overlayOpen = new Subject();\n\n  /** `configUpdate$` is creating an observable from the `configUpdate` subject. This allows other parts\n  of the application to subscribe to changes in the `configUpdate` subject and react accordingly.\n  The `$` at the end of the variable name is a convention in RxJS to indicate that the variable is\n  an observable. */\n  configUpdate$ = this.configUpdate.asObservable();\n\n  /** `overlayOpen$` is creating an observable from the `overlayOpen` subject. This allows other parts\n  of the application to subscribe to changes in the `overlayOpen` subject and react accordingly. The\n  `$` at the end of the variable name is a convention in RxJS to indicate that the variable is an\n  observable. */\n  overlayOpen$ = this.overlayOpen.asObservable();\n\n  /**\n   * The function toggles the visibility of a menu based on the device type.\n   */\n  onMenuToggle() {\n    if (this.isOverlay()) {\n      this.state.overlayMenuActive = !this.state.overlayMenuActive;\n      if (this.state.overlayMenuActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n\n    if (this.isDesktop()) {\n      this.state.staticMenuDesktopInactive =\n        !this.state.staticMenuDesktopInactive;\n    } else {\n      this.state.staticMenuMobileActive = !this.state.staticMenuMobileActive;\n\n      if (this.state.staticMenuMobileActive) {\n        this.overlayOpen.next(null);\n      }\n    }\n  }\n\n  /**\n   * The function toggles the visibility of a profile sidebar and opens an overlay if the sidebar is\n   * visible.\n   */\n  showProfileSidebar() {\n    this.state.profileSidebarVisible = !this.state.profileSidebarVisible;\n    if (this.state.profileSidebarVisible) {\n      this.overlayOpen.next(null);\n    }\n  }\n\n  /**\n   * This function sets the state of the configSidebarVisible property to true.\n   */\n  showConfigSidebar() {\n    this.state.configSidebarVisible = true;\n  }\n\n  /**\n   * This function checks if the menu mode is set to 'overlay'.\n   * @returns The function `isOverlay()` is returning a boolean value that indicates whether the\n   * `menuMode` property of the object's `config` property is equal to the string `'overlay'`.\n   */\n  isOverlay() {\n    return this.config.menuMode === 'overlay';\n  }\n\n  /**\n   * This function checks if the current window width is greater than 991 pixels, indicating if the\n   * user is on a desktop device.\n   * @returns The function `isDesktop()` returns a boolean value `true` if the width of the window is\n   * greater than 991 pixels, indicating that the device is a desktop or a tablet in landscape mode.\n   * Otherwise, it returns `false`, indicating that the device is a mobile or a tablet in portrait\n   * mode.\n   */\n  isDesktop() {\n    return window.innerWidth > 991;\n  }\n\n  /**\n   * The function checks if the device is not a desktop and returns a boolean value.\n   * @returns The `isMobile()` function is returning the opposite of the `isDesktop()` function. It\n   * will return `true` if the device is not a desktop and `false` if it is a desktop.\n   */\n  isMobile() {\n    return !this.isDesktop();\n  }\n\n  /**\n   * The function updates the configuration and emits the updated configuration through a subject.\n   */\n  onConfigUpdate() {\n    this.configUpdate.next(this.config);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorage.html":{"url":"injectables/LocalStorage.html","title":"injectable - LocalStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/local-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.localStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                getApplicationName\n                            \n                            \n                                isRegistrationEnabled\n                            \n                            \n                                login\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApplicationName\n                        \n                    \n                \n            \n            \n                \ngetApplicationName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRegistrationEnabled\n                        \n                    \n                \n            \n            \n                \nisRegistrationEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  authenticate,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectAuthorizationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  loginForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAuthorizationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.login.authorization_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.login.wrong_username_or_password',\n            ),\n          });\n        }\n      });\n  }\n\n  login() {\n    this.store.dispatch(\n      authenticate({\n        username: this.loginForm.get('username')?.value ?? '',\n        password: this.loginForm.get('password')?.value ?? '',\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  getApplicationName() {\n    return environment.appName;\n  }\n\n  isRegistrationEnabled() {\n    return environment.enableRegistration;\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},\n  \n  {{\n    \"auth.login.sign_in_to_continue\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n        \n        } @else if (isUsernameTaken) {\n        \n        } @else {\n        \n        }\n      \n    \n    {{ \"auth.login.username_is_required\" | translate }}\n    {{ \"auth.login.username_length\" | translate }}\n\n    {{ \"auth.login.password_label\" | translate }}\n    \n    {{ \"auth.login.password_is_required\" | translate }}\n    {{ \"auth.login.password_length\" | translate }}\n\n    \n      {{ \"auth.login.forgot_password\" | translate }}\n      {{ \"auth.login.register\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},    {{    \"auth.login.sign_in_to_continue\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {                } @else if (isUsernameTaken) {                } @else {                }              {{ \"auth.login.username_is_required\" | translate }}    {{ \"auth.login.username_length\" | translate }}    {{ \"auth.login.password_label\" | translate }}        {{ \"auth.login.password_is_required\" | translate }}    {{ \"auth.login.password_length\" | translate }}          {{ \"auth.login.forgot_password\" | translate }}      {{ \"auth.login.register\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/memory-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/memory-storage.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/memory-storage.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n//TODO: Implement better server storage alongside server temp memory storage\n@Injectable()\nexport class MemoryStorage implements Storage {\n  private data: { [key: string]: string } = {};\n\n  get length(): number {\n    return Object.keys(this.data).length;\n  }\n\n  clear(): void {\n    this.data = {};\n  }\n\n  getItem(key: string): string | null {\n    return key in this.data ? this.data[key] : null;\n  }\n\n  key(index: number): string | null {\n    const keys = Object.keys(this.data);\n\n    return index >= 0 && keys.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuChangeEvent.html":{"url":"interfaces/MenuChangeEvent.html","title":"interface - MenuChangeEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuChangeEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/menu-change-event.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            routeEvent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeEvent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeEvent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MenuChangeEvent {\n  key: string;\n  routeEvent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/menu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                menuSource\n                            \n                            \n                                menuSource$\n                            \n                            \n                                    Private\n                                resetSource\n                            \n                            \n                                resetSource$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onMenuStateChange\n                            \n                            \n                                reset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onMenuStateChange\n                        \n                    \n                \n            \n            \n                \nonMenuStateChange(event: MenuChangeEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:40\n                        \n                    \n\n\n            \n                \n                        The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            MenuChangeEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMenuChangeEvent is a custom event type that is triggered when\nthe state of a menu changes. It contains information about the menu that triggered the event,\nsuch as its current state (open or closed) and any additional data that may be relevant to the\nevent. In this code snippet, the event is being\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/menu.service.ts:47\n                        \n                    \n\n\n            \n                \n                        The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        menuSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:16\n                        \n                    \n\n            \n                \n                    private menuSource = new Subject(); is creating a new instance of the\nSubject class and assigning it to the menuSource variable. This Subject will be used to\nemit MenuChangeEvent objects when the onMenuStateChange() function is called in the\nMenuService. Other components or services can subscribe to the menuSource$ observable to\nreceive notifications when the onMenuStateChange() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.menuSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:27\n                        \n                    \n\n            \n                \n                    menuSource$ is creating an observable from the menuSource subject. This allows other\ncomponents or services to subscribe to the menuSource$ observable and receive notifications\nwhen the onMenuStateChange() function is called in the MenuService.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resetSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:22\n                        \n                    \n\n            \n                \n                    private resetSource = new Subject(); is creating a new instance of the Subject class and\nassigning it to the resetSource variable. This Subject will be used to emit a boolean value\nof true when the reset() function is called in the MenuService. Other components or\nservices can subscribe to the resetSource$ observable to receive notifications when the\nreset() function is called.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetSource$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.resetSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/menu.service.ts:31\n                        \n                    \n\n            \n                \n                    resetSource$ is creating an observable from the resetSource subject. This allows other\ncomponents or services to subscribe to the resetSource$ observable and receive notifications\nwhen the reset() function is called in the MenuService.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { MenuChangeEvent } from '../domain/models/menu-change-event.model';\n\n/** The MenuService class provides functionality for emitting and subscribing to custom events related\nto menu state changes. */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MenuService {\n  /** `private menuSource = new Subject();` is creating a new instance of the\n    `Subject` class and assigning it to the `menuSource` variable. This `Subject` will be used to\n    emit `MenuChangeEvent` objects when the `onMenuStateChange()` function is called in the\n    `MenuService`. Other components or services can subscribe to the `menuSource$` observable to\n    receive notifications when the `onMenuStateChange()` function is called. */\n  private menuSource = new Subject();\n  /** `private resetSource = new Subject();` is creating a new instance of the `Subject` class and\n    assigning it to the `resetSource` variable. This `Subject` will be used to emit a boolean value\n    of `true` when the `reset()` function is called in the `MenuService`. Other components or\n    services can subscribe to the `resetSource$` observable to receive notifications when the\n    `reset()` function is called. */\n  private resetSource = new Subject();\n\n  /** `menuSource$` is creating an observable from the `menuSource` subject. This allows other\n    components or services to subscribe to the `menuSource$` observable and receive notifications\n    when the `onMenuStateChange()` function is called in the `MenuService`. */\n  menuSource$ = this.menuSource.asObservable();\n  /** `resetSource$` is creating an observable from the `resetSource` subject. This allows other\n    components or services to subscribe to the `resetSource$` observable and receive notifications\n    when the `reset()` function is called in the `MenuService`. */\n  resetSource$ = this.resetSource.asObservable();\n\n  /**\n   * The function onMenuStateChange sends a MenuChangeEvent to the menuSource.\n   * @param {MenuChangeEvent} event - MenuChangeEvent is a custom event type that is triggered when\n   * the state of a menu changes. It contains information about the menu that triggered the event,\n   * such as its current state (open or closed) and any additional data that may be relevant to the\n   * event. In this code snippet, the event is being\n   */\n  onMenuStateChange(event: MenuChangeEvent) {\n    this.menuSource.next(event);\n  }\n\n  /**\n   * The function \"reset()\" sends a boolean value of \"true\" through a subject called \"resetSource\".\n   */\n  reset() {\n    this.resetSource.next(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuitemComponent.html":{"url":"components/MenuitemComponent.html","title":"component - MenuitemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuitemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/menuitem/menuitem.component.ts\n\n\n\n    \n        Description\n    \n    \n        The MenuitemComponent class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                [app-menuitem]\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            TranslateModule\n                            CommonModule\n                            RippleModule\n                            RouterModule\n                \n            \n\n            \n                styleUrls\n                ./menuitem.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menuitem.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                key\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                menuResetSubscription\n                            \n                            \n                                menuSourceSubscription\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemClick\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateActiveStateFromRoute\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                index\n                            \n                            \n                                item\n                            \n                            \n                                parentKey\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.active-menuitem\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    submenuAnimation\n                                \n                                \n                                    activeClass\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, cd: ChangeDetectorRef, router: Router, menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                            \n                        \n\n                \n                    \n                            This is a constructor function that subscribes to menu and router events to update the active\nstate of a menu item based on the current route.\nused to manage the layout of the application.\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\nAngular. It is used to handle navigation and routing within the application.\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n\n\n                                                        \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe \"cd\" parameter is an instance of the ChangeDetectorRef class,\nwhich is used to manually trigger change detection in Angular. It is typically used when making\nchanges to the component's state that may not be detected by Angular's default change detection\nmechanism.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe router parameter is an instance of the Router service provided by\nAngular. It is used to handle navigation and routing within the application.\n\n\n                                                        \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe menuService parameter is an instance of the MenuService\nclass, which is used to manage the application menu. It is injected into the constructor using\nAngular's dependency injection mechanism.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:69\n                            \n                        \n                \n                    \n                        @Input() index!: number; is defining an input property called index of type number. The !\nsymbol after the index variable indicates that it is non-null and initialized in the constructor\nor ngOnInit method. This input property is used to pass the index of the current menu item to the\nMenuitemComponent class. The index is used to construct the unique identifier of the menu item\nand to determine the order of the menu items in the menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:62\n                            \n                        \n                \n                    \n                        @Input() item: any; is defining an input property called item of type any. This input\nproperty is used to pass a menu item object to the MenuitemComponent class. The item object\ncontains information about the menu item, such as its label, icon, command, and sub-items. By\ndefining this input property, the MenuitemComponent class can receive the item object from its\nparent component and use it to render the menu item in the application menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parentKey\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:83\n                            \n                        \n                \n                    \n                        @Input() parentKey!: string; is declaring an input property called parentKey of type string.\nThis input property is used to pass the unique identifier of the parent menu item to the child\nmenu items. If a menu item has a parent, its key property is set to a value that includes the\nparent key and the index of the item, separated by a hyphen. This allows the MenuitemComponent\nclass to uniquely identify each menu item in the application menu. The parentKey input property\nis used to pass the parent key to the child menu items so that they can construct their own unique\nidentifiers based on the parent key and their own index.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:74\n                            \n                        \n                \n                    \n                        The @Input() @HostBinding('class.layout-root-menuitem') root!: boolean; decorator is defining an\ninput property called root of type boolean and also binding the class.layout-root-menuitem\nCSS class to the host element of the component.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class.active-menuitem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemClick\n                        \n                    \n                \n            \n            \n                \nitemClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:209\n                        \n                    \n\n\n            \n                \n                        This function handles the click event on a menu item, executing its command and toggling its\nactive state if it has sub-items.\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event parameter is an object that represents the event that triggered\nthe itemClick function. It contains information such as the type of event (e.g. click, hover), the\ntarget element that triggered the event, and any additional data related to the event.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                If the item is disabled, the function will return without executing any further code. If\nthe item is not disabled, the function will execute the command associated with the item (if there\nis one), toggle the active state if the item has sub-items, and call the onMenuStateChange\nmethod of the menuService. However, the function does not explicitly return any value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:241\n                        \n                    \n\n\n            \n                \n                        The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:171\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets the key and updates the active state from the route if the item has a\nrouterLink.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateActiveStateFromRoute\n                        \n                    \n                \n            \n            \n                \nupdateActiveStateFromRoute()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/menuitem/menuitem.component.ts:185\n                        \n                    \n\n\n            \n                \n                        This function updates the active state of a menu item based on the current route in a TypeScript\napplication.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:89\n                        \n                    \n\n            \n                \n                    active = false; is initializing the active property of the MenuitemComponent class to\nfalse. This property is used to track whether or not a menu item is currently active (i.e.\nselected or expanded). By default, when a new instance of the MenuitemComponent class is\ncreated, no menu item is active, so the active property is set to false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:111\n                        \n                    \n\n            \n                \n                    key: string = \"\"; is declaring a property called key with an initial value of an empty string.\nThis property is used to uniquely identify each menu item in the application menu. It is set to a\nvalue that includes the parent key and the index of the item, separated by a hyphen, if the item\nhas a parent. Otherwise, it is set to the index of the item as a string. This property is used to\nupdate the active state of a menu item based on the current route and to toggle the active state\nof a menu item if it has sub-items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:129\n                        \n                    \n\n            \n                \n                    - An instance of the LayoutService class, which is likely\nused to manage the layout of the application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuResetSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:103\n                        \n                    \n\n            \n                \n                    menuResetSubscription: Subscription; is declaring a property called menuResetSubscription of\ntype Subscription. This property is used to store a subscription to the resetSource$\nobservable of the MenuService class. This subscription is used to reset the active state of a\nmenu item when the menu is closed or reset. The unsubscribe() method is called on this\nsubscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuSourceSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:96\n                        \n                    \n\n            \n                \n                    menuSourceSubscription: Subscription; is declaring a property called menuSourceSubscription of\ntype Subscription. This property is used to store a subscription to the menuSource$ observable\nof the MenuService class. This subscription is used to update the active state of a menu item\nbased on events emitted by the menuSource$ observable. The unsubscribe() method is called on\nthis subscription in the ngOnDestroy() method to prevent memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/menuitem/menuitem.component.ts:131\n                        \n                    \n\n            \n                \n                    - The `router` parameter is an instance of the `Router` service provided by\nAngular. It is used to handle navigation and routing within the application.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        submenuAnimation\n                    \n                \n\n                \n                    \n                        getsubmenuAnimation()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:229\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        activeClass\n                    \n                \n\n                \n                    \n                        getactiveClass()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/home/components/menuitem/menuitem.component.ts:234\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Component,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RippleModule } from 'primeng/ripple';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuService } from '../../../../core/services/menu.service';\n\n/** The `MenuitemComponent` class is used to render a menu item in an Angular application and handle\nevents such as clicking and updating the active state based on the current route. */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: '[app-menuitem]',\n  templateUrl: './menuitem.component.html',\n  styleUrls: ['./menuitem.component.scss'],\n  standalone: true,\n  imports: [TranslateModule, CommonModule, RippleModule, RouterModule],\n  animations: [\n    trigger('children', [\n      state(\n        'collapsed',\n        style({\n          height: '0',\n        }),\n      ),\n      state(\n        'expanded',\n        style({\n          height: '*',\n        }),\n      ),\n      transition(\n        'collapsed  expanded',\n        animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'),\n      ),\n    ]),\n  ],\n})\nexport class MenuitemComponent implements OnInit, OnDestroy {\n  /** `@Input() item: any;` is defining an input property called `item` of type `any`. This input\n  property is used to pass a menu item object to the `MenuitemComponent` class. The `item` object\n  contains information about the menu item, such as its label, icon, command, and sub-items. By\n  defining this input property, the `MenuitemComponent` class can receive the `item` object from its\n  parent component and use it to render the menu item in the application menu. */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  @Input() item: any;\n\n  /** `@Input() index!: number;` is defining an input property called `index` of type `number`. The `!`\n  symbol after the `index` variable indicates that it is non-null and initialized in the constructor\n  or ngOnInit method. This input property is used to pass the index of the current menu item to the\n  `MenuitemComponent` class. The index is used to construct the unique identifier of the menu item\n  and to determine the order of the menu items in the menu. */\n  @Input() index!: number;\n\n  /** The `@Input() @HostBinding('class.layout-root-menuitem') root!: boolean;` decorator is defining an\n  input property called `root` of type `boolean` and also binding the `class.layout-root-menuitem`\n  CSS class to the host element of the component. */\n  @Input() @HostBinding('class.layout-root-menuitem') root!: boolean;\n\n  /** `@Input() parentKey!: string;` is declaring an input property called `parentKey` of type `string`.\n  This input property is used to pass the unique identifier of the parent menu item to the child\n  menu items. If a menu item has a parent, its `key` property is set to a value that includes the\n  parent key and the index of the item, separated by a hyphen. This allows the `MenuitemComponent`\n  class to uniquely identify each menu item in the application menu. The `parentKey` input property\n  is used to pass the parent key to the child menu items so that they can construct their own unique\n  identifiers based on the parent key and their own index. */\n  @Input() parentKey!: string;\n\n  /** `active = false;` is initializing the `active` property of the `MenuitemComponent` class to\n  `false`. This property is used to track whether or not a menu item is currently active (i.e.\n  selected or expanded). By default, when a new instance of the `MenuitemComponent` class is\n  created, no menu item is active, so the `active` property is set to `false`. */\n  active = false;\n\n  /** `menuSourceSubscription: Subscription;` is declaring a property called `menuSourceSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `menuSource$` observable\n  of the `MenuService` class. This subscription is used to update the active state of a menu item\n  based on events emitted by the `menuSource$` observable. The `unsubscribe()` method is called on\n  this subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuSourceSubscription: Subscription;\n\n  /** `menuResetSubscription: Subscription;` is declaring a property called `menuResetSubscription` of\n  type `Subscription`. This property is used to store a subscription to the `resetSource$`\n  observable of the `MenuService` class. This subscription is used to reset the active state of a\n  menu item when the menu is closed or reset. The `unsubscribe()` method is called on this\n  subscription in the `ngOnDestroy()` method to prevent memory leaks. */\n  menuResetSubscription: Subscription;\n\n  /** `key: string = \"\";` is declaring a property called `key` with an initial value of an empty string.\n  This property is used to uniquely identify each menu item in the application menu. It is set to a\n  value that includes the parent key and the index of the item, separated by a hyphen, if the item\n  has a parent. Otherwise, it is set to the index of the item as a string. This property is used to\n  update the active state of a menu item based on the current route and to toggle the active state\n  of a menu item if it has sub-items. */\n  key: string = '';\n\n  /**\n   * This is a constructor function that subscribes to menu and router events to update the active\n   * state of a menu item based on the current route.\n   * @param {LayoutService} layoutService - An instance of the LayoutService class, which is likely\n   * used to manage the layout of the application.\n   * @param {ChangeDetectorRef} cd - The \"cd\" parameter is an instance of the ChangeDetectorRef class,\n   * which is used to manually trigger change detection in Angular. It is typically used when making\n   * changes to the component's state that may not be detected by Angular's default change detection\n   * mechanism.\n   * @param {Router} router - The `router` parameter is an instance of the `Router` service provided by\n   * Angular. It is used to handle navigation and routing within the application.\n   * @param {MenuService} menuService - The `menuService` parameter is an instance of the `MenuService`\n   * class, which is used to manage the application menu. It is injected into the constructor using\n   * Angular's dependency injection mechanism.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    private cd: ChangeDetectorRef,\n    public router: Router,\n    private menuService: MenuService,\n  ) {\n    this.menuSourceSubscription = this.menuService.menuSource$.subscribe(\n      (value) => {\n        Promise.resolve(null).then(() => {\n          if (value.routeEvent) {\n            this.active =\n              value.key === this.key || value.key.startsWith(this.key + '-')\n                ? true\n                : false;\n          } else {\n            if (\n              value.key !== this.key &&\n              !value.key.startsWith(this.key + '-')\n            ) {\n              this.active = false;\n            }\n          }\n        });\n      },\n    );\n\n    this.menuResetSubscription = this.menuService.resetSource$.subscribe(() => {\n      this.active = false;\n    });\n\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        if (this.item.routerLink) {\n          this.updateActiveStateFromRoute();\n        }\n      });\n  }\n\n  /**\n   * The ngOnInit function sets the key and updates the active state from the route if the item has a\n   * routerLink.\n   */\n  ngOnInit() {\n    this.key = this.parentKey\n      ? this.parentKey + '-' + this.index\n      : String(this.index);\n\n    if (this.item.routerLink) {\n      this.updateActiveStateFromRoute();\n    }\n  }\n\n  /**\n   * This function updates the active state of a menu item based on the current route in a TypeScript\n   * application.\n   */\n  updateActiveStateFromRoute() {\n    const activeRoute = this.router.isActive(this.item.routerLink[0], {\n      paths: 'exact',\n      queryParams: 'ignored',\n      matrixParams: 'ignored',\n      fragment: 'ignored',\n    });\n\n    if (activeRoute) {\n      this.menuService.onMenuStateChange({ key: this.key, routeEvent: true });\n    }\n  }\n\n  /**\n   * This function handles the click event on a menu item, executing its command and toggling its\n   * active state if it has sub-items.\n   * @param {Event} event - The event parameter is an object that represents the event that triggered\n   * the itemClick function. It contains information such as the type of event (e.g. click, hover), the\n   * target element that triggered the event, and any additional data related to the event.\n   * @returns If the item is disabled, the function will return without executing any further code. If\n   * the item is not disabled, the function will execute the command associated with the item (if there\n   * is one), toggle the active state if the item has sub-items, and call the `onMenuStateChange`\n   * method of the `menuService`. However, the function does not explicitly return any value.\n   */\n  itemClick(event: Event) {\n    // avoid processing disabled items\n    if (this.item.disabled) {\n      event.preventDefault();\n      return;\n    }\n\n    // execute command\n    if (this.item.command) {\n      this.item.command({ originalEvent: event, item: this.item });\n    }\n\n    // toggle active state\n    if (this.item.items) {\n      this.active = !this.active;\n    }\n\n    this.menuService.onMenuStateChange({ key: this.key });\n  }\n\n  get submenuAnimation() {\n    return this.root ? 'expanded' : this.active ? 'expanded' : 'collapsed';\n  }\n\n  @HostBinding('class.active-menuitem')\n  get activeClass() {\n    return this.active && !this.root;\n  }\n\n  /**\n   * The ngOnDestroy function unsubscribes from two subscriptions if they exist.\n   */\n  ngOnDestroy() {\n    if (this.menuSourceSubscription) {\n      this.menuSourceSubscription.unsubscribe();\n    }\n\n    if (this.menuResetSubscription) {\n      this.menuResetSubscription.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{ item.label | translate }}\n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n    {{ item.label | translate }}\n    \n  \n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menuitem.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ item.label | translate }}            {{ item.label | translate }}                {{ item.label | translate }}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuitemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Organization.html":{"url":"interfaces/Organization.html","title":"interface - Organization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Organization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/organization.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organizationId\n                                        \n                                \n                                \n                                        \n                                            pictureUrl\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Organization {\n  organizationId: string;\n  pictureUrl: string;\n  slug: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationDto.html":{"url":"interfaces/OrganizationDto.html","title":"interface - OrganizationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganizationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/organization.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organizationId\n                                        \n                                \n                                \n                                        \n                                            pictureUrl\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organizationId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organizationId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pictureUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pictureUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OrganizationDto {\n  organizationId: string;\n  pictureUrl: string;\n  slug: string;\n  name: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationEffects.html":{"url":"injectables/OrganizationEffects.html","title":"injectable - OrganizationEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/organization/organization.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createNewOrganization$\n                            \n                            \n                                loadCurrentOrganization$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organizationService: OrganizationService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/organization/organization.effects.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organizationService\n                                                  \n                                                        \n                                                                        OrganizationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createNewOrganization$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(createOrganization),\n      switchMap((request) =>\n        this.organizationService.createOrganization(request).pipe(\n          map((organization) => createOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentOrganization$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentOrganization),\n      switchMap(() =>\n        this.organizationService.getOrganization().pipe(\n          map((organization) => loadCurrentOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/organization/organization.effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { OrganizationService } from \"../../services/api/organization.api.service\";\nimport { createOrganization, createOrganizationSuccess, loadCurrentOrganization, loadCurrentOrganizationFailure, loadCurrentOrganizationSuccess } from \"./organization.actions\";\nimport { catchError, map, of, switchMap } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class OrganizationEffects {\n  constructor(\n    private organizationService: OrganizationService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentOrganization$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentOrganization),\n      switchMap(() =>\n        this.organizationService.getOrganization().pipe(\n          map((organization) => loadCurrentOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  createNewOrganization$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(createOrganization),\n      switchMap((request) =>\n        this.organizationService.createOrganization(request).pipe(\n          map((organization) => createOrganizationSuccess(organization)),\n          catchError((error) => of(loadCurrentOrganizationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrganizationService.html":{"url":"injectables/OrganizationService.html","title":"injectable - OrganizationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrganizationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/organization.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createOrganization\n                            \n                            \n                                getOrganization\n                            \n                            \n                                isSlugTaken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/organization.api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n            \n                \ncreateOrganization(dto: CreateOrganizationRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            CreateOrganizationRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrganization\n                        \n                    \n                \n            \n            \n                \ngetOrganization()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSlugTaken\n                        \n                    \n                \n            \n            \n                \nisSlugTaken(slug: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/organization.api.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                slug\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { CreateOrganizationRequestDto } from \"../../domain/dto/requests/create-organization-request.dto\";\nimport { OrganizationDto } from \"../../domain/dto/organization.dto\";\nimport { api } from \"./api\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationService {\n  constructor(private http: HttpClient) {}\n\n  createOrganization(dto: CreateOrganizationRequestDto): Observable {\n    return this.http.post(\n      api.organizationUrl,\n      dto,\n      api.authOptions\n    );\n  }\n\n  getOrganization(): Observable {\n    return this.http.get(\n      api.organizationUrl,\n      api.authOptions\n    );\n  }\n\n  isSlugTaken(slug: string): Observable {\n    return this.http.get(\n      api.organizationUrl + '/slug/taken?slug=' + slug,\n      api.authOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganizationState.html":{"url":"interfaces/OrganizationState.html","title":"interface - OrganizationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganizationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/organization/organization.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            organization\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organization\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organization:         Organization | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Organization | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Organization } from '../../domain/models/organization.entity';\nimport {\n  createOrganization,\n  createOrganizationFailure,\n  createOrganizationSuccess,\n  loadCurrentOrganization,\n  loadCurrentOrganizationFailure,\n  loadCurrentOrganizationSuccess,\n} from './organization.actions';\n\nexport interface OrganizationState {\n  organization: Organization | null;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any | null;\n  status: StateStatus;\n}\n\nexport const initialState: OrganizationState = {\n  organization: null,\n  error: undefined,\n  status: StateStatus.PENDING,\n};\n\nexport const organizationReducer = createReducer(\n  initialState,\n\n  //Handle loading current organization\n  on(loadCurrentOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadCurrentOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadCurrentOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle create new organization\n  on(createOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle create new organization success\n  on(createOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new organization failure\n  on(createOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-register\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  registerNewUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectCurrentUser,\n  selectRegistrationError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss',\n})\nexport class RegisterComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    if (!environment.enableRegistration) {\n      this.router.navigate(['/auth/login']);\n    }\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectRegistrationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.register.registration_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.register.registration_error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(registerNewUser(dto));\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.register.welcome_message\" | translate }}\n  \n  {{\n    \"auth.register.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.register.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.register.username_is_required\" | translate }}\n    {{ \"auth.register.username_length\" | translate }}\n\n    {{ \"auth.register.password_label\" | translate }}\n    \n    {{ \"auth.register.password_length\" | translate }}\n    {{ \"auth.register.password_not_strong\" | translate }}\n\n    {{\n      \"auth.register.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.register.email_is_required\" | translate }}\n\n    {{ \"auth.register.first_name_label\" | translate }}\n    \n    {{ \"auth.register.first_name_is_required\" | translate }}\n\n    {{ \"auth.register.last_name_label\" | translate }}\n    \n    {{ \"auth.register.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.register.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.register.welcome_message\" | translate }}    {{    \"auth.register.welcome_description\" | translate  }}      {{ \"auth.register.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.register.username_is_required\" | translate }}    {{ \"auth.register.username_length\" | translate }}    {{ \"auth.register.password_label\" | translate }}        {{ \"auth.register.password_length\" | translate }}    {{ \"auth.register.password_not_strong\" | translate }}    {{      \"auth.register.email_label\" | translate    }}                        {{ \"auth.register.email_is_required\" | translate }}    {{ \"auth.register.first_name_label\" | translate }}        {{ \"auth.register.first_name_is_required\" | translate }}    {{ \"auth.register.last_name_label\" | translate }}        {{ \"auth.register.last_name_is_required\" | translate }}          {{ \"auth.register.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequestDto.html":{"url":"interfaces/RegisterRequestDto.html","title":"interface - RegisterRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/register-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterRequestDto {\n  username: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                secret\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        secret\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { Subscription } from 'rxjs';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  resetPassword,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectResetPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss',\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input()\n  private secret?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  resetPasswordForm = this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectResetPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('auth.reset-password.error'),\n            detail: this.translateService.instant(\n              'auth.reset-password.wrong_hash',\n            ),\n          });\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.reset-password.success',\n            ),\n            detail: this.translateService.instant(\n              'auth.reset-password.success_message',\n            ),\n          });\n          this.router.navigate(['/auth']);\n        }\n      });\n  }\n\n  resetPassword() {\n    if (this.secret) {\n      const newPassword = this.resetPasswordForm.get('password')?.value ?? '';\n      this.store.dispatch(\n        resetPassword({ newPassword: newPassword, hash: this.secret }),\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.reset-password.welcome_message\" | translate }}\n  \n\n\n  \n    {{ \"auth.reset-password.new_password_label\" | translate }}\n    \n    {{ \"auth.reset-password.password_is_required\" | translate }}\n    {{ \"auth.reset-password.password_length\" | translate }}\n    {{ \"auth.reset-password.password_not_strong\" | translate }}\n\n    \n      {{ \"auth.reset-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.reset-password.welcome_message\" | translate }}        {{ \"auth.reset-password.new_password_label\" | translate }}        {{ \"auth.reset-password.password_is_required\" | translate }}    {{ \"auth.reset-password.password_length\" | translate }}    {{ \"auth.reset-password.password_not_strong\" | translate }}          {{ \"auth.reset-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordRequestDto.html":{"url":"interfaces/ResetPasswordRequestDto.html","title":"interface - ResetPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/reset-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPasswordRequestDto {\n    newPassword: string,\n    hash: string, \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionStorage.html":{"url":"injectables/SessionStorage.html","title":"injectable - SessionStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/session-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/session-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.sessionStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarComponent.html":{"url":"components/SidebarComponent.html","title":"component - SidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/sidebar/sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sidebar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                MenuitemComponent\n                \n            \n\n            \n                styleUrls\n                ./sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setupSideNavItems\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, el: ElementRef, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                            \n                        \n\n                \n                    \n                            This is a constructor function that takes in several services as parameters.\nsuch as managing the layout of a web page or application.\na native element inside a View. It is used to access the properties and methods of the native\nelement.\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\nUserStorageService class, which is likely used to manage user data and authentication. It is\ninjected into the constructor using Angular's dependency injection system.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nIt is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n\n\n                                                        \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nel is an instance of the ElementRef class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n\n\n                                                        \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe translateService parameter is an instance of\nthe TranslateService class, which is used for internationalization and localization of the\napplication. It provides methods for translating text strings into different languages based on\nthe user's language preference.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:44\n                        \n                    \n\n\n            \n                \n                        The ngOnInit function sets up the side navigation based on the user's role.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupSideNavItems\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupSideNavItems(sidenav: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/sidebar/sidebar.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                sidenav\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:37\n                        \n                    \n\n            \n                \n                    - `el` is an instance of the `ElementRef` class, which is a wrapper around\na native element inside a View. It is used to access the properties and methods of the native\nelement.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:36\n                        \n                    \n\n            \n                \n                    - It is a service that provides layout-related functionality,\nsuch as managing the layout of a web page or application.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/sidebar/sidebar.component.ts:19\n                        \n                    \n\n            \n                \n                    model: MenuItem[] = []; is declaring a property called model of type MenuItem[] (an array of\nMenuItem objects) and initializing it to an empty array. This property is likely used to store\nthe items that will be displayed in the side navigation menu.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { MenuItem } from 'primeng/api';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { MenuitemComponent } from '../menuitem/menuitem.component';\n\n@Component({\n  selector: 'app-sidebar',\n  standalone: true,\n  imports: [CommonModule, MenuitemComponent],\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss'],\n})\nexport class SidebarComponent implements OnInit {\n  /** `model: MenuItem[] = [];` is declaring a property called `model` of type `MenuItem[]` (an array of\n  `MenuItem` objects) and initializing it to an empty array. This property is likely used to store\n  the items that will be displayed in the side navigation menu. */\n  model: MenuItem[] = [];\n  /**\n   * This is a constructor function that takes in several services as parameters.\n   * @param {LayoutService} layoutService - It is a service that provides layout-related functionality,\n   * such as managing the layout of a web page or application.\n   * @param {ElementRef} el - `el` is an instance of the `ElementRef` class, which is a wrapper around\n   * a native element inside a View. It is used to access the properties and methods of the native\n   * element.\n   * @param {TranslateService} translateService - The `translateService` parameter is an instance of\n   * the `TranslateService` class, which is used for internationalization and localization of the\n   * application. It provides methods for translating text strings into different languages based on\n   * the user's language preference.\n   * @param {UserStorageService} userService - The `userService` parameter is an instance of the\n   * `UserStorageService` class, which is likely used to manage user data and authentication. It is\n   * injected into the constructor using Angular's dependency injection system.\n   */\n  constructor(\n    public layoutService: LayoutService,\n    public el: ElementRef,\n    private translateService: TranslateService,\n  ) {}\n\n  /**\n   * The ngOnInit function sets up the side navigation based on the user's role.\n   */\n  ngOnInit() {\n    this.translateService.stream('sidenav').subscribe({\n      next: (sidenav) => {\n        this.model = [];\n        this.setupSideNavItems(sidenav);\n      },\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private setupSideNavItems(sidenav: any) {\n    this.model.push({\n      label: sidenav.General,\n      items: [\n        // {\n        //   label: sidenav.Home,\n        //   icon: 'pi pi-fw pi-home',\n        //   routerLink: ['/home'],\n        // },\n        {\n          label: sidenav.Projects,\n          icon: 'pi pi-fw pi-code',\n          routerLink: ['/home/projects'],\n        },\n        {\n          label: sidenav.Logs,\n          icon: 'pi pi-fw pi-list',\n          routerLink: ['/home/logs'],\n        },\n        {\n          label: sidenav.Issues,\n          icon: 'pi pi-fw pi-inbox',\n          routerLink: ['/home/issues'],\n        },\n        {\n          label: sidenav.Messages,\n          icon: 'pi pi-fw pi-envelope',\n          routerLink: ['/home/messages'],\n        },\n        {\n          label: sidenav.Devices,\n          icon: 'pi pi-fw pi-mobile',\n          routerLink: ['/home/devices'],\n        },\n        {\n          label: sidenav.Sessions,\n          icon: 'pi pi-fw pi-clock',\n          routerLink: ['/home/sessions'],\n        },\n        {\n          label: sidenav.Performance,\n          icon: 'pi pi-fw pi-chart-line',\n          routerLink: ['/home/performance'],\n          expanded: true,\n          items: [\n            {\n              label: sidenav.Queries,\n              icon: 'pi pi-fw pi-database',\n              routerLink: ['/home/queries'],\n            },\n            {\n              label: sidenav.Vitals,\n              icon: 'pi pi-fw pi-heart',\n              routerLink: ['/home/vitals'],\n            },\n            {\n              label: sidenav.Screen_Loads,\n              icon: 'pi pi-fw pi-stopwatch',\n              routerLink: ['/home/screen-loads'],\n            },\n            {\n              label: sidenav.Resources,\n              icon: 'pi pi-fw pi-server',\n              routerLink: ['/home/resources'],\n            },\n          ],\n        },\n        {\n          label: sidenav.Replays,\n          icon: 'pi pi-fw pi-play',\n          routerLink: ['/home/replays'],\n        },\n        {\n          label: sidenav.Releases,\n          icon: 'pi pi-fw pi-box',\n          routerLink: ['/home/releases'],\n        },\n        {\n          label: sidenav.Stats,\n          icon: 'pi pi-fw pi-chart-bar',\n          routerLink: ['/home/stats'],\n        },\n      ],\n    });\n    this.model.push({\n      label: sidenav.Setitngs,\n      items: [\n        {\n          label: sidenav.Settings_Account,\n          icon: 'pi pi-fw pi-user',\n          expanded: false,\n          routerLink: ['/home/settings/account'],\n          items: [\n            {\n              label: sidenav.Settings_Account_Details,\n              routerLink: ['/home/settings/account/details'],\n              icon: 'pi pi-fw pi-list'\n            },\n            {\n              label: sidenav.Settings_Account_Security,\n              routerLink: ['/home/settings/account/security'],\n              icon: 'pi pi-fw pi-shield'\n            },\n            {\n              label: sidenav.Settings_Account_Notifications,\n              routerLink: ['/home/settings/account/notifications'],\n              icon: 'pi pi-fw pi-envelope'\n            },\n            {\n              label: sidenav.Settings_Account_Close,\n              routerLink: ['/home/settings/account/close-account'],\n              icon: 'pi pi-fw pi-exclamation-circle'\n            }\n          ]\n        },\n        {\n          label: sidenav.Settings_Organization,\n          icon: 'pi pi-fw pi-building',\n          routerLink: ['/home/settings/organization']\n        },\n        {\n          label: sidenav.Settings_Projects,\n          icon: 'pi pi-fw pi-box',\n          routerLink: ['/home/settings/projects']\n        },\n        {\n          label: sidenav.Settings_Teams,\n          icon: 'pi pi-fw pi-sitemap',\n          routerLink: ['/home/settings/teams']\n        },\n        {\n          label: sidenav.Settings_Members,\n          icon: 'pi pi-fw pi-users',\n          routerLink: ['/home/settings/members']\n        },\n        {\n          label: sidenav.Settings_Alerts,\n          icon: 'pi pi-fw pi-bell',\n          routerLink: ['/home/settings/alerts']\n        }\n      ]\n    })\n    this.model.push({\n      label: sidenav.Help,\n      items: [\n        {\n          label: sidenav.Documentation,\n          icon: 'pi pi-fw pi-book',\n          routerLink: ['/home/help/documentation']\n        },\n        {\n          label: sidenav.SDKS,\n          icon: 'pi pi-fw pi-wrench',\n          routerLink: ['/home/help/sdks']\n        },\n        {\n          label: sidenav.Guides,\n          icon: 'pi pi-fw pi-question-circle',\n          routerLink: ['/home/help/guides']\n        },\n        {\n          label: sidenav.Support,\n          icon: 'pi pi-fw pi-ticket',\n          routerLink: ['/home/help/support']\n        },\n      ]\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/token.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n    accessToken: string;\n    refreshToken: string;\n    expiresIn: 0;\n    refreshExpiresIn: 0;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenDto.html":{"url":"interfaces/TokenDto.html","title":"interface - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenDto {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: 0;\n  refreshExpiresIn: 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopbarComponent.html":{"url":"components/TopbarComponent.html","title":"component - TopbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/components/topbar/topbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-topbar\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            DropdownModule\n                            AvatarModule\n                            TranslateModule\n                            ButtonModule\n                            RippleModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./topbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./topbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                languages\n                            \n                            \n                                    Public\n                                layoutService\n                            \n                            \n                                    \n                                menu\n                            \n                            \n                                    \n                                menuButton\n                            \n                            \n                                organization\n                            \n                            \n                                selectedLanguage\n                            \n                            \n                                    \n                                topbarMenuButton\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getAppName\n                            \n                            \n                                goToProfilePage\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(layoutService: LayoutService, router: Router, store: Store, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        layoutService\n                                                  \n                                                        \n                                                                        LayoutService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(language: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToProfilePage\n                        \n                    \n                \n            \n            \n                \ngoToProfilePage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/components/topbar/topbar.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [{flag: 'gb', label: \"English\", value: 'en'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        layoutService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LayoutService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenu')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        menuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('menubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentOrganization)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        topbarMenuButton\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('topbarmenubutton')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/components/topbar/topbar.component.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { AvatarModule } from 'primeng/avatar';\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { RippleModule } from 'primeng/ripple';\nimport { signOut } from '../../../../core/state/auth/auth.actions';\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../../../../core/state/app.state';\nimport { LayoutService } from '../../../../core/services/layout.service';\nimport { Router } from '@angular/router';\nimport { MenuItem } from 'primeng/api';\nimport { selectCurrentUser } from '../../../../core/state/auth/auth.selectors';\nimport { environment } from '../../../../../environments/environment';\nimport { selectCurrentOrganization } from '../../../../core/state/organization/organization.selectors';\n\n@Component({\n  selector: 'app-topbar',\n  standalone: true,\n  imports: [CommonModule, DropdownModule, AvatarModule, TranslateModule, ButtonModule, RippleModule, FormsModule],\n  templateUrl: './topbar.component.html',\n  styleUrl: './topbar.component.scss',\n})\nexport class TopbarComponent {\n  \n  @ViewChild('menubutton') menuButton!: ElementRef;\n  @ViewChild('topbarmenubutton') topbarMenuButton!: ElementRef;\n  @ViewChild('topbarmenu') menu!: ElementRef;\n\n  constructor(\n    public layoutService: LayoutService,\n    private router: Router,\n    private store: Store,\n    private translateService: TranslateService,\n  ) {\n    this.selectedLanguage = this.languages[0];\n  }\n\n  items: MenuItem[] = [];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  languages: any[] = [{flag: 'gb', label: \"English\", value: 'en'}];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  selectedLanguage: any;\n\n  organization = this.store.select(selectCurrentOrganization);\n  user = this.store.select(selectCurrentUser);\n\n  logout() {\n    this.store.dispatch(signOut())\n    this.router.navigate(['/auth'])\n  }\n\n  goToProfilePage() {\n    this.router.navigate(['/home/user-profile'])\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  changeLanguage(language: any) {\n    this.translateService.use(language.value);\n  }\n\n  getAppName() {\n    return environment.appName\n  }\n}\n\n    \n\n    \n        \n    \n      \n      {{getAppName()}}\n    \n  \n    \n      \n    \n  \n    \n      \n    \n  \n    \n      \n      \n        \n          \n            \n            {{ selectedLanguage.label }}\n          \n        \n        \n          \n            \n            {{ language.label }}\n          \n        \n      \n      \n        \n          \n          {{ \"Profile\" | translate }}\n        \n      \n      \n        \n        Logout\n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{getAppName()}}                                                                                                {{ selectedLanguage.label }}                                                            {{ language.label }}                                                          {{ \"Profile\" | translate }}                                    Logout              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ConfigComponent', 'selector': 'app-config'},{'name': 'CreateOrganizationComponent', 'selector': 'app-create-organization'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MenuitemComponent', 'selector': '[app-menuitem]'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SidebarComponent', 'selector': 'app-sidebar'},{'name': 'TopbarComponent', 'selector': 'app-topbar'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: {\n      roleId: string;\n      name: string;\n      permissions: [\n        {\n          type: ResourceType;\n          values: Permission;\n        }\n      ];\n      internal: boolean;\n    };\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from '../models/enums/permission.enum';\nimport { ResourceType } from '../models/enums/resource-type.enum';\n\nexport interface UserDto {\n  userId: string;\n  username: string;\n  lastLoginTime: Date;\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileIconUrl: string | null;\n  role: {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission;\n      }\n    ];\n    internal: boolean;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n  activated: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/organization.dto.ts\n            \n            interface\n            OrganizationDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/authenticate-request.dto.ts\n            \n            interface\n            AuthenticateRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/create-organization-request.dto.ts\n            \n            interface\n            CreateOrganizationRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n            \n            interface\n            ForgotPasswordRequestDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/register-request.dto.ts\n            \n            interface\n            RegisterRequestDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/reset-password-request.dto.ts\n            \n            interface\n            ResetPasswordRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/token.dto.ts\n            \n            interface\n            TokenDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/user.dto.ts\n            \n            interface\n            UserDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/menu-change-event.model.ts\n            \n            interface\n            MenuChangeEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/organization.entity.ts\n            \n            interface\n            Organization\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/token.entity.ts\n            \n            interface\n            Token\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/user.entity.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/guards/registration.guard.ts\n            \n            variable\n            registrationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            variable\n            unauthErrorInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/api.ts\n            \n            variable\n            api\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/api.ts\n            \n            variable\n            AUTHENTICATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/auth.api.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/api/organization.api.service.ts\n            \n            injectable\n            OrganizationService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/layout.service.ts\n            \n            injectable\n            LayoutService\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/core/services/layout.service.ts\n            \n            interface\n            AppConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/layout.service.ts\n            \n            interface\n            LayoutState\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage.service.ts\n            \n            injectable\n            LocalStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/memory-storage.service.ts\n            \n            injectable\n            MemoryStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/core/services/session-storage.service.ts\n            \n            injectable\n            SessionStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            injectable\n            JwtService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            variable\n            REFRESH_TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            variable\n            TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            variable\n            appEfects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            variable\n            appStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticationFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticationSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPasswordFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPasswordSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUserFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUserSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            registerNewUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            registerNewUserFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            registerNewUserSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPasswordFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPasswordSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            setCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            setToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            signOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.effects.ts\n            \n            injectable\n            AuthEffects\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            interface\n            AuthState\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            variable\n            authReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            isLoadingAuthState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            isSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectAuthorizationError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectCurrentUserError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectForgotPasswordError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectRegistrationError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectResetPasswordError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.actions.ts\n            \n            variable\n            createOrganization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.actions.ts\n            \n            variable\n            createOrganizationFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.actions.ts\n            \n            variable\n            createOrganizationSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.actions.ts\n            \n            variable\n            loadCurrentOrganization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.actions.ts\n            \n            variable\n            loadCurrentOrganizationFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.actions.ts\n            \n            variable\n            loadCurrentOrganizationSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.effects.ts\n            \n            injectable\n            OrganizationEffects\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.reducer.ts\n            \n            interface\n            OrganizationState\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.reducer.ts\n            \n            variable\n            organizationReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.selectors.ts\n            \n            variable\n            isLoadingOrganization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.selectors.ts\n            \n            variable\n            selectCurrentOrganization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.selectors.ts\n            \n            variable\n            selectOrganization\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/organization/organization.selectors.ts\n            \n            variable\n            selectOrganizationError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            passwordMinLength\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            passwordSpecialChars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            securePasswordRegex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/invitation/invitation.component.ts\n            \n            component\n            InvitationComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/features/create-organization/create-organization.component.ts\n            \n            component\n            CreateOrganizationComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/features/home/components/config/config.component.ts\n            \n            component\n            ConfigComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/features/home/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/home/components/menuitem/menuitem.component.ts\n            \n            component\n            MenuitemComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/features/home/components/sidebar/sidebar.component.ts\n            \n            component\n            SidebarComponent\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/app/features/home/components/topbar/topbar.component.ts\n            \n            component\n            TopbarComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                23 %\n                (5/21)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.production.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            - : ^0.0.1\n        \n            @angular/animations : ^17.1.0\n        \n            @angular/common : ^17.1.0\n        \n            @angular/compiler : ^17.1.0\n        \n            @angular/core : ^17.1.0\n        \n            @angular/forms : ^17.1.0\n        \n            @angular/platform-browser : ^17.1.0\n        \n            @angular/platform-browser-dynamic : ^17.1.0\n        \n            @angular/platform-server : ^17.1.0\n        \n            @angular/router : ^17.1.0\n        \n            @angular/ssr : ^17.1.3\n        \n            @ngrx/effects : ^17.1.0\n        \n            @ngrx/store : ^17.1.0\n        \n            @ngrx/store-devtools : ^17.1.0\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @vercel/analytics : ^1.1.3\n        \n            @vercel/speed-insights : ^1.0.9\n        \n            express : ^4.18.2\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^17.6.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            ResourceType   (src/.../resource-type.enum.ts)\n                        \n                        \n                            StateStatus   (src/.../state-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/domain/models/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/resource-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 COMMENT\n                            \n                        \n                        \n                            \n                                 DEBUG_FILE\n                            \n                        \n                        \n                            \n                                 DEVICE_STATE\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                 LOG_ENTRY\n                            \n                        \n                        \n                            \n                                 LOG_SESSION\n                            \n                        \n                        \n                            \n                                 LOG_SOURCE\n                            \n                        \n                        \n                            \n                                 ORGANIZATION\n                            \n                        \n                        \n                            \n                                 PLATFORM\n                            \n                        \n                        \n                            \n                                 PROJECT\n                            \n                        \n                        \n                            \n                                 PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                 TEAM\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                 PERMISSION\n                            \n                        \n                        \n                            \n                                 INVITATION\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/state-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StateStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : loading\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\nLogHub - Remote Centralized Logging Solution (CMS)\nThis project is a Angular CMS application that provides an UI for LogHub (remote centralized logging solution). It allows you to collect and manage logs from distributed applications in a centralized location, enhancing troubleshooting and monitoring capabilities.\nThis project was generated with Angular CLI version 17.1.3.\nThis project utilizes next features of angular:\n\nAngular 17\nSSR (Server Side Rendering)\nStandalone Components\nRouter (For url routing)\nHTTP Client (For api calls)\nNGRX (For state management)\nPrimeNG (For UI Components)\n\nTechnologies Used\n\n\n\n\n\n\n\n\n\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nBuild Docker Image\nYou can deploy the application using Docker. First, build your own image:\nExample :docker build -t your-domain/your-image-name:your-version .Here is the full example:\nExample :docker build -t dradman/loghub-cms:1 .\nThen you can run your own image with command:\nExample :docker run -p 80:4000 your-full-image-name Here is the full example:\nExample :docker run -p 80:4000 dradman/loghub-cms:1 . Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nDeploying with Docker\nYou can deploy the application using Docker. First, pull the latest Docker image from the GitHub Container Registry:\nExample :docker pull ghcr.io/dradman/loghub-cms:latestThen, run the Docker container:\nExample :docker run -p 80:4000 ghcr.io/dradman/loghub-cms:latestImportant: Make sure that all environment variables are set correctly.\nDocker-Compose\nYou can also run application using docker compose. See an example here\nEnvironment Variables\nImportant: Due to angular & general limitation since application is served to local browser you can't use standard .env to update environment varaibles.\nIf you wish to change any of the variables you will have to build your own version of application where will change these files\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    14 Components\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    17 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            api   (src/.../api.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            appEfects   (src/.../app.state.ts)\n                        \n                        \n                            appStore   (src/.../app.state.ts)\n                        \n                        \n                            authenticate   (src/.../auth.actions.ts)\n                        \n                        \n                            AUTHENTICATE   (src/.../api.ts)\n                        \n                        \n                            authenticationFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            authenticationSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            authReducer   (src/.../auth.reducer.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            createOrganization   (src/.../organization.actions.ts)\n                        \n                        \n                            createOrganizationFailure   (src/.../organization.actions.ts)\n                        \n                        \n                            createOrganizationSuccess   (src/.../organization.actions.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.production.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            forgotPassword   (src/.../auth.actions.ts)\n                        \n                        \n                            forgotPasswordFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            forgotPasswordSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            initialState   (src/.../auth.reducer.ts)\n                        \n                        \n                            initialState   (src/.../organization.reducer.ts)\n                        \n                        \n                            isLoadingAuthState   (src/.../auth.selectors.ts)\n                        \n                        \n                            isLoadingOrganization   (src/.../organization.selectors.ts)\n                        \n                        \n                            isSuccess   (src/.../auth.selectors.ts)\n                        \n                        \n                            loadCurrentOrganization   (src/.../organization.actions.ts)\n                        \n                        \n                            loadCurrentOrganizationFailure   (src/.../organization.actions.ts)\n                        \n                        \n                            loadCurrentOrganizationSuccess   (src/.../organization.actions.ts)\n                        \n                        \n                            loadCurrentUser   (src/.../auth.actions.ts)\n                        \n                        \n                            loadCurrentUserFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            loadCurrentUserSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            organizationReducer   (src/.../organization.reducer.ts)\n                        \n                        \n                            passwordMinLength   (src/.../regex.constants.ts)\n                        \n                        \n                            passwordSpecialChars   (src/.../regex.constants.ts)\n                        \n                        \n                            REFRESH_TOKEN_KEY   (src/.../token-storage.service.ts)\n                        \n                        \n                            registerNewUser   (src/.../auth.actions.ts)\n                        \n                        \n                            registerNewUserFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            registerNewUserSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            registrationGuard   (src/.../registration.guard.ts)\n                        \n                        \n                            resetPassword   (src/.../auth.actions.ts)\n                        \n                        \n                            resetPasswordFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            resetPasswordSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            securePasswordRegex   (src/.../regex.constants.ts)\n                        \n                        \n                            selectAuth   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectAuthorizationError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectCurrentOrganization   (src/.../organization.selectors.ts)\n                        \n                        \n                            selectCurrentUser   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectCurrentUserError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectForgotPasswordError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectOrganization   (src/.../organization.selectors.ts)\n                        \n                        \n                            selectOrganizationError   (src/.../organization.selectors.ts)\n                        \n                        \n                            selectRegistrationError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectResetPasswordError   (src/.../auth.selectors.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            setCurrentUser   (src/.../auth.actions.ts)\n                        \n                        \n                            setToken   (src/.../auth.actions.ts)\n                        \n                        \n                            signOut   (src/.../auth.actions.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../token-storage.service.ts)\n                        \n                        \n                            unauthErrorInterceptor   (src/.../auth.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/api/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  url: environment.apiUrl,\n  teamUrl: environment.apiUrl + '/v1/team',\n  projectUrl: environment.apiUrl + '/v1/project',\n  profileUrl: environment.apiUrl + '/v1/user-profile',\n  platformUrl: environment.apiUrl + '/v1/platform',\n  organizationUrl: environment.apiUrl + '/v1/organization',\n  invitationUrl: environment.apiUrl + '/v1/invitation',\n  deviceUrl: environment.apiUrl + '/v1/device',\n  membersUrl: environment.apiUrl + '/v1/members',\n  filesUrl: environment.apiUrl + '/v1/files',\n  authUrl: environment.apiUrl + '/v1/auth',\n  authOptions: {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': 'true',\n    }),\n    context: new HttpContext().set(AUTHENTICATE, true),\n  },\n  noAuthOptions: {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': 'true',\n    }),\n    context: new HttpContext().set(AUTHENTICATE, false),\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTHENTICATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(\n      routes,\n      withPreloading(PreloadAllModules),\n      withComponentInputBinding(),\n    ),\n    provideHttpClient(\n      withInterceptors([authInterceptor, unauthErrorInterceptor]),\n      withFetch(),\n    ),\n    provideClientHydration(),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: () => {\n        inject({ mode: isDevMode() ? 'development' : 'production' });\n        injectSpeedInsights();\n      },\n    },\n    provideAnimations(),\n    TranslateModule.forRoot({\n      defaultLanguage: 'en',\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }).providers!,\n    provideStore(appStore),\n    provideEffects(appEfects),\n    provideStoreDevtools({ maxAge: 25, logOnly: !isDevMode() }),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/app.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appEfects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [AuthEffects, OrganizationEffects]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appStore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  authState: authReducer,\n  organizationState: organizationReducer,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Authenticate',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Authentication failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Authentication success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[ForgotPassword Page] forgot password',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Forgot password failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Forgot password success',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Get authenticated user',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUserFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Get authenticated user failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUserSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Get authenticated user success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Register Page] Register new user',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Register new user failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Register new user success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[ResetPassword Page] Reset password',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Reset password failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Reset password success',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Set current user',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Set current user',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Home Page] Sign Out')\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  request: HttpRequest,\n  next: HttpHandlerFn\n): Observable> => {\n  if (request.context.get(AUTHENTICATE)) {\n    const accessToken = inject(JwtService).getToken();\n    if (accessToken) {\n      const clonedRequest = request.clone({\n        headers: request.headers.set('Authorization', `Bearer ${accessToken}`),\n      });\n      return next(clonedRequest);\n    } else {\n      return next(request);\n    }\n  } else {\n    return next(request);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unauthErrorInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  req: HttpRequest,\n  next: HttpHandlerFn,\n): Observable> => {\n  const jwtService = inject(JwtService);\n  const authService = inject(AuthService);\n  const store = inject(Store);\n  const router = inject(Router);\n\n  if (req.context.get(AUTHENTICATE)) {\n    return next(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (\n          error instanceof HttpErrorResponse &&\n          !(\n            req.url.includes('auth/authenticate') ||\n            req.url.includes('auth/refreshToken')\n          ) && //  {\n                jwtService.saveToken(refreshResult.refreshToken);\n                jwtService.saveToken(refreshResult.accessToken);\n                store.dispatch(setToken(refreshResult));\n                return next(\n                  req.clone({\n                    headers: req.headers.set(\n                      'Authorization',\n                      `Bearer ${refreshResult.accessToken}`\n                    ),\n                  })\n                );\n              }),\n              catchError((error) => {\n                if (error.status === '401') {\n                  jwtService.clear();\n                  store.dispatch(signOut());\n                  if(!router.url.startsWith('/auth')) {\n                    router.navigate(['/auth'])\n                  }\n                }\n                return throwError(() => error);\n              })\n            );\n          }\n        }\n        return throwError(() => new Error('Unauthorized Exception'));\n      })\n    );\n  } else {\n    return next(req);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, { error }) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Reset Password\n  on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, { error }) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Register new user\n  on(registerNewUser, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Register new user success\n  on(registerNewUserSuccess, (state) => ({\n    ...state,\n    registrationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Register new user failure\n  on(registerNewUserFailure, (state, { error }) => ({\n    ...state,\n    registrationError: error,\n    status: StateStatus.ERROR,\n  })),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/organization/organization.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createOrganization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Organization Page] Create organization',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganizationFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Organization API] Create organization failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createOrganizationSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Organization API] Create organization success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentOrganization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Organization Page] Load current organization',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentOrganizationFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Organization API] Get organization failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentOrganizationSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Organization API] Get organization success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:8080/api',\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'https://heavily-composed-mutt.ngrok-free.app', //TODO: Host backend somewhere\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:8080/api',\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/organization/organization.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrganizationState\n\n                    \n                \n                \n                    \n                        Default value : {\n  organization: null,\n  error: undefined,\n  status: StateStatus.PENDING,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        organizationReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n\n  //Handle loading current organization\n  on(loadCurrentOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle load success\n  on(loadCurrentOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load failure\n  on(loadCurrentOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle create new organization\n  on(createOrganization, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle create new organization success\n  on(createOrganizationSuccess, (state, organization) => ({\n    ...state,\n    organization: organization,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle create new organization failure\n  on(createOrganizationFailure, (state, { error }) => ({\n    ...state,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLoadingAuthState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.status == StateStatus.LOADING,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.status == StateStatus.SUCCESS,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: AppState) => state.authState\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuthorizationError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => {\n    if (\n      state.token == null &&\n      state.status == StateStatus.ERROR &&\n      state.credentials != null\n    ) {\n      return state.error;\n    } else {\n      return null;\n    }\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.user,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCurrentUserError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => {\n    if (\n      state.user == null &&\n      state.status == StateStatus.ERROR &&\n      state.error\n    ) {\n      return state.error;\n    } else {\n      return null;\n    }\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForgotPasswordError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.forgotPasswordError,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectRegistrationError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.registrationError,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectResetPasswordError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.resetPasswordError,\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/organization/organization.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLoadingOrganization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n    selectOrganization,\n    (state: OrganizationState) => state.status == StateStatus.LOADING,\n  )\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCurrentOrganization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n    selectOrganization,\n    (state: OrganizationState) => state.organization,\n  )\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectOrganization\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: AppState) => state.organizationState\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectOrganizationError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n    selectOrganization,\n    (state: OrganizationState) => state.error,\n  )\n                    \n                \n\n\n        \n    \n\n    src/app/core/utils/regex.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordSpecialChars\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\\\\?@#$%^\\`<>&+=\"!ºª·#~%&'¿¡€,:;*/+-.=_{}\\\\(\\\\)\\\\[\\\\]`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        securePasswordRegex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[${passwordSpecialChars}])(?=\\\\S+$).{${passwordMinLength},}$`\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/token-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth-refreshtoken'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth-token'\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/registration.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        registrationGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  _next: ActivatedRouteSnapshot,\n  _state: RouterStateSnapshot) => {\n    return environment.enableRegistration;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
