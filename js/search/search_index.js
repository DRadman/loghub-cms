var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.608,1,1.252]],["body/components/AppComponent.html",[0,1.051,1,2.268,2,1.983,3,0.469,4,0.366,5,1.863,6,1.863,7,1.863,8,0.366,9,3.473,10,1.863,11,2.918,12,2.918,13,3.048,14,2.148,15,2.148,16,2.331,17,4.744,18,2.331,19,5.187,20,2.331,21,5.187,22,1.465,23,4.145,24,3.486,25,1.254,26,4.145,27,1.254,28,0.031,29,1.146,30,0.366,31,1.254,32,3.048,33,1.051,34,1.072,35,1.863,36,2.216,37,2.216,38,0.469,39,1.072,40,3.03,41,4.145,42,4.145,43,4.145,44,1.863,45,2.331,46,2.331,47,1.863,48,2.666,49,1.863,50,1.863,51,1.584,52,1.863,53,1.584,54,1.465,55,1.863,56,1.584,57,1.863,58,1.584,59,1.863,60,1.584,61,1.863,62,1.584,63,1.863,64,1.584,65,1.465,66,0.839,67,1.863,68,1.863,69,0.024,70,0.024]],["title/interfaces/AppState.html",[71,0.459,72,1.356]],["body/interfaces/AppState.html",[3,0.545,4,0.425,8,0.425,28,0.031,30,0.425,33,1.054,38,0.684,69,0.026,70,0.026,71,0.675,72,2.351,73,1.572,74,3.516,75,0.484,76,0.878,77,3.881,78,3.336,79,4.81,80,3.698,81,4.81,82,2.17,83,3.516,84,3.516]],["title/components/AuthComponent.html",[0,0.608,51,1.252]],["body/components/AuthComponent.html",[0,1.072,1,1.655,2,2.037,3,0.49,4,0.383,5,1.946,6,1.946,7,1.946,8,0.383,10,1.946,11,2.937,12,2.937,14,2.207,15,2.207,16,2.395,17,4.838,18,2.395,20,2.395,28,0.03,29,1.079,33,0.99,34,1.12,35,1.946,38,0.49,39,1.12,44,1.946,45,2.395,46,2.395,47,1.946,48,2.707,49,1.946,50,1.946,51,2.303,52,1.946,53,1.655,54,1.53,55,1.946,56,1.655,57,1.946,58,1.655,59,1.946,60,1.655,61,1.946,62,1.655,63,1.946,64,1.655,65,1.53,66,0.877,67,1.946,68,1.946,69,0.024,70,0.024,85,3.629,86,3.897,87,5.331,88,5.331]],["title/injectables/AuthEffects.html",[78,1.924,89,0.99]],["body/injectables/AuthEffects.html",[3,0.297,4,0.232,8,0.232,22,1.344,25,1.772,27,0.793,28,0.031,29,0.531,30,0.232,31,0.793,33,1.01,34,0.678,38,0.297,39,0.678,66,0.994,69,0.017,70,0.017,75,0.264,76,0.588,78,2.235,89,1.15,90,1.282,91,2.196,92,2.907,93,3.199,94,2.625,95,2.033,96,2.886,97,3.542,98,2.625,99,3.199,100,2.621,101,2.444,102,3.297,103,4.702,104,2.621,105,2.583,106,2.031,107,6.319,108,6.284,109,3.804,110,5.952,111,2.477,112,2.033,113,4.912,114,4.912,115,2.477,116,3.804,117,3.804,118,3.804,119,2.38,120,3.804,121,5.107,122,4.912,123,2.523,124,2.621,125,3.804,126,5.215,127,4.912,128,4.912,129,4.912,130,2.621,131,3.804,132,3.804,133,3.655,134,2.916,135,3.804,136,2.621,137,3.804,138,3.804,139,2.621,140,3.804,141,3.804,142,3.804,143,2.621,144,3.804,145,3.804,146,2.621,147,3.804,148,3.804,149,2.916,150,3.804,151,2.621,152,3.804,153,4.477,154,3.804,155,3.804,156,3.187,157,2.621,158,2.621,159,2.196,160,2.621,161,1.178,162,2.621,163,2.621,164,1.707,165,1.707,166,1.707,167,1.707,168,1.707,169,1.707,170,1.707,171,2.196,172,1.711]],["title/injectables/AuthService.html",[89,0.99,101,1.471]],["body/injectables/AuthService.html",[3,0.379,4,0.296,8,0.296,13,1.967,22,1.183,25,1.849,27,1.818,28,0.031,29,1.217,30,0.531,31,1.818,33,1.15,34,0.866,38,0.379,39,0.866,40,2.447,54,1.183,65,1.183,66,1.034,69,0.021,70,0.021,75,0.337,82,1.28,89,1.365,90,1.637,92,2.73,94,2.413,98,2.413,101,2.028,112,2.363,119,2.489,161,1.504,173,2.805,174,1.595,175,2.94,176,3.455,177,3.326,178,3.348,179,3.997,180,3.348,181,3.3,182,4.515,183,3.212,184,3.348,185,3.782,186,2.298,187,5.419,188,4.515,189,1.254,190,3.348,191,2.94,192,3.348,193,3.348,194,4.515,195,3.348,196,4.515,197,3.212,198,3.348,199,4.581,200,4.515,201,3.56,202,3.348,203,3.348,204,3.348,205,2.94,206,2.18,207,3.348,208,2.805,209,3.734,210,2.18,211,3.348,212,3.348,213,3.348,214,2.18,215,5.708,216,5.708,217,5.881,218,4.515,219,3.348,220,4.515,221,1.504,222,3.348,223,3.348]],["title/interfaces/AuthState.html",[71,0.459,77,1.924]],["body/interfaces/AuthState.html",[3,0.293,4,0.229,8,0.229,28,0.031,30,0.524,33,1.006,38,0.504,54,1.571,65,1.571,66,1.097,69,0.017,70,0.017,71,0.363,73,0.847,75,0.26,76,0.583,77,2.612,80,1.687,82,1.441,92,2.015,93,1.687,94,1.384,95,1.072,96,1.522,97,1.687,98,1.384,99,2.456,123,2.657,134,1.687,149,1.687,165,1.687,166,1.687,167,1.687,168,1.687,169,1.687,170,1.687,171,2.17,177,2.896,183,2.869,208,2.17,209,1.893,221,1.998,224,1.893,225,4.895,226,4.685,227,4.349,228,4.685,229,4.685,230,4.707,231,3.372,232,2.282,233,4.349,234,2.022,235,2.377,236,4.092,237,3.159,238,1.267,239,2.59,240,2.59,241,2.59,242,2.59,243,1.893,244,1.893,245,1.522,246,1.522,247,1.522,248,1.522,249,1.522,250,3.25,251,2.17,252,5.312,253,1.893,254,4.092,255,2.17,256,4.301,257,4.349,258,2.17,259,2.17,260,3.159,261,3.05,262,2.17,263,4.349,264,3.794,265,2.17,266,4.685,267,3.159,268,2.17,269,2.17,270,2.757,271,2.17,272,2.17,273,2.17,274,2.17,275,2.17,276,2.17,277,2.17,278,2.17,279,2.17,280,2.17,281,2.17,282,2.17]],["title/interfaces/AuthenticateRequestDto.html",[71,0.459,183,1.924]],["body/interfaces/AuthenticateRequestDto.html",[3,0.559,4,0.436,8,0.436,28,0.03,30,0.509,38,0.559,66,1.274,69,0.026,70,0.026,71,0.693,73,1.614,75,0.496,76,0.892,112,2.606,183,3.388,189,1.314,283,4.137,284,2.901]],["title/components/ForgotPasswordComponent.html",[0,0.608,53,1.252]],["body/components/ForgotPasswordComponent.html",[0,0.728,1,0.802,2,1.231,3,0.237,4,0.185,5,0.942,6,0.942,7,0.942,8,0.185,10,0.942,11,2.53,12,2.53,14,1.333,15,1.333,16,1.447,18,1.447,20,1.447,22,1.138,24,3.063,25,1.8,27,0.974,28,0.031,29,0.89,30,0.475,31,1.733,32,3.415,33,1.115,34,0.542,35,0.942,36,1.121,37,1.121,38,0.237,39,0.542,44,0.942,45,1.447,46,1.447,47,0.942,48,1.975,49,0.942,50,0.942,51,0.802,52,0.942,53,1.681,54,1.842,55,0.942,56,0.802,57,0.942,58,0.802,59,0.942,60,0.802,61,0.942,62,0.802,63,0.942,64,0.802,65,0.741,66,0.793,67,0.942,68,0.942,69,0.015,70,0.015,72,0.868,75,0.211,76,0.498,94,2.676,95,0.868,101,2.342,105,1.761,106,1.385,111,1.366,112,1.82,115,1.366,123,1.82,133,1.366,161,0.942,172,2.387,174,1.138,175,3.089,186,1.813,189,0.793,191,1.366,232,0.741,234,1.733,235,1.721,238,1.026,245,1.892,246,1.892,247,1.232,248,1.232,249,1.232,261,1.232,285,5.033,286,5.033,287,1.533,288,1.333,289,2.865,290,2.303,291,2.303,292,1.892,293,3.593,294,2.303,295,2.552,296,2.552,297,2.552,298,2.552,299,2.865,300,2.552,301,2.552,302,2.698,303,2.698,304,2.552,305,3.919,306,2.552,307,3.284,308,2.865,309,2.865,310,2.552,311,2.354,312,3.214,313,2.583,314,2.583,315,1.366,316,3.26,317,2.786,318,2.55,319,3.22,320,2.354,321,2.097,322,1.914,323,2.097,324,2.097,325,2.097,326,2.097,327,3.241,328,1.757,329,2.097,330,2.097,331,2.354,332,2.097,333,2.097,334,2.097,335,1.757,336,1.757,337,2.097,338,2.865,339,1.533,340,2.354,341,1.757,342,1.533,343,1.366,344,1.232,345,1.232,346,1.366,347,1.121,348,2.552,349,1.026,350,1.533,351,1.232,352,1.533,353,2.354,354,1.533,355,1.232,356,0.942,357,1.366,358,1.366,359,1.533,360,1.533,361,1.721,362,1.232,363,1.533,364,1.366,365,1.533,366,1.366,367,1.533,368,1.533,369,1.533,370,1.533,371,1.533,372,1.232,373,1.366,374,2.303,375,1.366,376,1.366,377,1.366,378,1.366,379,2.097,380,1.232,381,1.757,382,2.097,383,2.552,384,2.552,385,2.552,386,3.26,387,6.057,388,2.698,389,2.303,390,2.097,391,2.097,392,1.757,393,1.757,394,1.757,395,1.757,396,2.097,397,1.366,398,1.366,399,1.757,400,2.354,401,1.757,402,2.097,403,2.097,404,1.533,405,2.097,406,1.533,407,1.533,408,2.097,409,2.354,410,2.698,411,3.22,412,2.698,413,2.698,414,3.22,415,3.22,416,2.698]],["title/interfaces/ForgotPasswordRequestDto.html",[71,0.459,417,2.394]],["body/interfaces/ForgotPasswordRequestDto.html",[3,0.568,4,0.443,8,0.443,28,0.029,30,0.443,38,0.568,66,1.015,69,0.027,70,0.027,71,0.703,73,1.639,75,0.504,76,0.9,189,1.244,284,2.945,417,4.253,418,4.2,419,3.716]],["title/components/HomeComponent.html",[0,0.608,56,1.252]],["body/components/HomeComponent.html",[0,0.967,1,1.331,2,1.772,3,0.394,4,0.308,5,1.564,6,1.564,7,1.564,8,0.308,10,1.564,11,2.833,12,2.833,14,1.919,15,1.919,16,2.082,18,2.082,20,2.082,22,1.638,25,1.749,27,1.053,28,0.031,29,1.055,30,0.409,31,1.576,33,1.145,34,0.9,35,1.564,38,0.394,39,0.9,44,1.564,45,2.082,46,2.082,47,1.564,48,2.496,49,1.564,50,1.564,51,1.331,52,1.564,53,1.331,54,1.23,55,1.564,56,2.123,57,1.564,58,1.331,59,1.564,60,1.331,61,1.564,62,1.331,63,1.564,64,1.331,65,1.23,66,0.705,67,1.564,68,1.564,69,0.021,70,0.021,72,1.441,75,0.35,76,0.717,95,1.441,105,1.564,106,1.23,123,1.919,161,1.564,172,2.211,174,1.638,186,1.772,234,1.053,238,1.703,288,1.919,290,3.061,291,3.061,294,3.061,313,3.263,314,3.263,317,3.179,318,2.969,322,1.772,327,3.061,345,2.046,349,1.703,351,2.046,355,2.046,356,1.564,372,2.046,374,2.046,380,2.046,420,2.917,421,4.635,422,4.635,423,4.635,424,6.071,425,5.21,426,3.482,427,3.482,428,3.482,429,3.482,430,4.635,431,3.482,432,3.482,433,2.545,434,3.482,435,3.482,436,2.917,437,3.482,438,3.883,439,4.635,440,4.635]],["title/components/InvitationComponent.html",[0,0.608,58,1.252]],["body/components/InvitationComponent.html",[0,1.076,1,1.666,2,2.046,3,0.494,4,0.385,5,1.959,6,1.959,7,1.959,8,0.385,10,1.959,11,2.94,12,2.94,14,2.216,15,2.216,16,1.959,18,2.405,20,2.405,28,0.03,29,1.083,33,0.81,34,1.127,38,0.494,39,1.127,44,1.959,45,2.405,46,2.405,47,1.959,48,2.714,49,1.959,50,1.959,51,1.666,52,1.959,53,1.666,54,1.541,55,1.959,56,1.666,57,1.959,58,2.309,59,1.959,60,1.666,61,1.959,62,1.666,63,1.959,64,1.666,65,1.541,66,0.883,67,1.959,68,1.959,69,0.024,70,0.024,441,3.653,442,5.06,443,5.352,444,5.352,445,4.484]],["title/injectables/JwtService.html",[89,0.99,102,1.924]],["body/injectables/JwtService.html",[3,0.441,4,0.344,8,0.344,13,2.287,22,1.375,25,1.855,27,1.663,28,0.031,29,1.113,30,0.486,31,1.663,33,0.926,34,1.006,38,0.441,39,1.006,40,2.845,69,0.023,70,0.023,75,0.391,82,1.905,86,3.644,89,1.507,90,1.903,102,2.928,119,2.064,164,2.534,174,1.761,176,2.287,186,2.291,189,1.301,214,2.534,231,3.204,234,1.754,322,2.344,446,4.557,447,2.08,448,5.519,449,3.407,450,5.798,451,5.798,452,4.984,453,4.984,454,3.892,455,3.776,456,3.892,457,2.928,458,3.892,459,3.892,460,2.845,461,4.984,462,2.845,463,4.984,464,3.892,465,2.845,466,2.845,467,2.845,468,4.984,469,4.984,470,3.892,471,3.892,472,3.892,473,3.892]],["title/injectables/LocalStorage.html",[89,0.99,455,2.133]],["body/injectables/LocalStorage.html",[3,0.413,4,0.322,8,0.322,13,2.143,22,1.884,25,1.884,27,1.711,28,0.031,29,1.145,30,0.519,31,1.711,33,0.99,34,0.943,38,0.413,39,0.943,69,0.022,70,0.022,75,0.48,76,0.739,82,1.394,89,1.445,90,1.784,106,1.999,119,2.207,164,2.375,172,2.037,174,1.689,186,2.245,189,1.328,214,2.375,221,1.639,234,1.711,288,1.51,322,2.303,356,1.639,447,1.949,449,3.323,455,3.112,457,3.54,460,2.666,462,2.666,474,5.278,475,4.466,476,3.494,477,3.824,478,3.494,479,3.494,480,3.494,481,3.897,482,4.004,483,3.494,484,3.494,485,3.323,486,3.056,487,3.494,488,3.056,489,3.494,490,3.056,491,2.666,492,2.666,493,3.056,494,2.666,495,2.808,496,2.666,497,3.056,498,3.056,499,3.056,500,3.056,501,3.056,502,4.004,503,3.647,504,3.056,505,3.056,506,3.056,507,3.056,508,3.056,509,3.056]],["title/components/LoginComponent.html",[0,0.608,60,1.252]],["body/components/LoginComponent.html",[0,0.736,1,0.817,2,1.248,3,0.242,4,0.189,5,0.96,6,0.96,7,0.96,8,0.189,10,0.96,11,2.543,12,2.543,14,1.352,15,1.352,16,1.467,18,1.467,20,1.467,22,1.154,24,3.083,25,1.823,27,0.988,28,0.031,29,0.899,30,0.463,31,1.637,32,3.661,33,1.144,34,0.552,35,0.96,36,1.142,37,1.142,38,0.242,39,0.552,44,0.96,45,1.467,46,1.467,47,0.96,48,1.995,49,0.96,50,0.96,51,0.817,52,0.96,53,0.817,54,0.755,55,0.96,56,0.817,57,0.96,58,0.817,59,0.96,60,1.697,61,0.96,62,0.817,63,0.96,64,0.817,65,0.755,66,0.899,67,0.96,68,0.96,69,0.015,70,0.015,72,0.885,75,0.215,76,0.505,92,1.746,95,0.885,101,2.358,105,1.781,106,1.401,111,1.391,112,1.838,115,1.391,119,1.352,123,1.641,133,1.391,161,0.96,172,2.355,174,1.154,175,3.115,186,2.006,189,0.803,191,1.391,232,0.755,234,1.678,235,1.746,238,1.045,245,1.255,246,1.255,247,1.255,248,1.255,249,1.255,288,1.352,289,2.898,290,2.329,291,2.329,292,1.919,293,3.612,294,2.329,295,2.582,296,2.582,297,2.582,298,2.582,299,2.898,300,2.582,301,2.582,304,2.582,306,2.582,308,2.898,309,2.898,310,2.582,311,2.387,312,3.245,313,2.608,314,2.608,315,1.391,316,3.285,317,2.805,318,2.566,320,2.387,322,1.928,327,3.083,329,2.127,330,2.891,331,2.387,333,2.127,338,2.898,339,1.562,340,2.387,342,1.562,343,1.391,344,1.255,345,1.255,346,1.391,347,1.142,349,1.045,351,1.255,352,1.562,353,2.387,354,1.562,355,1.255,356,0.96,357,1.391,358,1.391,359,1.562,360,1.562,361,1.746,362,1.255,363,1.562,364,1.391,365,1.562,366,1.391,367,1.562,368,1.562,369,1.562,370,1.562,371,1.562,372,1.255,373,1.391,374,1.919,375,1.391,376,1.391,377,1.391,378,1.391,380,1.255,383,1.391,384,1.391,385,1.391,386,2.127,389,1.255,397,1.391,398,1.391,400,2.387,404,1.562,406,1.562,407,1.562,408,2.127,409,2.387,412,2.736,413,2.736,510,1.79,511,4.226,512,3.322,513,2.898,514,3.266,515,3.266,516,3.965,517,5.044,518,4.44,519,3.266,520,2.136,521,2.136,522,2.136,523,2.136,524,2.136,525,2.136,526,2.136,527,2.136,528,2.136,529,2.136,530,2.387,531,2.136,532,2.136,533,2.136,534,1.79,535,1.562,536,1.255,537,1.79,538,1.562,539,2.136,540,2.136,541,2.136,542,2.136,543,2.136,544,2.136,545,1.562,546,3.266,547,3.266,548,3.266,549,3.266,550,3.266,551,3.266,552,3.266,553,3.266,554,3.266]],["title/injectables/MemoryStorage.html",[89,0.99,495,1.924]],["body/injectables/MemoryStorage.html",[3,0.429,4,0.334,8,0.334,25,1.873,27,1.735,28,0.031,29,1.161,30,0.538,31,1.735,33,0.703,34,0.979,38,0.429,39,0.979,69,0.022,70,0.022,75,0.546,76,0.757,82,1.447,89,1.481,90,1.851,105,1.7,106,1.917,119,2.247,172,2.074,174,1.73,186,2.271,189,1.329,234,1.797,288,1.567,322,2.193,447,2.023,449,3.371,457,3.188,476,3.579,477,4.034,478,3.579,479,3.579,480,3.579,481,3.967,483,3.579,484,3.579,485,3.371,487,2.767,489,2.767,491,2.767,492,2.767,495,2.876,496,2.767,555,5.26,556,4.547,557,3.785,558,3.785,559,3.785,560,3.785,561,2.767,562,3.785,563,3.785,564,3.171,565,3.171,566,3.785,567,3.188,568,3.785,569,3.785,570,3.785,571,4.896,572,3.785,573,3.171,574,3.785,575,2.224,576,3.785]],["title/components/RegisterComponent.html",[0,0.608,62,1.252]],["body/components/RegisterComponent.html",[0,0.707,1,0.765,2,1.187,3,0.227,4,0.177,5,0.9,6,0.9,7,0.9,8,0.177,10,0.9,11,2.499,12,2.499,14,1.286,15,1.286,16,1.396,18,1.396,20,1.396,22,1.098,24,3.012,25,1.762,27,0.94,28,0.031,29,0.868,30,0.453,31,1.603,32,3.763,33,1.146,34,0.518,35,0.9,36,1.07,37,1.07,38,0.227,39,0.518,44,0.9,45,1.396,46,1.396,47,0.9,48,1.928,49,0.9,50,0.9,51,0.765,52,0.9,53,0.765,54,0.707,55,0.9,56,0.765,57,0.9,58,0.765,59,0.9,60,0.765,61,0.9,62,1.64,63,0.9,64,0.765,65,0.707,66,0.868,67,0.9,68,0.9,69,0.014,70,0.014,72,0.829,75,0.201,76,0.481,82,0.765,95,0.829,96,1.176,101,2.304,105,1.71,106,1.345,111,1.304,112,1.776,115,1.304,123,1.576,133,1.304,161,0.9,172,2.33,174,1.098,175,3.339,177,3.2,186,1.775,189,0.771,191,1.304,197,1.825,199,1.677,209,1.464,232,0.707,234,1.646,235,1.66,238,0.979,245,1.176,246,1.176,247,1.176,248,1.176,249,1.176,288,1.286,289,2.783,290,2.236,291,2.236,292,1.825,293,3.544,294,2.236,295,2.479,296,2.479,297,2.479,298,2.479,299,2.783,300,2.479,301,2.479,304,2.479,306,2.479,308,2.783,309,2.783,310,2.479,311,2.271,312,3.136,313,2.52,314,2.52,315,1.304,316,3.2,317,2.74,318,2.507,320,2.271,322,1.878,327,3.012,329,2.023,330,3.621,331,2.271,333,2.023,338,2.783,339,1.464,340,2.271,342,1.464,343,1.304,344,1.176,345,1.176,346,1.304,347,1.07,349,0.979,351,1.176,352,1.464,353,2.271,354,1.464,355,1.176,356,0.9,357,1.304,358,1.304,359,1.464,360,1.464,361,1.66,362,1.176,363,1.464,364,1.304,365,1.464,366,1.304,367,1.464,368,1.464,369,1.464,370,1.464,371,1.464,372,1.176,373,1.304,374,1.825,375,1.304,376,1.304,377,1.304,378,1.304,380,1.176,383,1.304,384,1.304,385,1.304,386,2.023,389,1.176,397,1.304,398,1.304,400,2.271,406,1.464,407,1.464,408,2.023,409,2.271,419,2.236,512,3.189,513,2.783,530,2.271,534,1.677,535,1.464,536,1.176,537,1.677,545,1.464,577,1.677,578,3.107,579,3.107,580,3.807,581,3.107,582,2.002,583,2.002,584,2.002,585,2.002,586,2.002,587,2.002,588,2.002,589,2.002,590,2.603,591,3.107,592,2.479,593,2.479,594,2.002,595,2.002,596,2.002,597,2.002,598,1.464,599,1.304,600,1.677,601,2.002,602,2.002,603,2.002,604,2.002,605,2.002,606,2.002,607,2.002,608,2.002,609,2.002,610,2.002,611,3.107,612,3.107,613,3.107,614,3.107,615,3.107,616,3.107,617,3.107,618,3.107,619,3.107,620,3.107,621,3.107,622,3.107,623,3.107,624,3.107,625,3.107]],["title/interfaces/RegisterRequestDto.html",[71,0.459,197,1.924]],["body/interfaces/RegisterRequestDto.html",[3,0.532,4,0.415,8,0.415,28,0.03,30,0.559,38,0.532,66,1.254,69,0.026,70,0.026,71,0.659,73,1.535,75,0.472,76,0.866,112,2.564,189,1.36,197,3.29,284,2.76,419,3.639,592,4.034,593,4.034,626,3.936]],["title/components/ResetPasswordComponent.html",[0,0.608,64,1.252]],["body/components/ResetPasswordComponent.html",[0,0.794,1,0.925,2,1.371,3,0.274,4,0.214,5,1.087,6,1.087,7,1.087,8,0.214,10,1.087,11,2.624,12,2.624,14,1.485,15,1.485,16,1.612,18,1.612,20,1.612,22,1.267,24,3.215,25,1.767,27,0.732,28,0.031,29,0.865,30,0.446,31,1.655,32,3.524,33,1.145,34,0.626,35,1.087,36,1.293,37,1.293,38,0.274,39,0.626,44,1.087,45,1.612,46,1.612,47,1.087,48,2.124,49,1.087,50,1.087,51,0.925,52,1.087,53,0.925,54,0.855,55,1.087,56,0.925,57,1.087,58,0.925,59,1.087,60,0.925,61,1.087,62,0.925,63,1.087,64,1.807,65,1.934,66,1.022,67,1.087,68,1.087,69,0.016,70,0.016,72,1.002,75,0.243,76,0.555,82,0.925,95,1.002,98,2.826,105,1.612,106,1.267,123,1.485,161,1.087,172,2.356,174,1.267,186,1.634,189,0.726,232,0.855,234,1.293,238,1.183,261,1.422,287,1.769,288,1.485,290,2.511,291,2.511,292,2.107,293,3.739,294,2.511,295,2.783,296,2.783,297,2.783,298,2.783,300,2.783,301,2.783,302,3.005,303,3.005,304,2.783,306,2.783,307,3.581,310,2.783,313,2.777,314,2.777,315,1.576,316,3.443,317,2.925,318,2.676,322,1.634,327,3.215,328,2.027,329,2.336,330,2.336,333,2.336,335,2.027,336,2.027,341,2.027,343,1.576,344,1.422,345,1.422,346,1.576,347,1.293,348,2.783,349,1.183,351,1.422,355,1.422,356,1.087,357,1.576,358,1.576,364,2.336,372,1.422,373,1.576,374,2.511,375,1.576,376,1.576,377,1.576,378,1.576,380,1.422,383,2.336,384,2.336,385,2.336,386,2.783,388,2.027,389,2.107,392,2.027,393,2.027,394,2.027,395,2.027,397,1.576,398,1.576,399,2.027,404,1.769,410,3.005,416,3.005,436,2.027,513,3.124,530,2.622,535,1.769,590,3.005,599,1.576,600,2.027,627,4.965,628,4.965,629,4.274,630,3.587,631,4.274,632,3.587,633,2.42,634,2.42,635,2.42,636,2.42,637,1.769,638,2.42,639,2.42,640,6.164,641,2.42,642,2.42,643,3.587,644,3.581,645,2.42,646,2.027,647,3.587,648,3.587,649,3.587,650,3.587]],["title/interfaces/ResetPasswordRequestDto.html",[71,0.459,201,2.133]],["body/interfaces/ResetPasswordRequestDto.html",[3,0.558,4,0.435,8,0.435,28,0.03,30,0.509,38,0.558,66,0.997,69,0.026,70,0.026,71,0.691,73,1.611,75,0.495,76,0.891,189,1.314,201,3.751,284,2.895,644,5.271,646,5.271,651,4.129]],["title/injectables/SessionStorage.html",[89,0.99,652,2.394]],["body/injectables/SessionStorage.html",[3,0.413,4,0.322,8,0.322,13,2.143,22,1.884,25,1.884,27,1.711,28,0.031,29,1.145,30,0.519,31,1.711,33,0.99,34,0.943,38,0.413,39,0.943,69,0.022,70,0.022,75,0.48,76,0.739,82,1.394,89,1.445,90,1.784,106,1.999,119,2.207,164,2.375,172,2.037,174,1.689,186,2.245,189,1.328,214,2.375,221,1.639,234,1.711,288,1.51,322,2.303,356,1.639,447,1.949,449,3.323,457,3.54,460,2.666,462,2.666,475,4.466,476,3.494,477,3.824,478,3.494,479,3.494,480,3.494,481,3.897,482,4.004,483,3.494,484,3.494,485,3.323,486,3.056,487,3.494,488,3.056,489,3.494,490,3.056,491,2.666,492,2.666,493,3.056,494,2.666,495,2.808,496,2.666,497,3.056,498,3.056,499,3.056,500,3.056,501,3.056,502,4.004,504,3.056,505,3.056,506,3.056,507,3.056,508,3.056,509,3.056,652,3.494,653,5.278,654,3.647]],["title/interfaces/Token.html",[71,0.459,231,1.75]],["body/interfaces/Token.html",[3,0.55,4,0.429,8,0.429,28,0.03,30,0.504,38,0.55,69,0.026,70,0.026,71,0.681,73,1.587,75,0.488,76,0.883,176,3.678,189,1.309,231,3.052,575,3.354,655,4.067,656,4.577,657,5.245,658,5.245]],["title/interfaces/TokenDto.html",[71,0.459,206,2.133]],["body/interfaces/TokenDto.html",[3,0.55,4,0.429,8,0.429,28,0.03,30,0.504,38,0.55,69,0.026,70,0.026,71,0.681,73,1.587,75,0.488,76,0.883,176,3.678,189,1.309,206,3.718,575,3.354,656,4.577,657,5.245,658,5.245,659,4.067]],["title/interfaces/User.html",[71,0.459,232,1.157]],["body/interfaces/User.html",[3,0.459,4,0.358,8,0.358,28,0.031,29,0.821,30,0.583,33,0.95,38,0.459,69,0.023,70,0.023,71,0.569,73,1.326,75,0.408,76,0.792,112,2.437,189,1.355,232,1.808,234,1.695,235,3.146,419,3.458,561,3.74,592,3.833,593,3.833,660,3.397,661,4.932,662,4.932,663,4.932,664,4.932,665,4.303,666,4.932,667,4.932,668,4.696,669,3.332,670,4.055,671,3.74,672,4.055,673,3.397,674,3.397,675,2.964,676,3.397,677,3.397]],["title/interfaces/UserDto.html",[71,0.459,210,2.133]],["body/interfaces/UserDto.html",[3,0.459,4,0.358,8,0.358,28,0.031,29,0.821,30,0.583,33,0.95,38,0.459,69,0.023,70,0.023,71,0.569,73,1.326,75,0.408,76,0.792,112,2.437,189,1.355,210,3.332,234,1.695,235,3.146,419,3.458,561,3.74,592,3.833,593,3.833,661,4.932,662,4.932,663,4.932,664,4.932,665,4.303,666,4.932,667,4.932,668,4.696,669,3.332,671,3.74,673,3.397,674,3.397,675,2.964,676,3.397,677,3.397,678,3.397,679,4.055,680,4.055]],["title/coverage.html",[681,3.251]],["body/coverage.html",[0,1.079,1,1.041,8,0.24,9,2.281,28,0.031,30,0.24,51,1.041,53,1.041,56,1.041,58,1.041,60,1.041,62,1.041,64,1.041,66,0.791,69,0.018,70,0.018,71,0.842,72,1.127,74,3.344,77,1.6,78,1.6,80,1.773,83,1.99,84,1.99,85,2.281,89,1.667,91,2.281,92,2.089,93,1.773,94,1.455,95,1.127,96,1.6,97,1.773,98,1.455,99,1.773,101,1.223,102,1.6,134,1.773,149,1.773,165,1.773,166,1.773,167,1.773,168,1.773,169,1.773,170,1.773,173,2.281,183,1.6,197,1.6,201,1.773,205,1.773,206,1.773,210,1.773,221,1.223,224,3.344,231,1.455,232,0.962,243,1.99,244,1.99,250,1.99,283,2.281,284,2.937,285,2.281,286,2.281,287,2.858,347,1.455,348,1.773,349,1.331,350,1.99,417,1.99,418,2.281,420,2.281,433,1.99,441,2.281,446,3.344,447,2.945,455,1.773,466,1.99,467,1.99,474,2.281,495,1.6,510,2.281,536,2.687,538,1.99,555,2.281,575,3.987,577,2.281,598,1.99,599,1.773,626,2.281,627,2.281,628,2.281,637,1.99,651,2.281,652,1.99,653,2.281,655,2.281,659,2.281,660,2.281,678,2.281,681,1.99,682,2.723,683,2.723,684,2.723,685,4.574,686,3.275,687,6.714,688,2.281,689,6.726,690,2.281,691,2.858,692,2.723,693,1.99,694,2.281,695,3.909,696,3.909,697,3.909,698,3.909,699,2.281,700,2.281,701,3.275,702,2.281,703,2.281,704,3.275,705,2.723,706,3.909,707,3.909,708,5.347,709,2.723,710,3.909,711,4.955,712,2.281,713,3.832,714,2.281,715,2.281,716,2.723,717,2.723,718,2.723,719,2.281,720,2.281,721,2.281,722,2.281,723,2.281,724,2.723,725,2.723]],["title/dependencies.html",[726,2.007,727,3.295]],["body/dependencies.html",[28,0.031,34,1.164,35,2.023,36,2.918,37,2.407,69,0.025,70,0.025,159,3.773,161,2.023,238,2.67,344,2.646,356,2.023,567,2.932,727,3.773,728,4.503,729,4.503,730,6.632,731,4.503,732,5.874,733,3.99,734,4.503,735,4.503,736,3.773,737,4.503,738,4.503,739,4.503,740,3.773,741,4.503,742,4.503,743,4.503,744,4.503,745,4.503,746,4.503,747,3.773,748,4.503,749,4.503,750,4.503,751,4.503,752,4.503,753,3.773,754,4.503,755,4.503,756,4.503,757,4.503,758,4.503,759,4.503]],["title/miscellaneous/enumerations.html",[760,1.467,761,3.295]],["body/miscellaneous/enumerations.html",[28,0.029,69,0.026,70,0.026,75,0.477,106,2.195,123,2.331,232,1.675,236,4.717,253,4.115,261,3.307,442,3.971,665,3.465,669,3.911,671,4.115,760,2.533,761,3.971,762,4.74,763,4.74,764,5.629,765,4.74,766,5.629,767,4.74,768,4.74,769,3.971,770,3.971,771,4.74,772,4.74,773,4.74,774,4.74,775,4.74,776,4.74,777,4.74,778,4.74,779,4.74,780,3.971,781,3.971,782,3.971,783,4.74,784,4.74,785,4.74,786,5.629]],["title/miscellaneous/functions.html",[760,1.467,787,3.295]],["body/miscellaneous/functions.html",[27,1.543,28,0.028,29,1.033,30,0.451,31,1.543,69,0.027,70,0.027,75,0.513,179,4.296,181,3.729,691,3.729,693,4.296,760,2.727,787,4.274,788,4.274,789,5.101]],["title/index.html",[75,0.276,790,2.3,791,2.3]],["body/index.html",[0,0.962,2,1.759,4,0.304,14,1.426,28,0.026,29,0.932,69,0.021,70,0.021,181,2.518,205,2.243,221,1.548,256,2.243,270,2.518,288,1.426,318,1.685,361,1.841,465,2.518,536,3.045,567,3.375,726,2.518,733,2.518,736,2.886,753,2.886,770,2.886,781,2.886,782,4.634,792,3.856,793,4.602,794,5.182,795,4.602,796,4.602,797,4.602,798,5.764,799,6.055,800,3.445,801,4.602,802,3.445,803,2.886,804,3.445,805,3.445,806,2.886,807,2.886,808,3.445,809,3.445,810,3.445,811,3.445,812,4.602,813,3.445,814,3.445,815,3.788,816,3.445,817,3.445,818,3.445,819,3.445,820,3.445,821,3.445,822,2.886,823,3.445,824,3.445,825,3.445,826,3.445,827,3.445,828,3.445,829,2.886,830,2.518,831,5.317,832,5.93,833,3.445,834,3.445,835,3.445,836,3.445,837,2.886,838,3.445,839,4.342,840,3.856,841,2.886,842,3.445,843,4.342,844,4.342,845,3.445,846,6.23,847,3.445,848,3.445,849,3.445,850,3.445,851,6.463,852,5.93,853,4.602,854,4.342,855,4.342,856,5.219,857,4.602,858,3.445,859,3.445,860,5.182,861,4.342,862,4.602,863,4.602,864,4.602,865,5.182,866,5.182,867,3.856,868,4.602,869,5.531,870,3.445,871,3.856,872,4.602,873,3.445,874,4.968,875,3.445,876,3.445,877,2.886,878,2.886,879,3.445,880,3.445,881,4.602,882,3.445,883,3.445,884,4.602,885,3.445,886,4.602,887,3.445,888,3.445,889,2.886,890,2.886,891,3.788,892,3.445,893,4.602,894,2.886,895,3.445,896,3.445,897,2.886,898,2.886,899,3.445,900,3.445,901,2.886,902,3.445,903,3.445,904,2.886]],["title/license.html",[790,2.3,791,2.3,905,2.3]],["body/license.html",[0,0.485,4,0.511,8,0.119,25,0.226,28,0.016,30,0.119,33,0.139,39,0.194,66,0.152,69,0.008,70,0.006,71,0.446,73,0.604,103,0.627,119,0.31,172,0.286,174,0.265,221,1.429,230,0.547,232,1.579,256,0.487,264,0.547,322,0.286,361,0.4,362,0.44,366,0.487,389,0.44,401,3.028,408,0.487,438,0.627,445,3.439,448,4.364,449,0.44,457,0.44,465,0.988,477,0.487,485,0.794,556,1.547,565,0.627,567,1.702,573,0.627,668,0.547,669,2.472,675,2.775,681,0.988,747,1.132,769,0.627,780,1.132,803,0.627,806,0.627,807,0.627,815,3.808,829,3.439,830,0.547,831,2.857,837,1.895,839,2.19,840,1.895,841,4.671,843,0.627,844,4.32,854,1.895,855,1.132,856,3.652,861,0.627,867,1.547,871,0.627,874,0.627,877,2.19,878,1.895,889,3.652,890,1.547,894,1.547,897,4.272,898,1.132,901,1.547,904,1.132,905,5.371,906,4.83,907,2.614,908,0.749,909,0.749,910,1.847,911,5.434,912,3.41,913,4.905,914,5.307,915,2.916,916,0.749,917,0.749,918,1.351,919,2.614,920,5.209,921,2.614,922,1.847,923,4.359,924,1.847,925,0.749,926,1.847,927,0.749,928,0.749,929,1.351,930,2.916,931,0.749,932,2.916,933,0.749,934,0.749,935,3.41,936,1.351,937,0.749,938,0.749,939,0.749,940,4.359,941,5.913,942,1.847,943,3.614,944,1.351,945,6.376,946,1.351,947,3.179,948,3.179,949,4.359,950,2.916,951,0.749,952,0.749,953,2.261,954,3.41,955,3.41,956,1.847,957,0.749,958,1.351,959,0.749,960,1.847,961,4.83,962,1.351,963,2.261,964,0.749,965,0.749,966,1.351,967,2.261,968,2.261,969,1.351,970,4.105,971,1.351,972,4.974,973,2.614,974,1.351,975,2.261,976,0.749,977,3.179,978,2.614,979,0.749,980,3.41,981,2.916,982,5.508,983,1.847,984,3.179,985,0.749,986,0.749,987,2.614,988,0.749,989,2.614,990,3.41,991,1.351,992,3.958,993,2.614,994,1.351,995,0.749,996,0.749,997,4.469,998,1.351,999,0.749,1000,0.749,1001,4.238,1002,1.351,1003,0.749,1004,1.847,1005,0.749,1006,0.749,1007,1.351,1008,0.749,1009,0.749,1010,2.916,1011,2.261,1012,0.749,1013,0.749,1014,0.749,1015,0.749,1016,0.749,1017,0.749,1018,1.351,1019,0.749,1020,0.749,1021,0.749,1022,1.351,1023,0.749,1024,1.847,1025,1.351,1026,0.749,1027,0.749,1028,1.351,1029,1.351,1030,4.359,1031,0.749,1032,1.351,1033,1.351,1034,0.749,1035,0.749,1036,1.351,1037,1.847,1038,1.351,1039,1.847,1040,1.351,1041,0.749,1042,0.749,1043,2.916,1044,0.749,1045,0.749,1046,0.749,1047,2.614,1048,0.749,1049,0.749,1050,2.261,1051,0.749,1052,0.749,1053,1.351,1054,1.847,1055,0.749,1056,0.749,1057,0.749,1058,4.359,1059,2.261,1060,2.614,1061,2.916,1062,1.847,1063,0.749,1064,1.847,1065,4.75,1066,1.351,1067,0.749,1068,0.749,1069,0.749,1070,1.847,1071,5.835,1072,3.796,1073,0.749,1074,0.749,1075,1.351,1076,1.351,1077,0.749,1078,3.796,1079,0.749,1080,2.261,1081,3.41,1082,0.749,1083,1.847,1084,1.847,1085,1.351,1086,2.916,1087,5.768,1088,1.847,1089,3.614,1090,2.261,1091,3.179,1092,1.351,1093,0.749,1094,1.351,1095,1.847,1096,3.614,1097,3.796,1098,2.261,1099,0.749,1100,1.351,1101,1.351,1102,2.261,1103,2.261,1104,3.614,1105,0.749,1106,1.847,1107,0.749,1108,5.259,1109,1.351,1110,0.749,1111,3.41,1112,0.749,1113,1.847,1114,2.261,1115,3.41,1116,0.749,1117,4.469,1118,2.261,1119,1.351,1120,3.41,1121,3.958,1122,2.916,1123,0.749,1124,0.749,1125,0.749,1126,0.749,1127,3.41,1128,0.749,1129,1.351,1130,4.238,1131,0.749,1132,0.749,1133,1.351,1134,1.847,1135,0.749,1136,0.749,1137,1.847,1138,0.749,1139,0.749,1140,0.749,1141,0.749,1142,3.958,1143,1.847,1144,4.167,1145,0.749,1146,0.749,1147,0.749,1148,0.749,1149,1.351,1150,1.351,1151,3.796,1152,0.749,1153,1.351,1154,2.916,1155,0.749,1156,0.749,1157,2.614,1158,1.847,1159,1.847,1160,2.916,1161,1.847,1162,1.847,1163,0.749,1164,0.749,1165,2.614,1166,2.916,1167,0.749,1168,0.749,1169,1.351,1170,0.627,1171,1.847,1172,0.749,1173,0.749,1174,1.847,1175,0.749,1176,0.749,1177,0.749,1178,1.351,1179,0.749,1180,5.099,1181,3.41,1182,0.749,1183,2.916,1184,1.351,1185,0.749,1186,0.749,1187,1.351,1188,1.351,1189,0.749,1190,0.749,1191,0.749,1192,0.749,1193,1.351,1194,1.847,1195,2.614,1196,0.749,1197,1.351,1198,0.749,1199,0.749,1200,2.916,1201,0.749,1202,0.749,1203,3.179,1204,2.261,1205,0.749,1206,2.614,1207,0.749,1208,1.351,1209,0.749,1210,0.749,1211,1.847,1212,1.847,1213,0.627,1214,0.749,1215,0.749,1216,0.749,1217,1.847,1218,1.847,1219,2.916,1220,0.749,1221,0.749,1222,1.351,1223,1.351,1224,2.19,1225,1.351,1226,0.749,1227,4.238,1228,1.351,1229,0.749,1230,0.749,1231,0.749,1232,0.749,1233,0.749,1234,0.749,1235,1.847,1236,0.749,1237,0.749,1238,4.469,1239,1.547,1240,0.749,1241,0.749,1242,0.749,1243,2.614,1244,2.614,1245,0.749,1246,0.749,1247,1.847,1248,0.749,1249,0.749,1250,2.261,1251,0.749,1252,1.351,1253,0.749,1254,0.749,1255,0.749,1256,0.749,1257,0.749,1258,0.749,1259,1.351,1260,1.351,1261,0.749,1262,1.847,1263,0.749,1264,0.749,1265,1.351,1266,0.749,1267,0.749,1268,0.749,1269,0.749,1270,1.351,1271,1.351,1272,1.351,1273,1.351,1274,3.614,1275,1.351,1276,2.916,1277,0.749,1278,0.749,1279,1.351,1280,1.847,1281,1.847,1282,2.261,1283,2.261,1284,1.847,1285,2.261,1286,1.847,1287,0.749,1288,2.614,1289,2.614,1290,1.847,1291,1.847,1292,0.749,1293,1.351,1294,1.351,1295,2.614,1296,1.351,1297,2.261,1298,2.261,1299,1.351,1300,1.847,1301,4.359,1302,2.614,1303,0.749,1304,0.749,1305,0.749,1306,1.847,1307,1.847,1308,1.351,1309,1.351,1310,0.749,1311,0.749,1312,0.749,1313,0.749,1314,1.351,1315,0.749,1316,0.749,1317,1.847,1318,0.749,1319,0.749,1320,1.351,1321,1.847,1322,0.749,1323,1.351,1324,0.749,1325,1.847,1326,0.749,1327,0.749,1328,0.749,1329,1.351,1330,1.351,1331,2.916,1332,4.974,1333,1.847,1334,1.351,1335,1.351,1336,1.351,1337,1.351,1338,2.261,1339,2.261,1340,1.351,1341,0.749,1342,0.749,1343,0.749,1344,0.749,1345,0.749,1346,3.179,1347,2.916,1348,1.351,1349,0.749,1350,0.749,1351,0.749,1352,0.749,1353,1.351,1354,0.749,1355,1.351,1356,0.749,1357,2.614,1358,3.41,1359,2.261,1360,0.749,1361,3.958,1362,0.749,1363,0.749,1364,0.749,1365,0.749,1366,1.351,1367,0.749,1368,0.749,1369,0.749,1370,1.351,1371,1.847,1372,2.614,1373,1.351,1374,2.261,1375,1.351,1376,0.749,1377,0.749,1378,1.351,1379,0.749,1380,0.749,1381,0.749,1382,1.351,1383,0.749,1384,0.749,1385,1.847,1386,2.261,1387,0.749,1388,1.351,1389,0.749,1390,1.351,1391,0.749,1392,0.749,1393,1.847,1394,0.749,1395,0.749,1396,0.749,1397,0.749,1398,0.749,1399,1.351,1400,0.749,1401,0.749,1402,0.749,1403,0.749,1404,0.749,1405,1.847,1406,0.749,1407,0.749,1408,0.749,1409,0.749,1410,0.749,1411,2.614,1412,0.749,1413,0.749,1414,1.132,1415,2.261,1416,3.41,1417,0.749,1418,0.627,1419,2.261,1420,0.749,1421,0.749,1422,0.749,1423,0.749,1424,0.749,1425,1.351,1426,3.179,1427,1.847,1428,0.749,1429,2.261,1430,0.749,1431,0.749,1432,1.847,1433,0.749,1434,0.749,1435,1.847,1436,0.749,1437,1.351,1438,1.351,1439,0.749,1440,0.749,1441,0.749,1442,0.749,1443,0.749,1444,0.749,1445,0.749,1446,0.749,1447,0.749,1448,0.749,1449,1.351,1450,0.749,1451,0.749,1452,0.749,1453,1.351,1454,1.351,1455,0.749,1456,0.749,1457,1.847,1458,0.749,1459,1.847,1460,1.351,1461,0.749,1462,1.351,1463,0.749,1464,1.351,1465,0.749,1466,1.847,1467,3.179,1468,0.749,1469,1.351,1470,1.351,1471,0.749,1472,1.351,1473,0.749,1474,0.749,1475,0.749,1476,0.749,1477,0.749,1478,1.351,1479,0.749,1480,1.351,1481,2.261,1482,0.749,1483,2.614,1484,0.749,1485,0.749,1486,0.749,1487,0.749,1488,0.749,1489,0.749,1490,1.351,1491,1.351,1492,1.351,1493,1.847,1494,0.749,1495,1.351,1496,1.351,1497,0.749,1498,1.351,1499,1.847,1500,0.749,1501,1.351,1502,0.749,1503,1.351,1504,0.749,1505,1.847,1506,1.351,1507,0.749,1508,0.749,1509,1.351,1510,5.099,1511,1.351,1512,0.749,1513,2.614,1514,3.796,1515,1.847,1516,0.749,1517,0.749,1518,0.749,1519,2.261,1520,0.749,1521,0.749,1522,1.847,1523,0.749,1524,1.351,1525,0.749,1526,0.749,1527,0.749,1528,2.261,1529,0.749,1530,0.749,1531,0.749,1532,0.749,1533,0.749,1534,2.261,1535,1.351,1536,1.351,1537,0.749,1538,0.749,1539,1.847,1540,0.749,1541,1.351,1542,1.847,1543,1.351,1544,0.749,1545,0.749,1546,0.749,1547,0.749,1548,1.351,1549,1.847,1550,0.749,1551,0.749,1552,0.749,1553,1.351,1554,0.749,1555,0.749,1556,0.749,1557,0.749,1558,0.749,1559,0.749,1560,1.847,1561,1.351,1562,0.749,1563,0.749,1564,2.261,1565,0.749,1566,1.847,1567,0.749,1568,0.749,1569,0.749,1570,1.351,1571,0.749,1572,0.749,1573,0.749,1574,1.847,1575,1.351,1576,1.351,1577,0.749,1578,3.179,1579,1.351,1580,1.847,1581,2.261,1582,0.749,1583,0.749,1584,0.749,1585,1.351,1586,0.749,1587,1.847,1588,0.749,1589,1.351,1590,0.749,1591,0.749,1592,0.749,1593,0.749,1594,1.847,1595,0.749,1596,1.847,1597,1.351,1598,0.749,1599,1.351,1600,0.749,1601,0.749,1602,1.351,1603,1.351,1604,0.749,1605,0.749,1606,1.351,1607,0.749,1608,0.749,1609,0.749,1610,0.749,1611,0.749,1612,1.847,1613,0.749,1614,0.749,1615,0.749,1616,0.749,1617,0.749,1618,2.261,1619,1.351,1620,1.847,1621,0.749,1622,0.749,1623,0.749,1624,0.749,1625,0.749,1626,1.351,1627,0.749,1628,0.749,1629,0.749,1630,0.749,1631,0.749,1632,0.749,1633,0.749,1634,0.749,1635,0.749,1636,0.749,1637,0.749,1638,0.749,1639,0.749,1640,0.749,1641,0.749,1642,2.261,1643,0.749,1644,1.351,1645,0.749,1646,0.749,1647,0.749,1648,0.749,1649,0.749,1650,0.749,1651,0.749,1652,0.749,1653,0.749,1654,1.847,1655,0.749,1656,0.749,1657,0.749,1658,0.749,1659,0.749,1660,1.351,1661,0.749,1662,0.749,1663,0.749,1664,0.749,1665,0.749,1666,0.749,1667,1.351,1668,1.351,1669,2.614,1670,1.847,1671,0.749,1672,1.351,1673,0.749,1674,0.749,1675,0.749,1676,0.749,1677,1.847,1678,1.351,1679,0.749,1680,1.351,1681,1.351,1682,1.351,1683,0.749,1684,0.749,1685,0.749,1686,0.749,1687,0.749,1688,0.749,1689,1.351,1690,0.749,1691,0.749,1692,0.749,1693,0.749,1694,1.847,1695,0.749,1696,0.749,1697,0.749,1698,0.627,1699,0.749,1700,0.749,1701,0.749,1702,0.749,1703,0.749,1704,0.749,1705,0.749,1706,1.351,1707,0.749,1708,0.749,1709,0.749,1710,0.749,1711,0.749,1712,0.749,1713,0.749,1714,0.749,1715,0.749,1716,0.749,1717,0.749,1718,0.749,1719,0.749,1720,0.749,1721,0.749,1722,0.749,1723,0.749,1724,0.749,1725,0.749,1726,1.847,1727,1.351,1728,0.749,1729,0.749,1730,0.749,1731,0.749,1732,0.749,1733,0.749,1734,1.351,1735,1.351,1736,0.749,1737,0.749,1738,0.749,1739,0.749,1740,0.749,1741,0.749,1742,0.749,1743,0.749,1744,1.351,1745,0.749,1746,0.749,1747,0.749,1748,0.749,1749,0.749,1750,0.749,1751,0.749,1752,0.749,1753,0.627,1754,0.749,1755,0.749,1756,0.749,1757,0.749,1758,0.749,1759,0.749,1760,0.749,1761,0.749,1762,0.749,1763,0.749]],["title/modules.html",[1764,3.727]],["body/modules.html",[28,0.027,69,0.027,70,0.027,1764,4.403]],["title/overview.html",[1765,3.727]],["body/overview.html",[2,1.985,28,0.027,69,0.027,70,0.027,73,1.697,90,2.539,1239,4.351,1765,4.351,1766,4.351,1767,5.193]],["title/properties.html",[76,0.608,726,2.007]],["body/properties.html",[28,0.029,69,0.027,70,0.027,76,0.808,815,3.819,1768,5.224]],["title/miscellaneous/variables.html",[760,1.467,891,2.875]],["body/miscellaneous/variables.html",[15,1.87,28,0.031,30,0.502,54,1.508,65,1.508,66,1.069,69,0.011,70,0.011,72,0.605,74,1.068,75,0.147,77,2.963,78,0.859,80,2.008,82,1.631,83,1.765,84,1.765,86,3.862,92,2.281,93,1.572,94,1.648,95,0.999,96,1.418,97,1.572,98,1.648,99,2.008,101,0.657,102,0.859,105,2.888,106,2.272,119,2.228,121,2.023,123,2.397,134,1.572,149,1.572,156,3,165,1.572,166,1.572,167,1.572,168,1.572,169,1.572,170,1.572,176,0.859,177,2.941,179,1.068,185,1.225,187,2.023,189,0.489,205,3.44,221,2.374,224,1.068,225,3.321,226,2.584,227,1.225,228,2.584,229,2.584,230,4.194,231,2.695,232,2.106,233,1.225,234,1.813,237,1.225,243,1.765,244,1.765,245,2.329,246,2.329,247,2.329,248,2.329,249,2.329,250,2.618,251,1.225,252,4.807,253,1.068,254,3.576,255,1.225,256,4.152,257,3.576,258,1.225,259,1.225,260,3,261,2.963,262,1.225,263,3.576,264,3.687,265,1.225,266,4.101,267,2.023,268,1.225,269,1.225,270,2.618,271,1.225,272,1.225,273,1.225,274,1.225,275,1.225,276,1.225,277,1.225,278,1.225,279,1.225,280,1.225,281,1.225,282,1.225,292,1.812,317,0.781,318,0.715,347,1.29,348,1.572,349,1.181,350,1.765,361,2.524,362,2.329,381,1.225,433,1.765,446,1.068,447,1.648,466,1.765,467,1.765,485,0.859,494,1.068,511,3,536,2.508,538,1.765,545,1.068,564,1.225,575,0.859,598,1.765,599,1.572,637,1.765,656,2.254,686,1.225,688,2.584,690,2.584,691,1.068,693,1.068,694,2.023,699,1.225,700,2.023,701,1.225,702,2.023,703,2.584,704,1.225,708,1.225,711,1.225,712,4.225,713,1.225,714,2.023,715,2.023,719,1.225,720,1.225,721,1.225,722,1.225,723,2.023,733,1.765,740,1.225,760,0.781,788,1.225,792,2.584,822,1.225,830,1.068,891,1.068,1144,3.321,1170,2.023,1213,2.023,1224,2.023,1414,1.225,1418,1.225,1698,1.225,1753,1.225,1766,1.225,1769,2.414,1770,2.414,1771,5.737,1772,2.414,1773,2.414,1774,1.462,1775,2.414,1776,1.462,1777,1.462,1778,1.462,1779,4.895,1780,3.084,1781,2.414,1782,1.462,1783,5.171,1784,1.462,1785,1.462,1786,1.462,1787,1.462,1788,1.462,1789,1.462,1790,1.462,1791,1.462,1792,1.462,1793,1.462,1794,1.462,1795,1.462,1796,1.462,1797,1.462,1798,1.462,1799,1.462,1800,1.462,1801,1.462,1802,1.462,1803,1.462,1804,1.462,1805,1.462,1806,3.581,1807,2.414,1808,2.414,1809,2.414,1810,2.414,1811,2.414,1812,2.414,1813,1.462,1814,1.462,1815,2.414,1816,1.462,1817,1.462,1818,1.462,1819,1.462,1820,1.462,1821,1.462,1822,1.462,1823,1.462,1824,1.462,1825,2.414,1826,2.414,1827,3.581,1828,1.462,1829,1.462,1830,1.462,1831,1.462,1832,1.462,1833,1.462,1834,1.462,1835,1.462,1836,1.462,1837,1.462,1838,1.462,1839,1.462,1840,1.462,1841,5.68,1842,4.722,1843,5.468,1844,3.084,1845,1.462,1846,2.414,1847,2.414,1848,2.414,1849,1.462,1850,1.462,1851,1.462,1852,1.462,1853,1.462,1854,2.414,1855,1.462,1856,2.414,1857,1.462,1858,1.462,1859,1.462,1860,1.462,1861,1.462,1862,1.462,1863,1.462,1864,2.414,1865,1.462,1866,1.462,1867,1.462,1868,1.462,1869,1.462,1870,1.462,1871,1.462,1872,1.462,1873,1.462,1874,1.462,1875,1.462,1876,1.462,1877,1.462,1878,1.462,1879,2.414,1880,1.462,1881,1.462,1882,1.462,1883,1.462,1884,1.462,1885,1.462,1886,3.084,1887,2.414,1888,3.084,1889,3.084,1890,1.462,1891,1.462,1892,1.462,1893,1.462,1894,1.462,1895,1.462,1896,1.462,1897,4.722,1898,3.581,1899,1.462,1900,1.462,1901,1.462,1902,3.084,1903,2.414,1904,1.462,1905,1.462,1906,1.462,1907,1.462,1908,1.462,1909,1.462,1910,1.462,1911,1.462,1912,1.462,1913,1.462,1914,1.462,1915,1.462]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":575,"title":{},"body":{"injectables/MemoryStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":1768,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["0.14.3",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":685,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":987,"title":{},"body":{"license.html":{}}}],["1.0.9",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1239,"title":{},"body":{"license.html":{},"overview.html":{}}}],["11",{"_index":1252,"title":{},"body":{"license.html":{}}}],["13",{"_index":1657,"title":{},"body":{"license.html":{}}}],["15",{"_index":1469,"title":{},"body":{"license.html":{}}}],["15.0.0",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1470,"title":{},"body":{"license.html":{}}}],["17",{"_index":818,"title":{},"body":{"index.html":{}}}],["17.1.0",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["17.1.3",{"_index":736,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["17.6.0",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["1996",{"_index":1258,"title":{},"body":{"license.html":{}}}],["2",{"_index":989,"title":{},"body":{"license.html":{}}}],["2.3.0",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1256,"title":{},"body":{"license.html":{}}}],["2007",{"_index":910,"title":{},"body":{"license.html":{}}}],["25",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":1638,"title":{},"body":{"license.html":{}}}],["29",{"_index":908,"title":{},"body":{"license.html":{}}}],["3",{"_index":907,"title":{},"body":{"license.html":{}}}],["3.3.1",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1530,"title":{},"body":{"license.html":{}}}],["4",{"_index":1291,"title":{},"body":{"license.html":{}}}],["4.18.2",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["404",{"_index":382,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["5",{"_index":1326,"title":{},"body":{"license.html":{}}}],["6",{"_index":1767,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1523,"title":{},"body":{"license.html":{}}}],["6b",{"_index":1354,"title":{},"body":{"license.html":{}}}],["6d",{"_index":1380,"title":{},"body":{"license.html":{}}}],["7",{"_index":1286,"title":{},"body":{"license.html":{}}}],["7.8.0",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1766,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["80:4000",{"_index":866,"title":{},"body":{"index.html":{}}}],["9])(?=.*[a",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_next",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_state",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ability",{"_index":1434,"title":{},"body":{"license.html":{}}}],["above",{"_index":1505,"title":{},"body":{"license.html":{}}}],["absence",{"_index":1287,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":1716,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":1743,"title":{},"body":{"license.html":{}}}],["abuse",{"_index":1021,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1535,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1534,"title":{},"body":{"license.html":{}}}],["access",{"_index":1010,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":1605,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":480,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["accesstoken",{"_index":656,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"miscellaneous/variables.html":{}}}],["accompanied",{"_index":1333,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":1720,"title":{},"body":{"license.html":{}}}],["accord",{"_index":1285,"title":{},"body":{"license.html":{}}}],["according",{"_index":1711,"title":{},"body":{"license.html":{}}}],["achieve",{"_index":1725,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1215,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":1585,"title":{},"body":{"license.html":{}}}],["action",{"_index":258,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":103,"title":{},"body":{"injectables/AuthEffects.html":{},"license.html":{}}}],["activated",{"_index":661,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["activatedroutesnapshot",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["activities",{"_index":1106,"title":{},"body":{"license.html":{}}}],["activity",{"_index":1633,"title":{},"body":{"license.html":{}}}],["actual",{"_index":1610,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["actually",{"_index":1404,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":1077,"title":{},"body":{"license.html":{}}}],["add",{"_index":878,"title":{},"body":{"index.html":{},"license.html":{}}}],["added",{"_index":1284,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1301,"title":{},"body":{"license.html":{}}}],["address",{"_index":1664,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":1074,"title":{},"body":{"license.html":{}}}],["adopted",{"_index":1255,"title":{},"body":{"license.html":{}}}],["adversely",{"_index":1443,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1707,"title":{},"body":{"license.html":{}}}],["affects",{"_index":1444,"title":{},"body":{"license.html":{}}}],["affero",{"_index":1654,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":1565,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1209,"title":{},"body":{"license.html":{}}}],["afterviewinit",{"_index":289,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["against",{"_index":1273,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":1317,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1650,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1693,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1596,"title":{},"body":{"license.html":{}}}],["aim",{"_index":1017,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":1573,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1045,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":926,"title":{},"body":{"license.html":{}}}],["allows",{"_index":802,"title":{},"body":{"index.html":{}}}],["along",{"_index":1289,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":568,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["already",{"_index":1584,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":1350,"title":{},"body":{"license.html":{}}}],["although",{"_index":1013,"title":{},"body":{"license.html":{}}}],["ancillary",{"_index":1537,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":993,"title":{},"body":{"license.html":{}}}],["angular",{"_index":798,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":356,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["angular/compiler",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":344,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["anti",{"_index":1242,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":1298,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1090,"title":{},"body":{"license.html":{}}}],["api",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.authoptions",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.authurl",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.noauthoptions",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiurl",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appefects",{"_index":83,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicable",{"_index":1096,"title":{},"body":{"license.html":{}}}],["application",{"_index":799,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":807,"title":{},"body":{"index.html":{},"license.html":{}}}],["applied",{"_index":1052,"title":{},"body":{"license.html":{}}}],["applies",{"_index":944,"title":{},"body":{"license.html":{}}}],["apply",{"_index":949,"title":{},"body":{"license.html":{}}}],["appname",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1120,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":1278,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":1715,"title":{},"body":{"license.html":{}}}],["appstate",{"_index":72,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appstore",{"_index":84,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["area",{"_index":1023,"title":{},"body":{"license.html":{}}}],["arise",{"_index":1031,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1697,"title":{},"body":{"license.html":{}}}],["arrange",{"_index":1606,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":1620,"title":{},"body":{"license.html":{}}}],["article",{"_index":1251,"title":{},"body":{"license.html":{}}}],["artifacts",{"_index":847,"title":{},"body":{"index.html":{}}}],["asking",{"_index":965,"title":{},"body":{"license.html":{}}}],["assert",{"_index":988,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":402,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["assets",{"_index":1555,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1189,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1688,"title":{},"body":{"license.html":{}}}],["assumption",{"_index":1719,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":1492,"title":{},"body":{"license.html":{}}}],["assures",{"_index":1055,"title":{},"body":{"license.html":{}}}],["async)?.firstname",{"_index":439,"title":{},"body":{"components/HomeComponent.html":{}}}],["async)?.lastname",{"_index":440,"title":{},"body":{"components/HomeComponent.html":{}}}],["attach",{"_index":1727,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":1508,"title":{},"body":{"license.html":{}}}],["attributed",{"_index":1005,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":1473,"title":{},"body":{"license.html":{}}}],["auth",{"_index":86,"title":{},"body":{"components/AuthComponent.html":{},"injectables/JwtService.html":{},"miscellaneous/variables.html":{}}}],["auth'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["auth.actions",{"_index":171,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{}}}],["auth.component.html",{"_index":87,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.scss",{"_index":88,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.forgot",{"_index":387,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["auth.login.authorization_error",{"_index":540,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.forgot_password",{"_index":553,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_is_required",{"_index":551,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_label",{"_index":550,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.password_length",{"_index":552,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.register",{"_index":554,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.sign_in_to_continue",{"_index":547,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_is_required",{"_index":548,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.username_label",{"_index":412,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["auth.login.username_length",{"_index":549,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.welcome_message",{"_index":546,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.login.wrong_username_or_password",{"_index":541,"title":{},"body":{"components/LoginComponent.html":{}}}],["auth.register.back_to_login",{"_index":625,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_is_required",{"_index":620,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.email_label",{"_index":619,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_is_required",{"_index":622,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.first_name_label",{"_index":621,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_is_required",{"_index":624,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.last_name_label",{"_index":623,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_label",{"_index":616,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_length",{"_index":617,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.password_not_strong",{"_index":618,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error",{"_index":603,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.registration_error_description",{"_index":604,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_is_required",{"_index":614,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_label",{"_index":613,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.username_length",{"_index":615,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_description",{"_index":612,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.register.welcome_message",{"_index":611,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auth.reset",{"_index":640,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["auth/auth.effects",{"_index":79,"title":{},"body":{"interfaces/AppState.html":{}}}],["auth/auth.reducer",{"_index":81,"title":{},"body":{"interfaces/AppState.html":{}}}],["authcomponent",{"_index":51,"title":{"components/AuthComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["autheffects",{"_index":78,"title":{"injectables/AuthEffects.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":92,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticate(request",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticated",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authenticaterequestdto",{"_index":183,"title":{"interfaces/AuthenticateRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"coverage.html":{}}}],["authentication",{"_index":260,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["authenticationfailure",{"_index":165,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationsuccess",{"_index":93,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationsuccess(token",{"_index":120,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["authinterceptor",{"_index":702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authoptions",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":1472,"title":{},"body":{"license.html":{}}}],["authorization",{"_index":1418,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["authorized",{"_index":1463,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":1579,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":1624,"title":{},"body":{"license.html":{}}}],["authors",{"_index":948,"title":{},"body":{"license.html":{}}}],["authreducer",{"_index":80,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":101,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authstate",{"_index":77,"title":{"interfaces/AuthState.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authurl",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automatic",{"_index":1546,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":837,"title":{},"body":{"index.html":{},"license.html":{}}}],["available",{"_index":1104,"title":{},"body":{"license.html":{}}}],["avoid",{"_index":1049,"title":{},"body":{"license.html":{}}}],["away",{"_index":934,"title":{},"body":{"license.html":{}}}],["b",{"_index":1166,"title":{},"body":{"license.html":{}}}],["backend",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["based",{"_index":1086,"title":{},"body":{"license.html":{}}}],["basic",{"_index":1202,"title":{},"body":{"license.html":{}}}],["bearer",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["behalf",{"_index":1229,"title":{},"body":{"license.html":{}}}],["being",{"_index":1378,"title":{},"body":{"license.html":{}}}],["believe",{"_index":1616,"title":{},"body":{"license.html":{}}}],["below",{"_index":1236,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":1609,"title":{},"body":{"license.html":{}}}],["best",{"_index":1724,"title":{},"body":{"license.html":{}}}],["better",{"_index":566,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["between",{"_index":1199,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":1319,"title":{},"body":{"license.html":{}}}],["body",{"_index":1148,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":235,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["bootstrap",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":998,"title":{},"body":{"license.html":{}}}],["box",{"_index":1749,"title":{},"body":{"license.html":{}}}],["browser",{"_index":733,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["build",{"_index":846,"title":{},"body":{"index.html":{}}}],["business",{"_index":1630,"title":{},"body":{"license.html":{}}}],["buttonmodule",{"_index":298,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["c",{"_index":912,"title":{},"body":{"license.html":{}}}],["called",{"_index":1084,"title":{},"body":{"license.html":{}}}],["calls",{"_index":825,"title":{},"body":{"index.html":{}}}],["can't",{"_index":900,"title":{},"body":{"index.html":{}}}],["canactivatefn",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabilities",{"_index":812,"title":{},"body":{"index.html":{}}}],["carry",{"_index":1293,"title":{},"body":{"license.html":{}}}],["case",{"_index":1149,"title":{},"body":{"license.html":{}}}],["cases",{"_index":1399,"title":{},"body":{"license.html":{}}}],["catcherror",{"_index":160,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["catcherror((error",{"_index":121,"title":{},"body":{"injectables/AuthEffects.html":{},"miscellaneous/variables.html":{}}}],["cause",{"_index":1323,"title":{},"body":{"license.html":{}}}],["cease",{"_index":1512,"title":{},"body":{"license.html":{}}}],["centralized",{"_index":794,"title":{},"body":{"index.html":{}}}],["certain",{"_index":968,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":1525,"title":{},"body":{"license.html":{}}}],["chain",{"_index":403,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["change",{"_index":839,"title":{},"body":{"index.html":{},"license.html":{}}}],["changed",{"_index":1003,"title":{},"body":{"license.html":{}}}],["changing",{"_index":925,"title":{},"body":{"license.html":{}}}],["characterized",{"_index":1431,"title":{},"body":{"license.html":{}}}],["charge",{"_index":954,"title":{},"body":{"license.html":{}}}],["checkusername",{"_index":311,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["checkusername(username",{"_index":320,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["choice",{"_index":876,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1672,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":1676,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":1234,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":1243,"title":{},"body":{"license.html":{}}}],["civil",{"_index":1718,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1570,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1581,"title":{},"body":{"license.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clear",{"_index":449,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["clearly",{"_index":995,"title":{},"body":{"license.html":{}}}],["cli",{"_index":814,"title":{},"body":{"index.html":{}}}],["client",{"_index":824,"title":{},"body":{"index.html":{}}}],["clonedrequest",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closely",{"_index":1714,"title":{},"body":{"license.html":{}}}],["cms",{"_index":797,"title":{},"body":{"index.html":{}}}],["cms:1",{"_index":863,"title":{},"body":{"index.html":{}}}],["cms:latestimportant",{"_index":888,"title":{},"body":{"index.html":{}}}],["cms:latestthen",{"_index":887,"title":{},"body":{"index.html":{}}}],["code",{"_index":841,"title":{},"body":{"index.html":{},"license.html":{}}}],["collect",{"_index":803,"title":{},"body":{"index.html":{},"license.html":{}}}],["combination",{"_index":1659,"title":{},"body":{"license.html":{}}}],["combine",{"_index":1656,"title":{},"body":{"license.html":{}}}],["combined",{"_index":1314,"title":{},"body":{"license.html":{}}}],["comes",{"_index":1299,"title":{},"body":{"license.html":{}}}],["command",{"_index":864,"title":{},"body":{"index.html":{}}}],["commands",{"_index":1134,"title":{},"body":{"license.html":{}}}],["comment",{"_index":773,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["commercial",{"_index":1409,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":1597,"title":{},"body":{"license.html":{}}}],["common",{"_index":1403,"title":{},"body":{"license.html":{}}}],["commonmodule",{"_index":294,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["communication",{"_index":1197,"title":{},"body":{"license.html":{}}}],["compilation",{"_index":1309,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":1318,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":1635,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":1177,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1552,"title":{},"body":{"license.html":{}}}],["comply",{"_index":1226,"title":{},"body":{"license.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["component_template",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{},"overview.html":{}}}],["compose",{"_index":893,"title":{},"body":{"index.html":{}}}],["composed",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["computer",{"_index":1100,"title":{},"body":{"license.html":{}}}],["computers",{"_index":1048,"title":{},"body":{"license.html":{}}}],["concerning",{"_index":1658,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":1665,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":1629,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1058,"title":{},"body":{"license.html":{}}}],["config",{"_index":688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["connection",{"_index":1618,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":1539,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":1696,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1757,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1494,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1589,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":1277,"title":{},"body":{"license.html":{}}}],["const",{"_index":82,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":1042,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":1214,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{}}}],["constructor(authservice",{"_index":100,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(formbuilder",{"_index":315,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["constructor(http",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{}}}],["constructor(storage",{"_index":454,"title":{},"body":{"injectables/JwtService.html":{}}}],["constructor(store",{"_index":426,"title":{},"body":{"components/HomeComponent.html":{}}}],["constructor(translate",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["construed",{"_index":1640,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":1386,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1736,"title":{},"body":{"license.html":{}}}],["contain",{"_index":1636,"title":{},"body":{"license.html":{}}}],["container",{"_index":884,"title":{},"body":{"index.html":{}}}],["containing",{"_index":1475,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1498,"title":{},"body":{"license.html":{}}}],["content",{"_index":1213,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["contents",{"_index":1593,"title":{},"body":{"license.html":{}}}],["context",{"_index":1170,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":1437,"title":{},"body":{"license.html":{}}}],["continued",{"_index":1421,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":1491,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":1646,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":937,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1578,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":1580,"title":{},"body":{"license.html":{}}}],["control",{"_index":1183,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1583,"title":{},"body":{"license.html":{}}}],["convenient",{"_index":1123,"title":{},"body":{"license.html":{}}}],["convey",{"_index":1108,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":1622,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":1432,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":1117,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":1490,"title":{},"body":{"license.html":{}}}],["copies",{"_index":923,"title":{},"body":{"license.html":{}}}],["copy",{"_index":920,"title":{},"body":{"license.html":{}}}],["copying",{"_index":1059,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":928,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":911,"title":{},"body":{"license.html":{}}}],["copyrightable",{"_index":1069,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":1231,"title":{},"body":{"license.html":{}}}],["core/domain/dto/requests/register",{"_index":597,"title":{},"body":{"components/RegisterComponent.html":{}}}],["core/services/api/auth.api.service",{"_index":360,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["core/state/app.state",{"_index":345,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/state/auth/auth.actions",{"_index":355,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/state/auth/auth.selectors",{"_index":351,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["core/utils/regex.constants",{"_index":600,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["correction",{"_index":1692,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":892,"title":{},"body":{"index.html":{}}}],["corresponding",{"_index":1180,"title":{},"body":{"license.html":{}}}],["cost",{"_index":1348,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":1571,"title":{},"body":{"license.html":{}}}],["countries",{"_index":1105,"title":{},"body":{"license.html":{}}}],["country",{"_index":1612,"title":{},"body":{"license.html":{}}}],["course",{"_index":1747,"title":{},"body":{"license.html":{}}}],["court",{"_index":1645,"title":{},"body":{"license.html":{}}}],["courts",{"_index":1713,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":1600,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":681,"title":{"coverage.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["covered",{"_index":1087,"title":{},"body":{"license.html":{}}}],["create",{"_index":768,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["createaction",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction('[home",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdat",{"_index":662,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["createeffect",{"_index":107,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["createreducer",{"_index":237,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":225,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["criterion",{"_index":1140,"title":{},"body":{"license.html":{}}}],["cross",{"_index":1569,"title":{},"body":{"license.html":{}}}],["cure",{"_index":1529,"title":{},"body":{"license.html":{}}}],["current",{"_index":254,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["currentuser",{"_index":424,"title":{},"body":{"components/HomeComponent.html":{}}}],["currentusererrorsubscription",{"_index":425,"title":{},"body":{"components/HomeComponent.html":{}}}],["customarily",{"_index":1336,"title":{},"body":{"license.html":{}}}],["customer",{"_index":1343,"title":{},"body":{"license.html":{}}}],["d",{"_index":1307,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1694,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1051,"title":{},"body":{"license.html":{}}}],["data",{"_index":556,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["date",{"_index":668,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["days",{"_index":1524,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":352,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["debouncetime(500",{"_index":369,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["debug_file",{"_index":774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["december",{"_index":1257,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1674,"title":{},"body":{"license.html":{}}}],["declining",{"_index":1482,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":339,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["deemed",{"_index":1245,"title":{},"body":{"license.html":{}}}],["default",{"_index":105,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defective",{"_index":1687,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":1643,"title":{},"body":{"license.html":{}}}],["defined",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["definition",{"_index":1188,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1063,"title":{},"body":{"license.html":{}}}],["delete",{"_index":771,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["denied",{"_index":1440,"title":{},"body":{"license.html":{}}}],["denominated",{"_index":1598,"title":{},"body":{"license.html":{}}}],["deny",{"_index":1009,"title":{},"body":{"license.html":{}}}],["denying",{"_index":964,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":727,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["deploy",{"_index":853,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":880,"title":{},"body":{"index.html":{}}}],["deprive",{"_index":1607,"title":{},"body":{"license.html":{}}}],["deps",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["designated",{"_index":1356,"title":{},"body":{"license.html":{}}}],["designed",{"_index":932,"title":{},"body":{"license.html":{}}}],["detail",{"_index":389,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"license.html":{}}}],["details",{"_index":1735,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":1745,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1397,"title":{},"body":{"license.html":{}}}],["dev",{"_index":834,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1721,"title":{},"body":{"license.html":{}}}],["developers",{"_index":983,"title":{},"body":{"license.html":{}}}],["development",{"_index":830,"title":{},"body":{"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["device_state",{"_index":775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["devices",{"_index":1008,"title":{},"body":{"license.html":{}}}],["deviceurl",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["devtools",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["differ",{"_index":1663,"title":{},"body":{"license.html":{}}}],["different",{"_index":1359,"title":{},"body":{"license.html":{}}}],["differently",{"_index":1468,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1230,"title":{},"body":{"license.html":{}}}],["directions",{"_index":1364,"title":{},"body":{"license.html":{}}}],["directive",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["directives",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":845,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1092,"title":{},"body":{"license.html":{}}}],["directory",{"_index":850,"title":{},"body":{"index.html":{}}}],["disable",{"_index":246,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["disclaim",{"_index":1268,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1677,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":1465,"title":{},"body":{"license.html":{}}}],["discriminatory",{"_index":1626,"title":{},"body":{"license.html":{}}}],["dispatch",{"_index":155,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["display",{"_index":1308,"title":{},"body":{"license.html":{}}}],["displayed",{"_index":1474,"title":{},"body":{"license.html":{}}}],["displays",{"_index":1119,"title":{},"body":{"license.html":{}}}],["dist",{"_index":849,"title":{},"body":{"index.html":{}}}],["distinctuntilchanged",{"_index":353,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["distinguishing",{"_index":1666,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":921,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":806,"title":{},"body":{"index.html":{},"license.html":{}}}],["distributing",{"_index":1631,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1060,"title":{},"body":{"license.html":{}}}],["docker",{"_index":851,"title":{},"body":{"index.html":{}}}],["document",{"_index":924,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":1450,"title":{},"body":{"license.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["domain/dto/requests/authenticate",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{}}}],["domain/dto/requests/register",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/requests/reset",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/token.dto",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/dto/user.dto",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["domain/models/enums/state",{"_index":239,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/token.entity",{"_index":241,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/models/user.entity",{"_index":242,"title":{},"body":{"interfaces/AuthState.html":{}}}],["domain/your",{"_index":858,"title":{},"body":{"index.html":{}}}],["domains",{"_index":1033,"title":{},"body":{"license.html":{}}}],["doubtful",{"_index":1398,"title":{},"body":{"license.html":{}}}],["downstream",{"_index":1548,"title":{},"body":{"license.html":{}}}],["dradman/loghub",{"_index":862,"title":{},"body":{"index.html":{}}}],["dto",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["due",{"_index":896,"title":{},"body":{"index.html":{}}}],["durable",{"_index":1335,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":1396,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1191,"title":{},"body":{"license.html":{}}}],["e",{"_index":1373,"title":{},"body":{"license.html":{}}}],["e2e",{"_index":875,"title":{},"body":{"index.html":{}}}],["each",{"_index":1072,"title":{},"body":{"license.html":{}}}],["earlier",{"_index":1085,"title":{},"body":{"license.html":{}}}],["effect",{"_index":1710,"title":{},"body":{"license.html":{}}}],["effected",{"_index":1266,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1246,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":1053,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":1563,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1737,"title":{},"body":{"license.html":{}}}],["element",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["elementref",{"_index":338,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["email",{"_index":419,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["embodied",{"_index":1330,"title":{},"body":{"license.html":{}}}],["employer",{"_index":1750,"title":{},"body":{"license.html":{}}}],["en",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enable",{"_index":1168,"title":{},"body":{"license.html":{}}}],["enableregistration",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enables",{"_index":1110,"title":{},"body":{"license.html":{}}}],["end",{"_index":874,"title":{},"body":{"index.html":{},"license.html":{}}}],["enforce",{"_index":1599,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":1272,"title":{},"body":{"license.html":{}}}],["enhancing",{"_index":809,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":1370,"title":{},"body":{"license.html":{}}}],["entered",{"_index":1637,"title":{},"body":{"license.html":{}}}],["entire",{"_index":1297,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":1653,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1553,"title":{},"body":{"license.html":{}}}],["enumerations",{"_index":761,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/permission.enum",{"_index":670,"title":{},"body":{"interfaces/User.html":{}}}],["enums/resource",{"_index":672,"title":{},"body":{"interfaces/User.html":{}}}],["env",{"_index":902,"title":{},"body":{"index.html":{}}}],["environment",{"_index":536,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.appname",{"_index":544,"title":{},"body":{"components/LoginComponent.html":{}}}],["environment.enableregistration",{"_index":545,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":537,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["equivalent",{"_index":1217,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":1006,"title":{},"body":{"license.html":{}}}],["error",{"_index":123,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('unauthorized",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.status",{"_index":381,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["errorsubscription",{"_index":304,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["eslint",{"_index":245,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["eslint/no",{"_index":248,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["essential",{"_index":1171,"title":{},"body":{"license.html":{}}}],["even",{"_index":1706,"title":{},"body":{"license.html":{}}}],["event",{"_index":366,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"license.html":{}}}],["event.target",{"_index":367,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["everyone",{"_index":918,"title":{},"body":{"license.html":{}}}],["exact",{"_index":1082,"title":{},"body":{"license.html":{}}}],["example",{"_index":856,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":1098,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exceptions",{"_index":1454,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":1384,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1641,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":1730,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1590,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":1223,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":1647,"title":{},"body":{"license.html":{}}}],["executable",{"_index":1159,"title":{},"body":{"license.html":{}}}],["execute",{"_index":871,"title":{},"body":{"index.html":{},"license.html":{}}}],["executing",{"_index":1099,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1564,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1267,"title":{},"body":{"license.html":{}}}],["expected",{"_index":1407,"title":{},"body":{"license.html":{}}}],["expects",{"_index":1406,"title":{},"body":{"license.html":{}}}],["expiresin",{"_index":657,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["explains",{"_index":996,"title":{},"body":{"license.html":{}}}],["explicit",{"_index":249,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["explicitly",{"_index":1208,"title":{},"body":{"license.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["express",{"_index":747,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["expressed",{"_index":1679,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":1507,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1036,"title":{},"body":{"license.html":{}}}],["extended",{"_index":1625,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":1313,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1122,"title":{},"body":{"license.html":{}}}],["f",{"_index":1488,"title":{},"body":{"license.html":{}}}],["facilities",{"_index":1225,"title":{},"body":{"license.html":{}}}],["fails",{"_index":1520,"title":{},"body":{"license.html":{}}}],["failure",{"_index":264,"title":{},"body":{"interfaces/AuthState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["fair",{"_index":1216,"title":{},"body":{"license.html":{}}}],["false",{"_index":156,"title":{},"body":{"injectables/AuthEffects.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1391,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":1079,"title":{},"body":{"license.html":{}}}],["favor",{"_index":1401,"title":{},"body":{"license.html":{}}}],["feature",{"_index":1126,"title":{},"body":{"license.html":{}}}],["features",{"_index":817,"title":{},"body":{"index.html":{}}}],["fee",{"_index":975,"title":{},"body":{"license.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"license.html":{}}}],["files",{"_index":840,"title":{},"body":{"index.html":{},"license.html":{}}}],["filesurl",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finally",{"_index":1040,"title":{},"body":{"license.html":{}}}],["find",{"_index":1366,"title":{},"body":{"license.html":{}}}],["first",{"_index":855,"title":{},"body":{"index.html":{},"license.html":{}}}],["firstname",{"_index":592,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["fitness",{"_index":1682,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":1334,"title":{},"body":{"license.html":{}}}],["flow",{"_index":1198,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1062,"title":{},"body":{"license.html":{}}}],["following",{"_index":1594,"title":{},"body":{"license.html":{}}}],["forbid",{"_index":1265,"title":{},"body":{"license.html":{}}}],["force",{"_index":1220,"title":{},"body":{"license.html":{}}}],["forgot",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword",{"_index":94,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgotpassword(username",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["forgotpasswordcomponent",{"_index":53,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["forgotpassworderror",{"_index":226,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["forgotpasswordfailure",{"_index":166,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["forgotpasswordform",{"_index":305,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordrequestdto",{"_index":417,"title":{"interfaces/ForgotPasswordRequestDto.html":{}},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"coverage.html":{}}}],["forgotpasswordsuccess",{"_index":134,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["form",{"_index":1142,"title":{},"body":{"license.html":{}}}],["format",{"_index":1448,"title":{},"body":{"license.html":{}}}],["formbuilder",{"_index":316,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["forms",{"_index":1324,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":295,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["found",{"_index":1732,"title":{},"body":{"license.html":{}}}],["foundation",{"_index":915,"title":{},"body":{"license.html":{}}}],["free",{"_index":913,"title":{},"body":{"license.html":{}}}],["free.app",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["freedom",{"_index":935,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":979,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":354,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fromevent(this.usernameinput.nativeelement",{"_index":363,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["fulfilling",{"_index":1249,"title":{},"body":{"license.html":{}}}],["full",{"_index":861,"title":{},"body":{"index.html":{},"license.html":{}}}],["function",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["functioning",{"_index":1422,"title":{},"body":{"license.html":{}}}],["functions",{"_index":787,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":1015,"title":{},"body":{"license.html":{}}}],["further",{"_index":1358,"title":{},"body":{"license.html":{}}}],["future",{"_index":1038,"title":{},"body":{"license.html":{}}}],["general",{"_index":897,"title":{},"body":{"index.html":{},"license.html":{}}}],["generally",{"_index":1186,"title":{},"body":{"license.html":{}}}],["generate",{"_index":843,"title":{},"body":{"index.html":{},"license.html":{}}}],["generated",{"_index":813,"title":{},"body":{"index.html":{}}}],["getapplicationname",{"_index":517,"title":{},"body":{"components/LoginComponent.html":{}}}],["getitem",{"_index":476,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getitem(key",{"_index":483,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getlength",{"_index":491,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["getrefreshtoken",{"_index":450,"title":{},"body":{"injectables/JwtService.html":{}}}],["getting",{"_index":790,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":451,"title":{},"body":{"injectables/JwtService.html":{}}}],["ghcr.io/dradman/loghub",{"_index":886,"title":{},"body":{"index.html":{}}}],["github",{"_index":883,"title":{},"body":{"index.html":{}}}],["give",{"_index":1288,"title":{},"body":{"license.html":{}}}],["given",{"_index":1212,"title":{},"body":{"license.html":{}}}],["gives",{"_index":1304,"title":{},"body":{"license.html":{}}}],["giving",{"_index":991,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":906,"title":{},"body":{"license.html":{}}}],["governed",{"_index":1457,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":984,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1483,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1203,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1542,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":974,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":1722,"title":{},"body":{"license.html":{}}}],["guarantee",{"_index":939,"title":{},"body":{"license.html":{}}}],["gui",{"_index":1748,"title":{},"body":{"license.html":{}}}],["handle",{"_index":252,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["hash",{"_index":646,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["having",{"_index":1222,"title":{},"body":{"license.html":{}}}],["headers",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":860,"title":{},"body":{"index.html":{}}}],["hereafter",{"_index":1586,"title":{},"body":{"license.html":{}}}],["holder",{"_index":1514,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1464,"title":{},"body":{"license.html":{}}}],["home",{"_index":421,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["home.component.html",{"_index":422,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":423,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":56,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["hope",{"_index":1733,"title":{},"body":{"license.html":{}}}],["host",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hosts",{"_index":1367,"title":{},"body":{"license.html":{}}}],["household",{"_index":1392,"title":{},"body":{"license.html":{}}}],["html",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["htmlinputelement).value",{"_index":368,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["http",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":836,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/api",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpcontext().set(authenticate",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcontexttoken",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httperrorresponse",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httphandlerfn",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpheaders",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpinterceptorfn",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httploaderfactory",{"_index":693,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httploaderfactory(http",{"_index":789,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httpparams",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpparams().set('username",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{}}}],["httprequest",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://fsf.org",{"_index":917,"title":{},"body":{"license.html":{}}}],["https://heavily",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.gnu.org/licenses",{"_index":1754,"title":{},"body":{"license.html":{}}}],["https://www.gnu.org/licenses/why",{"_index":1762,"title":{},"body":{"license.html":{}}}],["hypothetical",{"_index":1746,"title":{},"body":{"license.html":{}}}],["identifiable",{"_index":1614,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["if(!router.url.startswith('/auth",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(isusernametaken",{"_index":413,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["image",{"_index":852,"title":{},"body":{"index.html":{}}}],["implement",{"_index":565,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["implementation",{"_index":1169,"title":{},"body":{"license.html":{}}}],["implements",{"_index":288,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"index.html":{}}}],["implied",{"_index":1642,"title":{},"body":{"license.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["important",{"_index":895,"title":{},"body":{"index.html":{}}}],["importing",{"_index":1577,"title":{},"body":{"license.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["impose",{"_index":1493,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":1644,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1699,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":1702,"title":{},"body":{"license.html":{}}}],["inc",{"_index":916,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1695,"title":{},"body":{"license.html":{}}}],["include",{"_index":1160,"title":{},"body":{"license.html":{}}}],["included",{"_index":1162,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1103,"title":{},"body":{"license.html":{}}}],["including",{"_index":1181,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1322,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":1016,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":1755,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":1395,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":1489,"title":{},"body":{"license.html":{}}}],["independent",{"_index":1311,"title":{},"body":{"license.html":{}}}],["index",{"_index":75,"title":{"index.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1545,"title":{},"body":{"license.html":{}}}],["indicating",{"_index":1504,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1320,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":1025,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":1410,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["inform",{"_index":1376,"title":{},"body":{"license.html":{}}}],["information",{"_index":1416,"title":{},"body":{"license.html":{}}}],["infringe",{"_index":1543,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1574,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1095,"title":{},"body":{"license.html":{}}}],["initialstate",{"_index":250,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":1567,"title":{},"body":{"license.html":{}}}],["inject",{"_index":494,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{},"miscellaneous/variables.html":{}}}],["inject(authservice",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(jwtservice",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(jwtservice).gettoken",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(platform_id",{"_index":499,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["inject(router",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(store",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":89,"title":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{}}}],["injectables",{"_index":90,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"overview.html":{}}}],["injectspeedinsights",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":364,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["inputmaskmodule",{"_index":512,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inputs",{"_index":630,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["inputtextmodule",{"_index":299,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["inside",{"_index":1012,"title":{},"body":{"license.html":{}}}],["insights",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["install",{"_index":1011,"title":{},"body":{"license.html":{}}}],["installation",{"_index":1415,"title":{},"body":{"license.html":{}}}],["installed",{"_index":1435,"title":{},"body":{"license.html":{}}}],["instanceof",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instead",{"_index":1760,"title":{},"body":{"license.html":{}}}],["intact",{"_index":1281,"title":{},"body":{"license.html":{}}}],["intended",{"_index":938,"title":{},"body":{"license.html":{}}}],["intention",{"_index":1269,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":1113,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":1118,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":1337,"title":{},"body":{"license.html":{}}}],["interest",{"_index":1561,"title":{},"body":{"license.html":{}}}],["interface",{"_index":71,"title":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"license.html":{}}}],["interfaces",{"_index":73,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":1424,"title":{},"body":{"license.html":{}}}],["internal",{"_index":677,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["interpretation",{"_index":1709,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":1179,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":1196,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":1305,"title":{},"body":{"license.html":{}}}],["invitation",{"_index":442,"title":{},"body":{"components/InvitationComponent.html":{},"miscellaneous/enumerations.html":{}}}],["invitation'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["invitation.component.html",{"_index":443,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitation.component.scss",{"_index":444,"title":{},"body":{"components/InvitationComponent.html":{}}}],["invitationcomponent",{"_index":58,"title":{"components/InvitationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["invitationurl",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["irrevocable",{"_index":1205,"title":{},"body":{"license.html":{}}}],["isdevmode",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isloading",{"_index":306,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["isloadingauthstate",{"_index":347,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isplatformbrowser",{"_index":497,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isplatformbrowser(platformid",{"_index":500,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["isregistrationenabled",{"_index":518,"title":{},"body":{"components/LoginComponent.html":{}}}],["issuccess",{"_index":348,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issue",{"_index":776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isusernameavialable",{"_index":227,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["isusernametaken",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["isusernametaken(username",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["item",{"_index":1138,"title":{},"body":{"license.html":{}}}],["itself",{"_index":1441,"title":{},"body":{"license.html":{}}}],["june",{"_index":909,"title":{},"body":{"license.html":{}}}],["jwtservice",{"_index":102,"title":{"injectables/JwtService.html":{}},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtservice.clear",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice.savetoken(refreshresult.accesstoken",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwtservice.savetoken(refreshresult.refreshtoken",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["karma",{"_index":873,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1280,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":1172,"title":{},"body":{"license.html":{}}}],["key",{"_index":477,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["key(index",{"_index":484,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["keys",{"_index":573,"title":{},"body":{"injectables/MemoryStorage.html":{},"license.html":{}}}],["keys.length",{"_index":576,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["kind",{"_index":1109,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":929,"title":{},"body":{"license.html":{}}}],["know",{"_index":958,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":1602,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":1611,"title":{},"body":{"license.html":{}}}],["language",{"_index":1153,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1315,"title":{},"body":{"license.html":{}}}],["lastlogintime",{"_index":663,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["lastname",{"_index":593,"title":{},"body":{"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["later",{"_index":1669,"title":{},"body":{"license.html":{}}}],["latest",{"_index":882,"title":{},"body":{"index.html":{}}}],["law",{"_index":1097,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1066,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1572,"title":{},"body":{"license.html":{}}}],["legal",{"_index":992,"title":{},"body":{"license.html":{}}}],["legend",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["length",{"_index":481,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["lesser",{"_index":1759,"title":{},"body":{"license.html":{}}}],["lgpl.html",{"_index":1763,"title":{},"body":{"license.html":{}}}],["liability",{"_index":1467,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1094,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1158,"title":{},"body":{"license.html":{}}}],["library",{"_index":1385,"title":{},"body":{"license.html":{}}}],["license",{"_index":905,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1070,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":1073,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":1075,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":930,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":1547,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":1481,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":1540,"title":{},"body":{"license.html":{}}}],["limit",{"_index":1270,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":898,"title":{},"body":{"index.html":{},"license.html":{}}}],["limited",{"_index":1680,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":1466,"title":{},"body":{"license.html":{}}}],["line",{"_index":362,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["link",{"_index":1655,"title":{},"body":{"license.html":{}}}],["linked",{"_index":1192,"title":{},"body":{"license.html":{}}}],["linking",{"_index":1758,"title":{},"body":{"license.html":{}}}],["list",{"_index":1133,"title":{},"body":{"license.html":{}}}],["literal",{"_index":561,"title":{},"body":{"injectables/MemoryStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["litigation",{"_index":1568,"title":{},"body":{"license.html":{}}}],["load",{"_index":267,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentuser",{"_index":95,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentuserfailure",{"_index":167,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentusersuccess",{"_index":168,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcurrentusersuccess(user",{"_index":129,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["loader",{"_index":740,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["loading",{"_index":253,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":465,"title":{},"body":{"injectables/JwtService.html":{},"index.html":{},"license.html":{}}}],["localstorage",{"_index":455,"title":{"injectables/LocalStorage.html":{}},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"coverage.html":{}}}],["location",{"_index":808,"title":{},"body":{"index.html":{}}}],["log_entry",{"_index":777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_session",{"_index":778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log_source",{"_index":779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logging",{"_index":795,"title":{},"body":{"index.html":{}}}],["loghub",{"_index":792,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":511,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["login.component.html",{"_index":514,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":515,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":60,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":516,"title":{},"body":{"components/LoginComponent.html":{}}}],["logonly",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs",{"_index":805,"title":{},"body":{"index.html":{}}}],["long",{"_index":1218,"title":{},"body":{"license.html":{}}}],["loss",{"_index":1700,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1703,"title":{},"body":{"license.html":{}}}],["machine",{"_index":1327,"title":{},"body":{"license.html":{}}}],["made",{"_index":1425,"title":{},"body":{"license.html":{}}}],["mail",{"_index":1739,"title":{},"body":{"license.html":{}}}],["maintain",{"_index":1363,"title":{},"body":{"license.html":{}}}],["major",{"_index":1165,"title":{},"body":{"license.html":{}}}],["make",{"_index":889,"title":{},"body":{"index.html":{},"license.html":{}}}],["makes",{"_index":1240,"title":{},"body":{"license.html":{}}}],["making",{"_index":1081,"title":{},"body":{"license.html":{}}}],["manage",{"_index":804,"title":{},"body":{"index.html":{}}}],["management",{"_index":827,"title":{},"body":{"index.html":{}}}],["manner",{"_index":1587,"title":{},"body":{"license.html":{}}}],["manufacturer",{"_index":1014,"title":{},"body":{"license.html":{}}}],["map",{"_index":133,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["map((event",{"_index":365,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["map((token",{"_index":116,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["map((user",{"_index":128,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["march",{"_index":1639,"title":{},"body":{"license.html":{}}}],["marked",{"_index":1002,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1487,"title":{},"body":{"license.html":{}}}],["masks",{"_index":1068,"title":{},"body":{"license.html":{}}}],["matching",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1227,"title":{},"body":{"license.html":{}}}],["materially",{"_index":1442,"title":{},"body":{"license.html":{}}}],["maxage",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meaning",{"_index":1497,"title":{},"body":{"license.html":{}}}],["means",{"_index":1065,"title":{},"body":{"license.html":{}}}],["measure",{"_index":1248,"title":{},"body":{"license.html":{}}}],["measures",{"_index":1262,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1276,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1292,"title":{},"body":{"license.html":{}}}],["meets",{"_index":1139,"title":{},"body":{"license.html":{}}}],["membersurl",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":496,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["memorystorage",{"_index":495,"title":{"injectables/MemoryStorage.html":{}},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{}}}],["menu",{"_index":1136,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1681,"title":{},"body":{"license.html":{}}}],["mere",{"_index":1112,"title":{},"body":{"license.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merging",{"_index":1557,"title":{},"body":{"license.html":{}}}],["messageservice",{"_index":293,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["met",{"_index":1207,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["methods",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["miscellaneous",{"_index":760,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misrepresentation",{"_index":1476,"title":{},"body":{"license.html":{}}}],["mode",{"_index":1414,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":1344,"title":{},"body":{"license.html":{}}}],["models/enums/permission.enum",{"_index":679,"title":{},"body":{"interfaces/UserDto.html":{}}}],["models/enums/resource",{"_index":680,"title":{},"body":{"interfaces/UserDto.html":{}}}],["modification",{"_index":1061,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1143,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1001,"title":{},"body":{"license.html":{}}}],["modifies",{"_index":1296,"title":{},"body":{"license.html":{}}}],["modify",{"_index":970,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1101,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1764,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monitoring",{"_index":811,"title":{},"body":{"index.html":{}}}],["more",{"_index":1346,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":1526,"title":{},"body":{"license.html":{}}}],["mutt.ngrok",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["name:your",{"_index":859,"title":{},"body":{"index.html":{}}}],["names",{"_index":1480,"title":{},"body":{"license.html":{}}}],["nature",{"_index":1312,"title":{},"body":{"license.html":{}}}],["navigate",{"_index":835,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":1689,"title":{},"body":{"license.html":{}}}],["need",{"_index":877,"title":{},"body":{"index.html":{},"license.html":{}}}],["needed",{"_index":1039,"title":{},"body":{"license.html":{}}}],["network",{"_index":1115,"title":{},"body":{"license.html":{}}}],["new",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":644,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{}}}],["next",{"_index":361,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["next(clonedrequest",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(request",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":832,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":312,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["ngondestroy",{"_index":313,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngoninit",{"_index":314,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngrok",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngrx",{"_index":826,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":159,"title":{},"body":{"injectables/AuthEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":238,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["ngx",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["noauthoptions",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["non",{"_index":401,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"license.html":{}}}],["noncommercially",{"_index":1352,"title":{},"body":{"license.html":{}}}],["normal",{"_index":1163,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1390,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":1541,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1127,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1121,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":1527,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1521,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1462,"title":{},"body":{"license.html":{}}}],["null",{"_index":234,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":485,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["numbered",{"_index":1668,"title":{},"body":{"license.html":{}}}],["object",{"_index":1144,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.data",{"_index":574,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["object.keys(this.data).length",{"_index":570,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["obligate",{"_index":1651,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":1369,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1250,"title":{},"body":{"license.html":{}}}],["observable",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["occasionally",{"_index":1351,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":1538,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":1022,"title":{},"body":{"license.html":{}}}],["of(authenticate(request",{"_index":145,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(authenticationfailure",{"_index":122,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(forgotpasswordfailure",{"_index":135,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(loadcurrentuserfailure",{"_index":138,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(registernewuserfailure",{"_index":142,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["of(resetpasswordfailure",{"_index":150,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["offer",{"_index":990,"title":{},"body":{"license.html":{}}}],["offered",{"_index":1379,"title":{},"body":{"license.html":{}}}],["offering",{"_index":1355,"title":{},"body":{"license.html":{}}}],["official",{"_index":1145,"title":{},"body":{"license.html":{}}}],["oftype",{"_index":158,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticate",{"_index":109,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(authenticationsuccess",{"_index":125,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(forgotpassword",{"_index":131,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(loadcurrentuser",{"_index":137,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(registernewuser",{"_index":140,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(registernewusersuccess",{"_index":144,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(resetpassword",{"_index":147,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(signout",{"_index":152,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["on(authenticate",{"_index":259,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authenticationfailure",{"_index":265,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(authenticationsuccess",{"_index":262,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpassword",{"_index":274,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpasswordfailure",{"_index":276,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(forgotpasswordsuccess",{"_index":275,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentuser",{"_index":255,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentuserfailure",{"_index":269,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(loadcurrentusersuccess",{"_index":268,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(registernewuser",{"_index":280,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(registernewuserfailure",{"_index":282,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(registernewusersuccess",{"_index":281,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpassword",{"_index":277,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpasswordfailure",{"_index":279,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(resetpasswordsuccess",{"_index":278,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(setcurrentuser",{"_index":271,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(settoken",{"_index":272,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["on(signout",{"_index":273,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":291,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["one",{"_index":1154,"title":{},"body":{"license.html":{}}}],["oninit",{"_index":290,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["operate",{"_index":1705,"title":{},"body":{"license.html":{}}}],["operated",{"_index":1360,"title":{},"body":{"license.html":{}}}],["operating",{"_index":1175,"title":{},"body":{"license.html":{}}}],["operation",{"_index":1271,"title":{},"body":{"license.html":{}}}],["option",{"_index":1459,"title":{},"body":{"license.html":{}}}],["optional",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1135,"title":{},"body":{"license.html":{}}}],["order",{"_index":1536,"title":{},"body":{"license.html":{}}}],["organization",{"_index":780,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["organizations",{"_index":1076,"title":{},"body":{"license.html":{}}}],["organizationurl",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["origin",{"_index":1477,"title":{},"body":{"license.html":{}}}],["original",{"_index":1478,"title":{},"body":{"license.html":{}}}],["others",{"_index":963,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1219,"title":{},"body":{"license.html":{}}}],["out",{"_index":1698,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["output",{"_index":1211,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1232,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1765,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owned",{"_index":1582,"title":{},"body":{"license.html":{}}}],["p",{"_index":865,"title":{},"body":{"index.html":{}}}],["package",{"_index":726,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["packaged",{"_index":1303,"title":{},"body":{"license.html":{}}}],["packaging",{"_index":1164,"title":{},"body":{"license.html":{}}}],["page",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paper",{"_index":1738,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":1511,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":1595,"title":{},"body":{"license.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["part",{"_index":1078,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1151,"title":{},"body":{"license.html":{}}}],["parties",{"_index":1111,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1200,"title":{},"body":{"license.html":{}}}],["party",{"_index":1361,"title":{},"body":{"license.html":{}}}],["party's",{"_index":1559,"title":{},"body":{"license.html":{}}}],["pass",{"_index":976,"title":{},"body":{"license.html":{}}}],["password",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.back_to_login",{"_index":416,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.check_your_email",{"_index":396,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.html",{"_index":302,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":303,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":287,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:125",{"_index":635,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:144",{"_index":325,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:152",{"_index":323,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:160",{"_index":321,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:49",{"_index":632,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:54",{"_index":319,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":636,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:65",{"_index":332,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:69",{"_index":334,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:70",{"_index":335,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:72",{"_index":328,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:73",{"_index":341,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:74",{"_index":336,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:75",{"_index":337,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:76",{"_index":633,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:77",{"_index":324,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:82",{"_index":634,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:88",{"_index":326,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.error",{"_index":388,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.error_description",{"_index":391,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.new_password_label",{"_index":647,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_is_required",{"_index":648,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_length",{"_index":649,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.password_not_strong",{"_index":650,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.success",{"_index":395,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.success_message",{"_index":642,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.user_does_not_exist",{"_index":390,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_is_required",{"_index":414,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.username_length",{"_index":415,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_description",{"_index":411,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.welcome_message",{"_index":410,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.wrong_hash",{"_index":641,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":286,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":628,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordminlength",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordmodule",{"_index":513,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwordspecialchars",{"_index":715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["patent",{"_index":1510,"title":{},"body":{"license.html":{}}}],["patents",{"_index":1043,"title":{},"body":{"license.html":{}}}],["pattern",{"_index":1020,"title":{},"body":{"license.html":{}}}],["payment",{"_index":1632,"title":{},"body":{"license.html":{}}}],["peer",{"_index":1374,"title":{},"body":{"license.html":{}}}],["peers",{"_index":1377,"title":{},"body":{"license.html":{}}}],["pending",{"_index":786,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["performance",{"_index":1685,"title":{},"body":{"license.html":{}}}],["performing",{"_index":1187,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":1519,"title":{},"body":{"license.html":{}}}],["permission",{"_index":669,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["permissions",{"_index":675,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"license.html":{}}}],["permissive",{"_index":1283,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1321,"title":{},"body":{"license.html":{}}}],["permits",{"_index":1500,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":919,"title":{},"body":{"license.html":{}}}],["perpetuity",{"_index":1430,"title":{},"body":{"license.html":{}}}],["personal",{"_index":1388,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":1649,"title":{},"body":{"license.html":{}}}],["physical",{"_index":1331,"title":{},"body":{"license.html":{}}}],["physically",{"_index":1349,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":957,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":115,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["place",{"_index":1357,"title":{},"body":{"license.html":{}}}],["platform",{"_index":781,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["platform_id",{"_index":493,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformid",{"_index":498,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["platformurl",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":1761,"title":{},"body":{"license.html":{}}}],["plus",{"_index":1562,"title":{},"body":{"license.html":{}}}],["pointer",{"_index":1731,"title":{},"body":{"license.html":{}}}],["portion",{"_index":1382,"title":{},"body":{"license.html":{}}}],["possesses",{"_index":1345,"title":{},"body":{"license.html":{}}}],["possession",{"_index":1300,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1708,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1723,"title":{},"body":{"license.html":{}}}],["power",{"_index":1264,"title":{},"body":{"license.html":{}}}],["practical",{"_index":931,"title":{},"body":{"license.html":{}}}],["practice",{"_index":1029,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":927,"title":{},"body":{"license.html":{}}}],["precise",{"_index":1057,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":1026,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":1560,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1141,"title":{},"body":{"license.html":{}}}],["present",{"_index":1662,"title":{},"body":{"license.html":{}}}],["presents",{"_index":1132,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":1471,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":962,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":1423,"title":{},"body":{"license.html":{}}}],["previous",{"_index":1007,"title":{},"body":{"license.html":{}}}],["price",{"_index":953,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":1634,"title":{},"body":{"license.html":{}}}],["primeflex",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":753,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["primeng/api",{"_index":346,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/button",{"_index":358,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/inputmask",{"_index":534,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["primeng/inputtext",{"_index":359,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["primeng/password",{"_index":535,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/toast",{"_index":357,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["prior",{"_index":1522,"title":{},"body":{"license.html":{}}}],["private",{"_index":172,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["problems",{"_index":1004,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":1417,"title":{},"body":{"license.html":{}}}],["procuring",{"_index":1621,"title":{},"body":{"license.html":{}}}],["produce",{"_index":1178,"title":{},"body":{"license.html":{}}}],["product",{"_index":1332,"title":{},"body":{"license.html":{}}}],["production",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["products",{"_index":1024,"title":{},"body":{"license.html":{}}}],["profile",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profileiconurl",{"_index":664,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["profileurl",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["program",{"_index":941,"title":{},"body":{"license.html":{}}}],["program's",{"_index":1275,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":1751,"title":{},"body":{"license.html":{}}}],["programming",{"_index":1152,"title":{},"body":{"license.html":{}}}],["programs",{"_index":950,"title":{},"body":{"license.html":{}}}],["prohibit",{"_index":1028,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":1260,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":1628,"title":{},"body":{"license.html":{}}}],["project",{"_index":782,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["project_release",{"_index":783,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projecturl",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prominent",{"_index":1137,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":1124,"title":{},"body":{"license.html":{}}}],["propagate",{"_index":1089,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":1544,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":1102,"title":{},"body":{"license.html":{}}}],["properties",{"_index":76,"title":{"properties.html":{}},"body":{"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"properties.html":{}}}],["property",{"_index":1389,"title":{},"body":{"license.html":{}}}],["proprietary",{"_index":1054,"title":{},"body":{"license.html":{}}}],["props",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protect",{"_index":960,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":1018,"title":{},"body":{"license.html":{}}}],["protection",{"_index":994,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":1447,"title":{},"body":{"license.html":{}}}],["prove",{"_index":1686,"title":{},"body":{"license.html":{}}}],["provide",{"_index":1224,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["provideanimations",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1130,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["provideeffects(appefects",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":292,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":800,"title":{},"body":{"index.html":{}}}],["provideserverrendering",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestore(appstore",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providestoredevtools",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provision",{"_index":1037,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":1516,"title":{},"body":{"license.html":{}}}],["proxy",{"_index":1673,"title":{},"body":{"license.html":{}}}],["proxy's",{"_index":1675,"title":{},"body":{"license.html":{}}}],["public",{"_index":448,"title":{},"body":{"injectables/JwtService.html":{},"license.html":{}}}],["publicity",{"_index":1479,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1449,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1279,"title":{},"body":{"license.html":{}}}],["published",{"_index":1670,"title":{},"body":{"license.html":{}}}],["pull",{"_index":881,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1047,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1393,"title":{},"body":{"license.html":{}}}],["pursuant",{"_index":1617,"title":{},"body":{"license.html":{}}}],["qualify",{"_index":1533,"title":{},"body":{"license.html":{}}}],["quality",{"_index":1684,"title":{},"body":{"license.html":{}}}],["reactiveformsmodule",{"_index":296,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["read",{"_index":769,"title":{},"body":{"miscellaneous/enumerations.html":{},"license.html":{}}}],["readable",{"_index":1328,"title":{},"body":{"license.html":{}}}],["readily",{"_index":1604,"title":{},"body":{"license.html":{}}}],["reading",{"_index":1452,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":475,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["ready",{"_index":1035,"title":{},"body":{"license.html":{}}}],["reason",{"_index":1615,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1347,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":1531,"title":{},"body":{"license.html":{}}}],["receive",{"_index":955,"title":{},"body":{"license.html":{}}}],["received",{"_index":980,"title":{},"body":{"license.html":{}}}],["receives",{"_index":1549,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":1623,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":1429,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":1613,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":977,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":1146,"title":{},"body":{"license.html":{}}}],["redistribute",{"_index":1726,"title":{},"body":{"license.html":{}}}],["referring",{"_index":952,"title":{},"body":{"license.html":{}}}],["refers",{"_index":1064,"title":{},"body":{"license.html":{}}}],["refrain",{"_index":1652,"title":{},"body":{"license.html":{}}}],["refresh_token_key",{"_index":467,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refreshexpiresin",{"_index":658,"title":{},"body":{"interfaces/Token.html":{},"interfaces/TokenDto.html":{}}}],["refreshresult.accesstoken",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refreshtoken",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"miscellaneous/variables.html":{}}}],["refreshtoken(refreshtoken",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["regard",{"_index":1458,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":1302,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":1201,"title":{},"body":{"license.html":{}}}],["register",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["register'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["register(dto",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["register.component.html",{"_index":578,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":579,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":62,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["registerform",{"_index":580,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registernewuser",{"_index":96,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registernewuserfailure",{"_index":169,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registernewusersuccess",{"_index":97,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registerrequestdto",{"_index":197,"title":{"interfaces/RegisterRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"coverage.html":{}}}],["registrationerror",{"_index":228,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["registrationguard",{"_index":700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry",{"_index":885,"title":{},"body":{"index.html":{}}}],["reinstated",{"_index":1515,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":1233,"title":{},"body":{"license.html":{}}}],["released",{"_index":946,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":1294,"title":{},"body":{"license.html":{}}}],["relicensing",{"_index":1501,"title":{},"body":{"license.html":{}}}],["reload",{"_index":838,"title":{},"body":{"index.html":{}}}],["relying",{"_index":1603,"title":{},"body":{"license.html":{}}}],["remain",{"_index":1368,"title":{},"body":{"license.html":{}}}],["remains",{"_index":942,"title":{},"body":{"license.html":{}}}],["remote",{"_index":793,"title":{},"body":{"index.html":{}}}],["removal",{"_index":1461,"title":{},"body":{"license.html":{}}}],["remove",{"_index":1460,"title":{},"body":{"license.html":{}}}],["removeitem",{"_index":478,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["removeitem(key",{"_index":487,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["render",{"_index":1056,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":1701,"title":{},"body":{"license.html":{}}}],["rendering",{"_index":821,"title":{},"body":{"index.html":{}}}],["repair",{"_index":1691,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1412,"title":{},"body":{"license.html":{}}}],["req",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.context.get(authenticate",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers.set",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('auth/authenticate",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.url.includes('auth/refreshtoken",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["request.clone",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.context.get(authenticate",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.dto",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/RegisterComponent.html":{}}}],["request.dto.ts",{"_index":284,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["request.headers.set('authorization",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.password",{"_index":114,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["request.username",{"_index":113,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["require",{"_index":1195,"title":{},"body":{"license.html":{}}}],["required",{"_index":1419,"title":{},"body":{"license.html":{}}}],["requirement",{"_index":1295,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":1372,"title":{},"body":{"license.html":{}}}],["requires",{"_index":1000,"title":{},"body":{"license.html":{}}}],["requiring",{"_index":1080,"title":{},"body":{"license.html":{}}}],["reset",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["resetpassword",{"_index":98,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpassword(dto",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpasswordcomponent",{"_index":64,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["resetpassworderror",{"_index":229,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordfailure",{"_index":170,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordform",{"_index":629,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordrequestdto",{"_index":201,"title":{"interfaces/ResetPasswordRequestDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["resetpasswordsuccess",{"_index":149,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolved",{"_index":1400,"title":{},"body":{"license.html":{}}}],["resourcetype",{"_index":671,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["respect",{"_index":971,"title":{},"body":{"license.html":{}}}],["responsibilities",{"_index":969,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1551,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":1046,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":1261,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":1499,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":1495,"title":{},"body":{"license.html":{}}}],["result",{"_index":408,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"license.html":{}}}],["resulting",{"_index":1083,"title":{},"body":{"license.html":{}}}],["results",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retains",{"_index":1433,"title":{},"body":{"license.html":{}}}],["return",{"_index":119,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{}}}],["reviewing",{"_index":1712,"title":{},"body":{"license.html":{}}}],["revised",{"_index":1660,"title":{},"body":{"license.html":{}}}],["right",{"_index":1427,"title":{},"body":{"license.html":{}}}],["rights",{"_index":961,"title":{},"body":{"license.html":{}}}],["risk",{"_index":1683,"title":{},"body":{"license.html":{}}}],["role",{"_index":665,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/enumerations.html":{}}}],["roleid",{"_index":674,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["rom",{"_index":1436,"title":{},"body":{"license.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["root'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["router",{"_index":318,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/auth",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routermodule",{"_index":300,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{}}}],["routerstatesnapshot",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routing",{"_index":823,"title":{},"body":{"index.html":{}}}],["royalty",{"_index":1566,"title":{},"body":{"license.html":{}}}],["rules",{"_index":1446,"title":{},"body":{"license.html":{}}}],["run",{"_index":831,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":867,"title":{},"body":{"index.html":{},"license.html":{}}}],["runs",{"_index":1176,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":161,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["safest",{"_index":1728,"title":{},"body":{"license.html":{}}}],["sake",{"_index":999,"title":{},"body":{"license.html":{}}}],["sale",{"_index":1576,"title":{},"body":{"license.html":{}}}],["same",{"_index":978,"title":{},"body":{"license.html":{}}}],["satisfy",{"_index":1371,"title":{},"body":{"license.html":{}}}],["saverefreshtoken",{"_index":452,"title":{},"body":{"injectables/JwtService.html":{}}}],["saverefreshtoken(token",{"_index":461,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken",{"_index":453,"title":{},"body":{"injectables/JwtService.html":{}}}],["savetoken(token",{"_index":463,"title":{},"body":{"injectables/JwtService.html":{}}}],["saying",{"_index":1365,"title":{},"body":{"license.html":{}}}],["scaffolding",{"_index":842,"title":{},"body":{"index.html":{}}}],["school",{"_index":1752,"title":{},"body":{"license.html":{}}}],["scope",{"_index":1627,"title":{},"body":{"license.html":{}}}],["scripts",{"_index":1182,"title":{},"body":{"license.html":{}}}],["secondarily",{"_index":1093,"title":{},"body":{"license.html":{}}}],["secret",{"_index":631,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["section",{"_index":1238,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1325,"title":{},"body":{"license.html":{}}}],["securepasswordregex",{"_index":599,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["see",{"_index":894,"title":{},"body":{"index.html":{},"license.html":{}}}],["select(issuccess",{"_index":393,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectauthorizationerror",{"_index":539,"title":{},"body":{"components/LoginComponent.html":{}}}],["select(selectcurrentuser",{"_index":375,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["select(selectcurrentusererror",{"_index":435,"title":{},"body":{"components/HomeComponent.html":{}}}],["select(selectforgotpassworderror",{"_index":379,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["select(selectregistrationerror",{"_index":602,"title":{},"body":{"components/RegisterComponent.html":{}}}],["select(selectresetpassworderror",{"_index":638,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["selectauth",{"_index":712,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectauthorizationerror",{"_index":538,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrentuser",{"_index":349,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrentusererror",{"_index":433,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectforgotpassworderror",{"_index":350,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["selectregistrationerror",{"_index":598,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectresetpassworderror",{"_index":637,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sell",{"_index":1592,"title":{},"body":{"license.html":{}}}],["selling",{"_index":1575,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":1067,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1381,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1310,"title":{},"body":{"license.html":{}}}],["separately",{"_index":1306,"title":{},"body":{"license.html":{}}}],["serve",{"_index":833,"title":{},"body":{"index.html":{}}}],["served",{"_index":899,"title":{},"body":{"index.html":{}}}],["server",{"_index":567,"title":{},"body":{"injectables/MemoryStorage.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["serverconfig",{"_index":690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serves",{"_index":1167,"title":{},"body":{"license.html":{}}}],["service",{"_index":1438,"title":{},"body":{"license.html":{}}}],["services/api/auth.api.service",{"_index":162,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["services/token",{"_index":163,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["servicing",{"_index":1690,"title":{},"body":{"license.html":{}}}],["sessionstorage",{"_index":652,"title":{"injectables/SessionStorage.html":{}},"body":{"injectables/SessionStorage.html":{},"coverage.html":{}}}],["set",{"_index":270,"title":{},"body":{"interfaces/AuthState.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["setcurrentuser",{"_index":243,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setitem",{"_index":479,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["setitem(key",{"_index":489,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["settoken",{"_index":244,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["severity",{"_index":384,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["shall",{"_index":1244,"title":{},"body":{"license.html":{}}}],["share",{"_index":936,"title":{},"body":{"license.html":{}}}],["shared",{"_index":1190,"title":{},"body":{"license.html":{}}}],["short",{"_index":1741,"title":{},"body":{"license.html":{}}}],["show",{"_index":981,"title":{},"body":{"license.html":{}}}],["side",{"_index":820,"title":{},"body":{"index.html":{}}}],["sign",{"_index":1753,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["significant",{"_index":1413,"title":{},"body":{"license.html":{}}}],["signout",{"_index":99,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["similar",{"_index":1259,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":1648,"title":{},"body":{"license.html":{}}}],["single",{"_index":1619,"title":{},"body":{"license.html":{}}}],["skip",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":914,"title":{},"body":{"license.html":{}}}],["sold",{"_index":1394,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1221,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1235,"title":{},"body":{"license.html":{}}}],["solution",{"_index":796,"title":{},"body":{"index.html":{}}}],["somewhere",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/AuthComponent.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"index.html":{},"license.html":{}}}],["spare",{"_index":1342,"title":{},"body":{"license.html":{}}}],["speak",{"_index":951,"title":{},"body":{"license.html":{}}}],["special",{"_index":1050,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1174,"title":{},"body":{"license.html":{}}}],["specifically",{"_index":1194,"title":{},"body":{"license.html":{}}}],["specified",{"_index":1150,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":1667,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1671,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":1661,"title":{},"body":{"license.html":{}}}],["src/.../api.ts",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.server.ts",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":788,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.state.ts",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.actions.ts",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.interceptor.ts",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.reducer.ts",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.selectors.ts",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.production.ts",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.enum.ts",{"_index":762,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../regex.constants.ts",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../registration.guard.ts",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resource",{"_index":763,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state",{"_index":765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../token",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":26,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":691,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/domain/dto/requests/authenticate",{"_index":283,"title":{},"body":{"interfaces/AuthenticateRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/forgot",{"_index":418,"title":{},"body":{"interfaces/ForgotPasswordRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/register",{"_index":626,"title":{},"body":{"interfaces/RegisterRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/requests/reset",{"_index":651,"title":{},"body":{"interfaces/ResetPasswordRequestDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/token.dto.ts",{"_index":659,"title":{},"body":{"interfaces/TokenDto.html":{},"coverage.html":{}}}],["src/app/core/domain/dto/user.dto.ts",{"_index":678,"title":{},"body":{"interfaces/UserDto.html":{},"coverage.html":{}}}],["src/app/core/domain/models/enums/permission.enum.ts",{"_index":767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/resource",{"_index":772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/enums/state",{"_index":785,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/domain/models/token.entity.ts",{"_index":655,"title":{},"body":{"interfaces/Token.html":{},"coverage.html":{}}}],["src/app/core/domain/models/user.entity.ts",{"_index":660,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/core/guards/registration.guard.ts",{"_index":699,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interceptors/auth.interceptor.ts",{"_index":701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/api/api.ts",{"_index":704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/api/auth.api.service.ts",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/api/auth.api.service.ts:14",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:17",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:25",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:33",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:37",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:45",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:53",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/api/auth.api.service.ts:61",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/local",{"_index":474,"title":{},"body":{"injectables/LocalStorage.html":{},"coverage.html":{}}}],["src/app/core/services/memory",{"_index":555,"title":{},"body":{"injectables/MemoryStorage.html":{},"coverage.html":{}}}],["src/app/core/services/session",{"_index":653,"title":{},"body":{"injectables/SessionStorage.html":{},"coverage.html":{}}}],["src/app/core/services/token",{"_index":446,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/app.state.ts",{"_index":74,"title":{},"body":{"interfaces/AppState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.actions.ts",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.effects.ts",{"_index":91,"title":{},"body":{"injectables/AuthEffects.html":{},"coverage.html":{}}}],["src/app/core/state/auth/auth.effects.ts:106",{"_index":157,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:117",{"_index":143,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:134",{"_index":146,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:26",{"_index":104,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:33",{"_index":139,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:45",{"_index":124,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:66",{"_index":136,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:80",{"_index":151,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.effects.ts:94",{"_index":130,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/core/state/auth/auth.reducer.ts",{"_index":224,"title":{},"body":{"interfaces/AuthState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/state/auth/auth.selectors.ts",{"_index":711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/utils/regex.constants.ts",{"_index":713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/auth/auth.component.ts",{"_index":85,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/forgot",{"_index":285,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/invitation/invitation.component.ts",{"_index":441,"title":{},"body":{"components/InvitationComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/login/login.component.ts",{"_index":510,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/login/login.component.ts:127",{"_index":523,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:136",{"_index":525,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:142",{"_index":521,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:146",{"_index":522,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:150",{"_index":520,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:65",{"_index":519,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:76",{"_index":531,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:81",{"_index":528,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:82",{"_index":529,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:84",{"_index":533,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:85",{"_index":527,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:86",{"_index":532,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:88",{"_index":524,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/login/login.component.ts:99",{"_index":526,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts",{"_index":577,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/features/auth/components/register/register.component.ts:100",{"_index":585,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:131",{"_index":583,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:142",{"_index":584,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:148",{"_index":586,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:159",{"_index":582,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:67",{"_index":581,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:78",{"_index":588,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:79",{"_index":589,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:81",{"_index":594,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:96",{"_index":596,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:97",{"_index":587,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/register/register.component.ts:98",{"_index":595,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/features/auth/components/reset",{"_index":627,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts",{"_index":420,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/features/home/home.component.ts:20",{"_index":427,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:26",{"_index":432,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:28",{"_index":429,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:40",{"_index":428,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/features/home/home.component.ts:44",{"_index":431,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/environments/environment.development.ts",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.production.ts",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssr",{"_index":819,"title":{},"body":{"index.html":{}}}],["stand",{"_index":1034,"title":{},"body":{"license.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"index.html":{}}}],["standard",{"_index":901,"title":{},"body":{"index.html":{},"license.html":{}}}],["standards",{"_index":1147,"title":{},"body":{"license.html":{}}}],["start",{"_index":1729,"title":{},"body":{"license.html":{}}}],["started",{"_index":791,"title":{"index.html":{},"license.html":{}},"body":{}}],["starts",{"_index":1742,"title":{},"body":{"license.html":{}}}],["state",{"_index":256,"title":{},"body":{"interfaces/AuthState.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["state.authstate",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.credentials",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.error",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.forgotpassworderror",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.registrationerror",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.resetpassworderror",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.status",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.token",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.user",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stated",{"_index":1206,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1503,"title":{},"body":{"license.html":{}}}],["statements",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1044,"title":{},"body":{"license.html":{}}}],["statestatus",{"_index":236,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/enumerations.html":{}}}],["statestatus.error",{"_index":266,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.loading",{"_index":257,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.pending",{"_index":251,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["statestatus.success",{"_index":263,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["stating",{"_index":1282,"title":{},"body":{"license.html":{}}}],["status",{"_index":230,"title":{},"body":{"interfaces/AuthState.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["status.enum",{"_index":240,"title":{},"body":{"interfaces/AuthState.html":{}}}],["status.enum.ts",{"_index":766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["steps",{"_index":986,"title":{},"body":{"license.html":{}}}],["storage",{"_index":457,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["storage.service",{"_index":164,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts",{"_index":447,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:10",{"_index":456,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:12",{"_index":557,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:14",{"_index":458,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:16",{"_index":558,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:19",{"_index":464,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:20",{"_index":492,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/MemoryStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:24",{"_index":460,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:26",{"_index":559,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:28",{"_index":462,"title":{},"body":{"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:30",{"_index":560,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:32",{"_index":486,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:33",{"_index":459,"title":{},"body":{"injectables/JwtService.html":{}}}],["storage.service.ts:36",{"_index":488,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:40",{"_index":490,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["storage.service.ts:6",{"_index":562,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:8",{"_index":563,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["storage.service.ts:9",{"_index":482,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["store",{"_index":317,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["store.dispatch(settoken(refreshresult",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store.dispatch(signout",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stored",{"_index":848,"title":{},"body":{"index.html":{}}}],["string",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"miscellaneous/variables.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subdividing",{"_index":1556,"title":{},"body":{"license.html":{}}}],["subject",{"_index":1550,"title":{},"body":{"license.html":{}}}],["sublicenses",{"_index":1588,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":1237,"title":{},"body":{"license.html":{}}}],["subprograms",{"_index":1193,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":1756,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":407,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe((data",{"_index":370,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["subscribe((error",{"_index":380,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((issuccess",{"_index":394,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscribe((user",{"_index":376,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subscription",{"_index":327,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["subsection",{"_index":1353,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1408,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":1032,"title":{},"body":{"license.html":{}}}],["success",{"_index":261,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["successsubscription",{"_index":307,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["such",{"_index":972,"title":{},"body":{"license.html":{}}}],["sue",{"_index":1601,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":1420,"title":{},"body":{"license.html":{}}}],["summary",{"_index":385,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["supplement",{"_index":1453,"title":{},"body":{"license.html":{}}}],["support",{"_index":1290,"title":{},"body":{"license.html":{}}}],["supports",{"_index":1362,"title":{},"body":{"license.html":{}}}],["sure",{"_index":890,"title":{},"body":{"index.html":{},"license.html":{}}}],["surrender",{"_index":966,"title":{},"body":{"license.html":{}}}],["survive",{"_index":1502,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":1704,"title":{},"body":{"license.html":{}}}],["switchmap",{"_index":126,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["switchmap((request",{"_index":110,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["system",{"_index":1157,"title":{},"body":{"license.html":{}}}],["systematic",{"_index":1019,"title":{},"body":{"license.html":{}}}],["t",{"_index":857,"title":{},"body":{"index.html":{}}}],["table",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":933,"title":{},"body":{"license.html":{}}}],["tangible",{"_index":1387,"title":{},"body":{"license.html":{}}}],["tap",{"_index":153,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["team",{"_index":784,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["teamurl",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["technological",{"_index":1247,"title":{},"body":{"license.html":{}}}],["technologies",{"_index":828,"title":{},"body":{"index.html":{}}}],["tells",{"_index":1128,"title":{},"body":{"license.html":{}}}],["temp",{"_index":569,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["term",{"_index":1204,"title":{},"body":{"license.html":{}}}],["terminal",{"_index":1740,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":1509,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":1532,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":1518,"title":{},"body":{"license.html":{}}}],["termination",{"_index":1506,"title":{},"body":{"license.html":{}}}],["terms",{"_index":982,"title":{},"body":{"license.html":{}}}],["test",{"_index":870,"title":{},"body":{"index.html":{}}}],["testing",{"_index":879,"title":{},"body":{"index.html":{}}}],["tests",{"_index":869,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":967,"title":{},"body":{"license.html":{}}}],["things",{"_index":959,"title":{},"body":{"license.html":{}}}],["third",{"_index":1274,"title":{},"body":{"license.html":{}}}],["this.actions$.pipe",{"_index":108,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice",{"_index":111,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authservice.forgotpassword(request.username).pipe",{"_index":132,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.me().pipe",{"_index":127,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.register(request).pipe",{"_index":141,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.authservice.resetpassword(request).pipe",{"_index":148,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.checkusername(data",{"_index":371,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.currentusererrorsubscription",{"_index":434,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.currentusererrorsubscription?.unsubscribe",{"_index":437,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.data",{"_index":571,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.data[key",{"_index":572,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["this.errorsubscription",{"_index":378,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.errorsubscription?.unsubscribe",{"_index":397,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.forgotpasswordform.get('username')?.value",{"_index":405,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.formbuilder.group",{"_index":329,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.http.get(api.authurl",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.post",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isusernametaken",{"_index":409,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.jwtservice.clear",{"_index":154,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.saverefreshtoken(token.refreshtoken",{"_index":118,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.jwtservice.savetoken(token.accesstoken",{"_index":117,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["this.loginform.get('password')?.value",{"_index":543,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.get('username')?.value",{"_index":542,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.messageservice.add",{"_index":383,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.registerform.get('email')?.value",{"_index":607,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('firstname')?.value",{"_index":608,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('lastname')?.value",{"_index":609,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('password')?.value",{"_index":606,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('username')?.value",{"_index":605,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.resetpasswordform.get('password')?.value",{"_index":645,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/auth",{"_index":436,"title":{},"body":{"components/HomeComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/auth/login",{"_index":601,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/home",{"_index":377,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.secret",{"_index":643,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.storage",{"_index":502,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.clear",{"_index":505,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(key",{"_index":506,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.getitem(refresh_token_key",{"_index":473,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.getitem(token_key",{"_index":471,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.key(index",{"_index":507,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.length",{"_index":504,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(key",{"_index":508,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.removeitem(refresh_token_key",{"_index":469,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.removeitem(token_key",{"_index":468,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(key",{"_index":509,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["this.storage.setitem(refresh_token_key",{"_index":472,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.storage.setitem(token_key",{"_index":470,"title":{},"body":{"injectables/JwtService.html":{}}}],["this.store",{"_index":374,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch",{"_index":404,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(loadcurrentuser",{"_index":372,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.dispatch(registernewuser(dto",{"_index":610,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.store.select(isloadingauthstate",{"_index":333,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.store.select(selectcurrentuser",{"_index":430,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.successsubscription",{"_index":392,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.successsubscription?.unsubscribe",{"_index":399,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant",{"_index":386,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.translateservice.instant('auth.reset",{"_index":639,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.usernamechecksubscription",{"_index":406,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usernamechecksubscription?.unsubscribe",{"_index":400,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.usersubscription",{"_index":373,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.usersubscription?.unsubscribe",{"_index":398,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["those",{"_index":1030,"title":{},"body":{"license.html":{}}}],["though",{"_index":1456,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":1041,"title":{},"body":{"license.html":{}}}],["three",{"_index":1340,"title":{},"body":{"license.html":{}}}],["through",{"_index":1114,"title":{},"body":{"license.html":{}}}],["throwerror",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thus",{"_index":1228,"title":{},"body":{"license.html":{}}}],["time",{"_index":1528,"title":{},"body":{"license.html":{}}}],["toastmodule",{"_index":301,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["todo",{"_index":564,"title":{},"body":{"injectables/MemoryStorage.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":231,"title":{"interfaces/Token.html":{}},"body":{"interfaces/AuthState.html":{},"injectables/JwtService.html":{},"interfaces/Token.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_key",{"_index":466,"title":{},"body":{"injectables/JwtService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokendto",{"_index":206,"title":{"interfaces/TokenDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/TokenDto.html":{},"coverage.html":{}}}],["tools",{"_index":1185,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1485,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1484,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1486,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":1426,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1116,"title":{},"body":{"license.html":{}}}],["transferred",{"_index":1428,"title":{},"body":{"license.html":{}}}],["transferring",{"_index":1554,"title":{},"body":{"license.html":{}}}],["translate",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["translate.addlangs(['en",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use('en",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["translate/http",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["translateloader",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatemodule",{"_index":297,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["translatemodule.forroot",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translateservice",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["transmission",{"_index":1375,"title":{},"body":{"license.html":{}}}],["treated",{"_index":1455,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1254,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["troubleshooting",{"_index":810,"title":{},"body":{"index.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":985,"title":{},"body":{"license.html":{}}}],["type",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthState.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"interfaces/ForgotPasswordRequestDto.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"components/ResetPasswordComponent.html":{},"interfaces/ResetPasswordRequestDto.html":{},"injectables/SessionStorage.html":{},"interfaces/Token.html":{},"interfaces/TokenDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":673,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["type.enum.ts",{"_index":764,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typescript",{"_index":247,"title":{},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["typical",{"_index":1402,"title":{},"body":{"license.html":{}}}],["ui",{"_index":801,"title":{},"body":{"index.html":{}}}],["unacceptable",{"_index":1027,"title":{},"body":{"license.html":{}}}],["unautherrorinterceptor",{"_index":703,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1071,"title":{},"body":{"license.html":{}}}],["unit",{"_index":868,"title":{},"body":{"index.html":{}}}],["unless",{"_index":1411,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":1210,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":1088,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":1241,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":1451,"title":{},"body":{"license.html":{}}}],["until",{"_index":1517,"title":{},"body":{"license.html":{}}}],["update",{"_index":770,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["updatedat",{"_index":666,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["updates",{"_index":1439,"title":{},"body":{"license.html":{}}}],["url",{"_index":822,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":844,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":829,"title":{},"body":{"index.html":{},"license.html":{}}}],["usefactory",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useful",{"_index":1734,"title":{},"body":{"license.html":{}}}],["user",{"_index":232,"title":{"interfaces/User.html":{}},"body":{"interfaces/AuthState.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["userdto",{"_index":210,"title":{"interfaces/UserDto.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserDto.html":{},"coverage.html":{}}}],["userid",{"_index":667,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username",{"_index":112,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/AuthenticateRequestDto.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"interfaces/RegisterRequestDto.html":{},"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["username/taken",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["usernamecheckerror",{"_index":233,"title":{},"body":{"interfaces/AuthState.html":{},"miscellaneous/variables.html":{}}}],["usernamechecksubscription",{"_index":308,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["usernameinput",{"_index":309,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["users",{"_index":943,"title":{},"body":{"license.html":{}}}],["usersubscription",{"_index":310,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["uses",{"_index":1405,"title":{},"body":{"license.html":{}}}],["using",{"_index":854,"title":{},"body":{"index.html":{},"license.html":{}}}],["utilizes",{"_index":816,"title":{},"body":{"index.html":{}}}],["v1/auth",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/device",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/files",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/invitation",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/members",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/organization",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/platform",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/project",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/team",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v1/user",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":1339,"title":{},"body":{"license.html":{}}}],["validators",{"_index":343,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.email",{"_index":591,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":331,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":530,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.pattern(securepasswordregex",{"_index":590,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.required",{"_index":330,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["value",{"_index":106,"title":{},"body":{"injectables/AuthEffects.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":676,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserDto.html":{}}}],["var",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/InvitationComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["varaibles",{"_index":903,"title":{},"body":{"index.html":{}}}],["variable",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":891,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["verbatim",{"_index":922,"title":{},"body":{"license.html":{}}}],["vercel/analytics",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["vercel/speed",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["version",{"_index":815,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":940,"title":{},"body":{"license.html":{}}}],["via",{"_index":872,"title":{},"body":{"index.html":{}}}],["view",{"_index":1131,"title":{},"body":{"license.html":{}}}],["viewchild",{"_index":342,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewchild('username",{"_index":340,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["violates",{"_index":1445,"title":{},"body":{"license.html":{}}}],["violation",{"_index":1513,"title":{},"body":{"license.html":{}}}],["visible",{"_index":1125,"title":{},"body":{"license.html":{}}}],["void",{"_index":322,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/JwtService.html":{},"injectables/LocalStorage.html":{},"components/LoginComponent.html":{},"injectables/MemoryStorage.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/SessionStorage.html":{},"license.html":{}}}],["volume",{"_index":1316,"title":{},"body":{"license.html":{}}}],["w",{"_index":1744,"title":{},"body":{"license.html":{}}}],["waive",{"_index":1263,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":1717,"title":{},"body":{"license.html":{}}}],["want",{"_index":956,"title":{},"body":{"license.html":{}}}],["warning",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":1129,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":997,"title":{},"body":{"license.html":{}}}],["way",{"_index":947,"title":{},"body":{"license.html":{}}}],["ways",{"_index":1329,"title":{},"body":{"license.html":{}}}],["welcome",{"_index":438,"title":{},"body":{"components/HomeComponent.html":{},"license.html":{}}}],["well",{"_index":1107,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":1558,"title":{},"body":{"license.html":{}}}],["whether",{"_index":973,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1161,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1383,"title":{},"body":{"license.html":{}}}],["widely",{"_index":1155,"title":{},"body":{"license.html":{}}}],["window",{"_index":1173,"title":{},"body":{"license.html":{}}}],["window.localstorage",{"_index":503,"title":{},"body":{"injectables/LocalStorage.html":{}}}],["window.sessionstorage",{"_index":654,"title":{},"body":{"injectables/SessionStorage.html":{}}}],["window?.localstorage",{"_index":501,"title":{},"body":{"injectables/LocalStorage.html":{},"injectables/SessionStorage.html":{}}}],["wipo",{"_index":1253,"title":{},"body":{"license.html":{}}}],["wish",{"_index":904,"title":{},"body":{"index.html":{},"license.html":{}}}],["withcomponentinputbinding",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["withfetch",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":1496,"title":{},"body":{"license.html":{}}}],["withinterceptors([authinterceptor",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1091,"title":{},"body":{"license.html":{}}}],["withpreloading(preloadallmodules",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["work",{"_index":945,"title":{},"body":{"license.html":{}}}],["work's",{"_index":1184,"title":{},"body":{"license.html":{}}}],["working",{"_index":1156,"title":{},"body":{"license.html":{}}}],["works",{"_index":445,"title":{},"body":{"components/InvitationComponent.html":{},"license.html":{}}}],["worldwide",{"_index":1591,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1678,"title":{},"body":{"license.html":{}}}],["written",{"_index":1338,"title":{},"body":{"license.html":{}}}],["years",{"_index":1341,"title":{},"body":{"license.html":{}}}],["yourself",{"_index":1608,"title":{},"body":{"license.html":{}}}],["z])(?=.*[${passwordspecialchars}])(?=\\\\s+$).{${passwordminlength",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z])(?=.*[a",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":758,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss',\n})\nexport class AppComponent {\n  constructor(private translate: TranslateService) {\n    translate.setDefaultLang('en');\n    translate.addLangs(['en']);\n    translate.use('en');\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/app.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            authState\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authState:         AuthState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { AuthEffects } from './auth/auth.effects';\nimport { AuthState, authReducer } from './auth/auth.reducer';\n\nexport interface AppState {\n  authState: AuthState;\n}\n\nexport const appEfects = [AuthEffects];\nexport const appStore = {\n  authState: authReducer,\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/auth.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './auth.component.html',\n  styleUrl: './auth.component.scss',\n})\nexport class AuthComponent {}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate$\n                            \n                            \n                                authenticationSuccess$\n                            \n                            \n                                forgotPassword$\n                            \n                            \n                                loadCurrentUser$\n                            \n                            \n                                registerNewUser$\n                            \n                            \n                                registerNewUserSuccess$\n                            \n                            \n                                resetPassword$\n                            \n                            \n                                signOut$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, jwtService: JwtService, actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/state/auth/auth.effects.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUser$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:134\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/state/auth/auth.effects.ts:106\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, of, switchMap, tap } from 'rxjs';\nimport { AuthService } from '../../services/api/auth.api.service';\nimport { JwtService } from '../../services/token-storage.service';\nimport {\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  signOut,\n} from './auth.actions';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private actions$: Actions,\n  ) {}\n\n  loadCurrentUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCurrentUser),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(loadCurrentUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticate$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticate),\n      switchMap((request) =>\n        this.authService\n          .authenticate({\n            username: request.username,\n            password: request.password,\n          })\n          .pipe(\n            map((token) => {\n              this.jwtService.saveToken(token.accessToken);\n              this.jwtService.saveRefreshToken(token.refreshToken);\n              return authenticationSuccess(token);\n            }),\n            catchError((error) => of(authenticationFailure({ error }))),\n          ),\n      ),\n    ),\n  );\n\n  forgotPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(forgotPassword),\n      switchMap((request) =>\n        this.authService.forgotPassword(request.username).pipe(\n          map(() => {\n            return forgotPasswordSuccess();\n          }),\n          catchError((error) => of(forgotPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  resetPassword$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(resetPassword),\n      switchMap((request) =>\n        this.authService.resetPassword(request).pipe(\n          map(() => {\n            return resetPasswordSuccess();\n          }),\n          catchError((error) => of(resetPasswordFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  authenticationSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(authenticationSuccess),\n      switchMap(() =>\n        this.authService.me().pipe(\n          map((user) => loadCurrentUserSuccess(user)),\n          catchError((error) => of(authenticationFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  signOut$ = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(signOut),\n        tap(() => {\n          this.jwtService.clear();\n        }),\n      ),\n    { dispatch: false },\n  );\n\n  registerNewUser$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUser),\n      switchMap((request) =>\n        this.authService.register(request).pipe(\n          map(() => {\n            return registerNewUserSuccess({\n              username: request.username,\n              password: request.password,\n            });\n          }),\n          catchError((error) => of(registerNewUserFailure({ error }))),\n        ),\n      ),\n    ),\n  );\n\n  registerNewUserSuccess$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(registerNewUserSuccess),\n      switchMap((request) => of(authenticate(request))),\n    ),\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/auth.api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                authenticate\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                me\n                            \n                            \n                                refreshToken\n                            \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/auth.api.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n            \n                \nauthenticate(request: AuthenticateRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                            AuthenticateRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n            \n                \nisUsernameTaken(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \nrefreshToken(refreshToken: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(dto: RegisterRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            RegisterRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(dto: ResetPasswordRequestDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/auth.api.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dto\n                                            \n                                                            ResetPasswordRequestDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { api } from './api';\nimport { TokenDto } from '../../domain/dto/token.dto';\nimport { Observable } from 'rxjs';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { UserDto } from '../../domain/dto/user.dto';\nimport { RegisterRequestDto } from '../../domain/dto/requests/register-request.dto';\nimport { ResetPasswordRequestDto } from '../../domain/dto/requests/reset-password-request.dto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private http: HttpClient) {}\n\n  refreshToken(refreshToken: string): Observable {\n    return this.http.post(\n      api.authUrl + '/refreshToken',\n      { refreshToken: refreshToken },\n      api.noAuthOptions\n    );\n  }\n\n  authenticate(request: AuthenticateRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/authenticate',\n      request,\n      api.noAuthOptions\n    );\n  }\n\n  me(): Observable {\n    return this.http.get(api.authUrl + '/me', api.authOptions);\n  }\n\n  isUsernameTaken(username: string): Observable {\n    const params = new HttpParams().set('username', username);\n    return this.http.get(api.authUrl + '/username/taken', {\n      ...api.noAuthOptions,\n      params,\n    });\n  }\n\n  forgotPassword(username: string): Observable {\n    return this.http.post(\n      api.authUrl + '/forgot-password',\n      { username: username },\n      api.noAuthOptions\n    );\n  }\n\n  resetPassword(dto: ResetPasswordRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/reset-password',\n      dto,\n      api.noAuthOptions\n    );\n  }\n\n  register(dto: RegisterRequestDto): Observable {\n    return this.http.post(\n      api.authUrl + '/register',\n      dto,\n      api.noAuthOptions\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthState.html":{"url":"interfaces/AuthState.html","title":"interface - AuthState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/state/auth/auth.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            credentials\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            forgotPasswordError\n                                        \n                                \n                                \n                                        \n                                            isUsernameAvialable\n                                        \n                                \n                                \n                                        \n                                            registrationError\n                                        \n                                \n                                \n                                        \n                                            resetPasswordError\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            usernameCheckError\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        credentials\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        credentials:         AuthenticateRequestDto | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthenticateRequestDto | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:     any | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forgotPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forgotPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isUsernameAvialable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isUsernameAvialable:     boolean | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registrationError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registrationError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetPasswordError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StateStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         Token | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Token | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usernameCheckError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usernameCheckError:     null | any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     null | any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { AuthenticateRequestDto } from '../../domain/dto/requests/authenticate-request.dto';\nimport { StateStatus } from '../../domain/models/enums/state-status.enum';\nimport { Token } from '../../domain/models/token.entity';\nimport { User } from '../../domain/models/user.entity';\nimport {\n  authenticate,\n  authenticationFailure,\n  authenticationSuccess,\n  forgotPassword,\n  forgotPasswordFailure,\n  forgotPasswordSuccess,\n  loadCurrentUser,\n  loadCurrentUserFailure,\n  loadCurrentUserSuccess,\n  registerNewUser,\n  registerNewUserFailure,\n  registerNewUserSuccess,\n  resetPassword,\n  resetPasswordFailure,\n  resetPasswordSuccess,\n  setCurrentUser,\n  setToken,\n  signOut,\n} from './auth.actions';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nexport interface AuthState {\n  user: User | null;\n  error: any | null;\n  forgotPasswordError: null | any;\n  resetPasswordError: null | any;\n  registrationError: null | any;\n  usernameCheckError: null | any;\n  isUsernameAvialable: boolean | null;\n  token: Token | null;\n  credentials: AuthenticateRequestDto | null;\n  status: StateStatus;\n}\n\nexport const initialState: AuthState = {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n};\n\nexport const authReducer = createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, { error }) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Reset Password\n  on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, { error }) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Register new user\n  on(registerNewUser, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Register new user success\n  on(registerNewUserSuccess, (state) => ({\n    ...state,\n    registrationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Register new user failure\n  on(registerNewUserFailure, (state, { error }) => ({\n    ...state,\n    registrationError: error,\n    status: StateStatus.ERROR,\n  })),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthenticateRequestDto.html":{"url":"interfaces/AuthenticateRequestDto.html","title":"interface - AuthenticateRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthenticateRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/authenticate-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthenticateRequestDto {\n    username: string,\n    password: string,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputTextModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                forgotPasswordForm\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                forgotPassword\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:144\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/forgot-password/forgot-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { AppState } from '../../../../core/state/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router, RouterModule } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectForgotPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport {\n  forgotPassword,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { ButtonModule } from 'primeng/button';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputTextModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss',\n})\nexport class ForgotPasswordComponent implements AfterViewInit, OnInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService\n  ) {}\n\n  forgotPasswordForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged()\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectForgotPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          if (error.status == 404) {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.user_does_not_exist'\n              ),\n            });\n          } else {\n            this.messageService.add({\n              severity: 'error',\n              summary: this.translateService.instant(\n                'auth.forgot-password.error'\n              ),\n              detail: this.translateService.instant(\n                'auth.forgot-password.error_description'\n              ),\n            });\n          }\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.forgot-password.success'\n            ),\n            detail: this.translateService.instant(\n              'auth.forgot-password.check_your_email'\n            ),\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  // eslint-disable no-non-null-asserted-optional-chain\n  forgotPassword() {\n    this.store.dispatch(\n      forgotPassword({\n        username: this.forgotPasswordForm.get('username')?.value ?? '',\n      })\n    );\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.forgot-password.welcome_message\" | translate }}\n  \n  {{\n    \"auth.forgot-password.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n      \n      } @else if (isUsernameTaken) {\n      \n      } @else {\n      \n      }\n      \n    \n    {{ \"auth.forgot-password.username_is_required\" | translate }}\n    {{ \"auth.forgot-password.username_length\" | translate }}\n\n    \n      {{ \"auth.forgot-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.forgot-password.welcome_message\" | translate }}    {{    \"auth.forgot-password.welcome_description\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {            } @else if (isUsernameTaken) {            } @else {            }              {{ \"auth.forgot-password.username_is_required\" | translate }}    {{ \"auth.forgot-password.username_length\" | translate }}          {{ \"auth.forgot-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForgotPasswordRequestDto.html":{"url":"interfaces/ForgotPasswordRequestDto.html","title":"interface - ForgotPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ForgotPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ForgotPasswordRequestDto {\n    email: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                    Private\n                                    Optional\n                                currentUserErrorSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/home/home.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/home/home.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(selectCurrentUser)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        currentUserErrorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/home/home.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { AppState } from '../../core/state/app.state';\nimport { loadCurrentUser } from '../../core/state/auth/auth.actions';\nimport {\n  selectCurrentUser,\n  selectCurrentUserError,\n} from '../../core/state/auth/auth.selectors';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss',\n})\nexport class HomeComponent implements OnInit, OnDestroy {\n  constructor(\n    private store: Store,\n    private router: Router,\n  ) {}\n\n  private currentUserErrorSubscription?: Subscription;\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.currentUserErrorSubscription = this.store\n      .select(selectCurrentUserError)\n      .subscribe((error) => {\n        if (error && error != null) {\n          this.router.navigate(['/auth']);\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.currentUserErrorSubscription?.unsubscribe();\n  }\n\n  currentUser = this.store.select(selectCurrentUser);\n}\n\n    \n\n    \n        Welcome: {{(currentUser | async)?.firstName}} {{(currentUser | async)?.lastName}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Welcome: {{(currentUser | async)?.firstName}} {{(currentUser | async)?.lastName}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InvitationComponent.html":{"url":"components/InvitationComponent.html","title":"component - InvitationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InvitationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/invitation/invitation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-invitation\n            \n\n            \n                Standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./invitation.component.html\n            \n\n\n\n            \n                styleUrl\n                ./invitation.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-invitation',\n  standalone: true,\n  imports: [],\n  templateUrl: './invitation.component.html',\n  styleUrl: './invitation.component.scss'\n})\nexport class InvitationComponent {\n\n}\n\n    \n\n    \n        invitation works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'invitation works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InvitationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtService.html":{"url":"injectables/JwtService.html","title":"injectable - JwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/token-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                getRefreshToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveRefreshToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/token-storage.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                        \n                    clear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRefreshToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    getToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveRefreshToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveToken(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/token-storage.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { LocalStorage } from \"./local-storage.service\";\n\nconst TOKEN_KEY = 'auth-token';\nconst REFRESH_TOKEN_KEY = 'auth-refreshtoken';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class JwtService {\n\n  constructor(private storage: LocalStorage) {}\n\n  public clear(): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n  }\n\n  public saveToken(token: string): void {\n   this.storage.removeItem(TOKEN_KEY);\n   this.storage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string | null {\n    return this.storage.getItem(TOKEN_KEY);\n  }\n\n  public saveRefreshToken(token: string): void {\n   this.storage.removeItem(REFRESH_TOKEN_KEY);\n   this.storage.setItem(REFRESH_TOKEN_KEY, token);\n  }\n\n  public getRefreshToken(): string | null {\n    return this.storage.getItem(REFRESH_TOKEN_KEY);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorage.html":{"url":"injectables/LocalStorage.html","title":"injectable - LocalStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/local-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/local-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.localStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-login\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                loginForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                getApplicationName\n                            \n                            \n                                isRegistrationEnabled\n                            \n                            \n                                login\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getApplicationName\n                        \n                    \n                \n            \n            \n                \ngetApplicationName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRegistrationEnabled\n                        \n                    \n                \n            \n            \n                \nisRegistrationEnabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:146\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/login/login.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/login/login.component.ts:84\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { environment } from '../../../../../environments/environment';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  authenticate,\n  loadCurrentUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectAuthorizationError,\n  selectCurrentUser,\n} from '../../../../core/state/auth/auth.selectors';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n})\nexport class LoginComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  loginForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: ['', [Validators.required, Validators.minLength(8)]],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectAuthorizationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.login.authorization_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.login.wrong_username_or_password',\n            ),\n          });\n        }\n      });\n  }\n\n  login() {\n    this.store.dispatch(\n      authenticate({\n        username: this.loginForm.get('username')?.value ?? '',\n        password: this.loginForm.get('password')?.value ?? '',\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  getApplicationName() {\n    return environment.appName;\n  }\n\n  isRegistrationEnabled() {\n    return environment.enableRegistration;\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},\n  \n  {{\n    \"auth.login.sign_in_to_continue\" | translate\n  }}\n\n\n  \n    {{ \"auth.login.username_label\" | translate }}\n    \n      @if(isUsernameTaken === null) {\n        \n        } @else if (isUsernameTaken) {\n        \n        } @else {\n        \n        }\n      \n    \n    {{ \"auth.login.username_is_required\" | translate }}\n    {{ \"auth.login.username_length\" | translate }}\n\n    {{ \"auth.login.password_label\" | translate }}\n    \n    {{ \"auth.login.password_is_required\" | translate }}\n    {{ \"auth.login.password_length\" | translate }}\n\n    \n      {{ \"auth.login.forgot_password\" | translate }}\n      {{ \"auth.login.register\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.login.welcome_message\" | translate }}{{ getApplicationName() }},    {{    \"auth.login.sign_in_to_continue\" | translate  }}      {{ \"auth.login.username_label\" | translate }}          @if(isUsernameTaken === null) {                } @else if (isUsernameTaken) {                } @else {                }              {{ \"auth.login.username_is_required\" | translate }}    {{ \"auth.login.username_length\" | translate }}    {{ \"auth.login.password_label\" | translate }}        {{ \"auth.login.password_is_required\" | translate }}    {{ \"auth.login.password_length\" | translate }}          {{ \"auth.login.forgot_password\" | translate }}      {{ \"auth.login.register\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/memory-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/memory-storage.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/memory-storage.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/memory-storage.service.ts:8\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n//TODO: Implement better server storage alongside server temp memory storage\n@Injectable()\nexport class MemoryStorage implements Storage {\n  private data: { [key: string]: string } = {};\n\n  get length(): number {\n    return Object.keys(this.data).length;\n  }\n\n  clear(): void {\n    this.data = {};\n  }\n\n  getItem(key: string): string | null {\n    return key in this.data ? this.data[key] : null;\n  }\n\n  key(index: number): string | null {\n    const keys = Object.keys(this.data);\n\n    return index >= 0 && keys.length \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                AfterViewInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-register\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            InputMaskModule\n                            InputTextModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                isUsernameTaken\n                            \n                            \n                                registerForm\n                            \n                            \n                                    Private\n                                    Optional\n                                usernameCheckSubscription\n                            \n                            \n                                    \n                                usernameInput\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkUsername\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUsername\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/register/register.component.ts:148\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUsernameTaken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        usernameCheckSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        usernameInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('username')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/register/register.component.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport {\n  Subscription,\n  debounceTime,\n  distinctUntilChanged,\n  fromEvent,\n  map,\n} from 'rxjs';\nimport { RegisterRequestDto } from '../../../../core/domain/dto/requests/register-request.dto';\nimport { AuthService } from '../../../../core/services/api/auth.api.service';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  registerNewUser,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  selectCurrentUser,\n  selectRegistrationError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\nimport { environment } from '../../../../../environments/environment';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    InputMaskModule,\n    InputTextModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss',\n})\nexport class RegisterComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('username') usernameInput!: ElementRef;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n    private authService: AuthService,\n  ) {}\n\n  isLoading = this.store.select(isLoadingAuthState);\n  isUsernameTaken: boolean | null = null;\n\n  registerForm = this.formBuilder.group({\n    username: ['', [Validators.required, Validators.minLength(3)]],\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n    email: ['', [Validators.required, Validators.email]],\n    firstName: ['', [Validators.required]],\n    lastName: ['', [Validators.required]],\n  });\n\n  private userSubscription?: Subscription;\n  private errorSubscription?: Subscription;\n  private usernameCheckSubscription?: Subscription;\n\n  ngOnInit() {\n    if (!environment.enableRegistration) {\n      this.router.navigate(['/auth/login']);\n    }\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectRegistrationError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant(\n              'auth.register.registration_error',\n            ),\n            detail: this.translateService.instant(\n              'auth.register.registration_error_description',\n            ),\n          });\n        }\n      });\n  }\n\n  ngAfterViewInit(): void {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    fromEvent(this.usernameInput.nativeElement, 'input')\n      .pipe(\n        map((event: Event) => (event.target as HTMLInputElement).value),\n        debounceTime(500),\n        distinctUntilChanged(),\n      )\n      .subscribe((data) => this.checkUsername(data));\n  }\n\n  ngOnDestroy() {\n    this.userSubscription?.unsubscribe();\n    this.errorSubscription?.unsubscribe();\n    this.usernameCheckSubscription?.unsubscribe();\n  }\n\n  register() {\n    const dto: RegisterRequestDto = {\n      username: this.registerForm.get('username')?.value ?? '',\n      password: this.registerForm.get('password')?.value ?? '',\n      email: this.registerForm.get('email')?.value ?? '',\n      firstName: this.registerForm.get('firstName')?.value ?? '',\n      lastName: this.registerForm.get('lastName')?.value ?? '',\n    };\n    this.store.dispatch(registerNewUser(dto));\n  }\n\n  private checkUsername(username: string) {\n    this.usernameCheckSubscription?.unsubscribe();\n    this.usernameCheckSubscription = this.authService\n      .isUsernameTaken(username)\n      .subscribe({\n        next: (result) => {\n          this.isUsernameTaken = result;\n        },\n        error: () => {\n          this.isUsernameTaken = null;\n        },\n      });\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.register.welcome_message\" | translate }}\n  \n  {{\n    \"auth.register.welcome_description\" | translate\n  }}\n\n\n  \n    {{ \"auth.register.username_label\" | translate }}\n    \n      @if (isUsernameTaken === null) {\n        \n      } @else if (!isUsernameTaken) {\n        \n      } @else {\n        \n      }\n      \n    \n    {{ \"auth.register.username_is_required\" | translate }}\n    {{ \"auth.register.username_length\" | translate }}\n\n    {{ \"auth.register.password_label\" | translate }}\n    \n    {{ \"auth.register.password_length\" | translate }}\n    {{ \"auth.register.password_not_strong\" | translate }}\n\n    {{\n      \"auth.register.email_label\" | translate\n    }}\n    \n      \n      \n    \n    {{ \"auth.register.email_is_required\" | translate }}\n\n    {{ \"auth.register.first_name_label\" | translate }}\n    \n    {{ \"auth.register.first_name_is_required\" | translate }}\n\n    {{ \"auth.register.last_name_label\" | translate }}\n    \n    {{ \"auth.register.last_name_is_required\" | translate }}\n\n    \n      {{ \"auth.register.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.register.welcome_message\" | translate }}    {{    \"auth.register.welcome_description\" | translate  }}      {{ \"auth.register.username_label\" | translate }}          @if (isUsernameTaken === null) {              } @else if (!isUsernameTaken) {              } @else {              }              {{ \"auth.register.username_is_required\" | translate }}    {{ \"auth.register.username_length\" | translate }}    {{ \"auth.register.password_label\" | translate }}        {{ \"auth.register.password_length\" | translate }}    {{ \"auth.register.password_not_strong\" | translate }}    {{      \"auth.register.email_label\" | translate    }}                        {{ \"auth.register.email_is_required\" | translate }}    {{ \"auth.register.first_name_label\" | translate }}        {{ \"auth.register.first_name_is_required\" | translate }}    {{ \"auth.register.last_name_label\" | translate }}        {{ \"auth.register.last_name_is_required\" | translate }}          {{ \"auth.register.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterRequestDto.html":{"url":"interfaces/RegisterRequestDto.html","title":"interface - RegisterRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RegisterRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/register-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterRequestDto {\n  username: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/auth/components/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                Standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                            TranslateModule\n                            ButtonModule\n                            PasswordModule\n                            RouterModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                errorSubscription\n                            \n                            \n                                isLoading\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                    Private\n                                    Optional\n                                successSubscription\n                            \n                            \n                                    Private\n                                    Optional\n                                userSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                secret\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, store: Store, router: Router, messageService: MessageService, translateService: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        secret\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:49\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        errorSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.store.select(isLoadingAuthState)\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        successSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        userSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/features/auth/components/reset-password/reset-password.component.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { MessageService } from 'primeng/api';\nimport { ButtonModule } from 'primeng/button';\nimport { PasswordModule } from 'primeng/password';\nimport { ToastModule } from 'primeng/toast';\nimport { Subscription } from 'rxjs';\nimport { AppState } from '../../../../core/state/app.state';\nimport {\n  loadCurrentUser,\n  resetPassword,\n} from '../../../../core/state/auth/auth.actions';\nimport {\n  isLoadingAuthState,\n  isSuccess,\n  selectCurrentUser,\n  selectResetPasswordError,\n} from '../../../../core/state/auth/auth.selectors';\nimport { securePasswordRegex } from '../../../../core/utils/regex.constants';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    ButtonModule,\n    PasswordModule,\n    RouterModule,\n    ToastModule,\n  ],\n  providers: [MessageService],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss',\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n  @Input()\n  private secret?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private store: Store,\n    private router: Router,\n    private messageService: MessageService,\n    private translateService: TranslateService,\n  ) {}\n\n  resetPasswordForm = this.formBuilder.group({\n    password: [\n      '',\n      [\n        Validators.required,\n        Validators.minLength(8),\n        Validators.pattern(securePasswordRegex),\n      ],\n    ],\n  });\n\n  isLoading = this.store.select(isLoadingAuthState);\n\n  private errorSubscription?: Subscription;\n  private userSubscription?: Subscription;\n  private successSubscription?: Subscription;\n\n  ngOnDestroy() {\n    this.errorSubscription?.unsubscribe();\n    this.userSubscription?.unsubscribe();\n    this.successSubscription?.unsubscribe();\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadCurrentUser());\n\n    this.userSubscription = this.store\n      .select(selectCurrentUser)\n      .subscribe((user) => {\n        if (user != null) {\n          this.router.navigate(['/home']);\n        }\n      });\n\n    this.errorSubscription = this.store\n      .select(selectResetPasswordError)\n      .subscribe((error) => {\n        if (error != null) {\n          this.messageService.add({\n            severity: 'error',\n            summary: this.translateService.instant('auth.reset-password.error'),\n            detail: this.translateService.instant(\n              'auth.reset-password.wrong_hash',\n            ),\n          });\n        }\n      });\n\n    this.successSubscription = this.store\n      .select(isSuccess)\n      .subscribe((isSuccess) => {\n        if (isSuccess != null && isSuccess) {\n          this.messageService.add({\n            severity: 'success',\n            summary: this.translateService.instant(\n              'auth.reset-password.success',\n            ),\n            detail: this.translateService.instant(\n              'auth.reset-password.success_message',\n            ),\n          });\n          this.router.navigate(['/auth']);\n        }\n      });\n  }\n\n  resetPassword() {\n    if (this.secret) {\n      const newPassword = this.resetPasswordForm.get('password')?.value ?? '';\n      this.store.dispatch(\n        resetPassword({ newPassword: newPassword, hash: this.secret }),\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n\n  \n    {{ \"auth.reset-password.welcome_message\" | translate }}\n  \n\n\n  \n    {{ \"auth.reset-password.new_password_label\" | translate }}\n    \n    {{ \"auth.reset-password.password_is_required\" | translate }}\n    {{ \"auth.reset-password.password_length\" | translate }}\n    {{ \"auth.reset-password.password_not_strong\" | translate }}\n\n    \n      {{ \"auth.reset-password.back_to_login\" | translate }}\n    \n\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \"auth.reset-password.welcome_message\" | translate }}        {{ \"auth.reset-password.new_password_label\" | translate }}        {{ \"auth.reset-password.password_is_required\" | translate }}    {{ \"auth.reset-password.password_length\" | translate }}    {{ \"auth.reset-password.password_not_strong\" | translate }}          {{ \"auth.reset-password.back_to_login\" | translate }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'InvitationComponent', 'selector': 'app-invitation'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResetPasswordRequestDto.html":{"url":"interfaces/ResetPasswordRequestDto.html","title":"interface - ResetPasswordRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ResetPasswordRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/requests/reset-password-request.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ResetPasswordRequestDto {\n    newPassword: string,\n    hash: string, \n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionStorage.html":{"url":"injectables/SessionStorage.html","title":"injectable - SessionStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SessionStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/session-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/session-storage.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/session-storage.service.ts:20\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable, PLATFORM_ID, inject } from '@angular/core';\nimport { MemoryStorage } from './memory-storage.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionStorage implements Storage {\n  private readonly storage: Storage;\n\n  constructor() {\n    const platformId = inject(PLATFORM_ID);\n    if (isPlatformBrowser(platformId) && window?.localStorage) {\n      this.storage = window.sessionStorage;\n    } else {\n      this.storage = new MemoryStorage();\n    }\n  }\n\n  get length(): number {\n    return this.storage.length;\n  }\n\n  clear(): void {\n    this.storage.clear();\n  }\n\n  getItem(key: string): string | null {\n    return this.storage.getItem(key);\n  }\n\n  key(index: number): string | null {\n    return this.storage.key(index);\n  }\n\n  removeItem(key: string): void {\n    this.storage.removeItem(key);\n  }\n\n  setItem(key: string, value: string): void {\n    this.storage.setItem(key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/token.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n    accessToken: string;\n    refreshToken: string;\n    expiresIn: 0;\n    refreshExpiresIn: 0;\n  }\n  \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenDto.html":{"url":"interfaces/TokenDto.html","title":"interface - TokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/token.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshExpiresIn\n                                        \n                                \n                                \n                                        \n                                            refreshToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshExpiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshExpiresIn:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenDto {\n  accessToken: string;\n  refreshToken: string;\n  expiresIn: 0;\n  refreshExpiresIn: 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/models/user.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from \"./enums/permission.enum\";\nimport { ResourceType } from \"./enums/resource-type.enum\";\n\nexport interface User {\n    userId: string;\n    username: string;\n    lastLoginTime: Date;\n    email: string;\n    firstName: string;\n    lastName: string;\n    profileIconUrl: string | null;\n    role: {\n      roleId: string;\n      name: string;\n      permissions: [\n        {\n          type: ResourceType;\n          values: Permission;\n        }\n      ];\n      internal: boolean;\n    };\n    createdAt: Date;\n    updatedAt: Date;\n    activated: boolean;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDto.html":{"url":"interfaces/UserDto.html","title":"interface - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/domain/dto/user.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activated\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastLoginTime\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            profileIconUrl\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLoginTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLoginTime:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profileIconUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        profileIconUrl:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Permission } from '../models/enums/permission.enum';\nimport { ResourceType } from '../models/enums/resource-type.enum';\n\nexport interface UserDto {\n  userId: string;\n  username: string;\n  lastLoginTime: Date;\n  email: string;\n  firstName: string;\n  lastName: string;\n  profileIconUrl: string | null;\n  role: {\n    roleId: string;\n    name: string;\n    permissions: [\n      {\n        type: ResourceType;\n        values: Permission;\n      }\n    ];\n    internal: boolean;\n  };\n  createdAt: Date;\n  updatedAt: Date;\n  activated: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            function\n            HttpLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/authenticate-request.dto.ts\n            \n            interface\n            AuthenticateRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/forgot-password-request.dto.ts\n            \n            interface\n            ForgotPasswordRequestDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/register-request.dto.ts\n            \n            interface\n            RegisterRequestDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/requests/reset-password-request.dto.ts\n            \n            interface\n            ResetPasswordRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/token.dto.ts\n            \n            interface\n            TokenDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/domain/dto/user.dto.ts\n            \n            interface\n            UserDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/token.entity.ts\n            \n            interface\n            Token\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/domain/models/user.entity.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/guards/registration.guard.ts\n            \n            variable\n            registrationGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interceptors/auth.interceptor.ts\n            \n            variable\n            unauthErrorInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/api.ts\n            \n            variable\n            api\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/api.ts\n            \n            variable\n            AUTHENTICATE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/auth.api.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage.service.ts\n            \n            injectable\n            LocalStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/memory-storage.service.ts\n            \n            injectable\n            MemoryStorage\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/session-storage.service.ts\n            \n            injectable\n            SessionStorage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            injectable\n            JwtService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            variable\n            REFRESH_TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/token-storage.service.ts\n            \n            variable\n            TOKEN_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            interface\n            AppState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            variable\n            appEfects\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/app.state.ts\n            \n            variable\n            appStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticationFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            authenticationSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPasswordFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            forgotPasswordSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUserFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            loadCurrentUserSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            registerNewUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            registerNewUserFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            registerNewUserSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPasswordFailure\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            resetPasswordSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            setCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            setToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.actions.ts\n            \n            variable\n            signOut\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.effects.ts\n            \n            injectable\n            AuthEffects\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            interface\n            AuthState\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            variable\n            authReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            isLoadingAuthState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            isSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectAuthorizationError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectCurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectCurrentUserError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectForgotPasswordError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectRegistrationError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/state/auth/auth.selectors.ts\n            \n            variable\n            selectResetPasswordError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            passwordMinLength\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            passwordSpecialChars\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/utils/regex.constants.ts\n            \n            variable\n            securePasswordRegex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/invitation/invitation.component.ts\n            \n            component\n            InvitationComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/features/auth/components/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/features/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.production.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            - : ^0.0.1\n        \n            @angular/animations : ^17.1.0\n        \n            @angular/common : ^17.1.0\n        \n            @angular/compiler : ^17.1.0\n        \n            @angular/core : ^17.1.0\n        \n            @angular/forms : ^17.1.0\n        \n            @angular/platform-browser : ^17.1.0\n        \n            @angular/platform-browser-dynamic : ^17.1.0\n        \n            @angular/platform-server : ^17.1.0\n        \n            @angular/router : ^17.1.0\n        \n            @angular/ssr : ^17.1.3\n        \n            @ngrx/effects : ^17.1.0\n        \n            @ngrx/store : ^17.1.0\n        \n            @ngrx/store-devtools : ^17.1.0\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            @vercel/analytics : ^1.1.3\n        \n            @vercel/speed-insights : ^1.0.9\n        \n            express : ^4.18.2\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^6.0.1\n        \n            primeng : ^17.6.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Permission   (src/.../permission.enum.ts)\n                        \n                        \n                            ResourceType   (src/.../resource-type.enum.ts)\n                        \n                        \n                            StateStatus   (src/.../state-status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/domain/models/enums/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Permission\n                    \n                \n                        \n                            \n                                 CREATE\n                            \n                        \n                        \n                            \n                                 READ\n                            \n                        \n                        \n                            \n                                 UPDATE\n                            \n                        \n                        \n                            \n                                 DELETE\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/resource-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ResourceType\n                    \n                \n                        \n                            \n                                 COMMENT\n                            \n                        \n                        \n                            \n                                 DEBUG_FILE\n                            \n                        \n                        \n                            \n                                 DEVICE_STATE\n                            \n                        \n                        \n                            \n                                 ISSUE\n                            \n                        \n                        \n                            \n                                 LOG_ENTRY\n                            \n                        \n                        \n                            \n                                 LOG_SESSION\n                            \n                        \n                        \n                            \n                                 LOG_SOURCE\n                            \n                        \n                        \n                            \n                                 ORGANIZATION\n                            \n                        \n                        \n                            \n                                 PLATFORM\n                            \n                        \n                        \n                            \n                                 PROJECT\n                            \n                        \n                        \n                            \n                                 PROJECT_RELEASE\n                            \n                        \n                        \n                            \n                                 ROLE\n                            \n                        \n                        \n                            \n                                 TEAM\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                 PERMISSION\n                            \n                        \n                        \n                            \n                                 INVITATION\n                            \n                        \n            \n        \n\n    src/app/core/domain/models/enums/state-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StateStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 LOADING\n                            \n                        \n                        \n                            \n                                Value : loading\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HttpLoaderFactory   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\nLogHub - Remote Centralized Logging Solution (CMS)\nThis project is a Angular CMS application that provides an UI for LogHub (remote centralized logging solution). It allows you to collect and manage logs from distributed applications in a centralized location, enhancing troubleshooting and monitoring capabilities.\nThis project was generated with Angular CLI version 17.1.3.\nThis project utilizes next features of angular:\n\nAngular 17\nSSR (Server Side Rendering)\nStandalone Components\nRouter (For url routing)\nHTTP Client (For api calls)\nNGRX (For state management)\nPrimeNG (For UI Components)\n\nTechnologies Used\n\n\n\n\n\n\n\n\n\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nBuild Docker Image\nYou can deploy the application using Docker. First, build your own image:\nExample :docker build -t your-domain/your-image-name:your-version .Here is the full example:\nExample :docker build -t dradman/loghub-cms:1 .\nThen you can run your own image with command:\nExample :docker run -p 80:4000 your-full-image-name Here is the full example:\nExample :docker run -p 80:4000 dradman/loghub-cms:1 . Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nDeploying with Docker\nYou can deploy the application using Docker. First, pull the latest Docker image from the GitHub Container Registry:\nExample :docker pull ghcr.io/dradman/loghub-cms:latestThen, run the Docker container:\nExample :docker run -p 80:4000 ghcr.io/dradman/loghub-cms:latestImportant: Make sure that all environment variables are set correctly.\nDocker-Compose\nYou can also run application using docker compose. See an example here\nEnvironment Variables\nImportant: Due to angular & general limitation since application is served to local browser you can't use standard .env to update environment varaibles.\nIf you wish to change any of the variables you will have to build your own version of application where will change these files\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                   TERMS AND CONDITIONS\nDefinitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n  The Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\nExample :a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\nExample :a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\nExample :a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\nExample :                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .Also add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\nExample :  Copyright (C)   \nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttps://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttps://www.gnu.org/licenses/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            api   (src/.../api.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            appEfects   (src/.../app.state.ts)\n                        \n                        \n                            appStore   (src/.../app.state.ts)\n                        \n                        \n                            authenticate   (src/.../auth.actions.ts)\n                        \n                        \n                            AUTHENTICATE   (src/.../api.ts)\n                        \n                        \n                            authenticationFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            authenticationSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            authInterceptor   (src/.../auth.interceptor.ts)\n                        \n                        \n                            authReducer   (src/.../auth.reducer.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.production.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            forgotPassword   (src/.../auth.actions.ts)\n                        \n                        \n                            forgotPasswordFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            forgotPasswordSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            initialState   (src/.../auth.reducer.ts)\n                        \n                        \n                            isLoadingAuthState   (src/.../auth.selectors.ts)\n                        \n                        \n                            isSuccess   (src/.../auth.selectors.ts)\n                        \n                        \n                            loadCurrentUser   (src/.../auth.actions.ts)\n                        \n                        \n                            loadCurrentUserFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            loadCurrentUserSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            passwordMinLength   (src/.../regex.constants.ts)\n                        \n                        \n                            passwordSpecialChars   (src/.../regex.constants.ts)\n                        \n                        \n                            REFRESH_TOKEN_KEY   (src/.../token-storage.service.ts)\n                        \n                        \n                            registerNewUser   (src/.../auth.actions.ts)\n                        \n                        \n                            registerNewUserFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            registerNewUserSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            registrationGuard   (src/.../registration.guard.ts)\n                        \n                        \n                            resetPassword   (src/.../auth.actions.ts)\n                        \n                        \n                            resetPasswordFailure   (src/.../auth.actions.ts)\n                        \n                        \n                            resetPasswordSuccess   (src/.../auth.actions.ts)\n                        \n                        \n                            securePasswordRegex   (src/.../regex.constants.ts)\n                        \n                        \n                            selectAuth   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectAuthorizationError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectCurrentUser   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectCurrentUserError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectForgotPasswordError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectRegistrationError   (src/.../auth.selectors.ts)\n                        \n                        \n                            selectResetPasswordError   (src/.../auth.selectors.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                        \n                            setCurrentUser   (src/.../auth.actions.ts)\n                        \n                        \n                            setToken   (src/.../auth.actions.ts)\n                        \n                        \n                            signOut   (src/.../auth.actions.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../token-storage.service.ts)\n                        \n                        \n                            unauthErrorInterceptor   (src/.../auth.interceptor.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/api/api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        api\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  url: environment.apiUrl,\n  teamUrl: environment.apiUrl + '/v1/team',\n  projectUrl: environment.apiUrl + '/v1/project',\n  profileUrl: environment.apiUrl + '/v1/user-profile',\n  platformUrl: environment.apiUrl + '/v1/platform',\n  organizationUrl: environment.apiUrl + '/v1/organization',\n  invitationUrl: environment.apiUrl + '/v1/invitation',\n  deviceUrl: environment.apiUrl + '/v1/device',\n  membersUrl: environment.apiUrl + '/v1/members',\n  filesUrl: environment.apiUrl + '/v1/files',\n  authUrl: environment.apiUrl + '/v1/auth',\n  authOptions: {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': 'true',\n    }),\n    context: new HttpContext().set(AUTHENTICATE, true),\n  },\n  noAuthOptions: {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      'ngrok-skip-browser-warning': 'true',\n    }),\n    context: new HttpContext().set(AUTHENTICATE, false),\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTHENTICATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new HttpContextToken(() => false)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(\n      routes,\n      withPreloading(PreloadAllModules),\n      withComponentInputBinding(),\n    ),\n    provideHttpClient(\n      withInterceptors([authInterceptor, unauthErrorInterceptor]),\n      withFetch(),\n    ),\n    provideClientHydration(),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: () => {\n        inject({ mode: isDevMode() ? 'development' : 'production' });\n        injectSpeedInsights();\n      },\n    },\n    provideAnimations(),\n    TranslateModule.forRoot({\n      defaultLanguage: 'en',\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient],\n      },\n    }).providers!,\n    provideStore(appStore),\n    provideEffects(appEfects),\n    provideStoreDevtools({ maxAge: 25, logOnly: !isDevMode() }),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/app.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appEfects\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [AuthEffects]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        appStore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  authState: authReducer,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authenticate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Authenticate',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Authentication failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        authenticationSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Authentication success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[ForgotPassword Page] forgot password',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Forgot password failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Forgot password success',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Get authenticated user',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUserFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Get authenticated user failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCurrentUserSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth API] Get authenticated user success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Register Page] Register new user',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Register new user failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerNewUserSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Register new user success',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[ResetPassword Page] Reset password',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordFailure\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Reset password failure',\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Auth Api] Reset password success',\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Set current user',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction(\n  '[Login Page] Set current user',\n  props(),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction('[Home Page] Sign Out')\n                    \n                \n\n\n        \n    \n\n    src/app/core/interceptors/auth.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  request: HttpRequest,\n  next: HttpHandlerFn\n): Observable> => {\n  if (request.context.get(AUTHENTICATE)) {\n    const accessToken = inject(JwtService).getToken();\n    if (accessToken) {\n      const clonedRequest = request.clone({\n        headers: request.headers.set('Authorization', `Bearer ${accessToken}`),\n      });\n      return next(clonedRequest);\n    } else {\n      return next(request);\n    }\n  } else {\n    return next(request);\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unauthErrorInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  req: HttpRequest,\n  next: HttpHandlerFn,\n): Observable> => {\n  const jwtService = inject(JwtService);\n  const authService = inject(AuthService);\n  const store = inject(Store);\n  const router = inject(Router);\n\n  if (req.context.get(AUTHENTICATE)) {\n    return next(req).pipe(\n      catchError((error: HttpErrorResponse) => {\n        if (\n          error instanceof HttpErrorResponse &&\n          !(\n            req.url.includes('auth/authenticate') ||\n            req.url.includes('auth/refreshToken')\n          ) && //  {\n                jwtService.saveToken(refreshResult.refreshToken);\n                jwtService.saveToken(refreshResult.accessToken);\n                store.dispatch(setToken(refreshResult));\n                return next(\n                  req.clone({\n                    headers: req.headers.set(\n                      'Authorization',\n                      `Bearer ${refreshResult.accessToken}`\n                    ),\n                  })\n                );\n              }),\n              catchError((error) => {\n                if (error.status === '401') {\n                  jwtService.clear();\n                  store.dispatch(signOut());\n                  if(!router.url.startsWith('/auth')) {\n                    router.navigate(['/auth'])\n                  }\n                }\n                return throwError(() => error);\n              })\n            );\n          }\n        }\n        return throwError(() => new Error('Unauthorized Exception'));\n      })\n    );\n  } else {\n    return next(req);\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer(\n  initialState,\n\n  //Handle loading current user\n  on(loadCurrentUser, (state) => ({\n    ...state,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authenticate action\n  on(authenticate, (state, credentials) => ({\n    ...state,\n    credentials: credentials,\n    error: null,\n    status: StateStatus.LOADING,\n  })),\n\n  //Handle authentication success\n  on(authenticationSuccess, (state, token) => ({\n    ...state,\n    token: token,\n    error: null,\n    credentials: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle authentication failure\n  on(authenticationFailure, (state, { error }) => ({\n    ...state,\n    token: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle load current user success\n  on(loadCurrentUserSuccess, (state, user) => ({\n    ...state,\n    user: user,\n    error: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  //Handle load current user failure\n  on(loadCurrentUserFailure, (state, { error }) => ({\n    ...state,\n    user: null,\n    error: error,\n    status: StateStatus.ERROR,\n  })),\n\n  //Handle set current user\n  on(setCurrentUser, (state, user) => ({\n    ...state,\n    user: user,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle set token\n  on(setToken, (state, token) => ({\n    ...state,\n    token: token,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle SignOut\n  on(signOut, () => initialState),\n\n  // Handle Forgot Password\n  on(forgotPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Forgot Password Success\n  on(forgotPasswordSuccess, (state) => ({\n    ...state,\n    forgotPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Forgot Password Failure\n  on(forgotPasswordFailure, (state, { error }) => ({\n    ...state,\n    forgotPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Reset Password\n  on(resetPassword, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Reset Password Success\n  on(resetPasswordSuccess, (state) => ({\n    ...state,\n    resetPasswordError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Reset Password Failure\n  on(resetPasswordFailure, (state, { error }) => ({\n    ...state,\n    resetPasswordError: error,\n    status: StateStatus.ERROR,\n  })),\n\n  // Handle Register new user\n  on(registerNewUser, (state) => ({\n    ...state,\n    status: StateStatus.LOADING,\n  })),\n\n  // Handle Register new user success\n  on(registerNewUserSuccess, (state) => ({\n    ...state,\n    registrationError: null,\n    status: StateStatus.SUCCESS,\n  })),\n\n  // Handle Register new user failure\n  on(registerNewUserFailure, (state, { error }) => ({\n    ...state,\n    registrationError: error,\n    status: StateStatus.ERROR,\n  })),\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthState\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: null,\n  error: null,\n  forgotPasswordError: null,\n  resetPasswordError: null,\n  registrationError: null,\n  usernameCheckError: null,\n  isUsernameAvialable: null,\n  token: null,\n  credentials: null,\n  status: StateStatus.PENDING,\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:8080/api',\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.production.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl: 'https://heavily-composed-mutt.ngrok-free.app', //TODO: Host backend somewhere\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl: 'http://localhost:8080/api',\n  enableRegistration: true,\n  appName: 'LogHub',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/state/auth/auth.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLoadingAuthState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.status == StateStatus.LOADING,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.status == StateStatus.SUCCESS,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (state: AppState) => state.authState\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAuthorizationError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => {\n    if (\n      state.token == null &&\n      state.status == StateStatus.ERROR &&\n      state.credentials != null\n    ) {\n      return state.error;\n    } else {\n      return null;\n    }\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.user,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectCurrentUserError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => {\n    if (\n      state.user == null &&\n      state.status == StateStatus.ERROR &&\n      state.error\n    ) {\n      return state.error;\n    } else {\n      return null;\n    }\n  },\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectForgotPasswordError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.forgotPasswordError,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectRegistrationError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.registrationError,\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectResetPasswordError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector(\n  selectAuth,\n  (state: AuthState) => state.resetPasswordError,\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/utils/regex.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordMinLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordSpecialChars\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\\\\?@#$%^\\`<>&+=\"!ºª·#~%&'¿¡€,:;*/+-.=_{}\\\\(\\\\)\\\\[\\\\]`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        securePasswordRegex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[${passwordSpecialChars}])(?=\\\\S+$).{${passwordMinLength},}$`\n                    \n                \n\n\n        \n    \n\n    src/app/core/services/token-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        REFRESH_TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth-refreshtoken'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'auth-token'\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/registration.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        registrationGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (\n  _next: ActivatedRouteSnapshot,\n  _state: RouterStateSnapshot) => {\n    return environment.enableRegistration;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
